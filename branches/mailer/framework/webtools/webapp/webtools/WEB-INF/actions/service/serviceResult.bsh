/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import java.sql.Timestamp;

import org.ofbiz.entity.GenericEntity;
import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.base.util.Debug;
import org.ofbiz.webapp.event.CoreEvents;

import javolution.util.FastList;
import javolution.util.FastMap;

if(null!=session.getAttribute("_RUN_SYNC_RESULT_")){
    List serviceResultList = FastList.newInstance();
    Map serviceResult = (Map)session.getAttribute("_RUN_SYNC_RESULT_");

    if(request.getParameter("servicePath")!=null && !request.getParameter("servicePath").equals("")){
        String servicePath = request.getParameter("servicePath");
        newServiceResult = CoreEvents.getObjectFromServicePath(servicePath, serviceResult);
        if(null!=newServiceResult && newServiceResult instanceof Map)
            serviceResult = newServiceResult;
        context.put("servicePath", servicePath);
    }
    
    Set serviceResultSet = serviceResult.keySet();
    Iterator serviceResultItr = serviceResultSet.iterator();
    while(serviceResultItr.hasNext()){
        String key = serviceResultItr.next();
        Map valueMap = UtilMisc.toMap("key", key, "value", (null==serviceResult.get(key))?"null":serviceResult.get(key).toString());
        if(serviceResult.get(key) instanceof GenericEntity || 
            serviceResult.get(key) instanceof HashMap || 
            serviceResult.get(key) instanceof Collection){
            valueMap.put("hasChild", "Y");
        }else{
            valueMap.put("hasChild", "N");
        }
        serviceResultList.add(valueMap);
    }

    context.put("serviceResultList", serviceResultList);
}


