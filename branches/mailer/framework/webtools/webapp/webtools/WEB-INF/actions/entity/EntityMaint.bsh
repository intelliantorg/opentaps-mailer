/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */

import org.ofbiz.entity.GenericDelegator;
import org.ofbiz.entity.model.ModelReader;
import org.ofbiz.entity.model.ModelEntity;
import org.ofbiz.entity.model.ModelViewEntity;

delegator = request.getAttribute("delegator");

ModelReader reader = delegator.getModelReader();
Collection ec = reader.getEntityNames();
TreeSet entities = new TreeSet(ec);
Iterator classNamesIterator = entities.iterator();

int colSize = entities.size()/3 + 1;
int kIdx = 0;
List entitiesList = new ArrayList();
while (classNamesIterator != null && classNamesIterator.hasNext()) {
    ModelEntity entity = reader.getModelEntity((String)classNamesIterator.next());
    
    String viewEntity = "N";
    if (entity instanceof ModelViewEntity) {
        viewEntity = "Y";
    }

    String entityPermissionView = "N";
    if (security.hasEntityPermission("ENTITY_DATA", "_VIEW", session) || security.hasEntityPermission(entity.getPlainTableName(), "_VIEW", session)) {
        entityPermissionView = "Y";
    }
    
    String entityPermissionCreate = "N";
    if (security.hasEntityPermission("ENTITY_DATA", "_CREATE", session) || security.hasEntityPermission(entity.getPlainTableName(), "_CREATE", session)) { 
        entityPermissionCreate = "Y";
    }
        
    String changeColumn = "N";
    kIdx++;
    if (kIdx >= colSize) {
        colSize += colSize;
        changeColumn = "Y";
    }
    
    Map entityMap = new HashMap();
    entityMap.put("entityName", entity.getEntityName());
    entityMap.put("entityPermissionView", entityPermissionView);
    entityMap.put("entityPermissionCreate", entityPermissionCreate);
    entityMap.put("viewEntity", viewEntity);
    entityMap.put("changeColumn", changeColumn);

    entitiesList.add(entityMap);
}
context.put("entitiesList", entitiesList);
