/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import org.ofbiz.base.util.UtilFormatOut;
import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.base.util.UtilValidate;
import org.ofbiz.security.Security;
import org.ofbiz.webapp.stats.*;

String id = request.getParameter("statsId");
String typeStr = request.getParameter("type");
int type = -1;
try {
    type = Integer.parseInt(typeStr);
} catch (NumberFormatException e) {
    type = -1;
}

LinkedList binList = null;
if (type == ServerHitBin.REQUEST) {
    binList = (LinkedList) ServerHitBin.requestHistory.get(id);
} else if (type == ServerHitBin.EVENT) {
    binList = (LinkedList) ServerHitBin.eventHistory.get(id);
} else if (type == ServerHitBin.VIEW) {
    binList = (LinkedList) ServerHitBin.viewHistory.get(id);
}

if (binList != null) {
    Iterator iterator = binList.iterator();
    if(iterator!=null && iterator.hasNext()){
        List requestList = new ArrayList();
        while(iterator.hasNext()){
            Map requestIdMap = new HashMap();
            ServerHitBin bin = (ServerHitBin) iterator.next();
            if (bin != null) {
                requestIdMap.put("requestId", bin.getId());
                requestIdMap.put("requestType", bin.getType());
                requestIdMap.put("startTime", bin.getStartTimeString());
                requestIdMap.put("endTime", bin.getEndTimeString());
                requestIdMap.put("lengthMins", UtilFormatOut.formatQuantity(bin.getBinLengthMinutes()));
                requestIdMap.put("numberHits", UtilFormatOut.formatQuantity(bin.getNumberHits()));
                requestIdMap.put("minTime", UtilFormatOut.formatQuantity(bin.getMinTimeSeconds()));
                requestIdMap.put("avgTime", UtilFormatOut.formatQuantity(bin.getAvgTimeSeconds()));
                requestIdMap.put("maxTime", UtilFormatOut.formatQuantity(bin.getMaxTimeSeconds()));
                requestIdMap.put("hitsPerMin", UtilFormatOut.formatQuantity(bin.getHitsPerMinute()));
                requestList.add(requestIdMap);
            }
        }
        context.put("requestList", requestList);
    }
}
