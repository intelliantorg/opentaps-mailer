/*
 * Copyright (c) 2006 - 2007 Open Source Strategies, Inc.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 * 
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */
/* Copyright (c) 2005-2006 Open Source Strategies, Inc. */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;

userLogin = request.getAttribute("userLogin");
Debug.logInfo("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMErger Form ulogin = "+userLogin, "getMergeForm.bsh");
mergeFormId = context.get("mergeFormId");
Debug.logInfo("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMErger Form ulogin = "+mergeFormId, "getMergeForm.bsh");
mergeFormCategories = null;

if (UtilValidate.isNotEmpty(mergeFormId)) {
    // Find the specified MergeForm 
    mergeForm = delegator.findByPrimaryKeyCache("MergeForm", UtilMisc.toMap("mergeFormId", mergeFormId) );
    context.put("mergeForm", mergeForm);    

    // Find associated categories
    mergeFormCategories = mergeForm.getRelatedMulti("MergeFormToCategory", "MergeFormCategory");
    context.put("mergeFormCategories", mergeFormCategories);
}

// Find the list of assignable categories
categories = delegator.findAll("MergeFormCategory");

// Remove already associated categories from the previous list
if (mergeFormCategories != null) {
    categories.removeAll(mergeFormCategories);
}
context.put("categories", categories);
