/*
 * Copyright (c) Intelliant
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  @author Intelliant (iaerp@intelliant.net)
 */
import org.ofbiz.entity.condition.EntityConditionList;
import org.ofbiz.entity.condition.EntityOperator;
import org.ofbiz.entity.condition.EntityExpr;
import org.ofbiz.base.util.UtilMisc;
import org.opentaps.common.util.UtilCommon;

marketingCampaignId = UtilCommon.getParameter(request, "marketingCampaignId");

marketingCampaign = delegator.findByPrimaryKey("MailerMarketingCampaignDetailsView", UtilMisc.toMap("marketingCampaignId", marketingCampaignId));
if (marketingCampaign == null) {
	return;
}
mergeFormList = delegator.findAllCache("MailerMergeForm");
context.put("mergeFormList", mergeFormList);

statusId = marketingCampaign.get("statusId");
currentStatus = delegator.findByPrimaryKeyCache("StatusItem", UtilMisc.toMap("statusId",statusId));
context.put("currentStatus", currentStatus);

orConditions = UtilMisc.toList(
	new EntityExpr("isStatusToVisible", EntityOperator.NOT_EQUAL, "N"),
	new EntityExpr("isStatusToVisible", EntityOperator.EQUALS, null)
);
orConditions = new EntityConditionList(orConditions, EntityOperator.OR);
conditions = UtilMisc.toList(new EntityExpr("statusId", EntityOperator.EQUALS, statusId), orConditions);
							 
conditions = new EntityConditionList(conditions, EntityOperator.AND);
allowedTransitions =  delegator.findByConditionCache("StatusValidChangeToDetail", conditions, null, UtilMisc.toList("sequenceId"));
context.put("allowedTransitions", allowedTransitions);

context.put("marketingCampaign", marketingCampaign);