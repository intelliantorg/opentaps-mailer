/*
 * Copyright (c) Intelliant
 *
 * This is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  @author Intelliant (open.ant@intelliant.net)
 */
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;
import org.ofbiz.base.util.UtilValidate;
import org.ofbiz.base.util.UtilMisc;
import org.opentaps.common.util.UtilCommon;
import org.ofbiz.base.util.UtilProperties;
import org.ofbiz.base.location.FlexibleLocation;

marketingCampaignId = UtilCommon.getParameter(request, "marketingCampaignId");

marketingCampaign = delegator.findByPrimaryKey("MailerMarketingCampaignDetailsView", UtilMisc.toMap("marketingCampaignId", marketingCampaignId));

if (marketingCampaign == null) {
    context.put("validView", false);
    return;
}
templateId = marketingCampaign.get("templateId");
if (UtilValidate.isNotEmpty(templateId)) {
	template =  delegator.findByPrimaryKey("MailerMergeForm", UtilMisc.toMap("mergeFormId", templateId));
	context.put("templateName", template.getString("mergeFormName"));
}

marketingCampaignMap = marketingCampaign.getAllFields();

statusId = marketingCampaign.get("statusId");
currentStatus =  delegator.findByPrimaryKey("StatusItem", UtilMisc.toMap("statusId", statusId));
context.put("currentStatus", currentStatus); 

//put to history
context{"history"} = UtilCommon.makeHistoryEntry(marketingCampaign.get("campaignName"), "viewMarketingCampaign", UtilMisc.toList("marketingCampaignId"));

security = request.getAttribute("security");
userLogin = request.getAttribute("userLogin");

if (security.hasEntityPermission("CRMSFA_CAMP", "_UPDATE", userLogin)) {
    context.put("hasUpdatePermission", true);
}

// get the associated contact lists
conditions = new EntityConditionList(UtilMisc.toList(new EntityExpr("marketingCampaignId", EntityOperator.EQUALS, marketingCampaignId), EntityUtil.getFilterByDateExpr()), EntityOperator.AND);
marketingCampaignContactLists = delegator.findByCondition("MailerMarketingCampaignContactListDetailsView", conditions, null, UtilMisc.toList("fromDate"));
context.put("marketingCampaignContactLists", marketingCampaignContactLists);

absoluteBasePdfPath = FlexibleLocation.resolveLocation(UtilProperties.getPropertyValue("mailer", "mailer.pdfSaveLocation")).getPath();
file = new File(absoluteBasePdfPath + File.separator + marketingCampaignId + ".pdf");
if(file.exists()) {
	marketingCampaignMap.put("downloadPdf", UtilProperties.getPropertyValue("mailer", "mailer.pdfSaveBaseLocation") + "/" + marketingCampaignId + ".pdf");
}else{
	marketingCampaignMap.put("downloadPdf", null);
}

context.put("marketingCampaign", marketingCampaignMap);