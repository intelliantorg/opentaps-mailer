package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity OrderPaymentPrefAndPayment.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectOrderPaymentPrefAndPayments", query="SELECT OPP.ORDER_PAYMENT_PREFERENCE_ID AS \"orderPaymentPreferenceId\",OPP.ORDER_ID AS \"orderId\",OPP.ORDER_ITEM_SEQ_ID AS \"orderItemSeqId\",OPP.PRODUCT_PRICE_PURPOSE_ID AS \"productPricePurposeId\",OPP.PAYMENT_METHOD_TYPE_ID AS \"paymentMethodTypeId\",OPP.PAYMENT_METHOD_ID AS \"paymentMethodId\",OPP.FIN_ACCOUNT_ID AS \"finAccountId\",OPP.SECURITY_CODE AS \"securityCode\",OPP.PRESENT_FLAG AS \"presentFlag\",OPP.OVERFLOW_FLAG AS \"overflowFlag\",OPP.MAX_AMOUNT AS \"maxAmount\",OPP.PROCESS_ATTEMPT AS \"processAttempt\",OPP.BILLING_POSTAL_CODE AS \"billingPostalCode\",OPP.MANUAL_AUTH_CODE AS \"manualAuthCode\",OPP.MANUAL_REF_NUM AS \"manualRefNum\",OPP.STATUS_ID AS \"statusId\",OPP.NEEDS_NSF_RETRY AS \"needsNsfRetry\",OPP.CREATED_DATE AS \"createdDate\",OPP.CREATED_BY_USER_LOGIN AS \"createdByUserLogin\",P.PAYMENT_ID AS \"paymentId\",P.PAYMENT_TYPE_ID AS \"paymentTypeId\",P.PAYMENT_METHOD_TYPE_ID AS \"paymentMethodTypeId\",P.PAYMENT_METHOD_ID AS \"paymentMethodId\",P.PAYMENT_GATEWAY_RESPONSE_ID AS \"paymentGatewayResponseId\",P.PAYMENT_PREFERENCE_ID AS \"paymentPreferenceId\",P.PARTY_ID_FROM AS \"partyIdFrom\",P.PARTY_ID_TO AS \"partyIdTo\",P.ROLE_TYPE_ID_TO AS \"roleTypeIdTo\",P.STATUS_ID AS \"statusId\",P.EFFECTIVE_DATE AS \"effectiveDate\",P.PAYMENT_REF_NUM AS \"paymentRefNum\",P.AMOUNT AS \"amount\",P.CURRENCY_UOM_ID AS \"currencyUomId\",P.COMMENTS AS \"comments\",P.FIN_ACCOUNT_TRANS_ID AS \"finAccountTransId\",P.OVERRIDE_GL_ACCOUNT_ID AS \"overrideGlAccountId\",P.ACTUAL_CURRENCY_AMOUNT AS \"actualCurrencyAmount\",P.ACTUAL_CURRENCY_UOM_ID AS \"actualCurrencyUomId\",P.ACCTG_TAG_ENUM_ID1 AS \"acctgTagEnumId1\",P.ACCTG_TAG_ENUM_ID2 AS \"acctgTagEnumId2\",P.ACCTG_TAG_ENUM_ID3 AS \"acctgTagEnumId3\",P.ACCTG_TAG_ENUM_ID4 AS \"acctgTagEnumId4\",P.ACCTG_TAG_ENUM_ID5 AS \"acctgTagEnumId5\",P.ACCTG_TAG_ENUM_ID6 AS \"acctgTagEnumId6\",P.ACCTG_TAG_ENUM_ID7 AS \"acctgTagEnumId7\",P.ACCTG_TAG_ENUM_ID8 AS \"acctgTagEnumId8\",P.ACCTG_TAG_ENUM_ID9 AS \"acctgTagEnumId9\",P.ACCTG_TAG_ENUM_ID10 AS \"acctgTagEnumId10\" FROM ORDER_PAYMENT_PREFERENCE OPP INNER JOIN PAYMENT P ON OPP.ORDER_PAYMENT_PREFERENCE_ID = P.PAYMENT_PREFERENCE_ID", resultSetMapping="OrderPaymentPrefAndPaymentMapping")
@SqlResultSetMapping(name="OrderPaymentPrefAndPaymentMapping", entities={
@EntityResult(entityClass=OrderPaymentPrefAndPayment.class, fields = {
@FieldResult(name="orderPaymentPreferenceId", column="orderPaymentPreferenceId")
,@FieldResult(name="orderId", column="orderId")
,@FieldResult(name="orderItemSeqId", column="orderItemSeqId")
,@FieldResult(name="productPricePurposeId", column="productPricePurposeId")
,@FieldResult(name="paymentMethodTypeId", column="paymentMethodTypeId")
,@FieldResult(name="paymentMethodId", column="paymentMethodId")
,@FieldResult(name="finAccountId", column="finAccountId")
,@FieldResult(name="securityCode", column="securityCode")
,@FieldResult(name="presentFlag", column="presentFlag")
,@FieldResult(name="overflowFlag", column="overflowFlag")
,@FieldResult(name="maxAmount", column="maxAmount")
,@FieldResult(name="processAttempt", column="processAttempt")
,@FieldResult(name="billingPostalCode", column="billingPostalCode")
,@FieldResult(name="manualAuthCode", column="manualAuthCode")
,@FieldResult(name="manualRefNum", column="manualRefNum")
,@FieldResult(name="statusId", column="statusId")
,@FieldResult(name="needsNsfRetry", column="needsNsfRetry")
,@FieldResult(name="createdDate", column="createdDate")
,@FieldResult(name="createdByUserLogin", column="createdByUserLogin")
,@FieldResult(name="paymentPaymentId", column="paymentPaymentId")
,@FieldResult(name="paymentPaymentTypeId", column="paymentPaymentTypeId")
,@FieldResult(name="paymentPaymentMethodTypeId", column="paymentPaymentMethodTypeId")
,@FieldResult(name="paymentPaymentMethodId", column="paymentPaymentMethodId")
,@FieldResult(name="paymentPaymentGatewayResponseId", column="paymentPaymentGatewayResponseId")
,@FieldResult(name="paymentPaymentPreferenceId", column="paymentPaymentPreferenceId")
,@FieldResult(name="paymentPartyIdFrom", column="paymentPartyIdFrom")
,@FieldResult(name="paymentPartyIdTo", column="paymentPartyIdTo")
,@FieldResult(name="paymentRoleTypeIdTo", column="paymentRoleTypeIdTo")
,@FieldResult(name="paymentStatusId", column="paymentStatusId")
,@FieldResult(name="paymentEffectiveDate", column="paymentEffectiveDate")
,@FieldResult(name="paymentPaymentRefNum", column="paymentPaymentRefNum")
,@FieldResult(name="paymentAmount", column="paymentAmount")
,@FieldResult(name="paymentCurrencyUomId", column="paymentCurrencyUomId")
,@FieldResult(name="paymentComments", column="paymentComments")
,@FieldResult(name="paymentFinAccountTransId", column="paymentFinAccountTransId")
,@FieldResult(name="paymentOverrideGlAccountId", column="paymentOverrideGlAccountId")
,@FieldResult(name="paymentActualCurrencyAmount", column="paymentActualCurrencyAmount")
,@FieldResult(name="paymentActualCurrencyUomId", column="paymentActualCurrencyUomId")
,@FieldResult(name="paymentAcctgTagEnumId1", column="paymentAcctgTagEnumId1")
,@FieldResult(name="paymentAcctgTagEnumId2", column="paymentAcctgTagEnumId2")
,@FieldResult(name="paymentAcctgTagEnumId3", column="paymentAcctgTagEnumId3")
,@FieldResult(name="paymentAcctgTagEnumId4", column="paymentAcctgTagEnumId4")
,@FieldResult(name="paymentAcctgTagEnumId5", column="paymentAcctgTagEnumId5")
,@FieldResult(name="paymentAcctgTagEnumId6", column="paymentAcctgTagEnumId6")
,@FieldResult(name="paymentAcctgTagEnumId7", column="paymentAcctgTagEnumId7")
,@FieldResult(name="paymentAcctgTagEnumId8", column="paymentAcctgTagEnumId8")
,@FieldResult(name="paymentAcctgTagEnumId9", column="paymentAcctgTagEnumId9")
,@FieldResult(name="paymentAcctgTagEnumId10", column="paymentAcctgTagEnumId10")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class OrderPaymentPrefAndPayment extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("orderPaymentPreferenceId", "OPP.ORDER_PAYMENT_PREFERENCE_ID");
        fields.put("orderId", "OPP.ORDER_ID");
        fields.put("orderItemSeqId", "OPP.ORDER_ITEM_SEQ_ID");
        fields.put("productPricePurposeId", "OPP.PRODUCT_PRICE_PURPOSE_ID");
        fields.put("paymentMethodTypeId", "OPP.PAYMENT_METHOD_TYPE_ID");
        fields.put("paymentMethodId", "OPP.PAYMENT_METHOD_ID");
        fields.put("finAccountId", "OPP.FIN_ACCOUNT_ID");
        fields.put("securityCode", "OPP.SECURITY_CODE");
        fields.put("presentFlag", "OPP.PRESENT_FLAG");
        fields.put("overflowFlag", "OPP.OVERFLOW_FLAG");
        fields.put("maxAmount", "OPP.MAX_AMOUNT");
        fields.put("processAttempt", "OPP.PROCESS_ATTEMPT");
        fields.put("billingPostalCode", "OPP.BILLING_POSTAL_CODE");
        fields.put("manualAuthCode", "OPP.MANUAL_AUTH_CODE");
        fields.put("manualRefNum", "OPP.MANUAL_REF_NUM");
        fields.put("statusId", "OPP.STATUS_ID");
        fields.put("needsNsfRetry", "OPP.NEEDS_NSF_RETRY");
        fields.put("createdDate", "OPP.CREATED_DATE");
        fields.put("createdByUserLogin", "OPP.CREATED_BY_USER_LOGIN");
        fields.put("paymentPaymentId", "P.PAYMENT_ID");
        fields.put("paymentPaymentTypeId", "P.PAYMENT_TYPE_ID");
        fields.put("paymentPaymentMethodTypeId", "P.PAYMENT_METHOD_TYPE_ID");
        fields.put("paymentPaymentMethodId", "P.PAYMENT_METHOD_ID");
        fields.put("paymentPaymentGatewayResponseId", "P.PAYMENT_GATEWAY_RESPONSE_ID");
        fields.put("paymentPaymentPreferenceId", "P.PAYMENT_PREFERENCE_ID");
        fields.put("paymentPartyIdFrom", "P.PARTY_ID_FROM");
        fields.put("paymentPartyIdTo", "P.PARTY_ID_TO");
        fields.put("paymentRoleTypeIdTo", "P.ROLE_TYPE_ID_TO");
        fields.put("paymentStatusId", "P.STATUS_ID");
        fields.put("paymentEffectiveDate", "P.EFFECTIVE_DATE");
        fields.put("paymentPaymentRefNum", "P.PAYMENT_REF_NUM");
        fields.put("paymentAmount", "P.AMOUNT");
        fields.put("paymentCurrencyUomId", "P.CURRENCY_UOM_ID");
        fields.put("paymentComments", "P.COMMENTS");
        fields.put("paymentFinAccountTransId", "P.FIN_ACCOUNT_TRANS_ID");
        fields.put("paymentOverrideGlAccountId", "P.OVERRIDE_GL_ACCOUNT_ID");
        fields.put("paymentActualCurrencyAmount", "P.ACTUAL_CURRENCY_AMOUNT");
        fields.put("paymentActualCurrencyUomId", "P.ACTUAL_CURRENCY_UOM_ID");
        fields.put("paymentAcctgTagEnumId1", "P.ACCTG_TAG_ENUM_ID1");
        fields.put("paymentAcctgTagEnumId2", "P.ACCTG_TAG_ENUM_ID2");
        fields.put("paymentAcctgTagEnumId3", "P.ACCTG_TAG_ENUM_ID3");
        fields.put("paymentAcctgTagEnumId4", "P.ACCTG_TAG_ENUM_ID4");
        fields.put("paymentAcctgTagEnumId5", "P.ACCTG_TAG_ENUM_ID5");
        fields.put("paymentAcctgTagEnumId6", "P.ACCTG_TAG_ENUM_ID6");
        fields.put("paymentAcctgTagEnumId7", "P.ACCTG_TAG_ENUM_ID7");
        fields.put("paymentAcctgTagEnumId8", "P.ACCTG_TAG_ENUM_ID8");
        fields.put("paymentAcctgTagEnumId9", "P.ACCTG_TAG_ENUM_ID9");
        fields.put("paymentAcctgTagEnumId10", "P.ACCTG_TAG_ENUM_ID10");
fieldMapColumns.put("OrderPaymentPrefAndPayment", fields);
}
  public static enum Fields implements EntityFieldInterface<OrderPaymentPrefAndPayment> {
    orderPaymentPreferenceId("orderPaymentPreferenceId"),
    orderId("orderId"),
    orderItemSeqId("orderItemSeqId"),
    productPricePurposeId("productPricePurposeId"),
    paymentMethodTypeId("paymentMethodTypeId"),
    paymentMethodId("paymentMethodId"),
    finAccountId("finAccountId"),
    securityCode("securityCode"),
    presentFlag("presentFlag"),
    overflowFlag("overflowFlag"),
    maxAmount("maxAmount"),
    processAttempt("processAttempt"),
    billingPostalCode("billingPostalCode"),
    manualAuthCode("manualAuthCode"),
    manualRefNum("manualRefNum"),
    statusId("statusId"),
    needsNsfRetry("needsNsfRetry"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    paymentPaymentId("paymentPaymentId"),
    paymentPaymentTypeId("paymentPaymentTypeId"),
    paymentPaymentMethodTypeId("paymentPaymentMethodTypeId"),
    paymentPaymentMethodId("paymentPaymentMethodId"),
    paymentPaymentGatewayResponseId("paymentPaymentGatewayResponseId"),
    paymentPaymentPreferenceId("paymentPaymentPreferenceId"),
    paymentPartyIdFrom("paymentPartyIdFrom"),
    paymentPartyIdTo("paymentPartyIdTo"),
    paymentRoleTypeIdTo("paymentRoleTypeIdTo"),
    paymentStatusId("paymentStatusId"),
    paymentEffectiveDate("paymentEffectiveDate"),
    paymentPaymentRefNum("paymentPaymentRefNum"),
    paymentAmount("paymentAmount"),
    paymentCurrencyUomId("paymentCurrencyUomId"),
    paymentComments("paymentComments"),
    paymentFinAccountTransId("paymentFinAccountTransId"),
    paymentOverrideGlAccountId("paymentOverrideGlAccountId"),
    paymentActualCurrencyAmount("paymentActualCurrencyAmount"),
    paymentActualCurrencyUomId("paymentActualCurrencyUomId"),
    paymentAcctgTagEnumId1("paymentAcctgTagEnumId1"),
    paymentAcctgTagEnumId2("paymentAcctgTagEnumId2"),
    paymentAcctgTagEnumId3("paymentAcctgTagEnumId3"),
    paymentAcctgTagEnumId4("paymentAcctgTagEnumId4"),
    paymentAcctgTagEnumId5("paymentAcctgTagEnumId5"),
    paymentAcctgTagEnumId6("paymentAcctgTagEnumId6"),
    paymentAcctgTagEnumId7("paymentAcctgTagEnumId7"),
    paymentAcctgTagEnumId8("paymentAcctgTagEnumId8"),
    paymentAcctgTagEnumId9("paymentAcctgTagEnumId9"),
    paymentAcctgTagEnumId10("paymentAcctgTagEnumId10");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    private String orderPaymentPreferenceId;
    
    
    private String orderId;
    
    
    private String orderItemSeqId;
    
    
    private String productPricePurposeId;
    
    
    private String paymentMethodTypeId;
    
    
    private String paymentMethodId;
    
    
    private String finAccountId;
    
    
    private String securityCode;
    
    
    private String presentFlag;
    
    
    private String overflowFlag;
    
    
    private BigDecimal maxAmount;
    
    
    private Long processAttempt;
    
    
    private String billingPostalCode;
    
    
    private String manualAuthCode;
    
    
    private String manualRefNum;
    
    
    private String statusId;
    
    
    private String needsNsfRetry;
    
    
    private Timestamp createdDate;
    
    
    private String createdByUserLogin;
    
    
    private String paymentPaymentId;
    
    
    private String paymentPaymentTypeId;
    
    
    private String paymentPaymentMethodTypeId;
    
    
    private String paymentPaymentMethodId;
    
    
    private String paymentPaymentGatewayResponseId;
    
    
    private String paymentPaymentPreferenceId;
    
    
    private String paymentPartyIdFrom;
    
    
    private String paymentPartyIdTo;
    
    
    private String paymentRoleTypeIdTo;
    
    
    private String paymentStatusId;
    
    
    private Timestamp paymentEffectiveDate;
    
    
    private String paymentPaymentRefNum;
    
    
    private BigDecimal paymentAmount;
    
    
    private String paymentCurrencyUomId;
    
    
    private String paymentComments;
    
    
    private String paymentFinAccountTransId;
    
    
    private String paymentOverrideGlAccountId;
    
    
    private BigDecimal paymentActualCurrencyAmount;
    
    
    private String paymentActualCurrencyUomId;
    
    
    private String paymentAcctgTagEnumId1;
    
    
    private String paymentAcctgTagEnumId2;
    
    
    private String paymentAcctgTagEnumId3;
    
    
    private String paymentAcctgTagEnumId4;
    
    
    private String paymentAcctgTagEnumId5;
    
    
    private String paymentAcctgTagEnumId6;
    
    
    private String paymentAcctgTagEnumId7;
    
    
    private String paymentAcctgTagEnumId8;
    
    
    private String paymentAcctgTagEnumId9;
    
    
    private String paymentAcctgTagEnumId10;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PAYMENT_PAYMENT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private PaymentType paymentType = null;

  /**
   * Default constructor.
   */
  public OrderPaymentPrefAndPayment() {
      super();
      this.baseEntityName = "OrderPaymentPrefAndPayment";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("orderPaymentPreferenceId");this.primaryKeyNames.add("paymentPaymentId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public OrderPaymentPrefAndPayment(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param orderPaymentPreferenceId the orderPaymentPreferenceId to set
     */
    private void setOrderPaymentPreferenceId(String orderPaymentPreferenceId) {
        this.orderPaymentPreferenceId = orderPaymentPreferenceId;
    }
    /**
     * Auto generated value setter.
     * @param orderId the orderId to set
     */
    private void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    /**
     * Auto generated value setter.
     * @param orderItemSeqId the orderItemSeqId to set
     */
    private void setOrderItemSeqId(String orderItemSeqId) {
        this.orderItemSeqId = orderItemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param productPricePurposeId the productPricePurposeId to set
     */
    private void setProductPricePurposeId(String productPricePurposeId) {
        this.productPricePurposeId = productPricePurposeId;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodTypeId the paymentMethodTypeId to set
     */
    private void setPaymentMethodTypeId(String paymentMethodTypeId) {
        this.paymentMethodTypeId = paymentMethodTypeId;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodId the paymentMethodId to set
     */
    private void setPaymentMethodId(String paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
    }
    /**
     * Auto generated value setter.
     * @param finAccountId the finAccountId to set
     */
    private void setFinAccountId(String finAccountId) {
        this.finAccountId = finAccountId;
    }
    /**
     * Auto generated value setter.
     * @param securityCode the securityCode to set
     */
    private void setSecurityCode(String securityCode) {
        this.securityCode = securityCode;
    }
    /**
     * Auto generated value setter.
     * @param presentFlag the presentFlag to set
     */
    private void setPresentFlag(String presentFlag) {
        this.presentFlag = presentFlag;
    }
    /**
     * Auto generated value setter.
     * @param overflowFlag the overflowFlag to set
     */
    private void setOverflowFlag(String overflowFlag) {
        this.overflowFlag = overflowFlag;
    }
    /**
     * Auto generated value setter.
     * @param maxAmount the maxAmount to set
     */
    private void setMaxAmount(BigDecimal maxAmount) {
        this.maxAmount = maxAmount;
    }
    /**
     * Auto generated value setter.
     * @param processAttempt the processAttempt to set
     */
    private void setProcessAttempt(Long processAttempt) {
        this.processAttempt = processAttempt;
    }
    /**
     * Auto generated value setter.
     * @param billingPostalCode the billingPostalCode to set
     */
    private void setBillingPostalCode(String billingPostalCode) {
        this.billingPostalCode = billingPostalCode;
    }
    /**
     * Auto generated value setter.
     * @param manualAuthCode the manualAuthCode to set
     */
    private void setManualAuthCode(String manualAuthCode) {
        this.manualAuthCode = manualAuthCode;
    }
    /**
     * Auto generated value setter.
     * @param manualRefNum the manualRefNum to set
     */
    private void setManualRefNum(String manualRefNum) {
        this.manualRefNum = manualRefNum;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    private void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param needsNsfRetry the needsNsfRetry to set
     */
    private void setNeedsNsfRetry(String needsNsfRetry) {
        this.needsNsfRetry = needsNsfRetry;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    private void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    private void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param paymentPaymentId the paymentPaymentId to set
     */
    private void setPaymentPaymentId(String paymentPaymentId) {
        this.paymentPaymentId = paymentPaymentId;
    }
    /**
     * Auto generated value setter.
     * @param paymentPaymentTypeId the paymentPaymentTypeId to set
     */
    private void setPaymentPaymentTypeId(String paymentPaymentTypeId) {
        this.paymentPaymentTypeId = paymentPaymentTypeId;
    }
    /**
     * Auto generated value setter.
     * @param paymentPaymentMethodTypeId the paymentPaymentMethodTypeId to set
     */
    private void setPaymentPaymentMethodTypeId(String paymentPaymentMethodTypeId) {
        this.paymentPaymentMethodTypeId = paymentPaymentMethodTypeId;
    }
    /**
     * Auto generated value setter.
     * @param paymentPaymentMethodId the paymentPaymentMethodId to set
     */
    private void setPaymentPaymentMethodId(String paymentPaymentMethodId) {
        this.paymentPaymentMethodId = paymentPaymentMethodId;
    }
    /**
     * Auto generated value setter.
     * @param paymentPaymentGatewayResponseId the paymentPaymentGatewayResponseId to set
     */
    private void setPaymentPaymentGatewayResponseId(String paymentPaymentGatewayResponseId) {
        this.paymentPaymentGatewayResponseId = paymentPaymentGatewayResponseId;
    }
    /**
     * Auto generated value setter.
     * @param paymentPaymentPreferenceId the paymentPaymentPreferenceId to set
     */
    private void setPaymentPaymentPreferenceId(String paymentPaymentPreferenceId) {
        this.paymentPaymentPreferenceId = paymentPaymentPreferenceId;
    }
    /**
     * Auto generated value setter.
     * @param paymentPartyIdFrom the paymentPartyIdFrom to set
     */
    private void setPaymentPartyIdFrom(String paymentPartyIdFrom) {
        this.paymentPartyIdFrom = paymentPartyIdFrom;
    }
    /**
     * Auto generated value setter.
     * @param paymentPartyIdTo the paymentPartyIdTo to set
     */
    private void setPaymentPartyIdTo(String paymentPartyIdTo) {
        this.paymentPartyIdTo = paymentPartyIdTo;
    }
    /**
     * Auto generated value setter.
     * @param paymentRoleTypeIdTo the paymentRoleTypeIdTo to set
     */
    private void setPaymentRoleTypeIdTo(String paymentRoleTypeIdTo) {
        this.paymentRoleTypeIdTo = paymentRoleTypeIdTo;
    }
    /**
     * Auto generated value setter.
     * @param paymentStatusId the paymentStatusId to set
     */
    private void setPaymentStatusId(String paymentStatusId) {
        this.paymentStatusId = paymentStatusId;
    }
    /**
     * Auto generated value setter.
     * @param paymentEffectiveDate the paymentEffectiveDate to set
     */
    private void setPaymentEffectiveDate(Timestamp paymentEffectiveDate) {
        this.paymentEffectiveDate = paymentEffectiveDate;
    }
    /**
     * Auto generated value setter.
     * @param paymentPaymentRefNum the paymentPaymentRefNum to set
     */
    private void setPaymentPaymentRefNum(String paymentPaymentRefNum) {
        this.paymentPaymentRefNum = paymentPaymentRefNum;
    }
    /**
     * Auto generated value setter.
     * @param paymentAmount the paymentAmount to set
     */
    private void setPaymentAmount(BigDecimal paymentAmount) {
        this.paymentAmount = paymentAmount;
    }
    /**
     * Auto generated value setter.
     * @param paymentCurrencyUomId the paymentCurrencyUomId to set
     */
    private void setPaymentCurrencyUomId(String paymentCurrencyUomId) {
        this.paymentCurrencyUomId = paymentCurrencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param paymentComments the paymentComments to set
     */
    private void setPaymentComments(String paymentComments) {
        this.paymentComments = paymentComments;
    }
    /**
     * Auto generated value setter.
     * @param paymentFinAccountTransId the paymentFinAccountTransId to set
     */
    private void setPaymentFinAccountTransId(String paymentFinAccountTransId) {
        this.paymentFinAccountTransId = paymentFinAccountTransId;
    }
    /**
     * Auto generated value setter.
     * @param paymentOverrideGlAccountId the paymentOverrideGlAccountId to set
     */
    private void setPaymentOverrideGlAccountId(String paymentOverrideGlAccountId) {
        this.paymentOverrideGlAccountId = paymentOverrideGlAccountId;
    }
    /**
     * Auto generated value setter.
     * @param paymentActualCurrencyAmount the paymentActualCurrencyAmount to set
     */
    private void setPaymentActualCurrencyAmount(BigDecimal paymentActualCurrencyAmount) {
        this.paymentActualCurrencyAmount = paymentActualCurrencyAmount;
    }
    /**
     * Auto generated value setter.
     * @param paymentActualCurrencyUomId the paymentActualCurrencyUomId to set
     */
    private void setPaymentActualCurrencyUomId(String paymentActualCurrencyUomId) {
        this.paymentActualCurrencyUomId = paymentActualCurrencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId1 the paymentAcctgTagEnumId1 to set
     */
    private void setPaymentAcctgTagEnumId1(String paymentAcctgTagEnumId1) {
        this.paymentAcctgTagEnumId1 = paymentAcctgTagEnumId1;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId2 the paymentAcctgTagEnumId2 to set
     */
    private void setPaymentAcctgTagEnumId2(String paymentAcctgTagEnumId2) {
        this.paymentAcctgTagEnumId2 = paymentAcctgTagEnumId2;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId3 the paymentAcctgTagEnumId3 to set
     */
    private void setPaymentAcctgTagEnumId3(String paymentAcctgTagEnumId3) {
        this.paymentAcctgTagEnumId3 = paymentAcctgTagEnumId3;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId4 the paymentAcctgTagEnumId4 to set
     */
    private void setPaymentAcctgTagEnumId4(String paymentAcctgTagEnumId4) {
        this.paymentAcctgTagEnumId4 = paymentAcctgTagEnumId4;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId5 the paymentAcctgTagEnumId5 to set
     */
    private void setPaymentAcctgTagEnumId5(String paymentAcctgTagEnumId5) {
        this.paymentAcctgTagEnumId5 = paymentAcctgTagEnumId5;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId6 the paymentAcctgTagEnumId6 to set
     */
    private void setPaymentAcctgTagEnumId6(String paymentAcctgTagEnumId6) {
        this.paymentAcctgTagEnumId6 = paymentAcctgTagEnumId6;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId7 the paymentAcctgTagEnumId7 to set
     */
    private void setPaymentAcctgTagEnumId7(String paymentAcctgTagEnumId7) {
        this.paymentAcctgTagEnumId7 = paymentAcctgTagEnumId7;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId8 the paymentAcctgTagEnumId8 to set
     */
    private void setPaymentAcctgTagEnumId8(String paymentAcctgTagEnumId8) {
        this.paymentAcctgTagEnumId8 = paymentAcctgTagEnumId8;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId9 the paymentAcctgTagEnumId9 to set
     */
    private void setPaymentAcctgTagEnumId9(String paymentAcctgTagEnumId9) {
        this.paymentAcctgTagEnumId9 = paymentAcctgTagEnumId9;
    }
    /**
     * Auto generated value setter.
     * @param paymentAcctgTagEnumId10 the paymentAcctgTagEnumId10 to set
     */
    private void setPaymentAcctgTagEnumId10(String paymentAcctgTagEnumId10) {
        this.paymentAcctgTagEnumId10 = paymentAcctgTagEnumId10;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderPaymentPreferenceId() {
        return this.orderPaymentPreferenceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderId() {
        return this.orderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderItemSeqId() {
        return this.orderItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductPricePurposeId() {
        return this.productPricePurposeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentMethodTypeId() {
        return this.paymentMethodTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentMethodId() {
        return this.paymentMethodId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFinAccountId() {
        return this.finAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSecurityCode() {
        return this.securityCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPresentFlag() {
        return this.presentFlag;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOverflowFlag() {
        return this.overflowFlag;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMaxAmount() {
        return this.maxAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getProcessAttempt() {
        return this.processAttempt;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingPostalCode() {
        return this.billingPostalCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getManualAuthCode() {
        return this.manualAuthCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getManualRefNum() {
        return this.manualRefNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNeedsNsfRetry() {
        return this.needsNsfRetry;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPaymentId() {
        return this.paymentPaymentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPaymentTypeId() {
        return this.paymentPaymentTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPaymentMethodTypeId() {
        return this.paymentPaymentMethodTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPaymentMethodId() {
        return this.paymentPaymentMethodId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPaymentGatewayResponseId() {
        return this.paymentPaymentGatewayResponseId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPaymentPreferenceId() {
        return this.paymentPaymentPreferenceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPartyIdFrom() {
        return this.paymentPartyIdFrom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPartyIdTo() {
        return this.paymentPartyIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentRoleTypeIdTo() {
        return this.paymentRoleTypeIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentStatusId() {
        return this.paymentStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getPaymentEffectiveDate() {
        return this.paymentEffectiveDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPaymentRefNum() {
        return this.paymentPaymentRefNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getPaymentAmount() {
        return this.paymentAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentCurrencyUomId() {
        return this.paymentCurrencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentComments() {
        return this.paymentComments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentFinAccountTransId() {
        return this.paymentFinAccountTransId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentOverrideGlAccountId() {
        return this.paymentOverrideGlAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getPaymentActualCurrencyAmount() {
        return this.paymentActualCurrencyAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentActualCurrencyUomId() {
        return this.paymentActualCurrencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId1() {
        return this.paymentAcctgTagEnumId1;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId2() {
        return this.paymentAcctgTagEnumId2;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId3() {
        return this.paymentAcctgTagEnumId3;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId4() {
        return this.paymentAcctgTagEnumId4;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId5() {
        return this.paymentAcctgTagEnumId5;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId6() {
        return this.paymentAcctgTagEnumId6;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId7() {
        return this.paymentAcctgTagEnumId7;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId8() {
        return this.paymentAcctgTagEnumId8;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId9() {
        return this.paymentAcctgTagEnumId9;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentAcctgTagEnumId10() {
        return this.paymentAcctgTagEnumId10;
    }

    /**
     * Auto generated method that gets the related <code>PaymentType</code> by the relation named <code>PaymentType</code>.
     * @return the <code>PaymentType</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentType getPaymentType() throws RepositoryException {
        if (this.paymentType == null) {
            this.paymentType = getRelatedOne(PaymentType.class, "PaymentType");
        }
        return this.paymentType;
    }

    /**
     * Auto generated value setter.
     * @param paymentType the paymentType to set
    */
    public void setPaymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setOrderPaymentPreferenceId((String) mapValue.get("orderPaymentPreferenceId"));
        setOrderId((String) mapValue.get("orderId"));
        setOrderItemSeqId((String) mapValue.get("orderItemSeqId"));
        setProductPricePurposeId((String) mapValue.get("productPricePurposeId"));
        setPaymentMethodTypeId((String) mapValue.get("paymentMethodTypeId"));
        setPaymentMethodId((String) mapValue.get("paymentMethodId"));
        setFinAccountId((String) mapValue.get("finAccountId"));
        setSecurityCode((String) mapValue.get("securityCode"));
        setPresentFlag((String) mapValue.get("presentFlag"));
        setOverflowFlag((String) mapValue.get("overflowFlag"));
        setMaxAmount(convertToBigDecimal(mapValue.get("maxAmount")));
        setProcessAttempt((Long) mapValue.get("processAttempt"));
        setBillingPostalCode((String) mapValue.get("billingPostalCode"));
        setManualAuthCode((String) mapValue.get("manualAuthCode"));
        setManualRefNum((String) mapValue.get("manualRefNum"));
        setStatusId((String) mapValue.get("statusId"));
        setNeedsNsfRetry((String) mapValue.get("needsNsfRetry"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setPaymentPaymentId((String) mapValue.get("paymentPaymentId"));
        setPaymentPaymentTypeId((String) mapValue.get("paymentPaymentTypeId"));
        setPaymentPaymentMethodTypeId((String) mapValue.get("paymentPaymentMethodTypeId"));
        setPaymentPaymentMethodId((String) mapValue.get("paymentPaymentMethodId"));
        setPaymentPaymentGatewayResponseId((String) mapValue.get("paymentPaymentGatewayResponseId"));
        setPaymentPaymentPreferenceId((String) mapValue.get("paymentPaymentPreferenceId"));
        setPaymentPartyIdFrom((String) mapValue.get("paymentPartyIdFrom"));
        setPaymentPartyIdTo((String) mapValue.get("paymentPartyIdTo"));
        setPaymentRoleTypeIdTo((String) mapValue.get("paymentRoleTypeIdTo"));
        setPaymentStatusId((String) mapValue.get("paymentStatusId"));
        setPaymentEffectiveDate((Timestamp) mapValue.get("paymentEffectiveDate"));
        setPaymentPaymentRefNum((String) mapValue.get("paymentPaymentRefNum"));
        setPaymentAmount(convertToBigDecimal(mapValue.get("paymentAmount")));
        setPaymentCurrencyUomId((String) mapValue.get("paymentCurrencyUomId"));
        setPaymentComments((String) mapValue.get("paymentComments"));
        setPaymentFinAccountTransId((String) mapValue.get("paymentFinAccountTransId"));
        setPaymentOverrideGlAccountId((String) mapValue.get("paymentOverrideGlAccountId"));
        setPaymentActualCurrencyAmount(convertToBigDecimal(mapValue.get("paymentActualCurrencyAmount")));
        setPaymentActualCurrencyUomId((String) mapValue.get("paymentActualCurrencyUomId"));
        setPaymentAcctgTagEnumId1((String) mapValue.get("paymentAcctgTagEnumId1"));
        setPaymentAcctgTagEnumId2((String) mapValue.get("paymentAcctgTagEnumId2"));
        setPaymentAcctgTagEnumId3((String) mapValue.get("paymentAcctgTagEnumId3"));
        setPaymentAcctgTagEnumId4((String) mapValue.get("paymentAcctgTagEnumId4"));
        setPaymentAcctgTagEnumId5((String) mapValue.get("paymentAcctgTagEnumId5"));
        setPaymentAcctgTagEnumId6((String) mapValue.get("paymentAcctgTagEnumId6"));
        setPaymentAcctgTagEnumId7((String) mapValue.get("paymentAcctgTagEnumId7"));
        setPaymentAcctgTagEnumId8((String) mapValue.get("paymentAcctgTagEnumId8"));
        setPaymentAcctgTagEnumId9((String) mapValue.get("paymentAcctgTagEnumId9"));
        setPaymentAcctgTagEnumId10((String) mapValue.get("paymentAcctgTagEnumId10"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("orderPaymentPreferenceId", getOrderPaymentPreferenceId());
        mapValue.put("orderId", getOrderId());
        mapValue.put("orderItemSeqId", getOrderItemSeqId());
        mapValue.put("productPricePurposeId", getProductPricePurposeId());
        mapValue.put("paymentMethodTypeId", getPaymentMethodTypeId());
        mapValue.put("paymentMethodId", getPaymentMethodId());
        mapValue.put("finAccountId", getFinAccountId());
        mapValue.put("securityCode", getSecurityCode());
        mapValue.put("presentFlag", getPresentFlag());
        mapValue.put("overflowFlag", getOverflowFlag());
        mapValue.put("maxAmount", getMaxAmount());
        mapValue.put("processAttempt", getProcessAttempt());
        mapValue.put("billingPostalCode", getBillingPostalCode());
        mapValue.put("manualAuthCode", getManualAuthCode());
        mapValue.put("manualRefNum", getManualRefNum());
        mapValue.put("statusId", getStatusId());
        mapValue.put("needsNsfRetry", getNeedsNsfRetry());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("paymentPaymentId", getPaymentPaymentId());
        mapValue.put("paymentPaymentTypeId", getPaymentPaymentTypeId());
        mapValue.put("paymentPaymentMethodTypeId", getPaymentPaymentMethodTypeId());
        mapValue.put("paymentPaymentMethodId", getPaymentPaymentMethodId());
        mapValue.put("paymentPaymentGatewayResponseId", getPaymentPaymentGatewayResponseId());
        mapValue.put("paymentPaymentPreferenceId", getPaymentPaymentPreferenceId());
        mapValue.put("paymentPartyIdFrom", getPaymentPartyIdFrom());
        mapValue.put("paymentPartyIdTo", getPaymentPartyIdTo());
        mapValue.put("paymentRoleTypeIdTo", getPaymentRoleTypeIdTo());
        mapValue.put("paymentStatusId", getPaymentStatusId());
        mapValue.put("paymentEffectiveDate", getPaymentEffectiveDate());
        mapValue.put("paymentPaymentRefNum", getPaymentPaymentRefNum());
        mapValue.put("paymentAmount", getPaymentAmount());
        mapValue.put("paymentCurrencyUomId", getPaymentCurrencyUomId());
        mapValue.put("paymentComments", getPaymentComments());
        mapValue.put("paymentFinAccountTransId", getPaymentFinAccountTransId());
        mapValue.put("paymentOverrideGlAccountId", getPaymentOverrideGlAccountId());
        mapValue.put("paymentActualCurrencyAmount", getPaymentActualCurrencyAmount());
        mapValue.put("paymentActualCurrencyUomId", getPaymentActualCurrencyUomId());
        mapValue.put("paymentAcctgTagEnumId1", getPaymentAcctgTagEnumId1());
        mapValue.put("paymentAcctgTagEnumId2", getPaymentAcctgTagEnumId2());
        mapValue.put("paymentAcctgTagEnumId3", getPaymentAcctgTagEnumId3());
        mapValue.put("paymentAcctgTagEnumId4", getPaymentAcctgTagEnumId4());
        mapValue.put("paymentAcctgTagEnumId5", getPaymentAcctgTagEnumId5());
        mapValue.put("paymentAcctgTagEnumId6", getPaymentAcctgTagEnumId6());
        mapValue.put("paymentAcctgTagEnumId7", getPaymentAcctgTagEnumId7());
        mapValue.put("paymentAcctgTagEnumId8", getPaymentAcctgTagEnumId8());
        mapValue.put("paymentAcctgTagEnumId9", getPaymentAcctgTagEnumId9());
        mapValue.put("paymentAcctgTagEnumId10", getPaymentAcctgTagEnumId10());
        return mapValue;
    }


}
