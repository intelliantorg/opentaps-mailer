package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity PostalAddress.
 */
@javax.persistence.Entity
@Table(name="POSTAL_ADDRESS")
public class PostalAddress extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("contactMechId", "CONTACT_MECH_ID");
        fields.put("toName", "TO_NAME");
        fields.put("attnName", "ATTN_NAME");
        fields.put("address1", "ADDRESS1");
        fields.put("address2", "ADDRESS2");
        fields.put("directions", "DIRECTIONS");
        fields.put("city", "CITY");
        fields.put("postalCode", "POSTAL_CODE");
        fields.put("postalCodeExt", "POSTAL_CODE_EXT");
        fields.put("countryGeoId", "COUNTRY_GEO_ID");
        fields.put("stateProvinceGeoId", "STATE_PROVINCE_GEO_ID");
        fields.put("countyGeoId", "COUNTY_GEO_ID");
        fields.put("postalCodeGeoId", "POSTAL_CODE_GEO_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("PostalAddress", fields);
}
  public static enum Fields implements EntityFieldInterface<PostalAddress> {
    contactMechId("contactMechId"),
    toName("toName"),
    attnName("attnName"),
    address1("address1"),
    address2("address2"),
    directions("directions"),
    city("city"),
    postalCode("postalCode"),
    postalCodeExt("postalCodeExt"),
    countryGeoId("countryGeoId"),
    stateProvinceGeoId("stateProvinceGeoId"),
    countyGeoId("countyGeoId"),
    postalCodeGeoId("postalCodeGeoId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="PostalAddress_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="PostalAddress_GEN")   
    @Id
    
    @Column(name="CONTACT_MECH_ID")
    private String contactMechId;
    
    @Column(name="TO_NAME")
    private String toName;
    
    @Column(name="ATTN_NAME")
    private String attnName;
    
    @Column(name="ADDRESS1")
    private String address1;
    
    @Column(name="ADDRESS2")
    private String address2;
    
    @Column(name="DIRECTIONS")
    private String directions;
    
    @Column(name="CITY")
    private String city;
    
    @Column(name="POSTAL_CODE")
    private String postalCode;
    
    @Column(name="POSTAL_CODE_EXT")
    private String postalCodeExt;
    
    @Column(name="COUNTRY_GEO_ID")
    private String countryGeoId;
    
    @Column(name="STATE_PROVINCE_GEO_ID")
    private String stateProvinceGeoId;
    
    @Column(name="COUNTY_GEO_ID")
    private String countyGeoId;
    
    @Column(name="POSTAL_CODE_GEO_ID")
    private String postalCodeGeoId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactMech contactMech = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATE_PROVINCE_GEO_ID")
    private List<SimpleSalesTaxLookup> simpleSalesTaxLookups = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY_GEO_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Geo countryGeo = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATE_PROVINCE_GEO_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Geo stateProvinceGeo = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTY_GEO_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Geo countyGeo = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="POSTAL_CODE_GEO_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Geo postalCodeGeo = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<BillingAccount> billingAccounts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<CreditCard> creditCards = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<EftAccount> eftAccounts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<GiftCard> giftCards = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<OrderItemShipGroup> orderItemShipGroups = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="postalAddress", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<PartyContactMech> partyContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="postalAddress", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<PartyContactMechPurpose> partyContactMechPurposes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="postalAddress", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<PostalAddressBoundary> postalAddressBoundarys = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="postalAddress", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<ProductStoreFacilityByAddress> productStoreFacilityByAddresses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_CONTACT_MECH_ID")
    private List<ReturnHeader> returnHeaders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_CONTACT_MECH_ID")
    private List<Shipment> originShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="DESTINATION_CONTACT_MECH_ID")
    private List<Shipment> destinationShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_CONTACT_MECH_ID")
    private List<ShipmentRouteSegment> originShipmentRouteSegments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="DEST_CONTACT_MECH_ID")
    private List<ShipmentRouteSegment> destShipmentRouteSegments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<ShoppingList> shoppingLists = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<UspsContactListSort> uspsContactListSorts = null;

  /**
   * Default constructor.
   */
  public PostalAddress() {
      super();
      this.baseEntityName = "PostalAddress";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("contactMechId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public PostalAddress(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param contactMechId the contactMechId to set
     */
    public void setContactMechId(String contactMechId) {
        this.contactMechId = contactMechId;
    }
    /**
     * Auto generated value setter.
     * @param toName the toName to set
     */
    public void setToName(String toName) {
        this.toName = toName;
    }
    /**
     * Auto generated value setter.
     * @param attnName the attnName to set
     */
    public void setAttnName(String attnName) {
        this.attnName = attnName;
    }
    /**
     * Auto generated value setter.
     * @param address1 the address1 to set
     */
    public void setAddress1(String address1) {
        this.address1 = address1;
    }
    /**
     * Auto generated value setter.
     * @param address2 the address2 to set
     */
    public void setAddress2(String address2) {
        this.address2 = address2;
    }
    /**
     * Auto generated value setter.
     * @param directions the directions to set
     */
    public void setDirections(String directions) {
        this.directions = directions;
    }
    /**
     * Auto generated value setter.
     * @param city the city to set
     */
    public void setCity(String city) {
        this.city = city;
    }
    /**
     * Auto generated value setter.
     * @param postalCode the postalCode to set
     */
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }
    /**
     * Auto generated value setter.
     * @param postalCodeExt the postalCodeExt to set
     */
    public void setPostalCodeExt(String postalCodeExt) {
        this.postalCodeExt = postalCodeExt;
    }
    /**
     * Auto generated value setter.
     * @param countryGeoId the countryGeoId to set
     */
    public void setCountryGeoId(String countryGeoId) {
        this.countryGeoId = countryGeoId;
    }
    /**
     * Auto generated value setter.
     * @param stateProvinceGeoId the stateProvinceGeoId to set
     */
    public void setStateProvinceGeoId(String stateProvinceGeoId) {
        this.stateProvinceGeoId = stateProvinceGeoId;
    }
    /**
     * Auto generated value setter.
     * @param countyGeoId the countyGeoId to set
     */
    public void setCountyGeoId(String countyGeoId) {
        this.countyGeoId = countyGeoId;
    }
    /**
     * Auto generated value setter.
     * @param postalCodeGeoId the postalCodeGeoId to set
     */
    public void setPostalCodeGeoId(String postalCodeGeoId) {
        this.postalCodeGeoId = postalCodeGeoId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechId() {
        return this.contactMechId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getToName() {
        return this.toName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAttnName() {
        return this.attnName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAddress1() {
        return this.address1;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAddress2() {
        return this.address2;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDirections() {
        return this.directions;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCity() {
        return this.city;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPostalCode() {
        return this.postalCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPostalCodeExt() {
        return this.postalCodeExt;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCountryGeoId() {
        return this.countryGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStateProvinceGeoId() {
        return this.stateProvinceGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCountyGeoId() {
        return this.countyGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPostalCodeGeoId() {
        return this.postalCodeGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>ContactMech</code> by the relation named <code>ContactMech</code>.
     * @return the <code>ContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMech getContactMech() throws RepositoryException {
        if (this.contactMech == null) {
            this.contactMech = getRelatedOne(ContactMech.class, "ContactMech");
        }
        return this.contactMech;
    }
    /**
     * Auto generated method that gets the related <code>SimpleSalesTaxLookup</code> by the relation named <code>SimpleSalesTaxLookup</code>.
     * @return the list of <code>SimpleSalesTaxLookup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SimpleSalesTaxLookup> getSimpleSalesTaxLookups() throws RepositoryException {
        if (this.simpleSalesTaxLookups == null) {
            this.simpleSalesTaxLookups = getRelated(SimpleSalesTaxLookup.class, "SimpleSalesTaxLookup");
        }
        return this.simpleSalesTaxLookups;
    }
    /**
     * Auto generated method that gets the related <code>Geo</code> by the relation named <code>CountryGeo</code>.
     * @return the <code>Geo</code>
     * @throws RepositoryException if an error occurs
     */
    public Geo getCountryGeo() throws RepositoryException {
        if (this.countryGeo == null) {
            this.countryGeo = getRelatedOne(Geo.class, "CountryGeo");
        }
        return this.countryGeo;
    }
    /**
     * Auto generated method that gets the related <code>Geo</code> by the relation named <code>StateProvinceGeo</code>.
     * @return the <code>Geo</code>
     * @throws RepositoryException if an error occurs
     */
    public Geo getStateProvinceGeo() throws RepositoryException {
        if (this.stateProvinceGeo == null) {
            this.stateProvinceGeo = getRelatedOne(Geo.class, "StateProvinceGeo");
        }
        return this.stateProvinceGeo;
    }
    /**
     * Auto generated method that gets the related <code>Geo</code> by the relation named <code>CountyGeo</code>.
     * @return the <code>Geo</code>
     * @throws RepositoryException if an error occurs
     */
    public Geo getCountyGeo() throws RepositoryException {
        if (this.countyGeo == null) {
            this.countyGeo = getRelatedOne(Geo.class, "CountyGeo");
        }
        return this.countyGeo;
    }
    /**
     * Auto generated method that gets the related <code>Geo</code> by the relation named <code>PostalCodeGeo</code>.
     * @return the <code>Geo</code>
     * @throws RepositoryException if an error occurs
     */
    public Geo getPostalCodeGeo() throws RepositoryException {
        if (this.postalCodeGeo == null) {
            this.postalCodeGeo = getRelatedOne(Geo.class, "PostalCodeGeo");
        }
        return this.postalCodeGeo;
    }
    /**
     * Auto generated method that gets the related <code>BillingAccount</code> by the relation named <code>BillingAccount</code>.
     * @return the list of <code>BillingAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BillingAccount> getBillingAccounts() throws RepositoryException {
        if (this.billingAccounts == null) {
            this.billingAccounts = getRelated(BillingAccount.class, "BillingAccount");
        }
        return this.billingAccounts;
    }
    /**
     * Auto generated method that gets the related <code>CreditCard</code> by the relation named <code>CreditCard</code>.
     * @return the list of <code>CreditCard</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CreditCard> getCreditCards() throws RepositoryException {
        if (this.creditCards == null) {
            this.creditCards = getRelated(CreditCard.class, "CreditCard");
        }
        return this.creditCards;
    }
    /**
     * Auto generated method that gets the related <code>EftAccount</code> by the relation named <code>EftAccount</code>.
     * @return the list of <code>EftAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EftAccount> getEftAccounts() throws RepositoryException {
        if (this.eftAccounts == null) {
            this.eftAccounts = getRelated(EftAccount.class, "EftAccount");
        }
        return this.eftAccounts;
    }
    /**
     * Auto generated method that gets the related <code>GiftCard</code> by the relation named <code>GiftCard</code>.
     * @return the list of <code>GiftCard</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GiftCard> getGiftCards() throws RepositoryException {
        if (this.giftCards == null) {
            this.giftCards = getRelated(GiftCard.class, "GiftCard");
        }
        return this.giftCards;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroup</code> by the relation named <code>OrderItemShipGroup</code>.
     * @return the list of <code>OrderItemShipGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemShipGroup> getOrderItemShipGroups() throws RepositoryException {
        if (this.orderItemShipGroups == null) {
            this.orderItemShipGroups = getRelated(OrderItemShipGroup.class, "OrderItemShipGroup");
        }
        return this.orderItemShipGroups;
    }
    /**
     * Auto generated method that gets the related <code>PartyContactMech</code> by the relation named <code>PartyContactMech</code>.
     * @return the list of <code>PartyContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContactMech> getPartyContactMeches() throws RepositoryException {
        if (this.partyContactMeches == null) {
            this.partyContactMeches = getRelated(PartyContactMech.class, "PartyContactMech");
        }
        return this.partyContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>PartyContactMechPurpose</code> by the relation named <code>PartyContactMechPurpose</code>.
     * @return the list of <code>PartyContactMechPurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContactMechPurpose> getPartyContactMechPurposes() throws RepositoryException {
        if (this.partyContactMechPurposes == null) {
            this.partyContactMechPurposes = getRelated(PartyContactMechPurpose.class, "PartyContactMechPurpose");
        }
        return this.partyContactMechPurposes;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddressBoundary</code> by the relation named <code>PostalAddressBoundary</code>.
     * @return the list of <code>PostalAddressBoundary</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PostalAddressBoundary> getPostalAddressBoundarys() throws RepositoryException {
        if (this.postalAddressBoundarys == null) {
            this.postalAddressBoundarys = getRelated(PostalAddressBoundary.class, "PostalAddressBoundary");
        }
        return this.postalAddressBoundarys;
    }
    /**
     * Auto generated method that gets the related <code>ProductStoreFacilityByAddress</code> by the relation named <code>ProductStoreFacilityByAddress</code>.
     * @return the list of <code>ProductStoreFacilityByAddress</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStoreFacilityByAddress> getProductStoreFacilityByAddresses() throws RepositoryException {
        if (this.productStoreFacilityByAddresses == null) {
            this.productStoreFacilityByAddresses = getRelated(ProductStoreFacilityByAddress.class, "ProductStoreFacilityByAddress");
        }
        return this.productStoreFacilityByAddresses;
    }
    /**
     * Auto generated method that gets the related <code>ReturnHeader</code> by the relation named <code>ReturnHeader</code>.
     * @return the list of <code>ReturnHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnHeader> getReturnHeaders() throws RepositoryException {
        if (this.returnHeaders == null) {
            this.returnHeaders = getRelated(ReturnHeader.class, "ReturnHeader");
        }
        return this.returnHeaders;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>OriginShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getOriginShipments() throws RepositoryException {
        if (this.originShipments == null) {
            this.originShipments = getRelated(Shipment.class, "OriginShipment");
        }
        return this.originShipments;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>DestinationShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getDestinationShipments() throws RepositoryException {
        if (this.destinationShipments == null) {
            this.destinationShipments = getRelated(Shipment.class, "DestinationShipment");
        }
        return this.destinationShipments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentRouteSegment</code> by the relation named <code>OriginShipmentRouteSegment</code>.
     * @return the list of <code>ShipmentRouteSegment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentRouteSegment> getOriginShipmentRouteSegments() throws RepositoryException {
        if (this.originShipmentRouteSegments == null) {
            this.originShipmentRouteSegments = getRelated(ShipmentRouteSegment.class, "OriginShipmentRouteSegment");
        }
        return this.originShipmentRouteSegments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentRouteSegment</code> by the relation named <code>DestShipmentRouteSegment</code>.
     * @return the list of <code>ShipmentRouteSegment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentRouteSegment> getDestShipmentRouteSegments() throws RepositoryException {
        if (this.destShipmentRouteSegments == null) {
            this.destShipmentRouteSegments = getRelated(ShipmentRouteSegment.class, "DestShipmentRouteSegment");
        }
        return this.destShipmentRouteSegments;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingList</code> by the relation named <code>ShoppingList</code>.
     * @return the list of <code>ShoppingList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingList> getShoppingLists() throws RepositoryException {
        if (this.shoppingLists == null) {
            this.shoppingLists = getRelated(ShoppingList.class, "ShoppingList");
        }
        return this.shoppingLists;
    }
    /**
     * Auto generated method that gets the related <code>UspsContactListSort</code> by the relation named <code>UspsContactListSort</code>.
     * @return the list of <code>UspsContactListSort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UspsContactListSort> getUspsContactListSorts() throws RepositoryException {
        if (this.uspsContactListSorts == null) {
            this.uspsContactListSorts = getRelated(UspsContactListSort.class, "UspsContactListSort");
        }
        return this.uspsContactListSorts;
    }

    /**
     * Auto generated value setter.
     * @param contactMech the contactMech to set
    */
    public void setContactMech(ContactMech contactMech) {
        this.contactMech = contactMech;
    }
    /**
     * Auto generated value setter.
     * @param simpleSalesTaxLookups the simpleSalesTaxLookups to set
    */
    public void setSimpleSalesTaxLookups(List<SimpleSalesTaxLookup> simpleSalesTaxLookups) {
        this.simpleSalesTaxLookups = simpleSalesTaxLookups;
    }
    /**
     * Auto generated value setter.
     * @param countryGeo the countryGeo to set
    */
    public void setCountryGeo(Geo countryGeo) {
        this.countryGeo = countryGeo;
    }
    /**
     * Auto generated value setter.
     * @param stateProvinceGeo the stateProvinceGeo to set
    */
    public void setStateProvinceGeo(Geo stateProvinceGeo) {
        this.stateProvinceGeo = stateProvinceGeo;
    }
    /**
     * Auto generated value setter.
     * @param countyGeo the countyGeo to set
    */
    public void setCountyGeo(Geo countyGeo) {
        this.countyGeo = countyGeo;
    }
    /**
     * Auto generated value setter.
     * @param postalCodeGeo the postalCodeGeo to set
    */
    public void setPostalCodeGeo(Geo postalCodeGeo) {
        this.postalCodeGeo = postalCodeGeo;
    }
    /**
     * Auto generated value setter.
     * @param billingAccounts the billingAccounts to set
    */
    public void setBillingAccounts(List<BillingAccount> billingAccounts) {
        this.billingAccounts = billingAccounts;
    }
    /**
     * Auto generated value setter.
     * @param creditCards the creditCards to set
    */
    public void setCreditCards(List<CreditCard> creditCards) {
        this.creditCards = creditCards;
    }
    /**
     * Auto generated value setter.
     * @param eftAccounts the eftAccounts to set
    */
    public void setEftAccounts(List<EftAccount> eftAccounts) {
        this.eftAccounts = eftAccounts;
    }
    /**
     * Auto generated value setter.
     * @param giftCards the giftCards to set
    */
    public void setGiftCards(List<GiftCard> giftCards) {
        this.giftCards = giftCards;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGroups the orderItemShipGroups to set
    */
    public void setOrderItemShipGroups(List<OrderItemShipGroup> orderItemShipGroups) {
        this.orderItemShipGroups = orderItemShipGroups;
    }
    /**
     * Auto generated value setter.
     * @param partyContactMeches the partyContactMeches to set
    */
    public void setPartyContactMeches(List<PartyContactMech> partyContactMeches) {
        this.partyContactMeches = partyContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param partyContactMechPurposes the partyContactMechPurposes to set
    */
    public void setPartyContactMechPurposes(List<PartyContactMechPurpose> partyContactMechPurposes) {
        this.partyContactMechPurposes = partyContactMechPurposes;
    }
    /**
     * Auto generated value setter.
     * @param postalAddressBoundarys the postalAddressBoundarys to set
    */
    public void setPostalAddressBoundarys(List<PostalAddressBoundary> postalAddressBoundarys) {
        this.postalAddressBoundarys = postalAddressBoundarys;
    }
    /**
     * Auto generated value setter.
     * @param productStoreFacilityByAddresses the productStoreFacilityByAddresses to set
    */
    public void setProductStoreFacilityByAddresses(List<ProductStoreFacilityByAddress> productStoreFacilityByAddresses) {
        this.productStoreFacilityByAddresses = productStoreFacilityByAddresses;
    }
    /**
     * Auto generated value setter.
     * @param returnHeaders the returnHeaders to set
    */
    public void setReturnHeaders(List<ReturnHeader> returnHeaders) {
        this.returnHeaders = returnHeaders;
    }
    /**
     * Auto generated value setter.
     * @param originShipments the originShipments to set
    */
    public void setOriginShipments(List<Shipment> originShipments) {
        this.originShipments = originShipments;
    }
    /**
     * Auto generated value setter.
     * @param destinationShipments the destinationShipments to set
    */
    public void setDestinationShipments(List<Shipment> destinationShipments) {
        this.destinationShipments = destinationShipments;
    }
    /**
     * Auto generated value setter.
     * @param originShipmentRouteSegments the originShipmentRouteSegments to set
    */
    public void setOriginShipmentRouteSegments(List<ShipmentRouteSegment> originShipmentRouteSegments) {
        this.originShipmentRouteSegments = originShipmentRouteSegments;
    }
    /**
     * Auto generated value setter.
     * @param destShipmentRouteSegments the destShipmentRouteSegments to set
    */
    public void setDestShipmentRouteSegments(List<ShipmentRouteSegment> destShipmentRouteSegments) {
        this.destShipmentRouteSegments = destShipmentRouteSegments;
    }
    /**
     * Auto generated value setter.
     * @param shoppingLists the shoppingLists to set
    */
    public void setShoppingLists(List<ShoppingList> shoppingLists) {
        this.shoppingLists = shoppingLists;
    }
    /**
     * Auto generated value setter.
     * @param uspsContactListSorts the uspsContactListSorts to set
    */
    public void setUspsContactListSorts(List<UspsContactListSort> uspsContactListSorts) {
        this.uspsContactListSorts = uspsContactListSorts;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyContactMeche(PartyContactMech partyContactMeche) {
        if (this.partyContactMeches == null) {
            this.partyContactMeches = new ArrayList<PartyContactMech>();
        }
        this.partyContactMeches.add(partyContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyContactMeche(PartyContactMech partyContactMeche) {
        if (this.partyContactMeches == null) {
            return;
        }
        this.partyContactMeches.remove(partyContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyContactMeche() {
        if (this.partyContactMeches == null) {
            return;
        }
        this.partyContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyContactMechPurpose(PartyContactMechPurpose partyContactMechPurpose) {
        if (this.partyContactMechPurposes == null) {
            this.partyContactMechPurposes = new ArrayList<PartyContactMechPurpose>();
        }
        this.partyContactMechPurposes.add(partyContactMechPurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyContactMechPurpose(PartyContactMechPurpose partyContactMechPurpose) {
        if (this.partyContactMechPurposes == null) {
            return;
        }
        this.partyContactMechPurposes.remove(partyContactMechPurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyContactMechPurpose() {
        if (this.partyContactMechPurposes == null) {
            return;
        }
        this.partyContactMechPurposes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPostalAddressBoundary(PostalAddressBoundary postalAddressBoundary) {
        if (this.postalAddressBoundarys == null) {
            this.postalAddressBoundarys = new ArrayList<PostalAddressBoundary>();
        }
        this.postalAddressBoundarys.add(postalAddressBoundary);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePostalAddressBoundary(PostalAddressBoundary postalAddressBoundary) {
        if (this.postalAddressBoundarys == null) {
            return;
        }
        this.postalAddressBoundarys.remove(postalAddressBoundary);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPostalAddressBoundary() {
        if (this.postalAddressBoundarys == null) {
            return;
        }
        this.postalAddressBoundarys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductStoreFacilityByAddresse(ProductStoreFacilityByAddress productStoreFacilityByAddresse) {
        if (this.productStoreFacilityByAddresses == null) {
            this.productStoreFacilityByAddresses = new ArrayList<ProductStoreFacilityByAddress>();
        }
        this.productStoreFacilityByAddresses.add(productStoreFacilityByAddresse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductStoreFacilityByAddresse(ProductStoreFacilityByAddress productStoreFacilityByAddresse) {
        if (this.productStoreFacilityByAddresses == null) {
            return;
        }
        this.productStoreFacilityByAddresses.remove(productStoreFacilityByAddresse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductStoreFacilityByAddresse() {
        if (this.productStoreFacilityByAddresses == null) {
            return;
        }
        this.productStoreFacilityByAddresses.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setContactMechId((String) mapValue.get("contactMechId"));
        setToName((String) mapValue.get("toName"));
        setAttnName((String) mapValue.get("attnName"));
        setAddress1((String) mapValue.get("address1"));
        setAddress2((String) mapValue.get("address2"));
        setDirections((String) mapValue.get("directions"));
        setCity((String) mapValue.get("city"));
        setPostalCode((String) mapValue.get("postalCode"));
        setPostalCodeExt((String) mapValue.get("postalCodeExt"));
        setCountryGeoId((String) mapValue.get("countryGeoId"));
        setStateProvinceGeoId((String) mapValue.get("stateProvinceGeoId"));
        setCountyGeoId((String) mapValue.get("countyGeoId"));
        setPostalCodeGeoId((String) mapValue.get("postalCodeGeoId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("contactMechId", getContactMechId());
        mapValue.put("toName", getToName());
        mapValue.put("attnName", getAttnName());
        mapValue.put("address1", getAddress1());
        mapValue.put("address2", getAddress2());
        mapValue.put("directions", getDirections());
        mapValue.put("city", getCity());
        mapValue.put("postalCode", getPostalCode());
        mapValue.put("postalCodeExt", getPostalCodeExt());
        mapValue.put("countryGeoId", getCountryGeoId());
        mapValue.put("stateProvinceGeoId", getStateProvinceGeoId());
        mapValue.put("countyGeoId", getCountyGeoId());
        mapValue.put("postalCodeGeoId", getPostalCodeGeoId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
