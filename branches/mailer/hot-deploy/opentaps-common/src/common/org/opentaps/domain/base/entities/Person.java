package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;

/**
 * Auto generated base entity Person.
 */
@javax.persistence.Entity
@Table(name="PERSON")
public class Person extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("partyId", "PARTY_ID");
        fields.put("salutation", "SALUTATION");
        fields.put("firstName", "FIRST_NAME");
        fields.put("middleName", "MIDDLE_NAME");
        fields.put("lastName", "LAST_NAME");
        fields.put("personalTitle", "PERSONAL_TITLE");
        fields.put("suffix", "SUFFIX");
        fields.put("nickname", "NICKNAME");
        fields.put("firstNameLocal", "FIRST_NAME_LOCAL");
        fields.put("lastNameLocal", "LAST_NAME_LOCAL");
        fields.put("memberId", "MEMBER_ID");
        fields.put("gender", "GENDER");
        fields.put("birthDate", "BIRTH_DATE");
        fields.put("height", "HEIGHT");
        fields.put("weight", "WEIGHT");
        fields.put("mothersMaidenName", "MOTHERS_MAIDEN_NAME");
        fields.put("maritalStatus", "MARITAL_STATUS");
        fields.put("socialSecurityNumber", "SOCIAL_SECURITY_NUMBER");
        fields.put("passportNumber", "PASSPORT_NUMBER");
        fields.put("passportExpireDate", "PASSPORT_EXPIRE_DATE");
        fields.put("totalYearsWorkExperience", "TOTAL_YEARS_WORK_EXPERIENCE");
        fields.put("comments", "COMMENTS");
        fields.put("employmentStatusEnumId", "EMPLOYMENT_STATUS_ENUM_ID");
        fields.put("residenceStatusEnumId", "RESIDENCE_STATUS_ENUM_ID");
        fields.put("occupation", "OCCUPATION");
        fields.put("yearsWithEmployer", "YEARS_WITH_EMPLOYER");
        fields.put("monthsWithEmployer", "MONTHS_WITH_EMPLOYER");
        fields.put("existingCustomer", "EXISTING_CUSTOMER");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("Person", fields);
}
  public static enum Fields implements EntityFieldInterface<Person> {
    partyId("partyId"),
    salutation("salutation"),
    firstName("firstName"),
    middleName("middleName"),
    lastName("lastName"),
    personalTitle("personalTitle"),
    suffix("suffix"),
    nickname("nickname"),
    firstNameLocal("firstNameLocal"),
    lastNameLocal("lastNameLocal"),
    memberId("memberId"),
    gender("gender"),
    birthDate("birthDate"),
    height("height"),
    weight("weight"),
    mothersMaidenName("mothersMaidenName"),
    maritalStatus("maritalStatus"),
    socialSecurityNumber("socialSecurityNumber"),
    passportNumber("passportNumber"),
    passportExpireDate("passportExpireDate"),
    totalYearsWorkExperience("totalYearsWorkExperience"),
    comments("comments"),
    employmentStatusEnumId("employmentStatusEnumId"),
    residenceStatusEnumId("residenceStatusEnumId"),
    occupation("occupation"),
    yearsWithEmployer("yearsWithEmployer"),
    monthsWithEmployer("monthsWithEmployer"),
    existingCustomer("existingCustomer"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Person_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Person_GEN")   
    @Id
    
    @Column(name="PARTY_ID")
    private String partyId;
    
    @Column(name="SALUTATION")
    private String salutation;
    
    @Column(name="FIRST_NAME")
    private String firstName;
    
    @Column(name="MIDDLE_NAME")
    private String middleName;
    
    @Column(name="LAST_NAME")
    private String lastName;
    
    @Column(name="PERSONAL_TITLE")
    private String personalTitle;
    
    @Column(name="SUFFIX")
    private String suffix;
    
    @Column(name="NICKNAME")
    private String nickname;
    
    @Column(name="FIRST_NAME_LOCAL")
    private String firstNameLocal;
    
    @Column(name="LAST_NAME_LOCAL")
    private String lastNameLocal;
    
    @Column(name="MEMBER_ID")
    private String memberId;
    
    @Column(name="GENDER")
    private String gender;
    
    @Column(name="BIRTH_DATE")
    private Date birthDate;
    
    @Column(name="HEIGHT")
    private BigDecimal height;
    
    @Column(name="WEIGHT")
    private BigDecimal weight;
    
    @Column(name="MOTHERS_MAIDEN_NAME")
    private String mothersMaidenName;
    
    @Column(name="MARITAL_STATUS")
    private String maritalStatus;
    
    @Column(name="SOCIAL_SECURITY_NUMBER")
    private String socialSecurityNumber;
    
    @Column(name="PASSPORT_NUMBER")
    private String passportNumber;
    
    @Column(name="PASSPORT_EXPIRE_DATE")
    private Date passportExpireDate;
    
    @Column(name="TOTAL_YEARS_WORK_EXPERIENCE")
    private BigDecimal totalYearsWorkExperience;
    
    @Column(name="COMMENTS")
    private String comments;
    
    @Column(name="EMPLOYMENT_STATUS_ENUM_ID")
    private String employmentStatusEnumId;
    
    @Column(name="RESIDENCE_STATUS_ENUM_ID")
    private String residenceStatusEnumId;
    
    @Column(name="OCCUPATION")
    private String occupation;
    
    @Column(name="YEARS_WITH_EMPLOYER")
    private Long yearsWithEmployer;
    
    @Column(name="MONTHS_WITH_EMPLOYER")
    private Long monthsWithEmployer;
    
    @Column(name="EXISTING_CUSTOMER")
    private String existingCustomer;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party party = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="EMPLOYMENT_STATUS_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration employmentStatusEnumeration = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="RESIDENCE_STATUS_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration residenceStatusEnumeration = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="person", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PARTY_ID")
    private List<PartyContactMech> partyContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="person", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PARTY_ID")
    private List<PartyContactMechPurpose> partyContactMechPurposes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="person", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PARTY_ID")
    private List<ProdCatalogRole> prodCatalogRoles = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="person", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PARTY_ID")
    private List<ProductStoreRole> productStoreRoles = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID_TO")
    private List<Shipment> toShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID_FROM")
    private List<Shipment> fromShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CARRIER_PARTY_ID")
    private List<ShipmentRouteSegment> carrierShipmentRouteSegments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID")
    private List<UserLogin> userLogins = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="person", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PARTY_ID")
    private List<WebSiteRole> webSiteRoles = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="person", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PARTY_ID")
    private List<WorkEffortPartyAssignment> workEffortPartyAssignments = null;

  /**
   * Default constructor.
   */
  public Person() {
      super();
      this.baseEntityName = "Person";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("partyId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Person(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param salutation the salutation to set
     */
    public void setSalutation(String salutation) {
        this.salutation = salutation;
    }
    /**
     * Auto generated value setter.
     * @param firstName the firstName to set
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }
    /**
     * Auto generated value setter.
     * @param middleName the middleName to set
     */
    public void setMiddleName(String middleName) {
        this.middleName = middleName;
    }
    /**
     * Auto generated value setter.
     * @param lastName the lastName to set
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }
    /**
     * Auto generated value setter.
     * @param personalTitle the personalTitle to set
     */
    public void setPersonalTitle(String personalTitle) {
        this.personalTitle = personalTitle;
    }
    /**
     * Auto generated value setter.
     * @param suffix the suffix to set
     */
    public void setSuffix(String suffix) {
        this.suffix = suffix;
    }
    /**
     * Auto generated value setter.
     * @param nickname the nickname to set
     */
    public void setNickname(String nickname) {
        this.nickname = nickname;
    }
    /**
     * Auto generated value setter.
     * @param firstNameLocal the firstNameLocal to set
     */
    public void setFirstNameLocal(String firstNameLocal) {
        this.firstNameLocal = firstNameLocal;
    }
    /**
     * Auto generated value setter.
     * @param lastNameLocal the lastNameLocal to set
     */
    public void setLastNameLocal(String lastNameLocal) {
        this.lastNameLocal = lastNameLocal;
    }
    /**
     * Auto generated value setter.
     * @param memberId the memberId to set
     */
    public void setMemberId(String memberId) {
        this.memberId = memberId;
    }
    /**
     * Auto generated value setter.
     * @param gender the gender to set
     */
    public void setGender(String gender) {
        this.gender = gender;
    }
    /**
     * Auto generated value setter.
     * @param birthDate the birthDate to set
     */
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }
    /**
     * Auto generated value setter.
     * @param height the height to set
     */
    public void setHeight(BigDecimal height) {
        this.height = height;
    }
    /**
     * Auto generated value setter.
     * @param weight the weight to set
     */
    public void setWeight(BigDecimal weight) {
        this.weight = weight;
    }
    /**
     * Auto generated value setter.
     * @param mothersMaidenName the mothersMaidenName to set
     */
    public void setMothersMaidenName(String mothersMaidenName) {
        this.mothersMaidenName = mothersMaidenName;
    }
    /**
     * Auto generated value setter.
     * @param maritalStatus the maritalStatus to set
     */
    public void setMaritalStatus(String maritalStatus) {
        this.maritalStatus = maritalStatus;
    }
    /**
     * Auto generated value setter.
     * @param socialSecurityNumber the socialSecurityNumber to set
     */
    public void setSocialSecurityNumber(String socialSecurityNumber) {
        this.socialSecurityNumber = socialSecurityNumber;
    }
    /**
     * Auto generated value setter.
     * @param passportNumber the passportNumber to set
     */
    public void setPassportNumber(String passportNumber) {
        this.passportNumber = passportNumber;
    }
    /**
     * Auto generated value setter.
     * @param passportExpireDate the passportExpireDate to set
     */
    public void setPassportExpireDate(Date passportExpireDate) {
        this.passportExpireDate = passportExpireDate;
    }
    /**
     * Auto generated value setter.
     * @param totalYearsWorkExperience the totalYearsWorkExperience to set
     */
    public void setTotalYearsWorkExperience(BigDecimal totalYearsWorkExperience) {
        this.totalYearsWorkExperience = totalYearsWorkExperience;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param employmentStatusEnumId the employmentStatusEnumId to set
     */
    public void setEmploymentStatusEnumId(String employmentStatusEnumId) {
        this.employmentStatusEnumId = employmentStatusEnumId;
    }
    /**
     * Auto generated value setter.
     * @param residenceStatusEnumId the residenceStatusEnumId to set
     */
    public void setResidenceStatusEnumId(String residenceStatusEnumId) {
        this.residenceStatusEnumId = residenceStatusEnumId;
    }
    /**
     * Auto generated value setter.
     * @param occupation the occupation to set
     */
    public void setOccupation(String occupation) {
        this.occupation = occupation;
    }
    /**
     * Auto generated value setter.
     * @param yearsWithEmployer the yearsWithEmployer to set
     */
    public void setYearsWithEmployer(Long yearsWithEmployer) {
        this.yearsWithEmployer = yearsWithEmployer;
    }
    /**
     * Auto generated value setter.
     * @param monthsWithEmployer the monthsWithEmployer to set
     */
    public void setMonthsWithEmployer(Long monthsWithEmployer) {
        this.monthsWithEmployer = monthsWithEmployer;
    }
    /**
     * Auto generated value setter.
     * @param existingCustomer the existingCustomer to set
     */
    public void setExistingCustomer(String existingCustomer) {
        this.existingCustomer = existingCustomer;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalutation() {
        return this.salutation;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFirstName() {
        return this.firstName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMiddleName() {
        return this.middleName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastName() {
        return this.lastName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPersonalTitle() {
        return this.personalTitle;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSuffix() {
        return this.suffix;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNickname() {
        return this.nickname;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFirstNameLocal() {
        return this.firstNameLocal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastNameLocal() {
        return this.lastNameLocal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMemberId() {
        return this.memberId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGender() {
        return this.gender;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Date</code>
     */
    public Date getBirthDate() {
        return this.birthDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getHeight() {
        return this.height;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getWeight() {
        return this.weight;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMothersMaidenName() {
        return this.mothersMaidenName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMaritalStatus() {
        return this.maritalStatus;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSocialSecurityNumber() {
        return this.socialSecurityNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPassportNumber() {
        return this.passportNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Date</code>
     */
    public Date getPassportExpireDate() {
        return this.passportExpireDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getTotalYearsWorkExperience() {
        return this.totalYearsWorkExperience;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEmploymentStatusEnumId() {
        return this.employmentStatusEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getResidenceStatusEnumId() {
        return this.residenceStatusEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOccupation() {
        return this.occupation;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getYearsWithEmployer() {
        return this.yearsWithEmployer;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getMonthsWithEmployer() {
        return this.monthsWithEmployer;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExistingCustomer() {
        return this.existingCustomer;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>EmploymentStatusEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getEmploymentStatusEnumeration() throws RepositoryException {
        if (this.employmentStatusEnumeration == null) {
            this.employmentStatusEnumeration = getRelatedOne(Enumeration.class, "EmploymentStatusEnumeration");
        }
        return this.employmentStatusEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>ResidenceStatusEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getResidenceStatusEnumeration() throws RepositoryException {
        if (this.residenceStatusEnumeration == null) {
            this.residenceStatusEnumeration = getRelatedOne(Enumeration.class, "ResidenceStatusEnumeration");
        }
        return this.residenceStatusEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>PartyContactMech</code> by the relation named <code>PartyContactMech</code>.
     * @return the list of <code>PartyContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContactMech> getPartyContactMeches() throws RepositoryException {
        if (this.partyContactMeches == null) {
            this.partyContactMeches = getRelated(PartyContactMech.class, "PartyContactMech");
        }
        return this.partyContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>PartyContactMechPurpose</code> by the relation named <code>PartyContactMechPurpose</code>.
     * @return the list of <code>PartyContactMechPurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContactMechPurpose> getPartyContactMechPurposes() throws RepositoryException {
        if (this.partyContactMechPurposes == null) {
            this.partyContactMechPurposes = getRelated(PartyContactMechPurpose.class, "PartyContactMechPurpose");
        }
        return this.partyContactMechPurposes;
    }
    /**
     * Auto generated method that gets the related <code>ProdCatalogRole</code> by the relation named <code>ProdCatalogRole</code>.
     * @return the list of <code>ProdCatalogRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProdCatalogRole> getProdCatalogRoles() throws RepositoryException {
        if (this.prodCatalogRoles == null) {
            this.prodCatalogRoles = getRelated(ProdCatalogRole.class, "ProdCatalogRole");
        }
        return this.prodCatalogRoles;
    }
    /**
     * Auto generated method that gets the related <code>ProductStoreRole</code> by the relation named <code>ProductStoreRole</code>.
     * @return the list of <code>ProductStoreRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStoreRole> getProductStoreRoles() throws RepositoryException {
        if (this.productStoreRoles == null) {
            this.productStoreRoles = getRelated(ProductStoreRole.class, "ProductStoreRole");
        }
        return this.productStoreRoles;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>ToShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getToShipments() throws RepositoryException {
        if (this.toShipments == null) {
            this.toShipments = getRelated(Shipment.class, "ToShipment");
        }
        return this.toShipments;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>FromShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getFromShipments() throws RepositoryException {
        if (this.fromShipments == null) {
            this.fromShipments = getRelated(Shipment.class, "FromShipment");
        }
        return this.fromShipments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentRouteSegment</code> by the relation named <code>CarrierShipmentRouteSegment</code>.
     * @return the list of <code>ShipmentRouteSegment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentRouteSegment> getCarrierShipmentRouteSegments() throws RepositoryException {
        if (this.carrierShipmentRouteSegments == null) {
            this.carrierShipmentRouteSegments = getRelated(ShipmentRouteSegment.class, "CarrierShipmentRouteSegment");
        }
        return this.carrierShipmentRouteSegments;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>UserLogin</code>.
     * @return the list of <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UserLogin> getUserLogins() throws RepositoryException {
        if (this.userLogins == null) {
            this.userLogins = getRelated(UserLogin.class, "UserLogin");
        }
        return this.userLogins;
    }
    /**
     * Auto generated method that gets the related <code>WebSiteRole</code> by the relation named <code>WebSiteRole</code>.
     * @return the list of <code>WebSiteRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WebSiteRole> getWebSiteRoles() throws RepositoryException {
        if (this.webSiteRoles == null) {
            this.webSiteRoles = getRelated(WebSiteRole.class, "WebSiteRole");
        }
        return this.webSiteRoles;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortPartyAssignment</code> by the relation named <code>WorkEffortPartyAssignment</code>.
     * @return the list of <code>WorkEffortPartyAssignment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortPartyAssignment> getWorkEffortPartyAssignments() throws RepositoryException {
        if (this.workEffortPartyAssignments == null) {
            this.workEffortPartyAssignments = getRelated(WorkEffortPartyAssignment.class, "WorkEffortPartyAssignment");
        }
        return this.workEffortPartyAssignments;
    }

    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param employmentStatusEnumeration the employmentStatusEnumeration to set
    */
    public void setEmploymentStatusEnumeration(Enumeration employmentStatusEnumeration) {
        this.employmentStatusEnumeration = employmentStatusEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param residenceStatusEnumeration the residenceStatusEnumeration to set
    */
    public void setResidenceStatusEnumeration(Enumeration residenceStatusEnumeration) {
        this.residenceStatusEnumeration = residenceStatusEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param partyContactMeches the partyContactMeches to set
    */
    public void setPartyContactMeches(List<PartyContactMech> partyContactMeches) {
        this.partyContactMeches = partyContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param partyContactMechPurposes the partyContactMechPurposes to set
    */
    public void setPartyContactMechPurposes(List<PartyContactMechPurpose> partyContactMechPurposes) {
        this.partyContactMechPurposes = partyContactMechPurposes;
    }
    /**
     * Auto generated value setter.
     * @param prodCatalogRoles the prodCatalogRoles to set
    */
    public void setProdCatalogRoles(List<ProdCatalogRole> prodCatalogRoles) {
        this.prodCatalogRoles = prodCatalogRoles;
    }
    /**
     * Auto generated value setter.
     * @param productStoreRoles the productStoreRoles to set
    */
    public void setProductStoreRoles(List<ProductStoreRole> productStoreRoles) {
        this.productStoreRoles = productStoreRoles;
    }
    /**
     * Auto generated value setter.
     * @param toShipments the toShipments to set
    */
    public void setToShipments(List<Shipment> toShipments) {
        this.toShipments = toShipments;
    }
    /**
     * Auto generated value setter.
     * @param fromShipments the fromShipments to set
    */
    public void setFromShipments(List<Shipment> fromShipments) {
        this.fromShipments = fromShipments;
    }
    /**
     * Auto generated value setter.
     * @param carrierShipmentRouteSegments the carrierShipmentRouteSegments to set
    */
    public void setCarrierShipmentRouteSegments(List<ShipmentRouteSegment> carrierShipmentRouteSegments) {
        this.carrierShipmentRouteSegments = carrierShipmentRouteSegments;
    }
    /**
     * Auto generated value setter.
     * @param userLogins the userLogins to set
    */
    public void setUserLogins(List<UserLogin> userLogins) {
        this.userLogins = userLogins;
    }
    /**
     * Auto generated value setter.
     * @param webSiteRoles the webSiteRoles to set
    */
    public void setWebSiteRoles(List<WebSiteRole> webSiteRoles) {
        this.webSiteRoles = webSiteRoles;
    }
    /**
     * Auto generated value setter.
     * @param workEffortPartyAssignments the workEffortPartyAssignments to set
    */
    public void setWorkEffortPartyAssignments(List<WorkEffortPartyAssignment> workEffortPartyAssignments) {
        this.workEffortPartyAssignments = workEffortPartyAssignments;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyContactMeche(PartyContactMech partyContactMeche) {
        if (this.partyContactMeches == null) {
            this.partyContactMeches = new ArrayList<PartyContactMech>();
        }
        this.partyContactMeches.add(partyContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyContactMeche(PartyContactMech partyContactMeche) {
        if (this.partyContactMeches == null) {
            return;
        }
        this.partyContactMeches.remove(partyContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyContactMeche() {
        if (this.partyContactMeches == null) {
            return;
        }
        this.partyContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyContactMechPurpose(PartyContactMechPurpose partyContactMechPurpose) {
        if (this.partyContactMechPurposes == null) {
            this.partyContactMechPurposes = new ArrayList<PartyContactMechPurpose>();
        }
        this.partyContactMechPurposes.add(partyContactMechPurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyContactMechPurpose(PartyContactMechPurpose partyContactMechPurpose) {
        if (this.partyContactMechPurposes == null) {
            return;
        }
        this.partyContactMechPurposes.remove(partyContactMechPurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyContactMechPurpose() {
        if (this.partyContactMechPurposes == null) {
            return;
        }
        this.partyContactMechPurposes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProdCatalogRole(ProdCatalogRole prodCatalogRole) {
        if (this.prodCatalogRoles == null) {
            this.prodCatalogRoles = new ArrayList<ProdCatalogRole>();
        }
        this.prodCatalogRoles.add(prodCatalogRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProdCatalogRole(ProdCatalogRole prodCatalogRole) {
        if (this.prodCatalogRoles == null) {
            return;
        }
        this.prodCatalogRoles.remove(prodCatalogRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProdCatalogRole() {
        if (this.prodCatalogRoles == null) {
            return;
        }
        this.prodCatalogRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductStoreRole(ProductStoreRole productStoreRole) {
        if (this.productStoreRoles == null) {
            this.productStoreRoles = new ArrayList<ProductStoreRole>();
        }
        this.productStoreRoles.add(productStoreRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductStoreRole(ProductStoreRole productStoreRole) {
        if (this.productStoreRoles == null) {
            return;
        }
        this.productStoreRoles.remove(productStoreRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductStoreRole() {
        if (this.productStoreRoles == null) {
            return;
        }
        this.productStoreRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWebSiteRole(WebSiteRole webSiteRole) {
        if (this.webSiteRoles == null) {
            this.webSiteRoles = new ArrayList<WebSiteRole>();
        }
        this.webSiteRoles.add(webSiteRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWebSiteRole(WebSiteRole webSiteRole) {
        if (this.webSiteRoles == null) {
            return;
        }
        this.webSiteRoles.remove(webSiteRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWebSiteRole() {
        if (this.webSiteRoles == null) {
            return;
        }
        this.webSiteRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortPartyAssignment(WorkEffortPartyAssignment workEffortPartyAssignment) {
        if (this.workEffortPartyAssignments == null) {
            this.workEffortPartyAssignments = new ArrayList<WorkEffortPartyAssignment>();
        }
        this.workEffortPartyAssignments.add(workEffortPartyAssignment);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortPartyAssignment(WorkEffortPartyAssignment workEffortPartyAssignment) {
        if (this.workEffortPartyAssignments == null) {
            return;
        }
        this.workEffortPartyAssignments.remove(workEffortPartyAssignment);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortPartyAssignment() {
        if (this.workEffortPartyAssignments == null) {
            return;
        }
        this.workEffortPartyAssignments.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPartyId((String) mapValue.get("partyId"));
        setSalutation((String) mapValue.get("salutation"));
        setFirstName((String) mapValue.get("firstName"));
        setMiddleName((String) mapValue.get("middleName"));
        setLastName((String) mapValue.get("lastName"));
        setPersonalTitle((String) mapValue.get("personalTitle"));
        setSuffix((String) mapValue.get("suffix"));
        setNickname((String) mapValue.get("nickname"));
        setFirstNameLocal((String) mapValue.get("firstNameLocal"));
        setLastNameLocal((String) mapValue.get("lastNameLocal"));
        setMemberId((String) mapValue.get("memberId"));
        setGender((String) mapValue.get("gender"));
        setBirthDate((Date) mapValue.get("birthDate"));
        setHeight(convertToBigDecimal(mapValue.get("height")));
        setWeight(convertToBigDecimal(mapValue.get("weight")));
        setMothersMaidenName((String) mapValue.get("mothersMaidenName"));
        setMaritalStatus((String) mapValue.get("maritalStatus"));
        setSocialSecurityNumber((String) mapValue.get("socialSecurityNumber"));
        setPassportNumber((String) mapValue.get("passportNumber"));
        setPassportExpireDate((Date) mapValue.get("passportExpireDate"));
        setTotalYearsWorkExperience(convertToBigDecimal(mapValue.get("totalYearsWorkExperience")));
        setComments((String) mapValue.get("comments"));
        setEmploymentStatusEnumId((String) mapValue.get("employmentStatusEnumId"));
        setResidenceStatusEnumId((String) mapValue.get("residenceStatusEnumId"));
        setOccupation((String) mapValue.get("occupation"));
        setYearsWithEmployer((Long) mapValue.get("yearsWithEmployer"));
        setMonthsWithEmployer((Long) mapValue.get("monthsWithEmployer"));
        setExistingCustomer((String) mapValue.get("existingCustomer"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("partyId", getPartyId());
        mapValue.put("salutation", getSalutation());
        mapValue.put("firstName", getFirstName());
        mapValue.put("middleName", getMiddleName());
        mapValue.put("lastName", getLastName());
        mapValue.put("personalTitle", getPersonalTitle());
        mapValue.put("suffix", getSuffix());
        mapValue.put("nickname", getNickname());
        mapValue.put("firstNameLocal", getFirstNameLocal());
        mapValue.put("lastNameLocal", getLastNameLocal());
        mapValue.put("memberId", getMemberId());
        mapValue.put("gender", getGender());
        mapValue.put("birthDate", getBirthDate());
        mapValue.put("height", getHeight());
        mapValue.put("weight", getWeight());
        mapValue.put("mothersMaidenName", getMothersMaidenName());
        mapValue.put("maritalStatus", getMaritalStatus());
        mapValue.put("socialSecurityNumber", getSocialSecurityNumber());
        mapValue.put("passportNumber", getPassportNumber());
        mapValue.put("passportExpireDate", getPassportExpireDate());
        mapValue.put("totalYearsWorkExperience", getTotalYearsWorkExperience());
        mapValue.put("comments", getComments());
        mapValue.put("employmentStatusEnumId", getEmploymentStatusEnumId());
        mapValue.put("residenceStatusEnumId", getResidenceStatusEnumId());
        mapValue.put("occupation", getOccupation());
        mapValue.put("yearsWithEmployer", getYearsWithEmployer());
        mapValue.put("monthsWithEmployer", getMonthsWithEmployer());
        mapValue.put("existingCustomer", getExistingCustomer());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
