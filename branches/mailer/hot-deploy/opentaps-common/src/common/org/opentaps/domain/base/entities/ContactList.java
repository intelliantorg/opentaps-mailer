package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ContactList.
 */
@javax.persistence.Entity
@Table(name="CONTACT_LIST")
public class ContactList extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("contactListId", "CONTACT_LIST_ID");
        fields.put("contactListTypeId", "CONTACT_LIST_TYPE_ID");
        fields.put("contactMechTypeId", "CONTACT_MECH_TYPE_ID");
        fields.put("marketingCampaignId", "MARKETING_CAMPAIGN_ID");
        fields.put("contactListName", "CONTACT_LIST_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("comments", "COMMENTS");
        fields.put("isPublic", "IS_PUBLIC");
        fields.put("singleUse", "SINGLE_USE");
        fields.put("ownerPartyId", "OWNER_PARTY_ID");
        fields.put("verifyEmailFrom", "VERIFY_EMAIL_FROM");
        fields.put("verifyEmailScreen", "VERIFY_EMAIL_SCREEN");
        fields.put("verifyEmailSubject", "VERIFY_EMAIL_SUBJECT");
        fields.put("verifyEmailWebSiteId", "VERIFY_EMAIL_WEB_SITE_ID");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("parentContactListId", "PARENT_CONTACT_LIST_ID");
fieldMapColumns.put("ContactList", fields);
}
  public static enum Fields implements EntityFieldInterface<ContactList> {
    contactListId("contactListId"),
    contactListTypeId("contactListTypeId"),
    contactMechTypeId("contactMechTypeId"),
    marketingCampaignId("marketingCampaignId"),
    contactListName("contactListName"),
    description("description"),
    comments("comments"),
    isPublic("isPublic"),
    singleUse("singleUse"),
    ownerPartyId("ownerPartyId"),
    verifyEmailFrom("verifyEmailFrom"),
    verifyEmailScreen("verifyEmailScreen"),
    verifyEmailSubject("verifyEmailSubject"),
    verifyEmailWebSiteId("verifyEmailWebSiteId"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    parentContactListId("parentContactListId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="ContactList_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="ContactList_GEN")   
    @Id
    
    @Column(name="CONTACT_LIST_ID")
    private String contactListId;
    
    @Column(name="CONTACT_LIST_TYPE_ID")
    private String contactListTypeId;
    
    @Column(name="CONTACT_MECH_TYPE_ID")
    private String contactMechTypeId;
    
    @Column(name="MARKETING_CAMPAIGN_ID")
    private String marketingCampaignId;
    
    @Column(name="CONTACT_LIST_NAME")
    private String contactListName;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="COMMENTS")
    private String comments;
    
    @Column(name="IS_PUBLIC")
    private String isPublic;
    
    @Column(name="SINGLE_USE")
    private String singleUse;
    
    @Column(name="OWNER_PARTY_ID")
    private String ownerPartyId;
    
    @Column(name="VERIFY_EMAIL_FROM")
    private String verifyEmailFrom;
    
    @Column(name="VERIFY_EMAIL_SCREEN")
    private String verifyEmailScreen;
    
    @Column(name="VERIFY_EMAIL_SUBJECT")
    private String verifyEmailSubject;
    
    @Column(name="VERIFY_EMAIL_WEB_SITE_ID")
    private String verifyEmailWebSiteId;
    
    @Column(name="CREATED_BY_USER_LOGIN")
    private String createdByUserLogin;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="PARENT_CONTACT_LIST_ID")
    private String parentContactListId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="MARKETING_CAMPAIGN_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private MarketingCampaign marketingCampaign = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_LIST_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactListType contactListType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactMechType contactMechType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY_USER_LOGIN", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin relatedCreatedByUserLogin = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="LAST_MODIFIED_BY_USER_LOGIN", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin relatedLastModifiedByUserLogin = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="OWNER_PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party ownerParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_CONTACT_LIST_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactList parentContactList = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_LIST_ID")
    private List<CommunicationEvent> communicationEvents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_CONTACT_LIST_ID")
    private List<ContactList> childContactLists = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactList", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_LIST_ID")
    private List<ContactListCommStatus> contactListCommStatuses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactList", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_LIST_ID")
    private List<ContactListParty> contactListPartys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_LIST_ID")
    private List<MarketingCampaignContactList> marketingCampaignContactLists = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_LIST_ID")
    private List<TrackingCode> trackingCodes = null;

  /**
   * Default constructor.
   */
  public ContactList() {
      super();
      this.baseEntityName = "ContactList";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("contactListId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ContactList(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param contactListId the contactListId to set
     */
    public void setContactListId(String contactListId) {
        this.contactListId = contactListId;
    }
    /**
     * Auto generated value setter.
     * @param contactListTypeId the contactListTypeId to set
     */
    public void setContactListTypeId(String contactListTypeId) {
        this.contactListTypeId = contactListTypeId;
    }
    /**
     * Auto generated value setter.
     * @param contactMechTypeId the contactMechTypeId to set
     */
    public void setContactMechTypeId(String contactMechTypeId) {
        this.contactMechTypeId = contactMechTypeId;
    }
    /**
     * Auto generated value setter.
     * @param marketingCampaignId the marketingCampaignId to set
     */
    public void setMarketingCampaignId(String marketingCampaignId) {
        this.marketingCampaignId = marketingCampaignId;
    }
    /**
     * Auto generated value setter.
     * @param contactListName the contactListName to set
     */
    public void setContactListName(String contactListName) {
        this.contactListName = contactListName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param isPublic the isPublic to set
     */
    public void setIsPublic(String isPublic) {
        this.isPublic = isPublic;
    }
    /**
     * Auto generated value setter.
     * @param singleUse the singleUse to set
     */
    public void setSingleUse(String singleUse) {
        this.singleUse = singleUse;
    }
    /**
     * Auto generated value setter.
     * @param ownerPartyId the ownerPartyId to set
     */
    public void setOwnerPartyId(String ownerPartyId) {
        this.ownerPartyId = ownerPartyId;
    }
    /**
     * Auto generated value setter.
     * @param verifyEmailFrom the verifyEmailFrom to set
     */
    public void setVerifyEmailFrom(String verifyEmailFrom) {
        this.verifyEmailFrom = verifyEmailFrom;
    }
    /**
     * Auto generated value setter.
     * @param verifyEmailScreen the verifyEmailScreen to set
     */
    public void setVerifyEmailScreen(String verifyEmailScreen) {
        this.verifyEmailScreen = verifyEmailScreen;
    }
    /**
     * Auto generated value setter.
     * @param verifyEmailSubject the verifyEmailSubject to set
     */
    public void setVerifyEmailSubject(String verifyEmailSubject) {
        this.verifyEmailSubject = verifyEmailSubject;
    }
    /**
     * Auto generated value setter.
     * @param verifyEmailWebSiteId the verifyEmailWebSiteId to set
     */
    public void setVerifyEmailWebSiteId(String verifyEmailWebSiteId) {
        this.verifyEmailWebSiteId = verifyEmailWebSiteId;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param parentContactListId the parentContactListId to set
     */
    public void setParentContactListId(String parentContactListId) {
        this.parentContactListId = parentContactListId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactListId() {
        return this.contactListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactListTypeId() {
        return this.contactListTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechTypeId() {
        return this.contactMechTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMarketingCampaignId() {
        return this.marketingCampaignId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactListName() {
        return this.contactListName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsPublic() {
        return this.isPublic;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSingleUse() {
        return this.singleUse;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOwnerPartyId() {
        return this.ownerPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVerifyEmailFrom() {
        return this.verifyEmailFrom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVerifyEmailScreen() {
        return this.verifyEmailScreen;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVerifyEmailSubject() {
        return this.verifyEmailSubject;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVerifyEmailWebSiteId() {
        return this.verifyEmailWebSiteId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParentContactListId() {
        return this.parentContactListId;
    }

    /**
     * Auto generated method that gets the related <code>MarketingCampaign</code> by the relation named <code>MarketingCampaign</code>.
     * @return the <code>MarketingCampaign</code>
     * @throws RepositoryException if an error occurs
     */
    public MarketingCampaign getMarketingCampaign() throws RepositoryException {
        if (this.marketingCampaign == null) {
            this.marketingCampaign = getRelatedOne(MarketingCampaign.class, "MarketingCampaign");
        }
        return this.marketingCampaign;
    }
    /**
     * Auto generated method that gets the related <code>ContactListType</code> by the relation named <code>ContactListType</code>.
     * @return the <code>ContactListType</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactListType getContactListType() throws RepositoryException {
        if (this.contactListType == null) {
            this.contactListType = getRelatedOne(ContactListType.class, "ContactListType");
        }
        return this.contactListType;
    }
    /**
     * Auto generated method that gets the related <code>ContactMechType</code> by the relation named <code>ContactMechType</code>.
     * @return the <code>ContactMechType</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMechType getContactMechType() throws RepositoryException {
        if (this.contactMechType == null) {
            this.contactMechType = getRelatedOne(ContactMechType.class, "ContactMechType");
        }
        return this.contactMechType;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>CreatedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedCreatedByUserLogin() throws RepositoryException {
        if (this.relatedCreatedByUserLogin == null) {
            this.relatedCreatedByUserLogin = getRelatedOne(UserLogin.class, "CreatedByUserLogin");
        }
        return this.relatedCreatedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>LastModifiedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedLastModifiedByUserLogin() throws RepositoryException {
        if (this.relatedLastModifiedByUserLogin == null) {
            this.relatedLastModifiedByUserLogin = getRelatedOne(UserLogin.class, "LastModifiedByUserLogin");
        }
        return this.relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>OwnerParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getOwnerParty() throws RepositoryException {
        if (this.ownerParty == null) {
            this.ownerParty = getRelatedOne(Party.class, "OwnerParty");
        }
        return this.ownerParty;
    }
    /**
     * Auto generated method that gets the related <code>ContactList</code> by the relation named <code>ParentContactList</code>.
     * @return the <code>ContactList</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactList getParentContactList() throws RepositoryException {
        if (this.parentContactList == null) {
            this.parentContactList = getRelatedOne(ContactList.class, "ParentContactList");
        }
        return this.parentContactList;
    }
    /**
     * Auto generated method that gets the related <code>CommunicationEvent</code> by the relation named <code>CommunicationEvent</code>.
     * @return the list of <code>CommunicationEvent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommunicationEvent> getCommunicationEvents() throws RepositoryException {
        if (this.communicationEvents == null) {
            this.communicationEvents = getRelated(CommunicationEvent.class, "CommunicationEvent");
        }
        return this.communicationEvents;
    }
    /**
     * Auto generated method that gets the related <code>ContactList</code> by the relation named <code>ChildContactList</code>.
     * @return the list of <code>ContactList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactList> getChildContactLists() throws RepositoryException {
        if (this.childContactLists == null) {
            this.childContactLists = getRelated(ContactList.class, "ChildContactList");
        }
        return this.childContactLists;
    }
    /**
     * Auto generated method that gets the related <code>ContactListCommStatus</code> by the relation named <code>ContactListCommStatus</code>.
     * @return the list of <code>ContactListCommStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactListCommStatus> getContactListCommStatuses() throws RepositoryException {
        if (this.contactListCommStatuses == null) {
            this.contactListCommStatuses = getRelated(ContactListCommStatus.class, "ContactListCommStatus");
        }
        return this.contactListCommStatuses;
    }
    /**
     * Auto generated method that gets the related <code>ContactListParty</code> by the relation named <code>ContactListParty</code>.
     * @return the list of <code>ContactListParty</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactListParty> getContactListPartys() throws RepositoryException {
        if (this.contactListPartys == null) {
            this.contactListPartys = getRelated(ContactListParty.class, "ContactListParty");
        }
        return this.contactListPartys;
    }
    /**
     * Auto generated method that gets the related <code>MarketingCampaignContactList</code> by the relation named <code>MarketingCampaignContactList</code>.
     * @return the list of <code>MarketingCampaignContactList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends MarketingCampaignContactList> getMarketingCampaignContactLists() throws RepositoryException {
        if (this.marketingCampaignContactLists == null) {
            this.marketingCampaignContactLists = getRelated(MarketingCampaignContactList.class, "MarketingCampaignContactList");
        }
        return this.marketingCampaignContactLists;
    }
    /**
     * Auto generated method that gets the related <code>TrackingCode</code> by the relation named <code>TrackingCode</code>.
     * @return the list of <code>TrackingCode</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TrackingCode> getTrackingCodes() throws RepositoryException {
        if (this.trackingCodes == null) {
            this.trackingCodes = getRelated(TrackingCode.class, "TrackingCode");
        }
        return this.trackingCodes;
    }

    /**
     * Auto generated value setter.
     * @param marketingCampaign the marketingCampaign to set
    */
    public void setMarketingCampaign(MarketingCampaign marketingCampaign) {
        this.marketingCampaign = marketingCampaign;
    }
    /**
     * Auto generated value setter.
     * @param contactListType the contactListType to set
    */
    public void setContactListType(ContactListType contactListType) {
        this.contactListType = contactListType;
    }
    /**
     * Auto generated value setter.
     * @param contactMechType the contactMechType to set
    */
    public void setContactMechType(ContactMechType contactMechType) {
        this.contactMechType = contactMechType;
    }
    /**
     * Auto generated value setter.
     * @param relatedCreatedByUserLogin the relatedCreatedByUserLogin to set
    */
    public void setRelatedCreatedByUserLogin(UserLogin relatedCreatedByUserLogin) {
        this.relatedCreatedByUserLogin = relatedCreatedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param relatedLastModifiedByUserLogin the relatedLastModifiedByUserLogin to set
    */
    public void setRelatedLastModifiedByUserLogin(UserLogin relatedLastModifiedByUserLogin) {
        this.relatedLastModifiedByUserLogin = relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param ownerParty the ownerParty to set
    */
    public void setOwnerParty(Party ownerParty) {
        this.ownerParty = ownerParty;
    }
    /**
     * Auto generated value setter.
     * @param parentContactList the parentContactList to set
    */
    public void setParentContactList(ContactList parentContactList) {
        this.parentContactList = parentContactList;
    }
    /**
     * Auto generated value setter.
     * @param communicationEvents the communicationEvents to set
    */
    public void setCommunicationEvents(List<CommunicationEvent> communicationEvents) {
        this.communicationEvents = communicationEvents;
    }
    /**
     * Auto generated value setter.
     * @param childContactLists the childContactLists to set
    */
    public void setChildContactLists(List<ContactList> childContactLists) {
        this.childContactLists = childContactLists;
    }
    /**
     * Auto generated value setter.
     * @param contactListCommStatuses the contactListCommStatuses to set
    */
    public void setContactListCommStatuses(List<ContactListCommStatus> contactListCommStatuses) {
        this.contactListCommStatuses = contactListCommStatuses;
    }
    /**
     * Auto generated value setter.
     * @param contactListPartys the contactListPartys to set
    */
    public void setContactListPartys(List<ContactListParty> contactListPartys) {
        this.contactListPartys = contactListPartys;
    }
    /**
     * Auto generated value setter.
     * @param marketingCampaignContactLists the marketingCampaignContactLists to set
    */
    public void setMarketingCampaignContactLists(List<MarketingCampaignContactList> marketingCampaignContactLists) {
        this.marketingCampaignContactLists = marketingCampaignContactLists;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodes the trackingCodes to set
    */
    public void setTrackingCodes(List<TrackingCode> trackingCodes) {
        this.trackingCodes = trackingCodes;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addContactListCommStatuse(ContactListCommStatus contactListCommStatuse) {
        if (this.contactListCommStatuses == null) {
            this.contactListCommStatuses = new ArrayList<ContactListCommStatus>();
        }
        this.contactListCommStatuses.add(contactListCommStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContactListCommStatuse(ContactListCommStatus contactListCommStatuse) {
        if (this.contactListCommStatuses == null) {
            return;
        }
        this.contactListCommStatuses.remove(contactListCommStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContactListCommStatuse() {
        if (this.contactListCommStatuses == null) {
            return;
        }
        this.contactListCommStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addContactListParty(ContactListParty contactListParty) {
        if (this.contactListPartys == null) {
            this.contactListPartys = new ArrayList<ContactListParty>();
        }
        this.contactListPartys.add(contactListParty);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContactListParty(ContactListParty contactListParty) {
        if (this.contactListPartys == null) {
            return;
        }
        this.contactListPartys.remove(contactListParty);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContactListParty() {
        if (this.contactListPartys == null) {
            return;
        }
        this.contactListPartys.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setContactListId((String) mapValue.get("contactListId"));
        setContactListTypeId((String) mapValue.get("contactListTypeId"));
        setContactMechTypeId((String) mapValue.get("contactMechTypeId"));
        setMarketingCampaignId((String) mapValue.get("marketingCampaignId"));
        setContactListName((String) mapValue.get("contactListName"));
        setDescription((String) mapValue.get("description"));
        setComments((String) mapValue.get("comments"));
        setIsPublic((String) mapValue.get("isPublic"));
        setSingleUse((String) mapValue.get("singleUse"));
        setOwnerPartyId((String) mapValue.get("ownerPartyId"));
        setVerifyEmailFrom((String) mapValue.get("verifyEmailFrom"));
        setVerifyEmailScreen((String) mapValue.get("verifyEmailScreen"));
        setVerifyEmailSubject((String) mapValue.get("verifyEmailSubject"));
        setVerifyEmailWebSiteId((String) mapValue.get("verifyEmailWebSiteId"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setParentContactListId((String) mapValue.get("parentContactListId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("contactListId", getContactListId());
        mapValue.put("contactListTypeId", getContactListTypeId());
        mapValue.put("contactMechTypeId", getContactMechTypeId());
        mapValue.put("marketingCampaignId", getMarketingCampaignId());
        mapValue.put("contactListName", getContactListName());
        mapValue.put("description", getDescription());
        mapValue.put("comments", getComments());
        mapValue.put("isPublic", getIsPublic());
        mapValue.put("singleUse", getSingleUse());
        mapValue.put("ownerPartyId", getOwnerPartyId());
        mapValue.put("verifyEmailFrom", getVerifyEmailFrom());
        mapValue.put("verifyEmailScreen", getVerifyEmailScreen());
        mapValue.put("verifyEmailSubject", getVerifyEmailSubject());
        mapValue.put("verifyEmailWebSiteId", getVerifyEmailWebSiteId());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("parentContactListId", getParentContactListId());
        return mapValue;
    }


}
