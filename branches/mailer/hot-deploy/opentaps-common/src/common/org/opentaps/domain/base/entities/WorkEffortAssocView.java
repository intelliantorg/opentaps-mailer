package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity WorkEffortAssocView.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectWorkEffortAssocViews", query="SELECT WETO.WORK_EFFORT_NAME AS \"workEffortName\",WETO.ESTIMATED_SETUP_MILLIS AS \"estimatedSetupMillis\",WETO.ESTIMATED_MILLI_SECONDS AS \"estimatedMilliSeconds\",WA.WORK_EFFORT_ID_FROM AS \"workEffortIdFrom\",WA.WORK_EFFORT_ID_TO AS \"workEffortIdTo\",WA.WORK_EFFORT_ASSOC_TYPE_ID AS \"workEffortAssocTypeId\",WA.SEQUENCE_NUM AS \"sequenceNum\",WA.FROM_DATE AS \"fromDate\",WA.THRU_DATE AS \"thruDate\" FROM WORK_EFFORT_ASSOC WA INNER JOIN WORK_EFFORT WETO ON WA.WORK_EFFORT_ID_TO = WETO.WORK_EFFORT_ID", resultSetMapping="WorkEffortAssocViewMapping")
@SqlResultSetMapping(name="WorkEffortAssocViewMapping", entities={
@EntityResult(entityClass=WorkEffortAssocView.class, fields = {
@FieldResult(name="workEffortToName", column="workEffortToName")
,@FieldResult(name="workEffortToSetup", column="workEffortToSetup")
,@FieldResult(name="workEffortToRun", column="workEffortToRun")
,@FieldResult(name="workEffortIdFrom", column="workEffortIdFrom")
,@FieldResult(name="workEffortIdTo", column="workEffortIdTo")
,@FieldResult(name="workEffortAssocTypeId", column="workEffortAssocTypeId")
,@FieldResult(name="sequenceNum", column="sequenceNum")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="thruDate", column="thruDate")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class WorkEffortAssocView extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("workEffortToName", "WETO.WORK_EFFORT_NAME");
        fields.put("workEffortToSetup", "WETO.ESTIMATED_SETUP_MILLIS");
        fields.put("workEffortToRun", "WETO.ESTIMATED_MILLI_SECONDS");
        fields.put("workEffortIdFrom", "WA.WORK_EFFORT_ID_FROM");
        fields.put("workEffortIdTo", "WA.WORK_EFFORT_ID_TO");
        fields.put("workEffortAssocTypeId", "WA.WORK_EFFORT_ASSOC_TYPE_ID");
        fields.put("sequenceNum", "WA.SEQUENCE_NUM");
        fields.put("fromDate", "WA.FROM_DATE");
        fields.put("thruDate", "WA.THRU_DATE");
fieldMapColumns.put("WorkEffortAssocView", fields);
}
  public static enum Fields implements EntityFieldInterface<WorkEffortAssocView> {
    workEffortToName("workEffortToName"),
    workEffortToSetup("workEffortToSetup"),
    workEffortToRun("workEffortToRun"),
    workEffortIdFrom("workEffortIdFrom"),
    workEffortIdTo("workEffortIdTo"),
    workEffortAssocTypeId("workEffortAssocTypeId"),
    sequenceNum("sequenceNum"),
    fromDate("fromDate"),
    thruDate("thruDate");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    
    
    private String workEffortToName;
    
    
    private BigDecimal workEffortToSetup;
    
    
    private BigDecimal workEffortToRun;
    @Id
    
    private String workEffortIdFrom;
    
    
    private String workEffortIdTo;
    
    
    private String workEffortAssocTypeId;
    
    
    private Long sequenceNum;
    
    
    private Timestamp fromDate;
    
    
    private Timestamp thruDate;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_ID_FROM", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private WorkEffort fromWorkEffort = null;

  /**
   * Default constructor.
   */
  public WorkEffortAssocView() {
      super();
      this.baseEntityName = "WorkEffortAssocView";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("workEffortIdFrom");this.primaryKeyNames.add("workEffortIdTo");this.primaryKeyNames.add("workEffortAssocTypeId");this.primaryKeyNames.add("fromDate");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WorkEffortAssocView(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param workEffortToName the workEffortToName to set
     */
    private void setWorkEffortToName(String workEffortToName) {
        this.workEffortToName = workEffortToName;
    }
    /**
     * Auto generated value setter.
     * @param workEffortToSetup the workEffortToSetup to set
     */
    private void setWorkEffortToSetup(BigDecimal workEffortToSetup) {
        this.workEffortToSetup = workEffortToSetup;
    }
    /**
     * Auto generated value setter.
     * @param workEffortToRun the workEffortToRun to set
     */
    private void setWorkEffortToRun(BigDecimal workEffortToRun) {
        this.workEffortToRun = workEffortToRun;
    }
    /**
     * Auto generated value setter.
     * @param workEffortIdFrom the workEffortIdFrom to set
     */
    private void setWorkEffortIdFrom(String workEffortIdFrom) {
        this.workEffortIdFrom = workEffortIdFrom;
    }
    /**
     * Auto generated value setter.
     * @param workEffortIdTo the workEffortIdTo to set
     */
    private void setWorkEffortIdTo(String workEffortIdTo) {
        this.workEffortIdTo = workEffortIdTo;
    }
    /**
     * Auto generated value setter.
     * @param workEffortAssocTypeId the workEffortAssocTypeId to set
     */
    private void setWorkEffortAssocTypeId(String workEffortAssocTypeId) {
        this.workEffortAssocTypeId = workEffortAssocTypeId;
    }
    /**
     * Auto generated value setter.
     * @param sequenceNum the sequenceNum to set
     */
    private void setSequenceNum(Long sequenceNum) {
        this.sequenceNum = sequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    private void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    private void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortToName() {
        return this.workEffortToName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getWorkEffortToSetup() {
        return this.workEffortToSetup;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getWorkEffortToRun() {
        return this.workEffortToRun;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortIdFrom() {
        return this.workEffortIdFrom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortIdTo() {
        return this.workEffortIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortAssocTypeId() {
        return this.workEffortAssocTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getSequenceNum() {
        return this.sequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }

    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>FromWorkEffort</code>.
     * @return the <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkEffort getFromWorkEffort() throws RepositoryException {
        if (this.fromWorkEffort == null) {
            this.fromWorkEffort = getRelatedOne(WorkEffort.class, "FromWorkEffort");
        }
        return this.fromWorkEffort;
    }

    /**
     * Auto generated value setter.
     * @param fromWorkEffort the fromWorkEffort to set
    */
    public void setFromWorkEffort(WorkEffort fromWorkEffort) {
        this.fromWorkEffort = fromWorkEffort;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setWorkEffortToName((String) mapValue.get("workEffortToName"));
        setWorkEffortToSetup(convertToBigDecimal(mapValue.get("workEffortToSetup")));
        setWorkEffortToRun(convertToBigDecimal(mapValue.get("workEffortToRun")));
        setWorkEffortIdFrom((String) mapValue.get("workEffortIdFrom"));
        setWorkEffortIdTo((String) mapValue.get("workEffortIdTo"));
        setWorkEffortAssocTypeId((String) mapValue.get("workEffortAssocTypeId"));
        setSequenceNum((Long) mapValue.get("sequenceNum"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("workEffortToName", getWorkEffortToName());
        mapValue.put("workEffortToSetup", getWorkEffortToSetup());
        mapValue.put("workEffortToRun", getWorkEffortToRun());
        mapValue.put("workEffortIdFrom", getWorkEffortIdFrom());
        mapValue.put("workEffortIdTo", getWorkEffortIdTo());
        mapValue.put("workEffortAssocTypeId", getWorkEffortAssocTypeId());
        mapValue.put("sequenceNum", getSequenceNum());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        return mapValue;
    }


}
