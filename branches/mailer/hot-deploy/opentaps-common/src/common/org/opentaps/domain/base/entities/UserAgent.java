package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity UserAgent.
 */
@javax.persistence.Entity
@Table(name="USER_AGENT")
public class UserAgent extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("userAgentId", "USER_AGENT_ID");
        fields.put("browserTypeId", "BROWSER_TYPE_ID");
        fields.put("platformTypeId", "PLATFORM_TYPE_ID");
        fields.put("protocolTypeId", "PROTOCOL_TYPE_ID");
        fields.put("userAgentTypeId", "USER_AGENT_TYPE_ID");
        fields.put("userAgentMethodTypeId", "USER_AGENT_METHOD_TYPE_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("UserAgent", fields);
}
  public static enum Fields implements EntityFieldInterface<UserAgent> {
    userAgentId("userAgentId"),
    browserTypeId("browserTypeId"),
    platformTypeId("platformTypeId"),
    protocolTypeId("protocolTypeId"),
    userAgentTypeId("userAgentTypeId"),
    userAgentMethodTypeId("userAgentMethodTypeId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="UserAgent_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="UserAgent_GEN")   
    @Id
    
    @Column(name="USER_AGENT_ID")
    private String userAgentId;
    
    @Column(name="BROWSER_TYPE_ID")
    private String browserTypeId;
    
    @Column(name="PLATFORM_TYPE_ID")
    private String platformTypeId;
    
    @Column(name="PROTOCOL_TYPE_ID")
    private String protocolTypeId;
    
    @Column(name="USER_AGENT_TYPE_ID")
    private String userAgentTypeId;
    
    @Column(name="USER_AGENT_METHOD_TYPE_ID")
    private String userAgentMethodTypeId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="BROWSER_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private BrowserType browserType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PLATFORM_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private PlatformType platformType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PROTOCOL_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProtocolType protocolType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="USER_AGENT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserAgentType userAgentType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="USER_AGENT_METHOD_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserAgentMethodType userAgentMethodType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="USER_AGENT_ID")
    private List<Visit> visits = null;

  /**
   * Default constructor.
   */
  public UserAgent() {
      super();
      this.baseEntityName = "UserAgent";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("userAgentId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public UserAgent(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param userAgentId the userAgentId to set
     */
    public void setUserAgentId(String userAgentId) {
        this.userAgentId = userAgentId;
    }
    /**
     * Auto generated value setter.
     * @param browserTypeId the browserTypeId to set
     */
    public void setBrowserTypeId(String browserTypeId) {
        this.browserTypeId = browserTypeId;
    }
    /**
     * Auto generated value setter.
     * @param platformTypeId the platformTypeId to set
     */
    public void setPlatformTypeId(String platformTypeId) {
        this.platformTypeId = platformTypeId;
    }
    /**
     * Auto generated value setter.
     * @param protocolTypeId the protocolTypeId to set
     */
    public void setProtocolTypeId(String protocolTypeId) {
        this.protocolTypeId = protocolTypeId;
    }
    /**
     * Auto generated value setter.
     * @param userAgentTypeId the userAgentTypeId to set
     */
    public void setUserAgentTypeId(String userAgentTypeId) {
        this.userAgentTypeId = userAgentTypeId;
    }
    /**
     * Auto generated value setter.
     * @param userAgentMethodTypeId the userAgentMethodTypeId to set
     */
    public void setUserAgentMethodTypeId(String userAgentMethodTypeId) {
        this.userAgentMethodTypeId = userAgentMethodTypeId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserAgentId() {
        return this.userAgentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBrowserTypeId() {
        return this.browserTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPlatformTypeId() {
        return this.platformTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProtocolTypeId() {
        return this.protocolTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserAgentTypeId() {
        return this.userAgentTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserAgentMethodTypeId() {
        return this.userAgentMethodTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>BrowserType</code> by the relation named <code>BrowserType</code>.
     * @return the <code>BrowserType</code>
     * @throws RepositoryException if an error occurs
     */
    public BrowserType getBrowserType() throws RepositoryException {
        if (this.browserType == null) {
            this.browserType = getRelatedOne(BrowserType.class, "BrowserType");
        }
        return this.browserType;
    }
    /**
     * Auto generated method that gets the related <code>PlatformType</code> by the relation named <code>PlatformType</code>.
     * @return the <code>PlatformType</code>
     * @throws RepositoryException if an error occurs
     */
    public PlatformType getPlatformType() throws RepositoryException {
        if (this.platformType == null) {
            this.platformType = getRelatedOne(PlatformType.class, "PlatformType");
        }
        return this.platformType;
    }
    /**
     * Auto generated method that gets the related <code>ProtocolType</code> by the relation named <code>ProtocolType</code>.
     * @return the <code>ProtocolType</code>
     * @throws RepositoryException if an error occurs
     */
    public ProtocolType getProtocolType() throws RepositoryException {
        if (this.protocolType == null) {
            this.protocolType = getRelatedOne(ProtocolType.class, "ProtocolType");
        }
        return this.protocolType;
    }
    /**
     * Auto generated method that gets the related <code>UserAgentType</code> by the relation named <code>UserAgentType</code>.
     * @return the <code>UserAgentType</code>
     * @throws RepositoryException if an error occurs
     */
    public UserAgentType getUserAgentType() throws RepositoryException {
        if (this.userAgentType == null) {
            this.userAgentType = getRelatedOne(UserAgentType.class, "UserAgentType");
        }
        return this.userAgentType;
    }
    /**
     * Auto generated method that gets the related <code>UserAgentMethodType</code> by the relation named <code>UserAgentMethodType</code>.
     * @return the <code>UserAgentMethodType</code>
     * @throws RepositoryException if an error occurs
     */
    public UserAgentMethodType getUserAgentMethodType() throws RepositoryException {
        if (this.userAgentMethodType == null) {
            this.userAgentMethodType = getRelatedOne(UserAgentMethodType.class, "UserAgentMethodType");
        }
        return this.userAgentMethodType;
    }
    /**
     * Auto generated method that gets the related <code>Visit</code> by the relation named <code>Visit</code>.
     * @return the list of <code>Visit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Visit> getVisits() throws RepositoryException {
        if (this.visits == null) {
            this.visits = getRelated(Visit.class, "Visit");
        }
        return this.visits;
    }

    /**
     * Auto generated value setter.
     * @param browserType the browserType to set
    */
    public void setBrowserType(BrowserType browserType) {
        this.browserType = browserType;
    }
    /**
     * Auto generated value setter.
     * @param platformType the platformType to set
    */
    public void setPlatformType(PlatformType platformType) {
        this.platformType = platformType;
    }
    /**
     * Auto generated value setter.
     * @param protocolType the protocolType to set
    */
    public void setProtocolType(ProtocolType protocolType) {
        this.protocolType = protocolType;
    }
    /**
     * Auto generated value setter.
     * @param userAgentType the userAgentType to set
    */
    public void setUserAgentType(UserAgentType userAgentType) {
        this.userAgentType = userAgentType;
    }
    /**
     * Auto generated value setter.
     * @param userAgentMethodType the userAgentMethodType to set
    */
    public void setUserAgentMethodType(UserAgentMethodType userAgentMethodType) {
        this.userAgentMethodType = userAgentMethodType;
    }
    /**
     * Auto generated value setter.
     * @param visits the visits to set
    */
    public void setVisits(List<Visit> visits) {
        this.visits = visits;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setUserAgentId((String) mapValue.get("userAgentId"));
        setBrowserTypeId((String) mapValue.get("browserTypeId"));
        setPlatformTypeId((String) mapValue.get("platformTypeId"));
        setProtocolTypeId((String) mapValue.get("protocolTypeId"));
        setUserAgentTypeId((String) mapValue.get("userAgentTypeId"));
        setUserAgentMethodTypeId((String) mapValue.get("userAgentMethodTypeId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("userAgentId", getUserAgentId());
        mapValue.put("browserTypeId", getBrowserTypeId());
        mapValue.put("platformTypeId", getPlatformTypeId());
        mapValue.put("protocolTypeId", getProtocolTypeId());
        mapValue.put("userAgentTypeId", getUserAgentTypeId());
        mapValue.put("userAgentMethodTypeId", getUserAgentMethodTypeId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
