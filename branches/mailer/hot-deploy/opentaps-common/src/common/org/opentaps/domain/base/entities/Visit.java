package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Visit.
 */
@javax.persistence.Entity
@Table(name="VISIT")
public class Visit extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("visitId", "VISIT_ID");
        fields.put("visitorId", "VISITOR_ID");
        fields.put("userLoginId", "USER_LOGIN_ID");
        fields.put("userCreated", "USER_CREATED");
        fields.put("sessionId", "SESSION_ID");
        fields.put("serverIpAddress", "SERVER_IP_ADDRESS");
        fields.put("serverHostName", "SERVER_HOST_NAME");
        fields.put("webappName", "WEBAPP_NAME");
        fields.put("initialLocale", "INITIAL_LOCALE");
        fields.put("initialRequest", "INITIAL_REQUEST");
        fields.put("initialReferrer", "INITIAL_REFERRER");
        fields.put("initialUserAgent", "INITIAL_USER_AGENT");
        fields.put("userAgentId", "USER_AGENT_ID");
        fields.put("clientIpAddress", "CLIENT_IP_ADDRESS");
        fields.put("clientHostName", "CLIENT_HOST_NAME");
        fields.put("clientUser", "CLIENT_USER");
        fields.put("cookie", "COOKIE");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("contactMechId", "CONTACT_MECH_ID");
        fields.put("partyId", "PARTY_ID");
        fields.put("roleTypeId", "ROLE_TYPE_ID");
fieldMapColumns.put("Visit", fields);
}
  public static enum Fields implements EntityFieldInterface<Visit> {
    visitId("visitId"),
    visitorId("visitorId"),
    userLoginId("userLoginId"),
    userCreated("userCreated"),
    sessionId("sessionId"),
    serverIpAddress("serverIpAddress"),
    serverHostName("serverHostName"),
    webappName("webappName"),
    initialLocale("initialLocale"),
    initialRequest("initialRequest"),
    initialReferrer("initialReferrer"),
    initialUserAgent("initialUserAgent"),
    userAgentId("userAgentId"),
    clientIpAddress("clientIpAddress"),
    clientHostName("clientHostName"),
    clientUser("clientUser"),
    cookie("cookie"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    contactMechId("contactMechId"),
    partyId("partyId"),
    roleTypeId("roleTypeId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Visit_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Visit_GEN")   
    @Id
    
    @Column(name="VISIT_ID")
    private String visitId;
    
    @Column(name="VISITOR_ID")
    private String visitorId;
    
    @Column(name="USER_LOGIN_ID")
    private String userLoginId;
    
    @Column(name="USER_CREATED")
    private String userCreated;
    
    @Column(name="SESSION_ID")
    private String sessionId;
    
    @Column(name="SERVER_IP_ADDRESS")
    private String serverIpAddress;
    
    @Column(name="SERVER_HOST_NAME")
    private String serverHostName;
    
    @Column(name="WEBAPP_NAME")
    private String webappName;
    
    @Column(name="INITIAL_LOCALE")
    private String initialLocale;
    
    @Column(name="INITIAL_REQUEST")
    private String initialRequest;
    
    @Column(name="INITIAL_REFERRER")
    private String initialReferrer;
    
    @Column(name="INITIAL_USER_AGENT")
    private String initialUserAgent;
    
    @Column(name="USER_AGENT_ID")
    private String userAgentId;
    
    @Column(name="CLIENT_IP_ADDRESS")
    private String clientIpAddress;
    
    @Column(name="CLIENT_HOST_NAME")
    private String clientHostName;
    
    @Column(name="CLIENT_USER")
    private String clientUser;
    
    @Column(name="COOKIE")
    private String cookie;
    
    @Column(name="FROM_DATE")
    private Timestamp fromDate;
    
    @Column(name="THRU_DATE")
    private Timestamp thruDate;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="CONTACT_MECH_ID")
    private String contactMechId;
    
    @Column(name="PARTY_ID")
    private String partyId;
    
    @Column(name="ROLE_TYPE_ID")
    private String roleTypeId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="VISITOR_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Visitor visitor = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="USER_AGENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserAgent userAgent = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactMech contactMech = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party party = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ROLE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private RoleType roleType = null;
    private transient PartyRole partyRole = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="visit", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="VISIT_ID")
    private List<CartAbandonedLine> cartAbandonedLines = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="visit", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="VISIT_ID")
    private List<InventoryItemTempRes> inventoryItemTempReses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="VISIT_ID")
    private List<OldProductKeywordResult> oldProductKeywordResults = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="VISIT_ID")
    private List<PartyDataSource> partyDataSources = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="VISIT_ID")
    private List<PartyNeed> partyNeeds = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="VISIT_ID")
    private List<ProductSearchResult> productSearchResults = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="visit", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="VISIT_ID")
    private List<ServerHit> serverHits = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="visit", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="VISIT_ID")
    private List<TrackingCodeVisit> trackingCodeVisits = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="VISIT_ID")
    private List<WorkEffortSearchResult> workEffortSearchResults = null;

  /**
   * Default constructor.
   */
  public Visit() {
      super();
      this.baseEntityName = "Visit";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("visitId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Visit(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param visitId the visitId to set
     */
    public void setVisitId(String visitId) {
        this.visitId = visitId;
    }
    /**
     * Auto generated value setter.
     * @param visitorId the visitorId to set
     */
    public void setVisitorId(String visitorId) {
        this.visitorId = visitorId;
    }
    /**
     * Auto generated value setter.
     * @param userLoginId the userLoginId to set
     */
    public void setUserLoginId(String userLoginId) {
        this.userLoginId = userLoginId;
    }
    /**
     * Auto generated value setter.
     * @param userCreated the userCreated to set
     */
    public void setUserCreated(String userCreated) {
        this.userCreated = userCreated;
    }
    /**
     * Auto generated value setter.
     * @param sessionId the sessionId to set
     */
    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }
    /**
     * Auto generated value setter.
     * @param serverIpAddress the serverIpAddress to set
     */
    public void setServerIpAddress(String serverIpAddress) {
        this.serverIpAddress = serverIpAddress;
    }
    /**
     * Auto generated value setter.
     * @param serverHostName the serverHostName to set
     */
    public void setServerHostName(String serverHostName) {
        this.serverHostName = serverHostName;
    }
    /**
     * Auto generated value setter.
     * @param webappName the webappName to set
     */
    public void setWebappName(String webappName) {
        this.webappName = webappName;
    }
    /**
     * Auto generated value setter.
     * @param initialLocale the initialLocale to set
     */
    public void setInitialLocale(String initialLocale) {
        this.initialLocale = initialLocale;
    }
    /**
     * Auto generated value setter.
     * @param initialRequest the initialRequest to set
     */
    public void setInitialRequest(String initialRequest) {
        this.initialRequest = initialRequest;
    }
    /**
     * Auto generated value setter.
     * @param initialReferrer the initialReferrer to set
     */
    public void setInitialReferrer(String initialReferrer) {
        this.initialReferrer = initialReferrer;
    }
    /**
     * Auto generated value setter.
     * @param initialUserAgent the initialUserAgent to set
     */
    public void setInitialUserAgent(String initialUserAgent) {
        this.initialUserAgent = initialUserAgent;
    }
    /**
     * Auto generated value setter.
     * @param userAgentId the userAgentId to set
     */
    public void setUserAgentId(String userAgentId) {
        this.userAgentId = userAgentId;
    }
    /**
     * Auto generated value setter.
     * @param clientIpAddress the clientIpAddress to set
     */
    public void setClientIpAddress(String clientIpAddress) {
        this.clientIpAddress = clientIpAddress;
    }
    /**
     * Auto generated value setter.
     * @param clientHostName the clientHostName to set
     */
    public void setClientHostName(String clientHostName) {
        this.clientHostName = clientHostName;
    }
    /**
     * Auto generated value setter.
     * @param clientUser the clientUser to set
     */
    public void setClientUser(String clientUser) {
        this.clientUser = clientUser;
    }
    /**
     * Auto generated value setter.
     * @param cookie the cookie to set
     */
    public void setCookie(String cookie) {
        this.cookie = cookie;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param contactMechId the contactMechId to set
     */
    public void setContactMechId(String contactMechId) {
        this.contactMechId = contactMechId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeId the roleTypeId to set
     */
    public void setRoleTypeId(String roleTypeId) {
        this.roleTypeId = roleTypeId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVisitId() {
        return this.visitId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVisitorId() {
        return this.visitorId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserLoginId() {
        return this.userLoginId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserCreated() {
        return this.userCreated;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSessionId() {
        return this.sessionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServerIpAddress() {
        return this.serverIpAddress;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServerHostName() {
        return this.serverHostName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWebappName() {
        return this.webappName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInitialLocale() {
        return this.initialLocale;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInitialRequest() {
        return this.initialRequest;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInitialReferrer() {
        return this.initialReferrer;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInitialUserAgent() {
        return this.initialUserAgent;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserAgentId() {
        return this.userAgentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getClientIpAddress() {
        return this.clientIpAddress;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getClientHostName() {
        return this.clientHostName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getClientUser() {
        return this.clientUser;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCookie() {
        return this.cookie;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechId() {
        return this.contactMechId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeId() {
        return this.roleTypeId;
    }

    /**
     * Auto generated method that gets the related <code>Visitor</code> by the relation named <code>Visitor</code>.
     * @return the <code>Visitor</code>
     * @throws RepositoryException if an error occurs
     */
    public Visitor getVisitor() throws RepositoryException {
        if (this.visitor == null) {
            this.visitor = getRelatedOne(Visitor.class, "Visitor");
        }
        return this.visitor;
    }
    /**
     * Auto generated method that gets the related <code>UserAgent</code> by the relation named <code>UserAgent</code>.
     * @return the <code>UserAgent</code>
     * @throws RepositoryException if an error occurs
     */
    public UserAgent getUserAgent() throws RepositoryException {
        if (this.userAgent == null) {
            this.userAgent = getRelatedOne(UserAgent.class, "UserAgent");
        }
        return this.userAgent;
    }
    /**
     * Auto generated method that gets the related <code>ContactMech</code> by the relation named <code>ContactMech</code>.
     * @return the <code>ContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMech getContactMech() throws RepositoryException {
        if (this.contactMech == null) {
            this.contactMech = getRelatedOne(ContactMech.class, "ContactMech");
        }
        return this.contactMech;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>RoleType</code> by the relation named <code>RoleType</code>.
     * @return the <code>RoleType</code>
     * @throws RepositoryException if an error occurs
     */
    public RoleType getRoleType() throws RepositoryException {
        if (this.roleType == null) {
            this.roleType = getRelatedOne(RoleType.class, "RoleType");
        }
        return this.roleType;
    }
    /**
     * Auto generated method that gets the related <code>PartyRole</code> by the relation named <code>PartyRole</code>.
     * @return the <code>PartyRole</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyRole getPartyRole() throws RepositoryException {
        if (this.partyRole == null) {
            this.partyRole = getRelatedOne(PartyRole.class, "PartyRole");
        }
        return this.partyRole;
    }
    /**
     * Auto generated method that gets the related <code>CartAbandonedLine</code> by the relation named <code>CartAbandonedLine</code>.
     * @return the list of <code>CartAbandonedLine</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CartAbandonedLine> getCartAbandonedLines() throws RepositoryException {
        if (this.cartAbandonedLines == null) {
            this.cartAbandonedLines = getRelated(CartAbandonedLine.class, "CartAbandonedLine");
        }
        return this.cartAbandonedLines;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemTempRes</code> by the relation named <code>InventoryItemTempRes</code>.
     * @return the list of <code>InventoryItemTempRes</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemTempRes> getInventoryItemTempReses() throws RepositoryException {
        if (this.inventoryItemTempReses == null) {
            this.inventoryItemTempReses = getRelated(InventoryItemTempRes.class, "InventoryItemTempRes");
        }
        return this.inventoryItemTempReses;
    }
    /**
     * Auto generated method that gets the related <code>OldProductKeywordResult</code> by the relation named <code>OldProductKeywordResult</code>.
     * @return the list of <code>OldProductKeywordResult</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldProductKeywordResult> getOldProductKeywordResults() throws RepositoryException {
        if (this.oldProductKeywordResults == null) {
            this.oldProductKeywordResults = getRelated(OldProductKeywordResult.class, "OldProductKeywordResult");
        }
        return this.oldProductKeywordResults;
    }
    /**
     * Auto generated method that gets the related <code>PartyDataSource</code> by the relation named <code>PartyDataSource</code>.
     * @return the list of <code>PartyDataSource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyDataSource> getPartyDataSources() throws RepositoryException {
        if (this.partyDataSources == null) {
            this.partyDataSources = getRelated(PartyDataSource.class, "PartyDataSource");
        }
        return this.partyDataSources;
    }
    /**
     * Auto generated method that gets the related <code>PartyNeed</code> by the relation named <code>PartyNeed</code>.
     * @return the list of <code>PartyNeed</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyNeed> getPartyNeeds() throws RepositoryException {
        if (this.partyNeeds == null) {
            this.partyNeeds = getRelated(PartyNeed.class, "PartyNeed");
        }
        return this.partyNeeds;
    }
    /**
     * Auto generated method that gets the related <code>ProductSearchResult</code> by the relation named <code>ProductSearchResult</code>.
     * @return the list of <code>ProductSearchResult</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductSearchResult> getProductSearchResults() throws RepositoryException {
        if (this.productSearchResults == null) {
            this.productSearchResults = getRelated(ProductSearchResult.class, "ProductSearchResult");
        }
        return this.productSearchResults;
    }
    /**
     * Auto generated method that gets the related <code>ServerHit</code> by the relation named <code>ServerHit</code>.
     * @return the list of <code>ServerHit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServerHit> getServerHits() throws RepositoryException {
        if (this.serverHits == null) {
            this.serverHits = getRelated(ServerHit.class, "ServerHit");
        }
        return this.serverHits;
    }
    /**
     * Auto generated method that gets the related <code>TrackingCodeVisit</code> by the relation named <code>TrackingCodeVisit</code>.
     * @return the list of <code>TrackingCodeVisit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TrackingCodeVisit> getTrackingCodeVisits() throws RepositoryException {
        if (this.trackingCodeVisits == null) {
            this.trackingCodeVisits = getRelated(TrackingCodeVisit.class, "TrackingCodeVisit");
        }
        return this.trackingCodeVisits;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortSearchResult</code> by the relation named <code>WorkEffortSearchResult</code>.
     * @return the list of <code>WorkEffortSearchResult</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortSearchResult> getWorkEffortSearchResults() throws RepositoryException {
        if (this.workEffortSearchResults == null) {
            this.workEffortSearchResults = getRelated(WorkEffortSearchResult.class, "WorkEffortSearchResult");
        }
        return this.workEffortSearchResults;
    }

    /**
     * Auto generated value setter.
     * @param visitor the visitor to set
    */
    public void setVisitor(Visitor visitor) {
        this.visitor = visitor;
    }
    /**
     * Auto generated value setter.
     * @param userAgent the userAgent to set
    */
    public void setUserAgent(UserAgent userAgent) {
        this.userAgent = userAgent;
    }
    /**
     * Auto generated value setter.
     * @param contactMech the contactMech to set
    */
    public void setContactMech(ContactMech contactMech) {
        this.contactMech = contactMech;
    }
    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param roleType the roleType to set
    */
    public void setRoleType(RoleType roleType) {
        this.roleType = roleType;
    }
    /**
     * Auto generated value setter.
     * @param partyRole the partyRole to set
    */
    public void setPartyRole(PartyRole partyRole) {
        this.partyRole = partyRole;
    }
    /**
     * Auto generated value setter.
     * @param cartAbandonedLines the cartAbandonedLines to set
    */
    public void setCartAbandonedLines(List<CartAbandonedLine> cartAbandonedLines) {
        this.cartAbandonedLines = cartAbandonedLines;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemTempReses the inventoryItemTempReses to set
    */
    public void setInventoryItemTempReses(List<InventoryItemTempRes> inventoryItemTempReses) {
        this.inventoryItemTempReses = inventoryItemTempReses;
    }
    /**
     * Auto generated value setter.
     * @param oldProductKeywordResults the oldProductKeywordResults to set
    */
    public void setOldProductKeywordResults(List<OldProductKeywordResult> oldProductKeywordResults) {
        this.oldProductKeywordResults = oldProductKeywordResults;
    }
    /**
     * Auto generated value setter.
     * @param partyDataSources the partyDataSources to set
    */
    public void setPartyDataSources(List<PartyDataSource> partyDataSources) {
        this.partyDataSources = partyDataSources;
    }
    /**
     * Auto generated value setter.
     * @param partyNeeds the partyNeeds to set
    */
    public void setPartyNeeds(List<PartyNeed> partyNeeds) {
        this.partyNeeds = partyNeeds;
    }
    /**
     * Auto generated value setter.
     * @param productSearchResults the productSearchResults to set
    */
    public void setProductSearchResults(List<ProductSearchResult> productSearchResults) {
        this.productSearchResults = productSearchResults;
    }
    /**
     * Auto generated value setter.
     * @param serverHits the serverHits to set
    */
    public void setServerHits(List<ServerHit> serverHits) {
        this.serverHits = serverHits;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodeVisits the trackingCodeVisits to set
    */
    public void setTrackingCodeVisits(List<TrackingCodeVisit> trackingCodeVisits) {
        this.trackingCodeVisits = trackingCodeVisits;
    }
    /**
     * Auto generated value setter.
     * @param workEffortSearchResults the workEffortSearchResults to set
    */
    public void setWorkEffortSearchResults(List<WorkEffortSearchResult> workEffortSearchResults) {
        this.workEffortSearchResults = workEffortSearchResults;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addCartAbandonedLine(CartAbandonedLine cartAbandonedLine) {
        if (this.cartAbandonedLines == null) {
            this.cartAbandonedLines = new ArrayList<CartAbandonedLine>();
        }
        this.cartAbandonedLines.add(cartAbandonedLine);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCartAbandonedLine(CartAbandonedLine cartAbandonedLine) {
        if (this.cartAbandonedLines == null) {
            return;
        }
        this.cartAbandonedLines.remove(cartAbandonedLine);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCartAbandonedLine() {
        if (this.cartAbandonedLines == null) {
            return;
        }
        this.cartAbandonedLines.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInventoryItemTempRese(InventoryItemTempRes inventoryItemTempRese) {
        if (this.inventoryItemTempReses == null) {
            this.inventoryItemTempReses = new ArrayList<InventoryItemTempRes>();
        }
        this.inventoryItemTempReses.add(inventoryItemTempRese);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInventoryItemTempRese(InventoryItemTempRes inventoryItemTempRese) {
        if (this.inventoryItemTempReses == null) {
            return;
        }
        this.inventoryItemTempReses.remove(inventoryItemTempRese);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInventoryItemTempRese() {
        if (this.inventoryItemTempReses == null) {
            return;
        }
        this.inventoryItemTempReses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addServerHit(ServerHit serverHit) {
        if (this.serverHits == null) {
            this.serverHits = new ArrayList<ServerHit>();
        }
        this.serverHits.add(serverHit);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeServerHit(ServerHit serverHit) {
        if (this.serverHits == null) {
            return;
        }
        this.serverHits.remove(serverHit);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearServerHit() {
        if (this.serverHits == null) {
            return;
        }
        this.serverHits.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addTrackingCodeVisit(TrackingCodeVisit trackingCodeVisit) {
        if (this.trackingCodeVisits == null) {
            this.trackingCodeVisits = new ArrayList<TrackingCodeVisit>();
        }
        this.trackingCodeVisits.add(trackingCodeVisit);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeTrackingCodeVisit(TrackingCodeVisit trackingCodeVisit) {
        if (this.trackingCodeVisits == null) {
            return;
        }
        this.trackingCodeVisits.remove(trackingCodeVisit);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearTrackingCodeVisit() {
        if (this.trackingCodeVisits == null) {
            return;
        }
        this.trackingCodeVisits.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setVisitId((String) mapValue.get("visitId"));
        setVisitorId((String) mapValue.get("visitorId"));
        setUserLoginId((String) mapValue.get("userLoginId"));
        setUserCreated((String) mapValue.get("userCreated"));
        setSessionId((String) mapValue.get("sessionId"));
        setServerIpAddress((String) mapValue.get("serverIpAddress"));
        setServerHostName((String) mapValue.get("serverHostName"));
        setWebappName((String) mapValue.get("webappName"));
        setInitialLocale((String) mapValue.get("initialLocale"));
        setInitialRequest((String) mapValue.get("initialRequest"));
        setInitialReferrer((String) mapValue.get("initialReferrer"));
        setInitialUserAgent((String) mapValue.get("initialUserAgent"));
        setUserAgentId((String) mapValue.get("userAgentId"));
        setClientIpAddress((String) mapValue.get("clientIpAddress"));
        setClientHostName((String) mapValue.get("clientHostName"));
        setClientUser((String) mapValue.get("clientUser"));
        setCookie((String) mapValue.get("cookie"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setContactMechId((String) mapValue.get("contactMechId"));
        setPartyId((String) mapValue.get("partyId"));
        setRoleTypeId((String) mapValue.get("roleTypeId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("visitId", getVisitId());
        mapValue.put("visitorId", getVisitorId());
        mapValue.put("userLoginId", getUserLoginId());
        mapValue.put("userCreated", getUserCreated());
        mapValue.put("sessionId", getSessionId());
        mapValue.put("serverIpAddress", getServerIpAddress());
        mapValue.put("serverHostName", getServerHostName());
        mapValue.put("webappName", getWebappName());
        mapValue.put("initialLocale", getInitialLocale());
        mapValue.put("initialRequest", getInitialRequest());
        mapValue.put("initialReferrer", getInitialReferrer());
        mapValue.put("initialUserAgent", getInitialUserAgent());
        mapValue.put("userAgentId", getUserAgentId());
        mapValue.put("clientIpAddress", getClientIpAddress());
        mapValue.put("clientHostName", getClientHostName());
        mapValue.put("clientUser", getClientUser());
        mapValue.put("cookie", getCookie());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("contactMechId", getContactMechId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("roleTypeId", getRoleTypeId());
        return mapValue;
    }


}
