package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity NetSuitePaymentTerm.
 */
@javax.persistence.Entity
@Table(name="NET_SUITE_PAYMENT_TERM")
public class NetSuitePaymentTerm extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("paymentTermsId", "PAYMENT_TERMS_ID");
        fields.put("dateDriven", "DATE_DRIVEN");
        fields.put("daysUntilDue", "DAYS_UNTIL_DUE");
        fields.put("discountDays", "DISCOUNT_DAYS");
        fields.put("isInactive", "IS_INACTIVE");
        fields.put("minimumDays", "MINIMUM_DAYS");
        fields.put("termName", "TERM_NAME");
        fields.put("paymentTermsExtid", "PAYMENT_TERMS_EXTID");
        fields.put("percentageDiscount", "PERCENTAGE_DISCOUNT");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("NetSuitePaymentTerm", fields);
}
  public static enum Fields implements EntityFieldInterface<NetSuitePaymentTerm> {
    paymentTermsId("paymentTermsId"),
    dateDriven("dateDriven"),
    daysUntilDue("daysUntilDue"),
    discountDays("discountDays"),
    isInactive("isInactive"),
    minimumDays("minimumDays"),
    termName("termName"),
    paymentTermsExtid("paymentTermsExtid"),
    percentageDiscount("percentageDiscount"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="NetSuitePaymentTerm_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="NetSuitePaymentTerm_GEN")   
    @Id
    
    @Column(name="PAYMENT_TERMS_ID")
    private String paymentTermsId;
    
    @Column(name="DATE_DRIVEN")
    private String dateDriven;
    
    @Column(name="DAYS_UNTIL_DUE")
    private Long daysUntilDue;
    
    @Column(name="DISCOUNT_DAYS")
    private Long discountDays;
    
    @Column(name="IS_INACTIVE")
    private String isInactive;
    
    @Column(name="MINIMUM_DAYS")
    private Long minimumDays;
    
    @Column(name="TERM_NAME")
    private String termName;
    
    @Column(name="PAYMENT_TERMS_EXTID")
    private String paymentTermsExtid;
    
    @Column(name="PERCENTAGE_DISCOUNT")
    private BigDecimal percentageDiscount;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;

  /**
   * Default constructor.
   */
  public NetSuitePaymentTerm() {
      super();
      this.baseEntityName = "NetSuitePaymentTerm";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("paymentTermsId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public NetSuitePaymentTerm(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param paymentTermsId the paymentTermsId to set
     */
    public void setPaymentTermsId(String paymentTermsId) {
        this.paymentTermsId = paymentTermsId;
    }
    /**
     * Auto generated value setter.
     * @param dateDriven the dateDriven to set
     */
    public void setDateDriven(String dateDriven) {
        this.dateDriven = dateDriven;
    }
    /**
     * Auto generated value setter.
     * @param daysUntilDue the daysUntilDue to set
     */
    public void setDaysUntilDue(Long daysUntilDue) {
        this.daysUntilDue = daysUntilDue;
    }
    /**
     * Auto generated value setter.
     * @param discountDays the discountDays to set
     */
    public void setDiscountDays(Long discountDays) {
        this.discountDays = discountDays;
    }
    /**
     * Auto generated value setter.
     * @param isInactive the isInactive to set
     */
    public void setIsInactive(String isInactive) {
        this.isInactive = isInactive;
    }
    /**
     * Auto generated value setter.
     * @param minimumDays the minimumDays to set
     */
    public void setMinimumDays(Long minimumDays) {
        this.minimumDays = minimumDays;
    }
    /**
     * Auto generated value setter.
     * @param termName the termName to set
     */
    public void setTermName(String termName) {
        this.termName = termName;
    }
    /**
     * Auto generated value setter.
     * @param paymentTermsExtid the paymentTermsExtid to set
     */
    public void setPaymentTermsExtid(String paymentTermsExtid) {
        this.paymentTermsExtid = paymentTermsExtid;
    }
    /**
     * Auto generated value setter.
     * @param percentageDiscount the percentageDiscount to set
     */
    public void setPercentageDiscount(BigDecimal percentageDiscount) {
        this.percentageDiscount = percentageDiscount;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentTermsId() {
        return this.paymentTermsId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDateDriven() {
        return this.dateDriven;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getDaysUntilDue() {
        return this.daysUntilDue;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getDiscountDays() {
        return this.discountDays;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsInactive() {
        return this.isInactive;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getMinimumDays() {
        return this.minimumDays;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTermName() {
        return this.termName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentTermsExtid() {
        return this.paymentTermsExtid;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getPercentageDiscount() {
        return this.percentageDiscount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPaymentTermsId((String) mapValue.get("paymentTermsId"));
        setDateDriven((String) mapValue.get("dateDriven"));
        setDaysUntilDue((Long) mapValue.get("daysUntilDue"));
        setDiscountDays((Long) mapValue.get("discountDays"));
        setIsInactive((String) mapValue.get("isInactive"));
        setMinimumDays((Long) mapValue.get("minimumDays"));
        setTermName((String) mapValue.get("termName"));
        setPaymentTermsExtid((String) mapValue.get("paymentTermsExtid"));
        setPercentageDiscount(convertToBigDecimal(mapValue.get("percentageDiscount")));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("paymentTermsId", getPaymentTermsId());
        mapValue.put("dateDriven", getDateDriven());
        mapValue.put("daysUntilDue", getDaysUntilDue());
        mapValue.put("discountDays", getDiscountDays());
        mapValue.put("isInactive", getIsInactive());
        mapValue.put("minimumDays", getMinimumDays());
        mapValue.put("termName", getTermName());
        mapValue.put("paymentTermsExtid", getPaymentTermsExtid());
        mapValue.put("percentageDiscount", getPercentageDiscount());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
