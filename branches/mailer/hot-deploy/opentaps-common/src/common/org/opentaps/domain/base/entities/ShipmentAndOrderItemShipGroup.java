package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;

/**
 * Auto generated base entity ShipmentAndOrderItemShipGroup.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectShipmentAndOrderItemShipGroups", query="SELECT SI.SHIPMENT_ID AS \"shipmentId\",OISGA.ORDER_ID AS \"orderId\",OISGA.SHIP_GROUP_SEQ_ID AS \"shipGroupSeqId\" FROM SHIPMENT_ITEM SI INNER JOIN ITEM_ISSUANCE II ON SI.SHIPMENT_ID = II.SHIPMENT_ID AND SI.SHIPMENT_ITEM_SEQ_ID = II.SHIPMENT_ITEM_SEQ_ID INNER JOIN ORDER_ITEM_SHIP_GROUP_ASSOC OISGA ON II.ORDER_ID = OISGA.ORDER_ID AND II.ORDER_ITEM_SEQ_ID = OISGA.ORDER_ITEM_SEQ_ID", resultSetMapping="ShipmentAndOrderItemShipGroupMapping")
@SqlResultSetMapping(name="ShipmentAndOrderItemShipGroupMapping", entities={
@EntityResult(entityClass=ShipmentAndOrderItemShipGroup.class, fields = {
@FieldResult(name="shipmentId", column="shipmentId")
,@FieldResult(name="orderId", column="orderId")
,@FieldResult(name="shipGroupSeqId", column="shipGroupSeqId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class ShipmentAndOrderItemShipGroup extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("shipmentId", "SI.SHIPMENT_ID");
        fields.put("orderId", "OISGA.ORDER_ID");
        fields.put("shipGroupSeqId", "OISGA.SHIP_GROUP_SEQ_ID");
fieldMapColumns.put("ShipmentAndOrderItemShipGroup", fields);
}
  public static enum Fields implements EntityFieldInterface<ShipmentAndOrderItemShipGroup> {
    shipmentId("shipmentId"),
    orderId("orderId"),
    shipGroupSeqId("shipGroupSeqId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    private String shipmentId;
    
    
    private String orderId;
    
    
    private String shipGroupSeqId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SHIPMENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Shipment shipment = null;
    private transient OrderItemShipGroup orderItemShipGroup = null;

  /**
   * Default constructor.
   */
  public ShipmentAndOrderItemShipGroup() {
      super();
      this.baseEntityName = "ShipmentAndOrderItemShipGroup";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("shipmentId");this.primaryKeyNames.add("orderId");this.primaryKeyNames.add("shipGroupSeqId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ShipmentAndOrderItemShipGroup(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param shipmentId the shipmentId to set
     */
    private void setShipmentId(String shipmentId) {
        this.shipmentId = shipmentId;
    }
    /**
     * Auto generated value setter.
     * @param orderId the orderId to set
     */
    private void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    /**
     * Auto generated value setter.
     * @param shipGroupSeqId the shipGroupSeqId to set
     */
    private void setShipGroupSeqId(String shipGroupSeqId) {
        this.shipGroupSeqId = shipGroupSeqId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShipmentId() {
        return this.shipmentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderId() {
        return this.orderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShipGroupSeqId() {
        return this.shipGroupSeqId;
    }

    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>Shipment</code>.
     * @return the <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public Shipment getShipment() throws RepositoryException {
        if (this.shipment == null) {
            this.shipment = getRelatedOne(Shipment.class, "Shipment");
        }
        return this.shipment;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroup</code> by the relation named <code>OrderItemShipGroup</code>.
     * @return the <code>OrderItemShipGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderItemShipGroup getOrderItemShipGroup() throws RepositoryException {
        if (this.orderItemShipGroup == null) {
            this.orderItemShipGroup = getRelatedOne(OrderItemShipGroup.class, "OrderItemShipGroup");
        }
        return this.orderItemShipGroup;
    }

    /**
     * Auto generated value setter.
     * @param shipment the shipment to set
    */
    public void setShipment(Shipment shipment) {
        this.shipment = shipment;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGroup the orderItemShipGroup to set
    */
    public void setOrderItemShipGroup(OrderItemShipGroup orderItemShipGroup) {
        this.orderItemShipGroup = orderItemShipGroup;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setShipmentId((String) mapValue.get("shipmentId"));
        setOrderId((String) mapValue.get("orderId"));
        setShipGroupSeqId((String) mapValue.get("shipGroupSeqId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("shipmentId", getShipmentId());
        mapValue.put("orderId", getOrderId());
        mapValue.put("shipGroupSeqId", getShipGroupSeqId());
        return mapValue;
    }


}
