package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Subscription.
 */
@javax.persistence.Entity
@Table(name="SUBSCRIPTION")
public class Subscription extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("subscriptionId", "SUBSCRIPTION_ID");
        fields.put("description", "DESCRIPTION");
        fields.put("subscriptionResourceId", "SUBSCRIPTION_RESOURCE_ID");
        fields.put("communicationEventId", "COMMUNICATION_EVENT_ID");
        fields.put("contactMechId", "CONTACT_MECH_ID");
        fields.put("originatedFromPartyId", "ORIGINATED_FROM_PARTY_ID");
        fields.put("originatedFromRoleTypeId", "ORIGINATED_FROM_ROLE_TYPE_ID");
        fields.put("partyId", "PARTY_ID");
        fields.put("roleTypeId", "ROLE_TYPE_ID");
        fields.put("partyNeedId", "PARTY_NEED_ID");
        fields.put("needTypeId", "NEED_TYPE_ID");
        fields.put("orderId", "ORDER_ID");
        fields.put("orderItemSeqId", "ORDER_ITEM_SEQ_ID");
        fields.put("productId", "PRODUCT_ID");
        fields.put("productCategoryId", "PRODUCT_CATEGORY_ID");
        fields.put("inventoryItemId", "INVENTORY_ITEM_ID");
        fields.put("subscriptionTypeId", "SUBSCRIPTION_TYPE_ID");
        fields.put("externalSubscriptionId", "EXTERNAL_SUBSCRIPTION_ID");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("Subscription", fields);
}
  public static enum Fields implements EntityFieldInterface<Subscription> {
    subscriptionId("subscriptionId"),
    description("description"),
    subscriptionResourceId("subscriptionResourceId"),
    communicationEventId("communicationEventId"),
    contactMechId("contactMechId"),
    originatedFromPartyId("originatedFromPartyId"),
    originatedFromRoleTypeId("originatedFromRoleTypeId"),
    partyId("partyId"),
    roleTypeId("roleTypeId"),
    partyNeedId("partyNeedId"),
    needTypeId("needTypeId"),
    orderId("orderId"),
    orderItemSeqId("orderItemSeqId"),
    productId("productId"),
    productCategoryId("productCategoryId"),
    inventoryItemId("inventoryItemId"),
    subscriptionTypeId("subscriptionTypeId"),
    externalSubscriptionId("externalSubscriptionId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Subscription_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Subscription_GEN")   
    @Id
    
    @Column(name="SUBSCRIPTION_ID")
    private String subscriptionId;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="SUBSCRIPTION_RESOURCE_ID")
    private String subscriptionResourceId;
    
    @Column(name="COMMUNICATION_EVENT_ID")
    private String communicationEventId;
    
    @Column(name="CONTACT_MECH_ID")
    private String contactMechId;
    
    @Column(name="ORIGINATED_FROM_PARTY_ID")
    private String originatedFromPartyId;
    
    @Column(name="ORIGINATED_FROM_ROLE_TYPE_ID")
    private String originatedFromRoleTypeId;
    
    @Column(name="PARTY_ID")
    private String partyId;
    
    @Column(name="ROLE_TYPE_ID")
    private String roleTypeId;
    
    @Column(name="PARTY_NEED_ID")
    private String partyNeedId;
    
    @Column(name="NEED_TYPE_ID")
    private String needTypeId;
    
    @Column(name="ORDER_ID")
    private String orderId;
    
    @Column(name="ORDER_ITEM_SEQ_ID")
    private String orderItemSeqId;
    
    @Column(name="PRODUCT_ID")
    private String productId;
    
    @Column(name="PRODUCT_CATEGORY_ID")
    private String productCategoryId;
    
    @Column(name="INVENTORY_ITEM_ID")
    private String inventoryItemId;
    
    @Column(name="SUBSCRIPTION_TYPE_ID")
    private String subscriptionTypeId;
    
    @Column(name="EXTERNAL_SUBSCRIPTION_ID")
    private String externalSubscriptionId;
    
    @Column(name="FROM_DATE")
    private Timestamp fromDate;
    
    @Column(name="THRU_DATE")
    private Timestamp thruDate;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SUBSCRIPTION_RESOURCE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private SubscriptionResource subscriptionResource = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactMech contactMech = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party party = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ROLE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private RoleType roleType = null;
    private transient PartyRole partyRole = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGINATED_FROM_PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party originatedFromParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGINATED_FROM_ROLE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private RoleType originatedFromRoleType = null;
    private transient PartyRole originatedFromPartyRole = null;
    private transient PartyNeed partyNeed = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="NEED_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private NeedType needType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private OrderHeader orderHeader = null;
    private transient OrderItem orderItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Product product = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_CATEGORY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductCategory productCategory = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private InventoryItem inventoryItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SUBSCRIPTION_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private SubscriptionType subscriptionType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SUBSCRIPTION_TYPE_ID")
    private List<SubscriptionTypeAttr> subscriptionTypeAttrs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="subscription", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="SUBSCRIPTION_ID")
    private List<SubscriptionAttribute> subscriptionAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="subscription", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="SUBSCRIPTION_ID")
    private List<SubscriptionCommEvent> subscriptionCommEvents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="subscription", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="SUBSCRIPTION_ID")
    private List<SubscriptionFulfillmentPiece> subscriptionFulfillmentPieces = null;

  /**
   * Default constructor.
   */
  public Subscription() {
      super();
      this.baseEntityName = "Subscription";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("subscriptionId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Subscription(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param subscriptionId the subscriptionId to set
     */
    public void setSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param subscriptionResourceId the subscriptionResourceId to set
     */
    public void setSubscriptionResourceId(String subscriptionResourceId) {
        this.subscriptionResourceId = subscriptionResourceId;
    }
    /**
     * Auto generated value setter.
     * @param communicationEventId the communicationEventId to set
     */
    public void setCommunicationEventId(String communicationEventId) {
        this.communicationEventId = communicationEventId;
    }
    /**
     * Auto generated value setter.
     * @param contactMechId the contactMechId to set
     */
    public void setContactMechId(String contactMechId) {
        this.contactMechId = contactMechId;
    }
    /**
     * Auto generated value setter.
     * @param originatedFromPartyId the originatedFromPartyId to set
     */
    public void setOriginatedFromPartyId(String originatedFromPartyId) {
        this.originatedFromPartyId = originatedFromPartyId;
    }
    /**
     * Auto generated value setter.
     * @param originatedFromRoleTypeId the originatedFromRoleTypeId to set
     */
    public void setOriginatedFromRoleTypeId(String originatedFromRoleTypeId) {
        this.originatedFromRoleTypeId = originatedFromRoleTypeId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeId the roleTypeId to set
     */
    public void setRoleTypeId(String roleTypeId) {
        this.roleTypeId = roleTypeId;
    }
    /**
     * Auto generated value setter.
     * @param partyNeedId the partyNeedId to set
     */
    public void setPartyNeedId(String partyNeedId) {
        this.partyNeedId = partyNeedId;
    }
    /**
     * Auto generated value setter.
     * @param needTypeId the needTypeId to set
     */
    public void setNeedTypeId(String needTypeId) {
        this.needTypeId = needTypeId;
    }
    /**
     * Auto generated value setter.
     * @param orderId the orderId to set
     */
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    /**
     * Auto generated value setter.
     * @param orderItemSeqId the orderItemSeqId to set
     */
    public void setOrderItemSeqId(String orderItemSeqId) {
        this.orderItemSeqId = orderItemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param productCategoryId the productCategoryId to set
     */
    public void setProductCategoryId(String productCategoryId) {
        this.productCategoryId = productCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemId the inventoryItemId to set
     */
    public void setInventoryItemId(String inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
    }
    /**
     * Auto generated value setter.
     * @param subscriptionTypeId the subscriptionTypeId to set
     */
    public void setSubscriptionTypeId(String subscriptionTypeId) {
        this.subscriptionTypeId = subscriptionTypeId;
    }
    /**
     * Auto generated value setter.
     * @param externalSubscriptionId the externalSubscriptionId to set
     */
    public void setExternalSubscriptionId(String externalSubscriptionId) {
        this.externalSubscriptionId = externalSubscriptionId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSubscriptionId() {
        return this.subscriptionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSubscriptionResourceId() {
        return this.subscriptionResourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCommunicationEventId() {
        return this.communicationEventId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechId() {
        return this.contactMechId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOriginatedFromPartyId() {
        return this.originatedFromPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOriginatedFromRoleTypeId() {
        return this.originatedFromRoleTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeId() {
        return this.roleTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyNeedId() {
        return this.partyNeedId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNeedTypeId() {
        return this.needTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderId() {
        return this.orderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderItemSeqId() {
        return this.orderItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductCategoryId() {
        return this.productCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInventoryItemId() {
        return this.inventoryItemId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSubscriptionTypeId() {
        return this.subscriptionTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExternalSubscriptionId() {
        return this.externalSubscriptionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>SubscriptionResource</code> by the relation named <code>SubscriptionResource</code>.
     * @return the <code>SubscriptionResource</code>
     * @throws RepositoryException if an error occurs
     */
    public SubscriptionResource getSubscriptionResource() throws RepositoryException {
        if (this.subscriptionResource == null) {
            this.subscriptionResource = getRelatedOne(SubscriptionResource.class, "SubscriptionResource");
        }
        return this.subscriptionResource;
    }
    /**
     * Auto generated method that gets the related <code>ContactMech</code> by the relation named <code>ContactMech</code>.
     * @return the <code>ContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMech getContactMech() throws RepositoryException {
        if (this.contactMech == null) {
            this.contactMech = getRelatedOne(ContactMech.class, "ContactMech");
        }
        return this.contactMech;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>RoleType</code> by the relation named <code>RoleType</code>.
     * @return the <code>RoleType</code>
     * @throws RepositoryException if an error occurs
     */
    public RoleType getRoleType() throws RepositoryException {
        if (this.roleType == null) {
            this.roleType = getRelatedOne(RoleType.class, "RoleType");
        }
        return this.roleType;
    }
    /**
     * Auto generated method that gets the related <code>PartyRole</code> by the relation named <code>PartyRole</code>.
     * @return the <code>PartyRole</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyRole getPartyRole() throws RepositoryException {
        if (this.partyRole == null) {
            this.partyRole = getRelatedOne(PartyRole.class, "PartyRole");
        }
        return this.partyRole;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>OriginatedFromParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getOriginatedFromParty() throws RepositoryException {
        if (this.originatedFromParty == null) {
            this.originatedFromParty = getRelatedOne(Party.class, "OriginatedFromParty");
        }
        return this.originatedFromParty;
    }
    /**
     * Auto generated method that gets the related <code>RoleType</code> by the relation named <code>OriginatedFromRoleType</code>.
     * @return the <code>RoleType</code>
     * @throws RepositoryException if an error occurs
     */
    public RoleType getOriginatedFromRoleType() throws RepositoryException {
        if (this.originatedFromRoleType == null) {
            this.originatedFromRoleType = getRelatedOne(RoleType.class, "OriginatedFromRoleType");
        }
        return this.originatedFromRoleType;
    }
    /**
     * Auto generated method that gets the related <code>PartyRole</code> by the relation named <code>OriginatedFromPartyRole</code>.
     * @return the <code>PartyRole</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyRole getOriginatedFromPartyRole() throws RepositoryException {
        if (this.originatedFromPartyRole == null) {
            this.originatedFromPartyRole = getRelatedOne(PartyRole.class, "OriginatedFromPartyRole");
        }
        return this.originatedFromPartyRole;
    }
    /**
     * Auto generated method that gets the related <code>PartyNeed</code> by the relation named <code>PartyNeed</code>.
     * @return the <code>PartyNeed</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyNeed getPartyNeed() throws RepositoryException {
        if (this.partyNeed == null) {
            this.partyNeed = getRelatedOne(PartyNeed.class, "PartyNeed");
        }
        return this.partyNeed;
    }
    /**
     * Auto generated method that gets the related <code>NeedType</code> by the relation named <code>NeedType</code>.
     * @return the <code>NeedType</code>
     * @throws RepositoryException if an error occurs
     */
    public NeedType getNeedType() throws RepositoryException {
        if (this.needType == null) {
            this.needType = getRelatedOne(NeedType.class, "NeedType");
        }
        return this.needType;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>OrderHeader</code>.
     * @return the <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderHeader getOrderHeader() throws RepositoryException {
        if (this.orderHeader == null) {
            this.orderHeader = getRelatedOne(OrderHeader.class, "OrderHeader");
        }
        return this.orderHeader;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>OrderItem</code>.
     * @return the <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderItem getOrderItem() throws RepositoryException {
        if (this.orderItem == null) {
            this.orderItem = getRelatedOne(OrderItem.class, "OrderItem");
        }
        return this.orderItem;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>Product</code>.
     * @return the <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public Product getProduct() throws RepositoryException {
        if (this.product == null) {
            this.product = getRelatedOne(Product.class, "Product");
        }
        return this.product;
    }
    /**
     * Auto generated method that gets the related <code>ProductCategory</code> by the relation named <code>ProductCategory</code>.
     * @return the <code>ProductCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductCategory getProductCategory() throws RepositoryException {
        if (this.productCategory == null) {
            this.productCategory = getRelatedOne(ProductCategory.class, "ProductCategory");
        }
        return this.productCategory;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItem</code> by the relation named <code>InventoryItem</code>.
     * @return the <code>InventoryItem</code>
     * @throws RepositoryException if an error occurs
     */
    public InventoryItem getInventoryItem() throws RepositoryException {
        if (this.inventoryItem == null) {
            this.inventoryItem = getRelatedOne(InventoryItem.class, "InventoryItem");
        }
        return this.inventoryItem;
    }
    /**
     * Auto generated method that gets the related <code>SubscriptionType</code> by the relation named <code>SubscriptionType</code>.
     * @return the <code>SubscriptionType</code>
     * @throws RepositoryException if an error occurs
     */
    public SubscriptionType getSubscriptionType() throws RepositoryException {
        if (this.subscriptionType == null) {
            this.subscriptionType = getRelatedOne(SubscriptionType.class, "SubscriptionType");
        }
        return this.subscriptionType;
    }
    /**
     * Auto generated method that gets the related <code>SubscriptionTypeAttr</code> by the relation named <code>SubscriptionTypeAttr</code>.
     * @return the list of <code>SubscriptionTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SubscriptionTypeAttr> getSubscriptionTypeAttrs() throws RepositoryException {
        if (this.subscriptionTypeAttrs == null) {
            this.subscriptionTypeAttrs = getRelated(SubscriptionTypeAttr.class, "SubscriptionTypeAttr");
        }
        return this.subscriptionTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>SubscriptionAttribute</code> by the relation named <code>SubscriptionAttribute</code>.
     * @return the list of <code>SubscriptionAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SubscriptionAttribute> getSubscriptionAttributes() throws RepositoryException {
        if (this.subscriptionAttributes == null) {
            this.subscriptionAttributes = getRelated(SubscriptionAttribute.class, "SubscriptionAttribute");
        }
        return this.subscriptionAttributes;
    }
    /**
     * Auto generated method that gets the related <code>SubscriptionCommEvent</code> by the relation named <code>SubscriptionCommEvent</code>.
     * @return the list of <code>SubscriptionCommEvent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SubscriptionCommEvent> getSubscriptionCommEvents() throws RepositoryException {
        if (this.subscriptionCommEvents == null) {
            this.subscriptionCommEvents = getRelated(SubscriptionCommEvent.class, "SubscriptionCommEvent");
        }
        return this.subscriptionCommEvents;
    }
    /**
     * Auto generated method that gets the related <code>SubscriptionFulfillmentPiece</code> by the relation named <code>SubscriptionFulfillmentPiece</code>.
     * @return the list of <code>SubscriptionFulfillmentPiece</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SubscriptionFulfillmentPiece> getSubscriptionFulfillmentPieces() throws RepositoryException {
        if (this.subscriptionFulfillmentPieces == null) {
            this.subscriptionFulfillmentPieces = getRelated(SubscriptionFulfillmentPiece.class, "SubscriptionFulfillmentPiece");
        }
        return this.subscriptionFulfillmentPieces;
    }

    /**
     * Auto generated value setter.
     * @param subscriptionResource the subscriptionResource to set
    */
    public void setSubscriptionResource(SubscriptionResource subscriptionResource) {
        this.subscriptionResource = subscriptionResource;
    }
    /**
     * Auto generated value setter.
     * @param contactMech the contactMech to set
    */
    public void setContactMech(ContactMech contactMech) {
        this.contactMech = contactMech;
    }
    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param roleType the roleType to set
    */
    public void setRoleType(RoleType roleType) {
        this.roleType = roleType;
    }
    /**
     * Auto generated value setter.
     * @param partyRole the partyRole to set
    */
    public void setPartyRole(PartyRole partyRole) {
        this.partyRole = partyRole;
    }
    /**
     * Auto generated value setter.
     * @param originatedFromParty the originatedFromParty to set
    */
    public void setOriginatedFromParty(Party originatedFromParty) {
        this.originatedFromParty = originatedFromParty;
    }
    /**
     * Auto generated value setter.
     * @param originatedFromRoleType the originatedFromRoleType to set
    */
    public void setOriginatedFromRoleType(RoleType originatedFromRoleType) {
        this.originatedFromRoleType = originatedFromRoleType;
    }
    /**
     * Auto generated value setter.
     * @param originatedFromPartyRole the originatedFromPartyRole to set
    */
    public void setOriginatedFromPartyRole(PartyRole originatedFromPartyRole) {
        this.originatedFromPartyRole = originatedFromPartyRole;
    }
    /**
     * Auto generated value setter.
     * @param partyNeed the partyNeed to set
    */
    public void setPartyNeed(PartyNeed partyNeed) {
        this.partyNeed = partyNeed;
    }
    /**
     * Auto generated value setter.
     * @param needType the needType to set
    */
    public void setNeedType(NeedType needType) {
        this.needType = needType;
    }
    /**
     * Auto generated value setter.
     * @param orderHeader the orderHeader to set
    */
    public void setOrderHeader(OrderHeader orderHeader) {
        this.orderHeader = orderHeader;
    }
    /**
     * Auto generated value setter.
     * @param orderItem the orderItem to set
    */
    public void setOrderItem(OrderItem orderItem) {
        this.orderItem = orderItem;
    }
    /**
     * Auto generated value setter.
     * @param product the product to set
    */
    public void setProduct(Product product) {
        this.product = product;
    }
    /**
     * Auto generated value setter.
     * @param productCategory the productCategory to set
    */
    public void setProductCategory(ProductCategory productCategory) {
        this.productCategory = productCategory;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItem the inventoryItem to set
    */
    public void setInventoryItem(InventoryItem inventoryItem) {
        this.inventoryItem = inventoryItem;
    }
    /**
     * Auto generated value setter.
     * @param subscriptionType the subscriptionType to set
    */
    public void setSubscriptionType(SubscriptionType subscriptionType) {
        this.subscriptionType = subscriptionType;
    }
    /**
     * Auto generated value setter.
     * @param subscriptionTypeAttrs the subscriptionTypeAttrs to set
    */
    public void setSubscriptionTypeAttrs(List<SubscriptionTypeAttr> subscriptionTypeAttrs) {
        this.subscriptionTypeAttrs = subscriptionTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param subscriptionAttributes the subscriptionAttributes to set
    */
    public void setSubscriptionAttributes(List<SubscriptionAttribute> subscriptionAttributes) {
        this.subscriptionAttributes = subscriptionAttributes;
    }
    /**
     * Auto generated value setter.
     * @param subscriptionCommEvents the subscriptionCommEvents to set
    */
    public void setSubscriptionCommEvents(List<SubscriptionCommEvent> subscriptionCommEvents) {
        this.subscriptionCommEvents = subscriptionCommEvents;
    }
    /**
     * Auto generated value setter.
     * @param subscriptionFulfillmentPieces the subscriptionFulfillmentPieces to set
    */
    public void setSubscriptionFulfillmentPieces(List<SubscriptionFulfillmentPiece> subscriptionFulfillmentPieces) {
        this.subscriptionFulfillmentPieces = subscriptionFulfillmentPieces;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addSubscriptionAttribute(SubscriptionAttribute subscriptionAttribute) {
        if (this.subscriptionAttributes == null) {
            this.subscriptionAttributes = new ArrayList<SubscriptionAttribute>();
        }
        this.subscriptionAttributes.add(subscriptionAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSubscriptionAttribute(SubscriptionAttribute subscriptionAttribute) {
        if (this.subscriptionAttributes == null) {
            return;
        }
        this.subscriptionAttributes.remove(subscriptionAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSubscriptionAttribute() {
        if (this.subscriptionAttributes == null) {
            return;
        }
        this.subscriptionAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addSubscriptionCommEvent(SubscriptionCommEvent subscriptionCommEvent) {
        if (this.subscriptionCommEvents == null) {
            this.subscriptionCommEvents = new ArrayList<SubscriptionCommEvent>();
        }
        this.subscriptionCommEvents.add(subscriptionCommEvent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSubscriptionCommEvent(SubscriptionCommEvent subscriptionCommEvent) {
        if (this.subscriptionCommEvents == null) {
            return;
        }
        this.subscriptionCommEvents.remove(subscriptionCommEvent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSubscriptionCommEvent() {
        if (this.subscriptionCommEvents == null) {
            return;
        }
        this.subscriptionCommEvents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addSubscriptionFulfillmentPiece(SubscriptionFulfillmentPiece subscriptionFulfillmentPiece) {
        if (this.subscriptionFulfillmentPieces == null) {
            this.subscriptionFulfillmentPieces = new ArrayList<SubscriptionFulfillmentPiece>();
        }
        this.subscriptionFulfillmentPieces.add(subscriptionFulfillmentPiece);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSubscriptionFulfillmentPiece(SubscriptionFulfillmentPiece subscriptionFulfillmentPiece) {
        if (this.subscriptionFulfillmentPieces == null) {
            return;
        }
        this.subscriptionFulfillmentPieces.remove(subscriptionFulfillmentPiece);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSubscriptionFulfillmentPiece() {
        if (this.subscriptionFulfillmentPieces == null) {
            return;
        }
        this.subscriptionFulfillmentPieces.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setSubscriptionId((String) mapValue.get("subscriptionId"));
        setDescription((String) mapValue.get("description"));
        setSubscriptionResourceId((String) mapValue.get("subscriptionResourceId"));
        setCommunicationEventId((String) mapValue.get("communicationEventId"));
        setContactMechId((String) mapValue.get("contactMechId"));
        setOriginatedFromPartyId((String) mapValue.get("originatedFromPartyId"));
        setOriginatedFromRoleTypeId((String) mapValue.get("originatedFromRoleTypeId"));
        setPartyId((String) mapValue.get("partyId"));
        setRoleTypeId((String) mapValue.get("roleTypeId"));
        setPartyNeedId((String) mapValue.get("partyNeedId"));
        setNeedTypeId((String) mapValue.get("needTypeId"));
        setOrderId((String) mapValue.get("orderId"));
        setOrderItemSeqId((String) mapValue.get("orderItemSeqId"));
        setProductId((String) mapValue.get("productId"));
        setProductCategoryId((String) mapValue.get("productCategoryId"));
        setInventoryItemId((String) mapValue.get("inventoryItemId"));
        setSubscriptionTypeId((String) mapValue.get("subscriptionTypeId"));
        setExternalSubscriptionId((String) mapValue.get("externalSubscriptionId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("subscriptionId", getSubscriptionId());
        mapValue.put("description", getDescription());
        mapValue.put("subscriptionResourceId", getSubscriptionResourceId());
        mapValue.put("communicationEventId", getCommunicationEventId());
        mapValue.put("contactMechId", getContactMechId());
        mapValue.put("originatedFromPartyId", getOriginatedFromPartyId());
        mapValue.put("originatedFromRoleTypeId", getOriginatedFromRoleTypeId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("roleTypeId", getRoleTypeId());
        mapValue.put("partyNeedId", getPartyNeedId());
        mapValue.put("needTypeId", getNeedTypeId());
        mapValue.put("orderId", getOrderId());
        mapValue.put("orderItemSeqId", getOrderItemSeqId());
        mapValue.put("productId", getProductId());
        mapValue.put("productCategoryId", getProductCategoryId());
        mapValue.put("inventoryItemId", getInventoryItemId());
        mapValue.put("subscriptionTypeId", getSubscriptionTypeId());
        mapValue.put("externalSubscriptionId", getExternalSubscriptionId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
