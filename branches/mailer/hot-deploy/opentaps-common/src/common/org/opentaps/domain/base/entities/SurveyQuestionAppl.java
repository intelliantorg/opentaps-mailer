package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity SurveyQuestionAppl.
 */
@javax.persistence.Entity
@Table(name="SURVEY_QUESTION_APPL")
@IdClass(SurveyQuestionApplPk.class)
public class SurveyQuestionAppl extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("surveyId", "SURVEY_ID");
        fields.put("surveyQuestionId", "SURVEY_QUESTION_ID");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("surveyPageSeqId", "SURVEY_PAGE_SEQ_ID");
        fields.put("surveyMultiRespId", "SURVEY_MULTI_RESP_ID");
        fields.put("surveyMultiRespColId", "SURVEY_MULTI_RESP_COL_ID");
        fields.put("requiredField", "REQUIRED_FIELD");
        fields.put("sequenceNum", "SEQUENCE_NUM");
        fields.put("externalFieldRef", "EXTERNAL_FIELD_REF");
        fields.put("withSurveyQuestionId", "WITH_SURVEY_QUESTION_ID");
        fields.put("withSurveyOptionSeqId", "WITH_SURVEY_OPTION_SEQ_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("SurveyQuestionAppl", fields);
}
  public static enum Fields implements EntityFieldInterface<SurveyQuestionAppl> {
    surveyId("surveyId"),
    surveyQuestionId("surveyQuestionId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    surveyPageSeqId("surveyPageSeqId"),
    surveyMultiRespId("surveyMultiRespId"),
    surveyMultiRespColId("surveyMultiRespColId"),
    requiredField("requiredField"),
    sequenceNum("sequenceNum"),
    externalFieldRef("externalFieldRef"),
    withSurveyQuestionId("withSurveyQuestionId"),
    withSurveyOptionSeqId("withSurveyOptionSeqId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="SURVEY_ID")
    private String surveyId;
    @Id
    
    @Column(name="SURVEY_QUESTION_ID")
    private String surveyQuestionId;
    @Id
    
    @Column(name="FROM_DATE")
    private Timestamp fromDate;
    
    @Column(name="THRU_DATE")
    private Timestamp thruDate;
    
    @Column(name="SURVEY_PAGE_SEQ_ID")
    private String surveyPageSeqId;
    
    @Column(name="SURVEY_MULTI_RESP_ID")
    private String surveyMultiRespId;
    
    @Column(name="SURVEY_MULTI_RESP_COL_ID")
    private String surveyMultiRespColId;
    
    @Column(name="REQUIRED_FIELD")
    private String requiredField;
    
    @Column(name="SEQUENCE_NUM")
    private Long sequenceNum;
    
    @Column(name="EXTERNAL_FIELD_REF")
    private String externalFieldRef;
    
    @Column(name="WITH_SURVEY_QUESTION_ID")
    private String withSurveyQuestionId;
    
    @Column(name="WITH_SURVEY_OPTION_SEQ_ID")
    private String withSurveyOptionSeqId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SURVEY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Survey survey = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SURVEY_QUESTION_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private SurveyQuestion surveyQuestion = null;
    private transient SurveyQuestionOption withSurveyQuestionOption = null;
    private transient SurveyPage surveyPage = null;
    private transient SurveyMultiResp surveyMultiResp = null;
    private transient SurveyMultiRespColumn surveyMultiRespColumn = null;

  /**
   * Default constructor.
   */
  public SurveyQuestionAppl() {
      super();
      this.baseEntityName = "SurveyQuestionAppl";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("surveyId");this.primaryKeyNames.add("surveyQuestionId");this.primaryKeyNames.add("fromDate");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public SurveyQuestionAppl(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param surveyId the surveyId to set
     */
    public void setSurveyId(String surveyId) {
        this.surveyId = surveyId;
    }
    /**
     * Auto generated value setter.
     * @param surveyQuestionId the surveyQuestionId to set
     */
    public void setSurveyQuestionId(String surveyQuestionId) {
        this.surveyQuestionId = surveyQuestionId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param surveyPageSeqId the surveyPageSeqId to set
     */
    public void setSurveyPageSeqId(String surveyPageSeqId) {
        this.surveyPageSeqId = surveyPageSeqId;
    }
    /**
     * Auto generated value setter.
     * @param surveyMultiRespId the surveyMultiRespId to set
     */
    public void setSurveyMultiRespId(String surveyMultiRespId) {
        this.surveyMultiRespId = surveyMultiRespId;
    }
    /**
     * Auto generated value setter.
     * @param surveyMultiRespColId the surveyMultiRespColId to set
     */
    public void setSurveyMultiRespColId(String surveyMultiRespColId) {
        this.surveyMultiRespColId = surveyMultiRespColId;
    }
    /**
     * Auto generated value setter.
     * @param requiredField the requiredField to set
     */
    public void setRequiredField(String requiredField) {
        this.requiredField = requiredField;
    }
    /**
     * Auto generated value setter.
     * @param sequenceNum the sequenceNum to set
     */
    public void setSequenceNum(Long sequenceNum) {
        this.sequenceNum = sequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param externalFieldRef the externalFieldRef to set
     */
    public void setExternalFieldRef(String externalFieldRef) {
        this.externalFieldRef = externalFieldRef;
    }
    /**
     * Auto generated value setter.
     * @param withSurveyQuestionId the withSurveyQuestionId to set
     */
    public void setWithSurveyQuestionId(String withSurveyQuestionId) {
        this.withSurveyQuestionId = withSurveyQuestionId;
    }
    /**
     * Auto generated value setter.
     * @param withSurveyOptionSeqId the withSurveyOptionSeqId to set
     */
    public void setWithSurveyOptionSeqId(String withSurveyOptionSeqId) {
        this.withSurveyOptionSeqId = withSurveyOptionSeqId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSurveyId() {
        return this.surveyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSurveyQuestionId() {
        return this.surveyQuestionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSurveyPageSeqId() {
        return this.surveyPageSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSurveyMultiRespId() {
        return this.surveyMultiRespId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSurveyMultiRespColId() {
        return this.surveyMultiRespColId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRequiredField() {
        return this.requiredField;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getSequenceNum() {
        return this.sequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExternalFieldRef() {
        return this.externalFieldRef;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWithSurveyQuestionId() {
        return this.withSurveyQuestionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWithSurveyOptionSeqId() {
        return this.withSurveyOptionSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Survey</code> by the relation named <code>Survey</code>.
     * @return the <code>Survey</code>
     * @throws RepositoryException if an error occurs
     */
    public Survey getSurvey() throws RepositoryException {
        if (this.survey == null) {
            this.survey = getRelatedOne(Survey.class, "Survey");
        }
        return this.survey;
    }
    /**
     * Auto generated method that gets the related <code>SurveyQuestion</code> by the relation named <code>SurveyQuestion</code>.
     * @return the <code>SurveyQuestion</code>
     * @throws RepositoryException if an error occurs
     */
    public SurveyQuestion getSurveyQuestion() throws RepositoryException {
        if (this.surveyQuestion == null) {
            this.surveyQuestion = getRelatedOne(SurveyQuestion.class, "SurveyQuestion");
        }
        return this.surveyQuestion;
    }
    /**
     * Auto generated method that gets the related <code>SurveyQuestionOption</code> by the relation named <code>WithSurveyQuestionOption</code>.
     * @return the <code>SurveyQuestionOption</code>
     * @throws RepositoryException if an error occurs
     */
    public SurveyQuestionOption getWithSurveyQuestionOption() throws RepositoryException {
        if (this.withSurveyQuestionOption == null) {
            this.withSurveyQuestionOption = getRelatedOne(SurveyQuestionOption.class, "WithSurveyQuestionOption");
        }
        return this.withSurveyQuestionOption;
    }
    /**
     * Auto generated method that gets the related <code>SurveyPage</code> by the relation named <code>SurveyPage</code>.
     * @return the <code>SurveyPage</code>
     * @throws RepositoryException if an error occurs
     */
    public SurveyPage getSurveyPage() throws RepositoryException {
        if (this.surveyPage == null) {
            this.surveyPage = getRelatedOne(SurveyPage.class, "SurveyPage");
        }
        return this.surveyPage;
    }
    /**
     * Auto generated method that gets the related <code>SurveyMultiResp</code> by the relation named <code>SurveyMultiResp</code>.
     * @return the <code>SurveyMultiResp</code>
     * @throws RepositoryException if an error occurs
     */
    public SurveyMultiResp getSurveyMultiResp() throws RepositoryException {
        if (this.surveyMultiResp == null) {
            this.surveyMultiResp = getRelatedOne(SurveyMultiResp.class, "SurveyMultiResp");
        }
        return this.surveyMultiResp;
    }
    /**
     * Auto generated method that gets the related <code>SurveyMultiRespColumn</code> by the relation named <code>SurveyMultiRespColumn</code>.
     * @return the <code>SurveyMultiRespColumn</code>
     * @throws RepositoryException if an error occurs
     */
    public SurveyMultiRespColumn getSurveyMultiRespColumn() throws RepositoryException {
        if (this.surveyMultiRespColumn == null) {
            this.surveyMultiRespColumn = getRelatedOne(SurveyMultiRespColumn.class, "SurveyMultiRespColumn");
        }
        return this.surveyMultiRespColumn;
    }

    /**
     * Auto generated value setter.
     * @param survey the survey to set
    */
    public void setSurvey(Survey survey) {
        this.survey = survey;
    }
    /**
     * Auto generated value setter.
     * @param surveyQuestion the surveyQuestion to set
    */
    public void setSurveyQuestion(SurveyQuestion surveyQuestion) {
        this.surveyQuestion = surveyQuestion;
    }
    /**
     * Auto generated value setter.
     * @param withSurveyQuestionOption the withSurveyQuestionOption to set
    */
    public void setWithSurveyQuestionOption(SurveyQuestionOption withSurveyQuestionOption) {
        this.withSurveyQuestionOption = withSurveyQuestionOption;
    }
    /**
     * Auto generated value setter.
     * @param surveyPage the surveyPage to set
    */
    public void setSurveyPage(SurveyPage surveyPage) {
        this.surveyPage = surveyPage;
    }
    /**
     * Auto generated value setter.
     * @param surveyMultiResp the surveyMultiResp to set
    */
    public void setSurveyMultiResp(SurveyMultiResp surveyMultiResp) {
        this.surveyMultiResp = surveyMultiResp;
    }
    /**
     * Auto generated value setter.
     * @param surveyMultiRespColumn the surveyMultiRespColumn to set
    */
    public void setSurveyMultiRespColumn(SurveyMultiRespColumn surveyMultiRespColumn) {
        this.surveyMultiRespColumn = surveyMultiRespColumn;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setSurveyId((String) mapValue.get("surveyId"));
        setSurveyQuestionId((String) mapValue.get("surveyQuestionId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setSurveyPageSeqId((String) mapValue.get("surveyPageSeqId"));
        setSurveyMultiRespId((String) mapValue.get("surveyMultiRespId"));
        setSurveyMultiRespColId((String) mapValue.get("surveyMultiRespColId"));
        setRequiredField((String) mapValue.get("requiredField"));
        setSequenceNum((Long) mapValue.get("sequenceNum"));
        setExternalFieldRef((String) mapValue.get("externalFieldRef"));
        setWithSurveyQuestionId((String) mapValue.get("withSurveyQuestionId"));
        setWithSurveyOptionSeqId((String) mapValue.get("withSurveyOptionSeqId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("surveyId", getSurveyId());
        mapValue.put("surveyQuestionId", getSurveyQuestionId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("surveyPageSeqId", getSurveyPageSeqId());
        mapValue.put("surveyMultiRespId", getSurveyMultiRespId());
        mapValue.put("surveyMultiRespColId", getSurveyMultiRespColId());
        mapValue.put("requiredField", getRequiredField());
        mapValue.put("sequenceNum", getSequenceNum());
        mapValue.put("externalFieldRef", getExternalFieldRef());
        mapValue.put("withSurveyQuestionId", getWithSurveyQuestionId());
        mapValue.put("withSurveyOptionSeqId", getWithSurveyOptionSeqId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
