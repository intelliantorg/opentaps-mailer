package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity WorkflowPackage.
 */
@javax.persistence.Entity
@Table(name="WORKFLOW_PACKAGE")
@IdClass(WorkflowPackagePk.class)
public class WorkflowPackage extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("packageId", "PACKAGE_ID");
        fields.put("packageVersion", "PACKAGE_VERSION");
        fields.put("packageName", "PACKAGE_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("specificationVersion", "SPECIFICATION_VERSION");
        fields.put("specificationId", "SPECIFICATION_ID");
        fields.put("sourceVendorInfo", "SOURCE_VENDOR_INFO");
        fields.put("creationDateTime", "CREATION_DATE_TIME");
        fields.put("author", "AUTHOR");
        fields.put("codepage", "CODEPAGE");
        fields.put("countryGeoId", "COUNTRY_GEO_ID");
        fields.put("publicationStatusId", "PUBLICATION_STATUS_ID");
        fields.put("graphConformanceEnumId", "GRAPH_CONFORMANCE_ENUM_ID");
        fields.put("priorityUomId", "PRIORITY_UOM_ID");
        fields.put("costUomId", "COST_UOM_ID");
        fields.put("responsibleListId", "RESPONSIBLE_LIST_ID");
        fields.put("documentationUrl", "DOCUMENTATION_URL");
        fields.put("importedFromUrl", "IMPORTED_FROM_URL");
        fields.put("participantListId", "PARTICIPANT_LIST_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("WorkflowPackage", fields);
}
  public static enum Fields implements EntityFieldInterface<WorkflowPackage> {
    packageId("packageId"),
    packageVersion("packageVersion"),
    packageName("packageName"),
    description("description"),
    specificationVersion("specificationVersion"),
    specificationId("specificationId"),
    sourceVendorInfo("sourceVendorInfo"),
    creationDateTime("creationDateTime"),
    author("author"),
    codepage("codepage"),
    countryGeoId("countryGeoId"),
    publicationStatusId("publicationStatusId"),
    graphConformanceEnumId("graphConformanceEnumId"),
    priorityUomId("priorityUomId"),
    costUomId("costUomId"),
    responsibleListId("responsibleListId"),
    documentationUrl("documentationUrl"),
    importedFromUrl("importedFromUrl"),
    participantListId("participantListId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="PACKAGE_ID")
    private String packageId;
    @Id
    
    @Column(name="PACKAGE_VERSION")
    private String packageVersion;
    
    @Column(name="PACKAGE_NAME")
    private String packageName;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="SPECIFICATION_VERSION")
    private String specificationVersion;
    
    @Column(name="SPECIFICATION_ID")
    private String specificationId;
    
    @Column(name="SOURCE_VENDOR_INFO")
    private String sourceVendorInfo;
    
    @Column(name="CREATION_DATE_TIME")
    private Timestamp creationDateTime;
    
    @Column(name="AUTHOR")
    private String author;
    
    @Column(name="CODEPAGE")
    private String codepage;
    
    @Column(name="COUNTRY_GEO_ID")
    private String countryGeoId;
    
    @Column(name="PUBLICATION_STATUS_ID")
    private String publicationStatusId;
    
    @Column(name="GRAPH_CONFORMANCE_ENUM_ID")
    private String graphConformanceEnumId;
    
    @Column(name="PRIORITY_UOM_ID")
    private String priorityUomId;
    
    @Column(name="COST_UOM_ID")
    private String costUomId;
    
    @Column(name="RESPONSIBLE_LIST_ID")
    private String responsibleListId;
    
    @Column(name="DOCUMENTATION_URL")
    private String documentationUrl;
    
    @Column(name="IMPORTED_FROM_URL")
    private String importedFromUrl;
    
    @Column(name="PARTICIPANT_LIST_ID")
    private String participantListId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SPECIFICATION_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private WorkflowSpecification workflowSpecification = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY_GEO_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Geo countryGeo = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PUBLICATION_STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem publicationStatusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="GRAPH_CONFORMANCE_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration graphConformanceEnumeration = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRIORITY_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom priorityUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="COST_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom costUom = null;
    private transient List<WorkflowParticipantList> responsibleWorkflowParticipantLists = null;
    private transient List<WorkflowParticipantList> workflowParticipantLists = null;
    private transient List<WorkEffort> workEfforts = null;
    private transient List<WorkflowApplication> workflowApplications = null;
    private transient List<WorkflowDataField> workflowDataFields = null;
    private transient List<WorkflowPackageExternal> mainWorkflowPackageExternals = null;
    private transient List<WorkflowPackageExternal> externalWorkflowPackageExternals = null;
    private transient List<WorkflowProcess> workflowProcesses = null;
    private transient List<WorkflowTypeDeclaration> workflowTypeDeclarations = null;

  /**
   * Default constructor.
   */
  public WorkflowPackage() {
      super();
      this.baseEntityName = "WorkflowPackage";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("packageId");this.primaryKeyNames.add("packageVersion");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WorkflowPackage(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param packageId the packageId to set
     */
    public void setPackageId(String packageId) {
        this.packageId = packageId;
    }
    /**
     * Auto generated value setter.
     * @param packageVersion the packageVersion to set
     */
    public void setPackageVersion(String packageVersion) {
        this.packageVersion = packageVersion;
    }
    /**
     * Auto generated value setter.
     * @param packageName the packageName to set
     */
    public void setPackageName(String packageName) {
        this.packageName = packageName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param specificationVersion the specificationVersion to set
     */
    public void setSpecificationVersion(String specificationVersion) {
        this.specificationVersion = specificationVersion;
    }
    /**
     * Auto generated value setter.
     * @param specificationId the specificationId to set
     */
    public void setSpecificationId(String specificationId) {
        this.specificationId = specificationId;
    }
    /**
     * Auto generated value setter.
     * @param sourceVendorInfo the sourceVendorInfo to set
     */
    public void setSourceVendorInfo(String sourceVendorInfo) {
        this.sourceVendorInfo = sourceVendorInfo;
    }
    /**
     * Auto generated value setter.
     * @param creationDateTime the creationDateTime to set
     */
    public void setCreationDateTime(Timestamp creationDateTime) {
        this.creationDateTime = creationDateTime;
    }
    /**
     * Auto generated value setter.
     * @param author the author to set
     */
    public void setAuthor(String author) {
        this.author = author;
    }
    /**
     * Auto generated value setter.
     * @param codepage the codepage to set
     */
    public void setCodepage(String codepage) {
        this.codepage = codepage;
    }
    /**
     * Auto generated value setter.
     * @param countryGeoId the countryGeoId to set
     */
    public void setCountryGeoId(String countryGeoId) {
        this.countryGeoId = countryGeoId;
    }
    /**
     * Auto generated value setter.
     * @param publicationStatusId the publicationStatusId to set
     */
    public void setPublicationStatusId(String publicationStatusId) {
        this.publicationStatusId = publicationStatusId;
    }
    /**
     * Auto generated value setter.
     * @param graphConformanceEnumId the graphConformanceEnumId to set
     */
    public void setGraphConformanceEnumId(String graphConformanceEnumId) {
        this.graphConformanceEnumId = graphConformanceEnumId;
    }
    /**
     * Auto generated value setter.
     * @param priorityUomId the priorityUomId to set
     */
    public void setPriorityUomId(String priorityUomId) {
        this.priorityUomId = priorityUomId;
    }
    /**
     * Auto generated value setter.
     * @param costUomId the costUomId to set
     */
    public void setCostUomId(String costUomId) {
        this.costUomId = costUomId;
    }
    /**
     * Auto generated value setter.
     * @param responsibleListId the responsibleListId to set
     */
    public void setResponsibleListId(String responsibleListId) {
        this.responsibleListId = responsibleListId;
    }
    /**
     * Auto generated value setter.
     * @param documentationUrl the documentationUrl to set
     */
    public void setDocumentationUrl(String documentationUrl) {
        this.documentationUrl = documentationUrl;
    }
    /**
     * Auto generated value setter.
     * @param importedFromUrl the importedFromUrl to set
     */
    public void setImportedFromUrl(String importedFromUrl) {
        this.importedFromUrl = importedFromUrl;
    }
    /**
     * Auto generated value setter.
     * @param participantListId the participantListId to set
     */
    public void setParticipantListId(String participantListId) {
        this.participantListId = participantListId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPackageId() {
        return this.packageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPackageVersion() {
        return this.packageVersion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPackageName() {
        return this.packageName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSpecificationVersion() {
        return this.specificationVersion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSpecificationId() {
        return this.specificationId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSourceVendorInfo() {
        return this.sourceVendorInfo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreationDateTime() {
        return this.creationDateTime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAuthor() {
        return this.author;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCodepage() {
        return this.codepage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCountryGeoId() {
        return this.countryGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPublicationStatusId() {
        return this.publicationStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGraphConformanceEnumId() {
        return this.graphConformanceEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPriorityUomId() {
        return this.priorityUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCostUomId() {
        return this.costUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getResponsibleListId() {
        return this.responsibleListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDocumentationUrl() {
        return this.documentationUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getImportedFromUrl() {
        return this.importedFromUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParticipantListId() {
        return this.participantListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>WorkflowSpecification</code> by the relation named <code>WorkflowSpecification</code>.
     * @return the <code>WorkflowSpecification</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowSpecification getWorkflowSpecification() throws RepositoryException {
        if (this.workflowSpecification == null) {
            this.workflowSpecification = getRelatedOne(WorkflowSpecification.class, "WorkflowSpecification");
        }
        return this.workflowSpecification;
    }
    /**
     * Auto generated method that gets the related <code>Geo</code> by the relation named <code>CountryGeo</code>.
     * @return the <code>Geo</code>
     * @throws RepositoryException if an error occurs
     */
    public Geo getCountryGeo() throws RepositoryException {
        if (this.countryGeo == null) {
            this.countryGeo = getRelatedOne(Geo.class, "CountryGeo");
        }
        return this.countryGeo;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>PublicationStatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getPublicationStatusItem() throws RepositoryException {
        if (this.publicationStatusItem == null) {
            this.publicationStatusItem = getRelatedOne(StatusItem.class, "PublicationStatusItem");
        }
        return this.publicationStatusItem;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>GraphConformanceEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getGraphConformanceEnumeration() throws RepositoryException {
        if (this.graphConformanceEnumeration == null) {
            this.graphConformanceEnumeration = getRelatedOne(Enumeration.class, "GraphConformanceEnumeration");
        }
        return this.graphConformanceEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>PriorityUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getPriorityUom() throws RepositoryException {
        if (this.priorityUom == null) {
            this.priorityUom = getRelatedOne(Uom.class, "PriorityUom");
        }
        return this.priorityUom;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>CostUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getCostUom() throws RepositoryException {
        if (this.costUom == null) {
            this.costUom = getRelatedOne(Uom.class, "CostUom");
        }
        return this.costUom;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowParticipantList</code> by the relation named <code>ResponsibleWorkflowParticipantList</code>.
     * @return the list of <code>WorkflowParticipantList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowParticipantList> getResponsibleWorkflowParticipantLists() throws RepositoryException {
        if (this.responsibleWorkflowParticipantLists == null) {
            this.responsibleWorkflowParticipantLists = getRelated(WorkflowParticipantList.class, "ResponsibleWorkflowParticipantList");
        }
        return this.responsibleWorkflowParticipantLists;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowParticipantList</code> by the relation named <code>WorkflowParticipantList</code>.
     * @return the list of <code>WorkflowParticipantList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowParticipantList> getWorkflowParticipantLists() throws RepositoryException {
        if (this.workflowParticipantLists == null) {
            this.workflowParticipantLists = getRelated(WorkflowParticipantList.class, "WorkflowParticipantList");
        }
        return this.workflowParticipantLists;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>WorkEffort</code>.
     * @return the list of <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffort> getWorkEfforts() throws RepositoryException {
        if (this.workEfforts == null) {
            this.workEfforts = getRelated(WorkEffort.class, "WorkEffort");
        }
        return this.workEfforts;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowApplication</code> by the relation named <code>WorkflowApplication</code>.
     * @return the list of <code>WorkflowApplication</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowApplication> getWorkflowApplications() throws RepositoryException {
        if (this.workflowApplications == null) {
            this.workflowApplications = getRelated(WorkflowApplication.class, "WorkflowApplication");
        }
        return this.workflowApplications;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowDataField</code> by the relation named <code>WorkflowDataField</code>.
     * @return the list of <code>WorkflowDataField</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowDataField> getWorkflowDataFields() throws RepositoryException {
        if (this.workflowDataFields == null) {
            this.workflowDataFields = getRelated(WorkflowDataField.class, "WorkflowDataField");
        }
        return this.workflowDataFields;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowPackageExternal</code> by the relation named <code>MainWorkflowPackageExternal</code>.
     * @return the list of <code>WorkflowPackageExternal</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowPackageExternal> getMainWorkflowPackageExternals() throws RepositoryException {
        if (this.mainWorkflowPackageExternals == null) {
            this.mainWorkflowPackageExternals = getRelated(WorkflowPackageExternal.class, "MainWorkflowPackageExternal");
        }
        return this.mainWorkflowPackageExternals;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowPackageExternal</code> by the relation named <code>ExternalWorkflowPackageExternal</code>.
     * @return the list of <code>WorkflowPackageExternal</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowPackageExternal> getExternalWorkflowPackageExternals() throws RepositoryException {
        if (this.externalWorkflowPackageExternals == null) {
            this.externalWorkflowPackageExternals = getRelated(WorkflowPackageExternal.class, "ExternalWorkflowPackageExternal");
        }
        return this.externalWorkflowPackageExternals;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowProcess</code> by the relation named <code>WorkflowProcess</code>.
     * @return the list of <code>WorkflowProcess</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowProcess> getWorkflowProcesses() throws RepositoryException {
        if (this.workflowProcesses == null) {
            this.workflowProcesses = getRelated(WorkflowProcess.class, "WorkflowProcess");
        }
        return this.workflowProcesses;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowTypeDeclaration</code> by the relation named <code>WorkflowTypeDeclaration</code>.
     * @return the list of <code>WorkflowTypeDeclaration</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowTypeDeclaration> getWorkflowTypeDeclarations() throws RepositoryException {
        if (this.workflowTypeDeclarations == null) {
            this.workflowTypeDeclarations = getRelated(WorkflowTypeDeclaration.class, "WorkflowTypeDeclaration");
        }
        return this.workflowTypeDeclarations;
    }

    /**
     * Auto generated value setter.
     * @param workflowSpecification the workflowSpecification to set
    */
    public void setWorkflowSpecification(WorkflowSpecification workflowSpecification) {
        this.workflowSpecification = workflowSpecification;
    }
    /**
     * Auto generated value setter.
     * @param countryGeo the countryGeo to set
    */
    public void setCountryGeo(Geo countryGeo) {
        this.countryGeo = countryGeo;
    }
    /**
     * Auto generated value setter.
     * @param publicationStatusItem the publicationStatusItem to set
    */
    public void setPublicationStatusItem(StatusItem publicationStatusItem) {
        this.publicationStatusItem = publicationStatusItem;
    }
    /**
     * Auto generated value setter.
     * @param graphConformanceEnumeration the graphConformanceEnumeration to set
    */
    public void setGraphConformanceEnumeration(Enumeration graphConformanceEnumeration) {
        this.graphConformanceEnumeration = graphConformanceEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param priorityUom the priorityUom to set
    */
    public void setPriorityUom(Uom priorityUom) {
        this.priorityUom = priorityUom;
    }
    /**
     * Auto generated value setter.
     * @param costUom the costUom to set
    */
    public void setCostUom(Uom costUom) {
        this.costUom = costUom;
    }
    /**
     * Auto generated value setter.
     * @param responsibleWorkflowParticipantLists the responsibleWorkflowParticipantLists to set
    */
    public void setResponsibleWorkflowParticipantLists(List<WorkflowParticipantList> responsibleWorkflowParticipantLists) {
        this.responsibleWorkflowParticipantLists = responsibleWorkflowParticipantLists;
    }
    /**
     * Auto generated value setter.
     * @param workflowParticipantLists the workflowParticipantLists to set
    */
    public void setWorkflowParticipantLists(List<WorkflowParticipantList> workflowParticipantLists) {
        this.workflowParticipantLists = workflowParticipantLists;
    }
    /**
     * Auto generated value setter.
     * @param workEfforts the workEfforts to set
    */
    public void setWorkEfforts(List<WorkEffort> workEfforts) {
        this.workEfforts = workEfforts;
    }
    /**
     * Auto generated value setter.
     * @param workflowApplications the workflowApplications to set
    */
    public void setWorkflowApplications(List<WorkflowApplication> workflowApplications) {
        this.workflowApplications = workflowApplications;
    }
    /**
     * Auto generated value setter.
     * @param workflowDataFields the workflowDataFields to set
    */
    public void setWorkflowDataFields(List<WorkflowDataField> workflowDataFields) {
        this.workflowDataFields = workflowDataFields;
    }
    /**
     * Auto generated value setter.
     * @param mainWorkflowPackageExternals the mainWorkflowPackageExternals to set
    */
    public void setMainWorkflowPackageExternals(List<WorkflowPackageExternal> mainWorkflowPackageExternals) {
        this.mainWorkflowPackageExternals = mainWorkflowPackageExternals;
    }
    /**
     * Auto generated value setter.
     * @param externalWorkflowPackageExternals the externalWorkflowPackageExternals to set
    */
    public void setExternalWorkflowPackageExternals(List<WorkflowPackageExternal> externalWorkflowPackageExternals) {
        this.externalWorkflowPackageExternals = externalWorkflowPackageExternals;
    }
    /**
     * Auto generated value setter.
     * @param workflowProcesses the workflowProcesses to set
    */
    public void setWorkflowProcesses(List<WorkflowProcess> workflowProcesses) {
        this.workflowProcesses = workflowProcesses;
    }
    /**
     * Auto generated value setter.
     * @param workflowTypeDeclarations the workflowTypeDeclarations to set
    */
    public void setWorkflowTypeDeclarations(List<WorkflowTypeDeclaration> workflowTypeDeclarations) {
        this.workflowTypeDeclarations = workflowTypeDeclarations;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPackageId((String) mapValue.get("packageId"));
        setPackageVersion((String) mapValue.get("packageVersion"));
        setPackageName((String) mapValue.get("packageName"));
        setDescription((String) mapValue.get("description"));
        setSpecificationVersion((String) mapValue.get("specificationVersion"));
        setSpecificationId((String) mapValue.get("specificationId"));
        setSourceVendorInfo((String) mapValue.get("sourceVendorInfo"));
        setCreationDateTime((Timestamp) mapValue.get("creationDateTime"));
        setAuthor((String) mapValue.get("author"));
        setCodepage((String) mapValue.get("codepage"));
        setCountryGeoId((String) mapValue.get("countryGeoId"));
        setPublicationStatusId((String) mapValue.get("publicationStatusId"));
        setGraphConformanceEnumId((String) mapValue.get("graphConformanceEnumId"));
        setPriorityUomId((String) mapValue.get("priorityUomId"));
        setCostUomId((String) mapValue.get("costUomId"));
        setResponsibleListId((String) mapValue.get("responsibleListId"));
        setDocumentationUrl((String) mapValue.get("documentationUrl"));
        setImportedFromUrl((String) mapValue.get("importedFromUrl"));
        setParticipantListId((String) mapValue.get("participantListId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("packageId", getPackageId());
        mapValue.put("packageVersion", getPackageVersion());
        mapValue.put("packageName", getPackageName());
        mapValue.put("description", getDescription());
        mapValue.put("specificationVersion", getSpecificationVersion());
        mapValue.put("specificationId", getSpecificationId());
        mapValue.put("sourceVendorInfo", getSourceVendorInfo());
        mapValue.put("creationDateTime", getCreationDateTime());
        mapValue.put("author", getAuthor());
        mapValue.put("codepage", getCodepage());
        mapValue.put("countryGeoId", getCountryGeoId());
        mapValue.put("publicationStatusId", getPublicationStatusId());
        mapValue.put("graphConformanceEnumId", getGraphConformanceEnumId());
        mapValue.put("priorityUomId", getPriorityUomId());
        mapValue.put("costUomId", getCostUomId());
        mapValue.put("responsibleListId", getResponsibleListId());
        mapValue.put("documentationUrl", getDocumentationUrl());
        mapValue.put("importedFromUrl", getImportedFromUrl());
        mapValue.put("participantListId", getParticipantListId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
