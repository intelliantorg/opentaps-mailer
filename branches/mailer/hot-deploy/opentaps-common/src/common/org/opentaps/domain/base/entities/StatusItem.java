package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity StatusItem.
 */
@javax.persistence.Entity
@Table(name="STATUS_ITEM")
public class StatusItem extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("statusId", "STATUS_ID");
        fields.put("statusTypeId", "STATUS_TYPE_ID");
        fields.put("statusCode", "STATUS_CODE");
        fields.put("sequenceId", "SEQUENCE_ID");
        fields.put("description", "DESCRIPTION");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("StatusItem", fields);
}
  public static enum Fields implements EntityFieldInterface<StatusItem> {
    statusId("statusId"),
    statusTypeId("statusTypeId"),
    statusCode("statusCode"),
    sequenceId("sequenceId"),
    description("description"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="StatusItem_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="StatusItem_GEN")   
    @Id
    
    @Column(name="STATUS_ID")
    private String statusId;
    
    @Column(name="STATUS_TYPE_ID")
    private String statusTypeId;
    
    @Column(name="STATUS_CODE")
    private String statusCode;
    
    @Column(name="SEQUENCE_ID")
    private String sequenceId;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusType statusType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="GROUP_STATUS_ID")
    private List<AcctgTrans> acctgTranses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="RECONCILE_STATUS_ID")
    private List<AcctgTransEntry> acctgTransEntrys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Agreement> agreements = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="statusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<BudgetStatus> budgetStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<CommunicationEvent> communicationEvents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<ContactListCommStatus> contactListCommStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<ContactListParty> contactListPartys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Content> contents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="APPROVAL_STATUS_ID")
    private List<ContentApproval> approvalContentApprovals = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="statusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<ContentPurposeOperation> contentPurposeOperations = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<CustRequest> custRequests = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<CustRequestItem> custRequestItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<CustRequestStatus> custRequestStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<DataResource> dataResources = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<EmplPosition> emplPositions = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<EmploymentApp> employmentApps = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<FixedAssetMaint> fixedAssetMaints = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<InventoryItem> inventoryItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="statusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<InventoryItemStatus> inventoryItemStatuses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="fromStatusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID_FROM")
    private List<InventoryStatusGlAccountType> fromInventoryStatusGlAccountTypes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="toStatusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID_TO")
    private List<InventoryStatusGlAccountType> toInventoryStatusGlAccountTypes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<InventoryTransfer> inventoryTransfers = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Invoice> invoices = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PROCESSING_STATUS_ID")
    private List<Invoice> processingInvoices = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="statusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<InvoiceStatus> invoiceStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<JobSandbox> jobSandboxes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<MarketingCampaign> marketingCampaigns = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<OrderDeliverySchedule> orderDeliverySchedules = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<OrderHeader> orderHeaders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SYNC_STATUS_ID")
    private List<OrderHeader> syncOrderHeaders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<OrderItem> orderItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SYNC_STATUS_ID")
    private List<OrderItem> syncOrderItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<OrderItemShipGroup> orderItemShipGroups = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<OrderPaymentPreference> orderPaymentPreferences = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<OrderStatus> orderStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Party> partys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<PartyFixedAssetAssignment> partyFixedAssetAssignments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<PartyInvitation> partyInvitations = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<PartyQual> partyQuals = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="VERIF_STATUS_ID")
    private List<PartyQual> verificationPartyQuals = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<PartyRelationship> partyRelationships = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="statusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<PartyStatus> partyStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Payment> payments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Picklist> picklists = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ITEM_STATUS_ID")
    private List<PicklistItem> picklistItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<PicklistStatusHistory> picklistStatusHistorys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID_TO")
    private List<PicklistStatusHistory> toPicklistStatusHistorys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<PosTerminalLog> posTerminalLogs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<ProductReview> productReviews = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="HEADER_APPROVED_STATUS")
    private List<ProductStore> headerApprovedProductStores = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ITEM_APPROVED_STATUS")
    private List<ProductStore> itemApprovedProductStores = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="DIGITAL_ITEM_APPROVED_STATUS")
    private List<ProductStore> digitalItemApprovedProductStores = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="HEADER_DECLINED_STATUS")
    private List<ProductStore> headerDeclinedProductStores = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ITEM_DECLINED_STATUS")
    private List<ProductStore> itemDeclinedProductStores = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="HEADER_CANCEL_STATUS")
    private List<ProductStore> headerCancelProductStores = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ITEM_CANCEL_STATUS")
    private List<ProductStore> itemCancelProductStores = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Quote> quotes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Requirement> requirements = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="statusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<RequirementStatus> requirementStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<ReturnHeader> returnHeaders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<ReturnItem> returnItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="EXPECTED_ITEM_STATUS")
    private List<ReturnItem> inventoryReturnItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<ReturnStatus> returnStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<ServerHit> serverHits = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<Shipment> shipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CARRIER_SERVICE_STATUS_ID")
    private List<ShipmentRouteSegment> carrierServiceShipmentRouteSegments = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="statusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<ShipmentStatus> shipmentStatuses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="mainStatusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<StatusValidChange> mainStatusValidChanges = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="toStatusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID_TO")
    private List<StatusValidChange> toStatusValidChanges = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<SurveyResponse> surveyResponses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<UnemploymentClaim> unemploymentClaims = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CURRENT_STATUS_ID")
    private List<WorkEffort> currentWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<WorkEffortFixedAssetAssign> workEffortFixedAssetAssigns = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<WorkEffortGoodStandard> workEffortGoodStandards = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<WorkEffortInventoryAssign> workEffortInventoryAssigns = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<WorkEffortPartyAssignment> assignmentWorkEffortPartyAssignments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="AVAILABILITY_STATUS_ID")
    private List<WorkEffortPartyAssignment> availabilityWorkEffortPartyAssignments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID")
    private List<WorkEffortReview> workEffortReviews = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="statusItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="STATUS_ID")
    private List<WorkEffortStatus> workEffortStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PUBLICATION_STATUS_ID")
    private List<WorkflowPackage> publicationWorkflowPackages = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PUBLICATION_STATUS_ID")
    private List<WorkflowProcess> publicationWorkflowProcesses = null;

  /**
   * Default constructor.
   */
  public StatusItem() {
      super();
      this.baseEntityName = "StatusItem";
      this.isView = false;
      this.resourceName = "CommonEntityLabels";
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("statusId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public StatusItem(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param statusTypeId the statusTypeId to set
     */
    public void setStatusTypeId(String statusTypeId) {
        this.statusTypeId = statusTypeId;
    }
    /**
     * Auto generated value setter.
     * @param statusCode the statusCode to set
     */
    public void setStatusCode(String statusCode) {
        this.statusCode = statusCode;
    }
    /**
     * Auto generated value setter.
     * @param sequenceId the sequenceId to set
     */
    public void setSequenceId(String sequenceId) {
        this.sequenceId = sequenceId;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusTypeId() {
        return this.statusTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusCode() {
        return this.statusCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSequenceId() {
        return this.sequenceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>StatusType</code> by the relation named <code>StatusType</code>.
     * @return the <code>StatusType</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusType getStatusType() throws RepositoryException {
        if (this.statusType == null) {
            this.statusType = getRelatedOne(StatusType.class, "StatusType");
        }
        return this.statusType;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTrans</code> by the relation named <code>AcctgTrans</code>.
     * @return the list of <code>AcctgTrans</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTrans> getAcctgTranses() throws RepositoryException {
        if (this.acctgTranses == null) {
            this.acctgTranses = getRelated(AcctgTrans.class, "AcctgTrans");
        }
        return this.acctgTranses;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTransEntry</code> by the relation named <code>AcctgTransEntry</code>.
     * @return the list of <code>AcctgTransEntry</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTransEntry> getAcctgTransEntrys() throws RepositoryException {
        if (this.acctgTransEntrys == null) {
            this.acctgTransEntrys = getRelated(AcctgTransEntry.class, "AcctgTransEntry");
        }
        return this.acctgTransEntrys;
    }
    /**
     * Auto generated method that gets the related <code>Agreement</code> by the relation named <code>Agreement</code>.
     * @return the list of <code>Agreement</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Agreement> getAgreements() throws RepositoryException {
        if (this.agreements == null) {
            this.agreements = getRelated(Agreement.class, "Agreement");
        }
        return this.agreements;
    }
    /**
     * Auto generated method that gets the related <code>BudgetStatus</code> by the relation named <code>BudgetStatus</code>.
     * @return the list of <code>BudgetStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetStatus> getBudgetStatuses() throws RepositoryException {
        if (this.budgetStatuses == null) {
            this.budgetStatuses = getRelated(BudgetStatus.class, "BudgetStatus");
        }
        return this.budgetStatuses;
    }
    /**
     * Auto generated method that gets the related <code>CommunicationEvent</code> by the relation named <code>CommunicationEvent</code>.
     * @return the list of <code>CommunicationEvent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommunicationEvent> getCommunicationEvents() throws RepositoryException {
        if (this.communicationEvents == null) {
            this.communicationEvents = getRelated(CommunicationEvent.class, "CommunicationEvent");
        }
        return this.communicationEvents;
    }
    /**
     * Auto generated method that gets the related <code>ContactListCommStatus</code> by the relation named <code>ContactListCommStatus</code>.
     * @return the list of <code>ContactListCommStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactListCommStatus> getContactListCommStatuses() throws RepositoryException {
        if (this.contactListCommStatuses == null) {
            this.contactListCommStatuses = getRelated(ContactListCommStatus.class, "ContactListCommStatus");
        }
        return this.contactListCommStatuses;
    }
    /**
     * Auto generated method that gets the related <code>ContactListParty</code> by the relation named <code>ContactListParty</code>.
     * @return the list of <code>ContactListParty</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactListParty> getContactListPartys() throws RepositoryException {
        if (this.contactListPartys == null) {
            this.contactListPartys = getRelated(ContactListParty.class, "ContactListParty");
        }
        return this.contactListPartys;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>Content</code>.
     * @return the list of <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Content> getContents() throws RepositoryException {
        if (this.contents == null) {
            this.contents = getRelated(Content.class, "Content");
        }
        return this.contents;
    }
    /**
     * Auto generated method that gets the related <code>ContentApproval</code> by the relation named <code>ApprovalContentApproval</code>.
     * @return the list of <code>ContentApproval</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentApproval> getApprovalContentApprovals() throws RepositoryException {
        if (this.approvalContentApprovals == null) {
            this.approvalContentApprovals = getRelated(ContentApproval.class, "ApprovalContentApproval");
        }
        return this.approvalContentApprovals;
    }
    /**
     * Auto generated method that gets the related <code>ContentPurposeOperation</code> by the relation named <code>ContentPurposeOperation</code>.
     * @return the list of <code>ContentPurposeOperation</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentPurposeOperation> getContentPurposeOperations() throws RepositoryException {
        if (this.contentPurposeOperations == null) {
            this.contentPurposeOperations = getRelated(ContentPurposeOperation.class, "ContentPurposeOperation");
        }
        return this.contentPurposeOperations;
    }
    /**
     * Auto generated method that gets the related <code>CustRequest</code> by the relation named <code>CustRequest</code>.
     * @return the list of <code>CustRequest</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequest> getCustRequests() throws RepositoryException {
        if (this.custRequests == null) {
            this.custRequests = getRelated(CustRequest.class, "CustRequest");
        }
        return this.custRequests;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestItem</code> by the relation named <code>CustRequestItem</code>.
     * @return the list of <code>CustRequestItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestItem> getCustRequestItems() throws RepositoryException {
        if (this.custRequestItems == null) {
            this.custRequestItems = getRelated(CustRequestItem.class, "CustRequestItem");
        }
        return this.custRequestItems;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestStatus</code> by the relation named <code>CustRequestStatus</code>.
     * @return the list of <code>CustRequestStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestStatus> getCustRequestStatuses() throws RepositoryException {
        if (this.custRequestStatuses == null) {
            this.custRequestStatuses = getRelated(CustRequestStatus.class, "CustRequestStatus");
        }
        return this.custRequestStatuses;
    }
    /**
     * Auto generated method that gets the related <code>DataResource</code> by the relation named <code>DataResource</code>.
     * @return the list of <code>DataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataResource> getDataResources() throws RepositoryException {
        if (this.dataResources == null) {
            this.dataResources = getRelated(DataResource.class, "DataResource");
        }
        return this.dataResources;
    }
    /**
     * Auto generated method that gets the related <code>EmplPosition</code> by the relation named <code>EmplPosition</code>.
     * @return the list of <code>EmplPosition</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EmplPosition> getEmplPositions() throws RepositoryException {
        if (this.emplPositions == null) {
            this.emplPositions = getRelated(EmplPosition.class, "EmplPosition");
        }
        return this.emplPositions;
    }
    /**
     * Auto generated method that gets the related <code>EmploymentApp</code> by the relation named <code>EmploymentApp</code>.
     * @return the list of <code>EmploymentApp</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EmploymentApp> getEmploymentApps() throws RepositoryException {
        if (this.employmentApps == null) {
            this.employmentApps = getRelated(EmploymentApp.class, "EmploymentApp");
        }
        return this.employmentApps;
    }
    /**
     * Auto generated method that gets the related <code>FixedAssetMaint</code> by the relation named <code>FixedAssetMaint</code>.
     * @return the list of <code>FixedAssetMaint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAssetMaint> getFixedAssetMaints() throws RepositoryException {
        if (this.fixedAssetMaints == null) {
            this.fixedAssetMaints = getRelated(FixedAssetMaint.class, "FixedAssetMaint");
        }
        return this.fixedAssetMaints;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItem</code> by the relation named <code>InventoryItem</code>.
     * @return the list of <code>InventoryItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItem> getInventoryItems() throws RepositoryException {
        if (this.inventoryItems == null) {
            this.inventoryItems = getRelated(InventoryItem.class, "InventoryItem");
        }
        return this.inventoryItems;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemStatus</code> by the relation named <code>InventoryItemStatus</code>.
     * @return the list of <code>InventoryItemStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemStatus> getInventoryItemStatuses() throws RepositoryException {
        if (this.inventoryItemStatuses == null) {
            this.inventoryItemStatuses = getRelated(InventoryItemStatus.class, "InventoryItemStatus");
        }
        return this.inventoryItemStatuses;
    }
    /**
     * Auto generated method that gets the related <code>InventoryStatusGlAccountType</code> by the relation named <code>FromInventoryStatusGlAccountType</code>.
     * @return the list of <code>InventoryStatusGlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryStatusGlAccountType> getFromInventoryStatusGlAccountTypes() throws RepositoryException {
        if (this.fromInventoryStatusGlAccountTypes == null) {
            this.fromInventoryStatusGlAccountTypes = getRelated(InventoryStatusGlAccountType.class, "FromInventoryStatusGlAccountType");
        }
        return this.fromInventoryStatusGlAccountTypes;
    }
    /**
     * Auto generated method that gets the related <code>InventoryStatusGlAccountType</code> by the relation named <code>ToInventoryStatusGlAccountType</code>.
     * @return the list of <code>InventoryStatusGlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryStatusGlAccountType> getToInventoryStatusGlAccountTypes() throws RepositoryException {
        if (this.toInventoryStatusGlAccountTypes == null) {
            this.toInventoryStatusGlAccountTypes = getRelated(InventoryStatusGlAccountType.class, "ToInventoryStatusGlAccountType");
        }
        return this.toInventoryStatusGlAccountTypes;
    }
    /**
     * Auto generated method that gets the related <code>InventoryTransfer</code> by the relation named <code>InventoryTransfer</code>.
     * @return the list of <code>InventoryTransfer</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryTransfer> getInventoryTransfers() throws RepositoryException {
        if (this.inventoryTransfers == null) {
            this.inventoryTransfers = getRelated(InventoryTransfer.class, "InventoryTransfer");
        }
        return this.inventoryTransfers;
    }
    /**
     * Auto generated method that gets the related <code>Invoice</code> by the relation named <code>Invoice</code>.
     * @return the list of <code>Invoice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Invoice> getInvoices() throws RepositoryException {
        if (this.invoices == null) {
            this.invoices = getRelated(Invoice.class, "Invoice");
        }
        return this.invoices;
    }
    /**
     * Auto generated method that gets the related <code>Invoice</code> by the relation named <code>ProcessingInvoice</code>.
     * @return the list of <code>Invoice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Invoice> getProcessingInvoices() throws RepositoryException {
        if (this.processingInvoices == null) {
            this.processingInvoices = getRelated(Invoice.class, "ProcessingInvoice");
        }
        return this.processingInvoices;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceStatus</code> by the relation named <code>InvoiceStatus</code>.
     * @return the list of <code>InvoiceStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceStatus> getInvoiceStatuses() throws RepositoryException {
        if (this.invoiceStatuses == null) {
            this.invoiceStatuses = getRelated(InvoiceStatus.class, "InvoiceStatus");
        }
        return this.invoiceStatuses;
    }
    /**
     * Auto generated method that gets the related <code>JobSandbox</code> by the relation named <code>JobSandbox</code>.
     * @return the list of <code>JobSandbox</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends JobSandbox> getJobSandboxes() throws RepositoryException {
        if (this.jobSandboxes == null) {
            this.jobSandboxes = getRelated(JobSandbox.class, "JobSandbox");
        }
        return this.jobSandboxes;
    }
    /**
     * Auto generated method that gets the related <code>MarketingCampaign</code> by the relation named <code>MarketingCampaign</code>.
     * @return the list of <code>MarketingCampaign</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends MarketingCampaign> getMarketingCampaigns() throws RepositoryException {
        if (this.marketingCampaigns == null) {
            this.marketingCampaigns = getRelated(MarketingCampaign.class, "MarketingCampaign");
        }
        return this.marketingCampaigns;
    }
    /**
     * Auto generated method that gets the related <code>OrderDeliverySchedule</code> by the relation named <code>OrderDeliverySchedule</code>.
     * @return the list of <code>OrderDeliverySchedule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderDeliverySchedule> getOrderDeliverySchedules() throws RepositoryException {
        if (this.orderDeliverySchedules == null) {
            this.orderDeliverySchedules = getRelated(OrderDeliverySchedule.class, "OrderDeliverySchedule");
        }
        return this.orderDeliverySchedules;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>OrderHeader</code>.
     * @return the list of <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeader> getOrderHeaders() throws RepositoryException {
        if (this.orderHeaders == null) {
            this.orderHeaders = getRelated(OrderHeader.class, "OrderHeader");
        }
        return this.orderHeaders;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>SyncOrderHeader</code>.
     * @return the list of <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeader> getSyncOrderHeaders() throws RepositoryException {
        if (this.syncOrderHeaders == null) {
            this.syncOrderHeaders = getRelated(OrderHeader.class, "SyncOrderHeader");
        }
        return this.syncOrderHeaders;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>OrderItem</code>.
     * @return the list of <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItem> getOrderItems() throws RepositoryException {
        if (this.orderItems == null) {
            this.orderItems = getRelated(OrderItem.class, "OrderItem");
        }
        return this.orderItems;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>SyncOrderItem</code>.
     * @return the list of <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItem> getSyncOrderItems() throws RepositoryException {
        if (this.syncOrderItems == null) {
            this.syncOrderItems = getRelated(OrderItem.class, "SyncOrderItem");
        }
        return this.syncOrderItems;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroup</code> by the relation named <code>OrderItemShipGroup</code>.
     * @return the list of <code>OrderItemShipGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemShipGroup> getOrderItemShipGroups() throws RepositoryException {
        if (this.orderItemShipGroups == null) {
            this.orderItemShipGroups = getRelated(OrderItemShipGroup.class, "OrderItemShipGroup");
        }
        return this.orderItemShipGroups;
    }
    /**
     * Auto generated method that gets the related <code>OrderPaymentPreference</code> by the relation named <code>OrderPaymentPreference</code>.
     * @return the list of <code>OrderPaymentPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderPaymentPreference> getOrderPaymentPreferences() throws RepositoryException {
        if (this.orderPaymentPreferences == null) {
            this.orderPaymentPreferences = getRelated(OrderPaymentPreference.class, "OrderPaymentPreference");
        }
        return this.orderPaymentPreferences;
    }
    /**
     * Auto generated method that gets the related <code>OrderStatus</code> by the relation named <code>OrderStatus</code>.
     * @return the list of <code>OrderStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderStatus> getOrderStatuses() throws RepositoryException {
        if (this.orderStatuses == null) {
            this.orderStatuses = getRelated(OrderStatus.class, "OrderStatus");
        }
        return this.orderStatuses;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the list of <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Party> getPartys() throws RepositoryException {
        if (this.partys == null) {
            this.partys = getRelated(Party.class, "Party");
        }
        return this.partys;
    }
    /**
     * Auto generated method that gets the related <code>PartyFixedAssetAssignment</code> by the relation named <code>PartyFixedAssetAssignment</code>.
     * @return the list of <code>PartyFixedAssetAssignment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyFixedAssetAssignment> getPartyFixedAssetAssignments() throws RepositoryException {
        if (this.partyFixedAssetAssignments == null) {
            this.partyFixedAssetAssignments = getRelated(PartyFixedAssetAssignment.class, "PartyFixedAssetAssignment");
        }
        return this.partyFixedAssetAssignments;
    }
    /**
     * Auto generated method that gets the related <code>PartyInvitation</code> by the relation named <code>PartyInvitation</code>.
     * @return the list of <code>PartyInvitation</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyInvitation> getPartyInvitations() throws RepositoryException {
        if (this.partyInvitations == null) {
            this.partyInvitations = getRelated(PartyInvitation.class, "PartyInvitation");
        }
        return this.partyInvitations;
    }
    /**
     * Auto generated method that gets the related <code>PartyQual</code> by the relation named <code>PartyQual</code>.
     * @return the list of <code>PartyQual</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyQual> getPartyQuals() throws RepositoryException {
        if (this.partyQuals == null) {
            this.partyQuals = getRelated(PartyQual.class, "PartyQual");
        }
        return this.partyQuals;
    }
    /**
     * Auto generated method that gets the related <code>PartyQual</code> by the relation named <code>VerificationPartyQual</code>.
     * @return the list of <code>PartyQual</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyQual> getVerificationPartyQuals() throws RepositoryException {
        if (this.verificationPartyQuals == null) {
            this.verificationPartyQuals = getRelated(PartyQual.class, "VerificationPartyQual");
        }
        return this.verificationPartyQuals;
    }
    /**
     * Auto generated method that gets the related <code>PartyRelationship</code> by the relation named <code>PartyRelationship</code>.
     * @return the list of <code>PartyRelationship</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyRelationship> getPartyRelationships() throws RepositoryException {
        if (this.partyRelationships == null) {
            this.partyRelationships = getRelated(PartyRelationship.class, "PartyRelationship");
        }
        return this.partyRelationships;
    }
    /**
     * Auto generated method that gets the related <code>PartyStatus</code> by the relation named <code>PartyStatus</code>.
     * @return the list of <code>PartyStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyStatus> getPartyStatuses() throws RepositoryException {
        if (this.partyStatuses == null) {
            this.partyStatuses = getRelated(PartyStatus.class, "PartyStatus");
        }
        return this.partyStatuses;
    }
    /**
     * Auto generated method that gets the related <code>Payment</code> by the relation named <code>Payment</code>.
     * @return the list of <code>Payment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Payment> getPayments() throws RepositoryException {
        if (this.payments == null) {
            this.payments = getRelated(Payment.class, "Payment");
        }
        return this.payments;
    }
    /**
     * Auto generated method that gets the related <code>Picklist</code> by the relation named <code>Picklist</code>.
     * @return the list of <code>Picklist</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Picklist> getPicklists() throws RepositoryException {
        if (this.picklists == null) {
            this.picklists = getRelated(Picklist.class, "Picklist");
        }
        return this.picklists;
    }
    /**
     * Auto generated method that gets the related <code>PicklistItem</code> by the relation named <code>PicklistItem</code>.
     * @return the list of <code>PicklistItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistItem> getPicklistItems() throws RepositoryException {
        if (this.picklistItems == null) {
            this.picklistItems = getRelated(PicklistItem.class, "PicklistItem");
        }
        return this.picklistItems;
    }
    /**
     * Auto generated method that gets the related <code>PicklistStatusHistory</code> by the relation named <code>PicklistStatusHistory</code>.
     * @return the list of <code>PicklistStatusHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistStatusHistory> getPicklistStatusHistorys() throws RepositoryException {
        if (this.picklistStatusHistorys == null) {
            this.picklistStatusHistorys = getRelated(PicklistStatusHistory.class, "PicklistStatusHistory");
        }
        return this.picklistStatusHistorys;
    }
    /**
     * Auto generated method that gets the related <code>PicklistStatusHistory</code> by the relation named <code>ToPicklistStatusHistory</code>.
     * @return the list of <code>PicklistStatusHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistStatusHistory> getToPicklistStatusHistorys() throws RepositoryException {
        if (this.toPicklistStatusHistorys == null) {
            this.toPicklistStatusHistorys = getRelated(PicklistStatusHistory.class, "ToPicklistStatusHistory");
        }
        return this.toPicklistStatusHistorys;
    }
    /**
     * Auto generated method that gets the related <code>PosTerminalLog</code> by the relation named <code>PosTerminalLog</code>.
     * @return the list of <code>PosTerminalLog</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PosTerminalLog> getPosTerminalLogs() throws RepositoryException {
        if (this.posTerminalLogs == null) {
            this.posTerminalLogs = getRelated(PosTerminalLog.class, "PosTerminalLog");
        }
        return this.posTerminalLogs;
    }
    /**
     * Auto generated method that gets the related <code>ProductReview</code> by the relation named <code>ProductReview</code>.
     * @return the list of <code>ProductReview</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductReview> getProductReviews() throws RepositoryException {
        if (this.productReviews == null) {
            this.productReviews = getRelated(ProductReview.class, "ProductReview");
        }
        return this.productReviews;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>HeaderApprovedProductStore</code>.
     * @return the list of <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStore> getHeaderApprovedProductStores() throws RepositoryException {
        if (this.headerApprovedProductStores == null) {
            this.headerApprovedProductStores = getRelated(ProductStore.class, "HeaderApprovedProductStore");
        }
        return this.headerApprovedProductStores;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>ItemApprovedProductStore</code>.
     * @return the list of <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStore> getItemApprovedProductStores() throws RepositoryException {
        if (this.itemApprovedProductStores == null) {
            this.itemApprovedProductStores = getRelated(ProductStore.class, "ItemApprovedProductStore");
        }
        return this.itemApprovedProductStores;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>DigitalItemApprovedProductStore</code>.
     * @return the list of <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStore> getDigitalItemApprovedProductStores() throws RepositoryException {
        if (this.digitalItemApprovedProductStores == null) {
            this.digitalItemApprovedProductStores = getRelated(ProductStore.class, "DigitalItemApprovedProductStore");
        }
        return this.digitalItemApprovedProductStores;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>HeaderDeclinedProductStore</code>.
     * @return the list of <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStore> getHeaderDeclinedProductStores() throws RepositoryException {
        if (this.headerDeclinedProductStores == null) {
            this.headerDeclinedProductStores = getRelated(ProductStore.class, "HeaderDeclinedProductStore");
        }
        return this.headerDeclinedProductStores;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>ItemDeclinedProductStore</code>.
     * @return the list of <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStore> getItemDeclinedProductStores() throws RepositoryException {
        if (this.itemDeclinedProductStores == null) {
            this.itemDeclinedProductStores = getRelated(ProductStore.class, "ItemDeclinedProductStore");
        }
        return this.itemDeclinedProductStores;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>HeaderCancelProductStore</code>.
     * @return the list of <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStore> getHeaderCancelProductStores() throws RepositoryException {
        if (this.headerCancelProductStores == null) {
            this.headerCancelProductStores = getRelated(ProductStore.class, "HeaderCancelProductStore");
        }
        return this.headerCancelProductStores;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>ItemCancelProductStore</code>.
     * @return the list of <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStore> getItemCancelProductStores() throws RepositoryException {
        if (this.itemCancelProductStores == null) {
            this.itemCancelProductStores = getRelated(ProductStore.class, "ItemCancelProductStore");
        }
        return this.itemCancelProductStores;
    }
    /**
     * Auto generated method that gets the related <code>Quote</code> by the relation named <code>Quote</code>.
     * @return the list of <code>Quote</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Quote> getQuotes() throws RepositoryException {
        if (this.quotes == null) {
            this.quotes = getRelated(Quote.class, "Quote");
        }
        return this.quotes;
    }
    /**
     * Auto generated method that gets the related <code>Requirement</code> by the relation named <code>Requirement</code>.
     * @return the list of <code>Requirement</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Requirement> getRequirements() throws RepositoryException {
        if (this.requirements == null) {
            this.requirements = getRelated(Requirement.class, "Requirement");
        }
        return this.requirements;
    }
    /**
     * Auto generated method that gets the related <code>RequirementStatus</code> by the relation named <code>RequirementStatus</code>.
     * @return the list of <code>RequirementStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RequirementStatus> getRequirementStatuses() throws RepositoryException {
        if (this.requirementStatuses == null) {
            this.requirementStatuses = getRelated(RequirementStatus.class, "RequirementStatus");
        }
        return this.requirementStatuses;
    }
    /**
     * Auto generated method that gets the related <code>ReturnHeader</code> by the relation named <code>ReturnHeader</code>.
     * @return the list of <code>ReturnHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnHeader> getReturnHeaders() throws RepositoryException {
        if (this.returnHeaders == null) {
            this.returnHeaders = getRelated(ReturnHeader.class, "ReturnHeader");
        }
        return this.returnHeaders;
    }
    /**
     * Auto generated method that gets the related <code>ReturnItem</code> by the relation named <code>ReturnItem</code>.
     * @return the list of <code>ReturnItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnItem> getReturnItems() throws RepositoryException {
        if (this.returnItems == null) {
            this.returnItems = getRelated(ReturnItem.class, "ReturnItem");
        }
        return this.returnItems;
    }
    /**
     * Auto generated method that gets the related <code>ReturnItem</code> by the relation named <code>InventoryReturnItem</code>.
     * @return the list of <code>ReturnItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnItem> getInventoryReturnItems() throws RepositoryException {
        if (this.inventoryReturnItems == null) {
            this.inventoryReturnItems = getRelated(ReturnItem.class, "InventoryReturnItem");
        }
        return this.inventoryReturnItems;
    }
    /**
     * Auto generated method that gets the related <code>ReturnStatus</code> by the relation named <code>ReturnStatus</code>.
     * @return the list of <code>ReturnStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnStatus> getReturnStatuses() throws RepositoryException {
        if (this.returnStatuses == null) {
            this.returnStatuses = getRelated(ReturnStatus.class, "ReturnStatus");
        }
        return this.returnStatuses;
    }
    /**
     * Auto generated method that gets the related <code>ServerHit</code> by the relation named <code>ServerHit</code>.
     * @return the list of <code>ServerHit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServerHit> getServerHits() throws RepositoryException {
        if (this.serverHits == null) {
            this.serverHits = getRelated(ServerHit.class, "ServerHit");
        }
        return this.serverHits;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>Shipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getShipments() throws RepositoryException {
        if (this.shipments == null) {
            this.shipments = getRelated(Shipment.class, "Shipment");
        }
        return this.shipments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentRouteSegment</code> by the relation named <code>CarrierServiceShipmentRouteSegment</code>.
     * @return the list of <code>ShipmentRouteSegment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentRouteSegment> getCarrierServiceShipmentRouteSegments() throws RepositoryException {
        if (this.carrierServiceShipmentRouteSegments == null) {
            this.carrierServiceShipmentRouteSegments = getRelated(ShipmentRouteSegment.class, "CarrierServiceShipmentRouteSegment");
        }
        return this.carrierServiceShipmentRouteSegments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentStatus</code> by the relation named <code>ShipmentStatus</code>.
     * @return the list of <code>ShipmentStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentStatus> getShipmentStatuses() throws RepositoryException {
        if (this.shipmentStatuses == null) {
            this.shipmentStatuses = getRelated(ShipmentStatus.class, "ShipmentStatus");
        }
        return this.shipmentStatuses;
    }
    /**
     * Auto generated method that gets the related <code>StatusValidChange</code> by the relation named <code>MainStatusValidChange</code>.
     * @return the list of <code>StatusValidChange</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends StatusValidChange> getMainStatusValidChanges() throws RepositoryException {
        if (this.mainStatusValidChanges == null) {
            this.mainStatusValidChanges = getRelated(StatusValidChange.class, "MainStatusValidChange");
        }
        return this.mainStatusValidChanges;
    }
    /**
     * Auto generated method that gets the related <code>StatusValidChange</code> by the relation named <code>ToStatusValidChange</code>.
     * @return the list of <code>StatusValidChange</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends StatusValidChange> getToStatusValidChanges() throws RepositoryException {
        if (this.toStatusValidChanges == null) {
            this.toStatusValidChanges = getRelated(StatusValidChange.class, "ToStatusValidChange");
        }
        return this.toStatusValidChanges;
    }
    /**
     * Auto generated method that gets the related <code>SurveyResponse</code> by the relation named <code>SurveyResponse</code>.
     * @return the list of <code>SurveyResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SurveyResponse> getSurveyResponses() throws RepositoryException {
        if (this.surveyResponses == null) {
            this.surveyResponses = getRelated(SurveyResponse.class, "SurveyResponse");
        }
        return this.surveyResponses;
    }
    /**
     * Auto generated method that gets the related <code>UnemploymentClaim</code> by the relation named <code>UnemploymentClaim</code>.
     * @return the list of <code>UnemploymentClaim</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UnemploymentClaim> getUnemploymentClaims() throws RepositoryException {
        if (this.unemploymentClaims == null) {
            this.unemploymentClaims = getRelated(UnemploymentClaim.class, "UnemploymentClaim");
        }
        return this.unemploymentClaims;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>CurrentWorkEffort</code>.
     * @return the list of <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffort> getCurrentWorkEfforts() throws RepositoryException {
        if (this.currentWorkEfforts == null) {
            this.currentWorkEfforts = getRelated(WorkEffort.class, "CurrentWorkEffort");
        }
        return this.currentWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortFixedAssetAssign</code> by the relation named <code>WorkEffortFixedAssetAssign</code>.
     * @return the list of <code>WorkEffortFixedAssetAssign</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortFixedAssetAssign> getWorkEffortFixedAssetAssigns() throws RepositoryException {
        if (this.workEffortFixedAssetAssigns == null) {
            this.workEffortFixedAssetAssigns = getRelated(WorkEffortFixedAssetAssign.class, "WorkEffortFixedAssetAssign");
        }
        return this.workEffortFixedAssetAssigns;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortGoodStandard</code> by the relation named <code>WorkEffortGoodStandard</code>.
     * @return the list of <code>WorkEffortGoodStandard</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortGoodStandard> getWorkEffortGoodStandards() throws RepositoryException {
        if (this.workEffortGoodStandards == null) {
            this.workEffortGoodStandards = getRelated(WorkEffortGoodStandard.class, "WorkEffortGoodStandard");
        }
        return this.workEffortGoodStandards;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortInventoryAssign</code> by the relation named <code>WorkEffortInventoryAssign</code>.
     * @return the list of <code>WorkEffortInventoryAssign</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortInventoryAssign> getWorkEffortInventoryAssigns() throws RepositoryException {
        if (this.workEffortInventoryAssigns == null) {
            this.workEffortInventoryAssigns = getRelated(WorkEffortInventoryAssign.class, "WorkEffortInventoryAssign");
        }
        return this.workEffortInventoryAssigns;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortPartyAssignment</code> by the relation named <code>AssignmentWorkEffortPartyAssignment</code>.
     * @return the list of <code>WorkEffortPartyAssignment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortPartyAssignment> getAssignmentWorkEffortPartyAssignments() throws RepositoryException {
        if (this.assignmentWorkEffortPartyAssignments == null) {
            this.assignmentWorkEffortPartyAssignments = getRelated(WorkEffortPartyAssignment.class, "AssignmentWorkEffortPartyAssignment");
        }
        return this.assignmentWorkEffortPartyAssignments;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortPartyAssignment</code> by the relation named <code>AvailabilityWorkEffortPartyAssignment</code>.
     * @return the list of <code>WorkEffortPartyAssignment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortPartyAssignment> getAvailabilityWorkEffortPartyAssignments() throws RepositoryException {
        if (this.availabilityWorkEffortPartyAssignments == null) {
            this.availabilityWorkEffortPartyAssignments = getRelated(WorkEffortPartyAssignment.class, "AvailabilityWorkEffortPartyAssignment");
        }
        return this.availabilityWorkEffortPartyAssignments;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortReview</code> by the relation named <code>WorkEffortReview</code>.
     * @return the list of <code>WorkEffortReview</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortReview> getWorkEffortReviews() throws RepositoryException {
        if (this.workEffortReviews == null) {
            this.workEffortReviews = getRelated(WorkEffortReview.class, "WorkEffortReview");
        }
        return this.workEffortReviews;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortStatus</code> by the relation named <code>WorkEffortStatus</code>.
     * @return the list of <code>WorkEffortStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortStatus> getWorkEffortStatuses() throws RepositoryException {
        if (this.workEffortStatuses == null) {
            this.workEffortStatuses = getRelated(WorkEffortStatus.class, "WorkEffortStatus");
        }
        return this.workEffortStatuses;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowPackage</code> by the relation named <code>PublicationWorkflowPackage</code>.
     * @return the list of <code>WorkflowPackage</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowPackage> getPublicationWorkflowPackages() throws RepositoryException {
        if (this.publicationWorkflowPackages == null) {
            this.publicationWorkflowPackages = getRelated(WorkflowPackage.class, "PublicationWorkflowPackage");
        }
        return this.publicationWorkflowPackages;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowProcess</code> by the relation named <code>PublicationWorkflowProcess</code>.
     * @return the list of <code>WorkflowProcess</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowProcess> getPublicationWorkflowProcesses() throws RepositoryException {
        if (this.publicationWorkflowProcesses == null) {
            this.publicationWorkflowProcesses = getRelated(WorkflowProcess.class, "PublicationWorkflowProcess");
        }
        return this.publicationWorkflowProcesses;
    }

    /**
     * Auto generated value setter.
     * @param statusType the statusType to set
    */
    public void setStatusType(StatusType statusType) {
        this.statusType = statusType;
    }
    /**
     * Auto generated value setter.
     * @param acctgTranses the acctgTranses to set
    */
    public void setAcctgTranses(List<AcctgTrans> acctgTranses) {
        this.acctgTranses = acctgTranses;
    }
    /**
     * Auto generated value setter.
     * @param acctgTransEntrys the acctgTransEntrys to set
    */
    public void setAcctgTransEntrys(List<AcctgTransEntry> acctgTransEntrys) {
        this.acctgTransEntrys = acctgTransEntrys;
    }
    /**
     * Auto generated value setter.
     * @param agreements the agreements to set
    */
    public void setAgreements(List<Agreement> agreements) {
        this.agreements = agreements;
    }
    /**
     * Auto generated value setter.
     * @param budgetStatuses the budgetStatuses to set
    */
    public void setBudgetStatuses(List<BudgetStatus> budgetStatuses) {
        this.budgetStatuses = budgetStatuses;
    }
    /**
     * Auto generated value setter.
     * @param communicationEvents the communicationEvents to set
    */
    public void setCommunicationEvents(List<CommunicationEvent> communicationEvents) {
        this.communicationEvents = communicationEvents;
    }
    /**
     * Auto generated value setter.
     * @param contactListCommStatuses the contactListCommStatuses to set
    */
    public void setContactListCommStatuses(List<ContactListCommStatus> contactListCommStatuses) {
        this.contactListCommStatuses = contactListCommStatuses;
    }
    /**
     * Auto generated value setter.
     * @param contactListPartys the contactListPartys to set
    */
    public void setContactListPartys(List<ContactListParty> contactListPartys) {
        this.contactListPartys = contactListPartys;
    }
    /**
     * Auto generated value setter.
     * @param contents the contents to set
    */
    public void setContents(List<Content> contents) {
        this.contents = contents;
    }
    /**
     * Auto generated value setter.
     * @param approvalContentApprovals the approvalContentApprovals to set
    */
    public void setApprovalContentApprovals(List<ContentApproval> approvalContentApprovals) {
        this.approvalContentApprovals = approvalContentApprovals;
    }
    /**
     * Auto generated value setter.
     * @param contentPurposeOperations the contentPurposeOperations to set
    */
    public void setContentPurposeOperations(List<ContentPurposeOperation> contentPurposeOperations) {
        this.contentPurposeOperations = contentPurposeOperations;
    }
    /**
     * Auto generated value setter.
     * @param custRequests the custRequests to set
    */
    public void setCustRequests(List<CustRequest> custRequests) {
        this.custRequests = custRequests;
    }
    /**
     * Auto generated value setter.
     * @param custRequestItems the custRequestItems to set
    */
    public void setCustRequestItems(List<CustRequestItem> custRequestItems) {
        this.custRequestItems = custRequestItems;
    }
    /**
     * Auto generated value setter.
     * @param custRequestStatuses the custRequestStatuses to set
    */
    public void setCustRequestStatuses(List<CustRequestStatus> custRequestStatuses) {
        this.custRequestStatuses = custRequestStatuses;
    }
    /**
     * Auto generated value setter.
     * @param dataResources the dataResources to set
    */
    public void setDataResources(List<DataResource> dataResources) {
        this.dataResources = dataResources;
    }
    /**
     * Auto generated value setter.
     * @param emplPositions the emplPositions to set
    */
    public void setEmplPositions(List<EmplPosition> emplPositions) {
        this.emplPositions = emplPositions;
    }
    /**
     * Auto generated value setter.
     * @param employmentApps the employmentApps to set
    */
    public void setEmploymentApps(List<EmploymentApp> employmentApps) {
        this.employmentApps = employmentApps;
    }
    /**
     * Auto generated value setter.
     * @param fixedAssetMaints the fixedAssetMaints to set
    */
    public void setFixedAssetMaints(List<FixedAssetMaint> fixedAssetMaints) {
        this.fixedAssetMaints = fixedAssetMaints;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItems the inventoryItems to set
    */
    public void setInventoryItems(List<InventoryItem> inventoryItems) {
        this.inventoryItems = inventoryItems;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemStatuses the inventoryItemStatuses to set
    */
    public void setInventoryItemStatuses(List<InventoryItemStatus> inventoryItemStatuses) {
        this.inventoryItemStatuses = inventoryItemStatuses;
    }
    /**
     * Auto generated value setter.
     * @param fromInventoryStatusGlAccountTypes the fromInventoryStatusGlAccountTypes to set
    */
    public void setFromInventoryStatusGlAccountTypes(List<InventoryStatusGlAccountType> fromInventoryStatusGlAccountTypes) {
        this.fromInventoryStatusGlAccountTypes = fromInventoryStatusGlAccountTypes;
    }
    /**
     * Auto generated value setter.
     * @param toInventoryStatusGlAccountTypes the toInventoryStatusGlAccountTypes to set
    */
    public void setToInventoryStatusGlAccountTypes(List<InventoryStatusGlAccountType> toInventoryStatusGlAccountTypes) {
        this.toInventoryStatusGlAccountTypes = toInventoryStatusGlAccountTypes;
    }
    /**
     * Auto generated value setter.
     * @param inventoryTransfers the inventoryTransfers to set
    */
    public void setInventoryTransfers(List<InventoryTransfer> inventoryTransfers) {
        this.inventoryTransfers = inventoryTransfers;
    }
    /**
     * Auto generated value setter.
     * @param invoices the invoices to set
    */
    public void setInvoices(List<Invoice> invoices) {
        this.invoices = invoices;
    }
    /**
     * Auto generated value setter.
     * @param processingInvoices the processingInvoices to set
    */
    public void setProcessingInvoices(List<Invoice> processingInvoices) {
        this.processingInvoices = processingInvoices;
    }
    /**
     * Auto generated value setter.
     * @param invoiceStatuses the invoiceStatuses to set
    */
    public void setInvoiceStatuses(List<InvoiceStatus> invoiceStatuses) {
        this.invoiceStatuses = invoiceStatuses;
    }
    /**
     * Auto generated value setter.
     * @param jobSandboxes the jobSandboxes to set
    */
    public void setJobSandboxes(List<JobSandbox> jobSandboxes) {
        this.jobSandboxes = jobSandboxes;
    }
    /**
     * Auto generated value setter.
     * @param marketingCampaigns the marketingCampaigns to set
    */
    public void setMarketingCampaigns(List<MarketingCampaign> marketingCampaigns) {
        this.marketingCampaigns = marketingCampaigns;
    }
    /**
     * Auto generated value setter.
     * @param orderDeliverySchedules the orderDeliverySchedules to set
    */
    public void setOrderDeliverySchedules(List<OrderDeliverySchedule> orderDeliverySchedules) {
        this.orderDeliverySchedules = orderDeliverySchedules;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaders the orderHeaders to set
    */
    public void setOrderHeaders(List<OrderHeader> orderHeaders) {
        this.orderHeaders = orderHeaders;
    }
    /**
     * Auto generated value setter.
     * @param syncOrderHeaders the syncOrderHeaders to set
    */
    public void setSyncOrderHeaders(List<OrderHeader> syncOrderHeaders) {
        this.syncOrderHeaders = syncOrderHeaders;
    }
    /**
     * Auto generated value setter.
     * @param orderItems the orderItems to set
    */
    public void setOrderItems(List<OrderItem> orderItems) {
        this.orderItems = orderItems;
    }
    /**
     * Auto generated value setter.
     * @param syncOrderItems the syncOrderItems to set
    */
    public void setSyncOrderItems(List<OrderItem> syncOrderItems) {
        this.syncOrderItems = syncOrderItems;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGroups the orderItemShipGroups to set
    */
    public void setOrderItemShipGroups(List<OrderItemShipGroup> orderItemShipGroups) {
        this.orderItemShipGroups = orderItemShipGroups;
    }
    /**
     * Auto generated value setter.
     * @param orderPaymentPreferences the orderPaymentPreferences to set
    */
    public void setOrderPaymentPreferences(List<OrderPaymentPreference> orderPaymentPreferences) {
        this.orderPaymentPreferences = orderPaymentPreferences;
    }
    /**
     * Auto generated value setter.
     * @param orderStatuses the orderStatuses to set
    */
    public void setOrderStatuses(List<OrderStatus> orderStatuses) {
        this.orderStatuses = orderStatuses;
    }
    /**
     * Auto generated value setter.
     * @param partys the partys to set
    */
    public void setPartys(List<Party> partys) {
        this.partys = partys;
    }
    /**
     * Auto generated value setter.
     * @param partyFixedAssetAssignments the partyFixedAssetAssignments to set
    */
    public void setPartyFixedAssetAssignments(List<PartyFixedAssetAssignment> partyFixedAssetAssignments) {
        this.partyFixedAssetAssignments = partyFixedAssetAssignments;
    }
    /**
     * Auto generated value setter.
     * @param partyInvitations the partyInvitations to set
    */
    public void setPartyInvitations(List<PartyInvitation> partyInvitations) {
        this.partyInvitations = partyInvitations;
    }
    /**
     * Auto generated value setter.
     * @param partyQuals the partyQuals to set
    */
    public void setPartyQuals(List<PartyQual> partyQuals) {
        this.partyQuals = partyQuals;
    }
    /**
     * Auto generated value setter.
     * @param verificationPartyQuals the verificationPartyQuals to set
    */
    public void setVerificationPartyQuals(List<PartyQual> verificationPartyQuals) {
        this.verificationPartyQuals = verificationPartyQuals;
    }
    /**
     * Auto generated value setter.
     * @param partyRelationships the partyRelationships to set
    */
    public void setPartyRelationships(List<PartyRelationship> partyRelationships) {
        this.partyRelationships = partyRelationships;
    }
    /**
     * Auto generated value setter.
     * @param partyStatuses the partyStatuses to set
    */
    public void setPartyStatuses(List<PartyStatus> partyStatuses) {
        this.partyStatuses = partyStatuses;
    }
    /**
     * Auto generated value setter.
     * @param payments the payments to set
    */
    public void setPayments(List<Payment> payments) {
        this.payments = payments;
    }
    /**
     * Auto generated value setter.
     * @param picklists the picklists to set
    */
    public void setPicklists(List<Picklist> picklists) {
        this.picklists = picklists;
    }
    /**
     * Auto generated value setter.
     * @param picklistItems the picklistItems to set
    */
    public void setPicklistItems(List<PicklistItem> picklistItems) {
        this.picklistItems = picklistItems;
    }
    /**
     * Auto generated value setter.
     * @param picklistStatusHistorys the picklistStatusHistorys to set
    */
    public void setPicklistStatusHistorys(List<PicklistStatusHistory> picklistStatusHistorys) {
        this.picklistStatusHistorys = picklistStatusHistorys;
    }
    /**
     * Auto generated value setter.
     * @param toPicklistStatusHistorys the toPicklistStatusHistorys to set
    */
    public void setToPicklistStatusHistorys(List<PicklistStatusHistory> toPicklistStatusHistorys) {
        this.toPicklistStatusHistorys = toPicklistStatusHistorys;
    }
    /**
     * Auto generated value setter.
     * @param posTerminalLogs the posTerminalLogs to set
    */
    public void setPosTerminalLogs(List<PosTerminalLog> posTerminalLogs) {
        this.posTerminalLogs = posTerminalLogs;
    }
    /**
     * Auto generated value setter.
     * @param productReviews the productReviews to set
    */
    public void setProductReviews(List<ProductReview> productReviews) {
        this.productReviews = productReviews;
    }
    /**
     * Auto generated value setter.
     * @param headerApprovedProductStores the headerApprovedProductStores to set
    */
    public void setHeaderApprovedProductStores(List<ProductStore> headerApprovedProductStores) {
        this.headerApprovedProductStores = headerApprovedProductStores;
    }
    /**
     * Auto generated value setter.
     * @param itemApprovedProductStores the itemApprovedProductStores to set
    */
    public void setItemApprovedProductStores(List<ProductStore> itemApprovedProductStores) {
        this.itemApprovedProductStores = itemApprovedProductStores;
    }
    /**
     * Auto generated value setter.
     * @param digitalItemApprovedProductStores the digitalItemApprovedProductStores to set
    */
    public void setDigitalItemApprovedProductStores(List<ProductStore> digitalItemApprovedProductStores) {
        this.digitalItemApprovedProductStores = digitalItemApprovedProductStores;
    }
    /**
     * Auto generated value setter.
     * @param headerDeclinedProductStores the headerDeclinedProductStores to set
    */
    public void setHeaderDeclinedProductStores(List<ProductStore> headerDeclinedProductStores) {
        this.headerDeclinedProductStores = headerDeclinedProductStores;
    }
    /**
     * Auto generated value setter.
     * @param itemDeclinedProductStores the itemDeclinedProductStores to set
    */
    public void setItemDeclinedProductStores(List<ProductStore> itemDeclinedProductStores) {
        this.itemDeclinedProductStores = itemDeclinedProductStores;
    }
    /**
     * Auto generated value setter.
     * @param headerCancelProductStores the headerCancelProductStores to set
    */
    public void setHeaderCancelProductStores(List<ProductStore> headerCancelProductStores) {
        this.headerCancelProductStores = headerCancelProductStores;
    }
    /**
     * Auto generated value setter.
     * @param itemCancelProductStores the itemCancelProductStores to set
    */
    public void setItemCancelProductStores(List<ProductStore> itemCancelProductStores) {
        this.itemCancelProductStores = itemCancelProductStores;
    }
    /**
     * Auto generated value setter.
     * @param quotes the quotes to set
    */
    public void setQuotes(List<Quote> quotes) {
        this.quotes = quotes;
    }
    /**
     * Auto generated value setter.
     * @param requirements the requirements to set
    */
    public void setRequirements(List<Requirement> requirements) {
        this.requirements = requirements;
    }
    /**
     * Auto generated value setter.
     * @param requirementStatuses the requirementStatuses to set
    */
    public void setRequirementStatuses(List<RequirementStatus> requirementStatuses) {
        this.requirementStatuses = requirementStatuses;
    }
    /**
     * Auto generated value setter.
     * @param returnHeaders the returnHeaders to set
    */
    public void setReturnHeaders(List<ReturnHeader> returnHeaders) {
        this.returnHeaders = returnHeaders;
    }
    /**
     * Auto generated value setter.
     * @param returnItems the returnItems to set
    */
    public void setReturnItems(List<ReturnItem> returnItems) {
        this.returnItems = returnItems;
    }
    /**
     * Auto generated value setter.
     * @param inventoryReturnItems the inventoryReturnItems to set
    */
    public void setInventoryReturnItems(List<ReturnItem> inventoryReturnItems) {
        this.inventoryReturnItems = inventoryReturnItems;
    }
    /**
     * Auto generated value setter.
     * @param returnStatuses the returnStatuses to set
    */
    public void setReturnStatuses(List<ReturnStatus> returnStatuses) {
        this.returnStatuses = returnStatuses;
    }
    /**
     * Auto generated value setter.
     * @param serverHits the serverHits to set
    */
    public void setServerHits(List<ServerHit> serverHits) {
        this.serverHits = serverHits;
    }
    /**
     * Auto generated value setter.
     * @param shipments the shipments to set
    */
    public void setShipments(List<Shipment> shipments) {
        this.shipments = shipments;
    }
    /**
     * Auto generated value setter.
     * @param carrierServiceShipmentRouteSegments the carrierServiceShipmentRouteSegments to set
    */
    public void setCarrierServiceShipmentRouteSegments(List<ShipmentRouteSegment> carrierServiceShipmentRouteSegments) {
        this.carrierServiceShipmentRouteSegments = carrierServiceShipmentRouteSegments;
    }
    /**
     * Auto generated value setter.
     * @param shipmentStatuses the shipmentStatuses to set
    */
    public void setShipmentStatuses(List<ShipmentStatus> shipmentStatuses) {
        this.shipmentStatuses = shipmentStatuses;
    }
    /**
     * Auto generated value setter.
     * @param mainStatusValidChanges the mainStatusValidChanges to set
    */
    public void setMainStatusValidChanges(List<StatusValidChange> mainStatusValidChanges) {
        this.mainStatusValidChanges = mainStatusValidChanges;
    }
    /**
     * Auto generated value setter.
     * @param toStatusValidChanges the toStatusValidChanges to set
    */
    public void setToStatusValidChanges(List<StatusValidChange> toStatusValidChanges) {
        this.toStatusValidChanges = toStatusValidChanges;
    }
    /**
     * Auto generated value setter.
     * @param surveyResponses the surveyResponses to set
    */
    public void setSurveyResponses(List<SurveyResponse> surveyResponses) {
        this.surveyResponses = surveyResponses;
    }
    /**
     * Auto generated value setter.
     * @param unemploymentClaims the unemploymentClaims to set
    */
    public void setUnemploymentClaims(List<UnemploymentClaim> unemploymentClaims) {
        this.unemploymentClaims = unemploymentClaims;
    }
    /**
     * Auto generated value setter.
     * @param currentWorkEfforts the currentWorkEfforts to set
    */
    public void setCurrentWorkEfforts(List<WorkEffort> currentWorkEfforts) {
        this.currentWorkEfforts = currentWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param workEffortFixedAssetAssigns the workEffortFixedAssetAssigns to set
    */
    public void setWorkEffortFixedAssetAssigns(List<WorkEffortFixedAssetAssign> workEffortFixedAssetAssigns) {
        this.workEffortFixedAssetAssigns = workEffortFixedAssetAssigns;
    }
    /**
     * Auto generated value setter.
     * @param workEffortGoodStandards the workEffortGoodStandards to set
    */
    public void setWorkEffortGoodStandards(List<WorkEffortGoodStandard> workEffortGoodStandards) {
        this.workEffortGoodStandards = workEffortGoodStandards;
    }
    /**
     * Auto generated value setter.
     * @param workEffortInventoryAssigns the workEffortInventoryAssigns to set
    */
    public void setWorkEffortInventoryAssigns(List<WorkEffortInventoryAssign> workEffortInventoryAssigns) {
        this.workEffortInventoryAssigns = workEffortInventoryAssigns;
    }
    /**
     * Auto generated value setter.
     * @param assignmentWorkEffortPartyAssignments the assignmentWorkEffortPartyAssignments to set
    */
    public void setAssignmentWorkEffortPartyAssignments(List<WorkEffortPartyAssignment> assignmentWorkEffortPartyAssignments) {
        this.assignmentWorkEffortPartyAssignments = assignmentWorkEffortPartyAssignments;
    }
    /**
     * Auto generated value setter.
     * @param availabilityWorkEffortPartyAssignments the availabilityWorkEffortPartyAssignments to set
    */
    public void setAvailabilityWorkEffortPartyAssignments(List<WorkEffortPartyAssignment> availabilityWorkEffortPartyAssignments) {
        this.availabilityWorkEffortPartyAssignments = availabilityWorkEffortPartyAssignments;
    }
    /**
     * Auto generated value setter.
     * @param workEffortReviews the workEffortReviews to set
    */
    public void setWorkEffortReviews(List<WorkEffortReview> workEffortReviews) {
        this.workEffortReviews = workEffortReviews;
    }
    /**
     * Auto generated value setter.
     * @param workEffortStatuses the workEffortStatuses to set
    */
    public void setWorkEffortStatuses(List<WorkEffortStatus> workEffortStatuses) {
        this.workEffortStatuses = workEffortStatuses;
    }
    /**
     * Auto generated value setter.
     * @param publicationWorkflowPackages the publicationWorkflowPackages to set
    */
    public void setPublicationWorkflowPackages(List<WorkflowPackage> publicationWorkflowPackages) {
        this.publicationWorkflowPackages = publicationWorkflowPackages;
    }
    /**
     * Auto generated value setter.
     * @param publicationWorkflowProcesses the publicationWorkflowProcesses to set
    */
    public void setPublicationWorkflowProcesses(List<WorkflowProcess> publicationWorkflowProcesses) {
        this.publicationWorkflowProcesses = publicationWorkflowProcesses;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addBudgetStatuse(BudgetStatus budgetStatuse) {
        if (this.budgetStatuses == null) {
            this.budgetStatuses = new ArrayList<BudgetStatus>();
        }
        this.budgetStatuses.add(budgetStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeBudgetStatuse(BudgetStatus budgetStatuse) {
        if (this.budgetStatuses == null) {
            return;
        }
        this.budgetStatuses.remove(budgetStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearBudgetStatuse() {
        if (this.budgetStatuses == null) {
            return;
        }
        this.budgetStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addContentPurposeOperation(ContentPurposeOperation contentPurposeOperation) {
        if (this.contentPurposeOperations == null) {
            this.contentPurposeOperations = new ArrayList<ContentPurposeOperation>();
        }
        this.contentPurposeOperations.add(contentPurposeOperation);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContentPurposeOperation(ContentPurposeOperation contentPurposeOperation) {
        if (this.contentPurposeOperations == null) {
            return;
        }
        this.contentPurposeOperations.remove(contentPurposeOperation);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContentPurposeOperation() {
        if (this.contentPurposeOperations == null) {
            return;
        }
        this.contentPurposeOperations.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInventoryItemStatuse(InventoryItemStatus inventoryItemStatuse) {
        if (this.inventoryItemStatuses == null) {
            this.inventoryItemStatuses = new ArrayList<InventoryItemStatus>();
        }
        this.inventoryItemStatuses.add(inventoryItemStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInventoryItemStatuse(InventoryItemStatus inventoryItemStatuse) {
        if (this.inventoryItemStatuses == null) {
            return;
        }
        this.inventoryItemStatuses.remove(inventoryItemStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInventoryItemStatuse() {
        if (this.inventoryItemStatuses == null) {
            return;
        }
        this.inventoryItemStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFromInventoryStatusGlAccountType(InventoryStatusGlAccountType fromInventoryStatusGlAccountType) {
        if (this.fromInventoryStatusGlAccountTypes == null) {
            this.fromInventoryStatusGlAccountTypes = new ArrayList<InventoryStatusGlAccountType>();
        }
        this.fromInventoryStatusGlAccountTypes.add(fromInventoryStatusGlAccountType);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFromInventoryStatusGlAccountType(InventoryStatusGlAccountType fromInventoryStatusGlAccountType) {
        if (this.fromInventoryStatusGlAccountTypes == null) {
            return;
        }
        this.fromInventoryStatusGlAccountTypes.remove(fromInventoryStatusGlAccountType);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFromInventoryStatusGlAccountType() {
        if (this.fromInventoryStatusGlAccountTypes == null) {
            return;
        }
        this.fromInventoryStatusGlAccountTypes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addToInventoryStatusGlAccountType(InventoryStatusGlAccountType toInventoryStatusGlAccountType) {
        if (this.toInventoryStatusGlAccountTypes == null) {
            this.toInventoryStatusGlAccountTypes = new ArrayList<InventoryStatusGlAccountType>();
        }
        this.toInventoryStatusGlAccountTypes.add(toInventoryStatusGlAccountType);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeToInventoryStatusGlAccountType(InventoryStatusGlAccountType toInventoryStatusGlAccountType) {
        if (this.toInventoryStatusGlAccountTypes == null) {
            return;
        }
        this.toInventoryStatusGlAccountTypes.remove(toInventoryStatusGlAccountType);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearToInventoryStatusGlAccountType() {
        if (this.toInventoryStatusGlAccountTypes == null) {
            return;
        }
        this.toInventoryStatusGlAccountTypes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceStatuse(InvoiceStatus invoiceStatuse) {
        if (this.invoiceStatuses == null) {
            this.invoiceStatuses = new ArrayList<InvoiceStatus>();
        }
        this.invoiceStatuses.add(invoiceStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceStatuse(InvoiceStatus invoiceStatuse) {
        if (this.invoiceStatuses == null) {
            return;
        }
        this.invoiceStatuses.remove(invoiceStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceStatuse() {
        if (this.invoiceStatuses == null) {
            return;
        }
        this.invoiceStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyStatuse(PartyStatus partyStatuse) {
        if (this.partyStatuses == null) {
            this.partyStatuses = new ArrayList<PartyStatus>();
        }
        this.partyStatuses.add(partyStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyStatuse(PartyStatus partyStatuse) {
        if (this.partyStatuses == null) {
            return;
        }
        this.partyStatuses.remove(partyStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyStatuse() {
        if (this.partyStatuses == null) {
            return;
        }
        this.partyStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addRequirementStatuse(RequirementStatus requirementStatuse) {
        if (this.requirementStatuses == null) {
            this.requirementStatuses = new ArrayList<RequirementStatus>();
        }
        this.requirementStatuses.add(requirementStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeRequirementStatuse(RequirementStatus requirementStatuse) {
        if (this.requirementStatuses == null) {
            return;
        }
        this.requirementStatuses.remove(requirementStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearRequirementStatuse() {
        if (this.requirementStatuses == null) {
            return;
        }
        this.requirementStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addShipmentStatuse(ShipmentStatus shipmentStatuse) {
        if (this.shipmentStatuses == null) {
            this.shipmentStatuses = new ArrayList<ShipmentStatus>();
        }
        this.shipmentStatuses.add(shipmentStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeShipmentStatuse(ShipmentStatus shipmentStatuse) {
        if (this.shipmentStatuses == null) {
            return;
        }
        this.shipmentStatuses.remove(shipmentStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearShipmentStatuse() {
        if (this.shipmentStatuses == null) {
            return;
        }
        this.shipmentStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addMainStatusValidChange(StatusValidChange mainStatusValidChange) {
        if (this.mainStatusValidChanges == null) {
            this.mainStatusValidChanges = new ArrayList<StatusValidChange>();
        }
        this.mainStatusValidChanges.add(mainStatusValidChange);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeMainStatusValidChange(StatusValidChange mainStatusValidChange) {
        if (this.mainStatusValidChanges == null) {
            return;
        }
        this.mainStatusValidChanges.remove(mainStatusValidChange);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearMainStatusValidChange() {
        if (this.mainStatusValidChanges == null) {
            return;
        }
        this.mainStatusValidChanges.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addToStatusValidChange(StatusValidChange toStatusValidChange) {
        if (this.toStatusValidChanges == null) {
            this.toStatusValidChanges = new ArrayList<StatusValidChange>();
        }
        this.toStatusValidChanges.add(toStatusValidChange);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeToStatusValidChange(StatusValidChange toStatusValidChange) {
        if (this.toStatusValidChanges == null) {
            return;
        }
        this.toStatusValidChanges.remove(toStatusValidChange);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearToStatusValidChange() {
        if (this.toStatusValidChanges == null) {
            return;
        }
        this.toStatusValidChanges.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortStatuse(WorkEffortStatus workEffortStatuse) {
        if (this.workEffortStatuses == null) {
            this.workEffortStatuses = new ArrayList<WorkEffortStatus>();
        }
        this.workEffortStatuses.add(workEffortStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortStatuse(WorkEffortStatus workEffortStatuse) {
        if (this.workEffortStatuses == null) {
            return;
        }
        this.workEffortStatuses.remove(workEffortStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortStatuse() {
        if (this.workEffortStatuses == null) {
            return;
        }
        this.workEffortStatuses.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setStatusId((String) mapValue.get("statusId"));
        setStatusTypeId((String) mapValue.get("statusTypeId"));
        setStatusCode((String) mapValue.get("statusCode"));
        setSequenceId((String) mapValue.get("sequenceId"));
        setDescription((String) mapValue.get("description"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("statusId", getStatusId());
        mapValue.put("statusTypeId", getStatusTypeId());
        mapValue.put("statusCode", getStatusCode());
        mapValue.put("sequenceId", getSequenceId());
        mapValue.put("description", getDescription());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
