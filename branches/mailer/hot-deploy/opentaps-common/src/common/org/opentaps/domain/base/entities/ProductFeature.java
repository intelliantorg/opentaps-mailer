package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity ProductFeature.
 */
@javax.persistence.Entity
@Table(name="PRODUCT_FEATURE")
public class ProductFeature extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productFeatureId", "PRODUCT_FEATURE_ID");
        fields.put("productFeatureTypeId", "PRODUCT_FEATURE_TYPE_ID");
        fields.put("productFeatureCategoryId", "PRODUCT_FEATURE_CATEGORY_ID");
        fields.put("description", "DESCRIPTION");
        fields.put("uomId", "UOM_ID");
        fields.put("numberSpecified", "NUMBER_SPECIFIED");
        fields.put("defaultAmount", "DEFAULT_AMOUNT");
        fields.put("defaultSequenceNum", "DEFAULT_SEQUENCE_NUM");
        fields.put("abbrev", "ABBREV");
        fields.put("idCode", "ID_CODE");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ProductFeature", fields);
}
  public static enum Fields implements EntityFieldInterface<ProductFeature> {
    productFeatureId("productFeatureId"),
    productFeatureTypeId("productFeatureTypeId"),
    productFeatureCategoryId("productFeatureCategoryId"),
    description("description"),
    uomId("uomId"),
    numberSpecified("numberSpecified"),
    defaultAmount("defaultAmount"),
    defaultSequenceNum("defaultSequenceNum"),
    abbrev("abbrev"),
    idCode("idCode"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="ProductFeature_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="ProductFeature_GEN")   
    @Id
    
    @Column(name="PRODUCT_FEATURE_ID")
    private String productFeatureId;
    
    @Column(name="PRODUCT_FEATURE_TYPE_ID")
    private String productFeatureTypeId;
    
    @Column(name="PRODUCT_FEATURE_CATEGORY_ID")
    private String productFeatureCategoryId;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="UOM_ID")
    private String uomId;
    
    @Column(name="NUMBER_SPECIFIED")
    private BigDecimal numberSpecified;
    
    @Column(name="DEFAULT_AMOUNT")
    private BigDecimal defaultAmount;
    
    @Column(name="DEFAULT_SEQUENCE_NUM")
    private Long defaultSequenceNum;
    
    @Column(name="ABBREV")
    private String abbrev;
    
    @Column(name="ID_CODE")
    private String idCode;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_CATEGORY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductFeatureCategory productFeatureCategory = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductFeatureType productFeatureType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<CostComponent> costComponents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<DesiredFeature> desiredFeatures = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<InvoiceItem> invoiceItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productFeature", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<ProductFeatureAppl> productFeatureAppls = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productFeature", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<ProductFeatureApplAttr> productFeatureApplAttrs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productFeature", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<ProductFeatureDataResource> productFeatureDataResources = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productFeature", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<ProductFeatureGroupAppl> productFeatureGroupAppls = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="mainProductFeature", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<ProductFeatureIactn> mainProductFeatureIactns = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="assocProductFeature", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_FEATURE_ID_TO")
    private List<ProductFeatureIactn> assocProductFeatureIactns = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE")
    private List<ProductManufacturingRule> productManufacturingRules = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<QuoteItem> quoteItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productFeature", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<ShipmentItemFeature> shipmentItemFeatures = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productFeature", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_FEATURE_ID")
    private List<SupplierProductFeature> supplierProductFeatures = null;

  /**
   * Default constructor.
   */
  public ProductFeature() {
      super();
      this.baseEntityName = "ProductFeature";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productFeatureId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProductFeature(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param productFeatureId the productFeatureId to set
     */
    public void setProductFeatureId(String productFeatureId) {
        this.productFeatureId = productFeatureId;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureTypeId the productFeatureTypeId to set
     */
    public void setProductFeatureTypeId(String productFeatureTypeId) {
        this.productFeatureTypeId = productFeatureTypeId;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureCategoryId the productFeatureCategoryId to set
     */
    public void setProductFeatureCategoryId(String productFeatureCategoryId) {
        this.productFeatureCategoryId = productFeatureCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param uomId the uomId to set
     */
    public void setUomId(String uomId) {
        this.uomId = uomId;
    }
    /**
     * Auto generated value setter.
     * @param numberSpecified the numberSpecified to set
     */
    public void setNumberSpecified(BigDecimal numberSpecified) {
        this.numberSpecified = numberSpecified;
    }
    /**
     * Auto generated value setter.
     * @param defaultAmount the defaultAmount to set
     */
    public void setDefaultAmount(BigDecimal defaultAmount) {
        this.defaultAmount = defaultAmount;
    }
    /**
     * Auto generated value setter.
     * @param defaultSequenceNum the defaultSequenceNum to set
     */
    public void setDefaultSequenceNum(Long defaultSequenceNum) {
        this.defaultSequenceNum = defaultSequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param abbrev the abbrev to set
     */
    public void setAbbrev(String abbrev) {
        this.abbrev = abbrev;
    }
    /**
     * Auto generated value setter.
     * @param idCode the idCode to set
     */
    public void setIdCode(String idCode) {
        this.idCode = idCode;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductFeatureId() {
        return this.productFeatureId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductFeatureTypeId() {
        return this.productFeatureTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductFeatureCategoryId() {
        return this.productFeatureCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUomId() {
        return this.uomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getNumberSpecified() {
        return this.numberSpecified;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getDefaultAmount() {
        return this.defaultAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getDefaultSequenceNum() {
        return this.defaultSequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAbbrev() {
        return this.abbrev;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIdCode() {
        return this.idCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>ProductFeatureCategory</code> by the relation named <code>ProductFeatureCategory</code>.
     * @return the <code>ProductFeatureCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductFeatureCategory getProductFeatureCategory() throws RepositoryException {
        if (this.productFeatureCategory == null) {
            this.productFeatureCategory = getRelatedOne(ProductFeatureCategory.class, "ProductFeatureCategory");
        }
        return this.productFeatureCategory;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureType</code> by the relation named <code>ProductFeatureType</code>.
     * @return the <code>ProductFeatureType</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductFeatureType getProductFeatureType() throws RepositoryException {
        if (this.productFeatureType == null) {
            this.productFeatureType = getRelatedOne(ProductFeatureType.class, "ProductFeatureType");
        }
        return this.productFeatureType;
    }
    /**
     * Auto generated method that gets the related <code>CostComponent</code> by the relation named <code>CostComponent</code>.
     * @return the list of <code>CostComponent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponent> getCostComponents() throws RepositoryException {
        if (this.costComponents == null) {
            this.costComponents = getRelated(CostComponent.class, "CostComponent");
        }
        return this.costComponents;
    }
    /**
     * Auto generated method that gets the related <code>DesiredFeature</code> by the relation named <code>DesiredFeature</code>.
     * @return the list of <code>DesiredFeature</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DesiredFeature> getDesiredFeatures() throws RepositoryException {
        if (this.desiredFeatures == null) {
            this.desiredFeatures = getRelated(DesiredFeature.class, "DesiredFeature");
        }
        return this.desiredFeatures;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the list of <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItem> getInvoiceItems() throws RepositoryException {
        if (this.invoiceItems == null) {
            this.invoiceItems = getRelated(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItems;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureAppl</code> by the relation named <code>ProductFeatureAppl</code>.
     * @return the list of <code>ProductFeatureAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureAppl> getProductFeatureAppls() throws RepositoryException {
        if (this.productFeatureAppls == null) {
            this.productFeatureAppls = getRelated(ProductFeatureAppl.class, "ProductFeatureAppl");
        }
        return this.productFeatureAppls;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureApplAttr</code> by the relation named <code>ProductFeatureApplAttr</code>.
     * @return the list of <code>ProductFeatureApplAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureApplAttr> getProductFeatureApplAttrs() throws RepositoryException {
        if (this.productFeatureApplAttrs == null) {
            this.productFeatureApplAttrs = getRelated(ProductFeatureApplAttr.class, "ProductFeatureApplAttr");
        }
        return this.productFeatureApplAttrs;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureDataResource</code> by the relation named <code>ProductFeatureDataResource</code>.
     * @return the list of <code>ProductFeatureDataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureDataResource> getProductFeatureDataResources() throws RepositoryException {
        if (this.productFeatureDataResources == null) {
            this.productFeatureDataResources = getRelated(ProductFeatureDataResource.class, "ProductFeatureDataResource");
        }
        return this.productFeatureDataResources;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureGroupAppl</code> by the relation named <code>ProductFeatureGroupAppl</code>.
     * @return the list of <code>ProductFeatureGroupAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureGroupAppl> getProductFeatureGroupAppls() throws RepositoryException {
        if (this.productFeatureGroupAppls == null) {
            this.productFeatureGroupAppls = getRelated(ProductFeatureGroupAppl.class, "ProductFeatureGroupAppl");
        }
        return this.productFeatureGroupAppls;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureIactn</code> by the relation named <code>MainProductFeatureIactn</code>.
     * @return the list of <code>ProductFeatureIactn</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureIactn> getMainProductFeatureIactns() throws RepositoryException {
        if (this.mainProductFeatureIactns == null) {
            this.mainProductFeatureIactns = getRelated(ProductFeatureIactn.class, "MainProductFeatureIactn");
        }
        return this.mainProductFeatureIactns;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureIactn</code> by the relation named <code>AssocProductFeatureIactn</code>.
     * @return the list of <code>ProductFeatureIactn</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureIactn> getAssocProductFeatureIactns() throws RepositoryException {
        if (this.assocProductFeatureIactns == null) {
            this.assocProductFeatureIactns = getRelated(ProductFeatureIactn.class, "AssocProductFeatureIactn");
        }
        return this.assocProductFeatureIactns;
    }
    /**
     * Auto generated method that gets the related <code>ProductManufacturingRule</code> by the relation named <code>ProductManufacturingRule</code>.
     * @return the list of <code>ProductManufacturingRule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductManufacturingRule> getProductManufacturingRules() throws RepositoryException {
        if (this.productManufacturingRules == null) {
            this.productManufacturingRules = getRelated(ProductManufacturingRule.class, "ProductManufacturingRule");
        }
        return this.productManufacturingRules;
    }
    /**
     * Auto generated method that gets the related <code>QuoteItem</code> by the relation named <code>QuoteItem</code>.
     * @return the list of <code>QuoteItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteItem> getQuoteItems() throws RepositoryException {
        if (this.quoteItems == null) {
            this.quoteItems = getRelated(QuoteItem.class, "QuoteItem");
        }
        return this.quoteItems;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentItemFeature</code> by the relation named <code>ShipmentItemFeature</code>.
     * @return the list of <code>ShipmentItemFeature</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentItemFeature> getShipmentItemFeatures() throws RepositoryException {
        if (this.shipmentItemFeatures == null) {
            this.shipmentItemFeatures = getRelated(ShipmentItemFeature.class, "ShipmentItemFeature");
        }
        return this.shipmentItemFeatures;
    }
    /**
     * Auto generated method that gets the related <code>SupplierProductFeature</code> by the relation named <code>SupplierProductFeature</code>.
     * @return the list of <code>SupplierProductFeature</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SupplierProductFeature> getSupplierProductFeatures() throws RepositoryException {
        if (this.supplierProductFeatures == null) {
            this.supplierProductFeatures = getRelated(SupplierProductFeature.class, "SupplierProductFeature");
        }
        return this.supplierProductFeatures;
    }

    /**
     * Auto generated value setter.
     * @param productFeatureCategory the productFeatureCategory to set
    */
    public void setProductFeatureCategory(ProductFeatureCategory productFeatureCategory) {
        this.productFeatureCategory = productFeatureCategory;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureType the productFeatureType to set
    */
    public void setProductFeatureType(ProductFeatureType productFeatureType) {
        this.productFeatureType = productFeatureType;
    }
    /**
     * Auto generated value setter.
     * @param costComponents the costComponents to set
    */
    public void setCostComponents(List<CostComponent> costComponents) {
        this.costComponents = costComponents;
    }
    /**
     * Auto generated value setter.
     * @param desiredFeatures the desiredFeatures to set
    */
    public void setDesiredFeatures(List<DesiredFeature> desiredFeatures) {
        this.desiredFeatures = desiredFeatures;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItems the invoiceItems to set
    */
    public void setInvoiceItems(List<InvoiceItem> invoiceItems) {
        this.invoiceItems = invoiceItems;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureAppls the productFeatureAppls to set
    */
    public void setProductFeatureAppls(List<ProductFeatureAppl> productFeatureAppls) {
        this.productFeatureAppls = productFeatureAppls;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureApplAttrs the productFeatureApplAttrs to set
    */
    public void setProductFeatureApplAttrs(List<ProductFeatureApplAttr> productFeatureApplAttrs) {
        this.productFeatureApplAttrs = productFeatureApplAttrs;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureDataResources the productFeatureDataResources to set
    */
    public void setProductFeatureDataResources(List<ProductFeatureDataResource> productFeatureDataResources) {
        this.productFeatureDataResources = productFeatureDataResources;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureGroupAppls the productFeatureGroupAppls to set
    */
    public void setProductFeatureGroupAppls(List<ProductFeatureGroupAppl> productFeatureGroupAppls) {
        this.productFeatureGroupAppls = productFeatureGroupAppls;
    }
    /**
     * Auto generated value setter.
     * @param mainProductFeatureIactns the mainProductFeatureIactns to set
    */
    public void setMainProductFeatureIactns(List<ProductFeatureIactn> mainProductFeatureIactns) {
        this.mainProductFeatureIactns = mainProductFeatureIactns;
    }
    /**
     * Auto generated value setter.
     * @param assocProductFeatureIactns the assocProductFeatureIactns to set
    */
    public void setAssocProductFeatureIactns(List<ProductFeatureIactn> assocProductFeatureIactns) {
        this.assocProductFeatureIactns = assocProductFeatureIactns;
    }
    /**
     * Auto generated value setter.
     * @param productManufacturingRules the productManufacturingRules to set
    */
    public void setProductManufacturingRules(List<ProductManufacturingRule> productManufacturingRules) {
        this.productManufacturingRules = productManufacturingRules;
    }
    /**
     * Auto generated value setter.
     * @param quoteItems the quoteItems to set
    */
    public void setQuoteItems(List<QuoteItem> quoteItems) {
        this.quoteItems = quoteItems;
    }
    /**
     * Auto generated value setter.
     * @param shipmentItemFeatures the shipmentItemFeatures to set
    */
    public void setShipmentItemFeatures(List<ShipmentItemFeature> shipmentItemFeatures) {
        this.shipmentItemFeatures = shipmentItemFeatures;
    }
    /**
     * Auto generated value setter.
     * @param supplierProductFeatures the supplierProductFeatures to set
    */
    public void setSupplierProductFeatures(List<SupplierProductFeature> supplierProductFeatures) {
        this.supplierProductFeatures = supplierProductFeatures;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFeatureAppl(ProductFeatureAppl productFeatureAppl) {
        if (this.productFeatureAppls == null) {
            this.productFeatureAppls = new ArrayList<ProductFeatureAppl>();
        }
        this.productFeatureAppls.add(productFeatureAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFeatureAppl(ProductFeatureAppl productFeatureAppl) {
        if (this.productFeatureAppls == null) {
            return;
        }
        this.productFeatureAppls.remove(productFeatureAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFeatureAppl() {
        if (this.productFeatureAppls == null) {
            return;
        }
        this.productFeatureAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFeatureApplAttr(ProductFeatureApplAttr productFeatureApplAttr) {
        if (this.productFeatureApplAttrs == null) {
            this.productFeatureApplAttrs = new ArrayList<ProductFeatureApplAttr>();
        }
        this.productFeatureApplAttrs.add(productFeatureApplAttr);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFeatureApplAttr(ProductFeatureApplAttr productFeatureApplAttr) {
        if (this.productFeatureApplAttrs == null) {
            return;
        }
        this.productFeatureApplAttrs.remove(productFeatureApplAttr);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFeatureApplAttr() {
        if (this.productFeatureApplAttrs == null) {
            return;
        }
        this.productFeatureApplAttrs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFeatureDataResource(ProductFeatureDataResource productFeatureDataResource) {
        if (this.productFeatureDataResources == null) {
            this.productFeatureDataResources = new ArrayList<ProductFeatureDataResource>();
        }
        this.productFeatureDataResources.add(productFeatureDataResource);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFeatureDataResource(ProductFeatureDataResource productFeatureDataResource) {
        if (this.productFeatureDataResources == null) {
            return;
        }
        this.productFeatureDataResources.remove(productFeatureDataResource);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFeatureDataResource() {
        if (this.productFeatureDataResources == null) {
            return;
        }
        this.productFeatureDataResources.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFeatureGroupAppl(ProductFeatureGroupAppl productFeatureGroupAppl) {
        if (this.productFeatureGroupAppls == null) {
            this.productFeatureGroupAppls = new ArrayList<ProductFeatureGroupAppl>();
        }
        this.productFeatureGroupAppls.add(productFeatureGroupAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFeatureGroupAppl(ProductFeatureGroupAppl productFeatureGroupAppl) {
        if (this.productFeatureGroupAppls == null) {
            return;
        }
        this.productFeatureGroupAppls.remove(productFeatureGroupAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFeatureGroupAppl() {
        if (this.productFeatureGroupAppls == null) {
            return;
        }
        this.productFeatureGroupAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addMainProductFeatureIactn(ProductFeatureIactn mainProductFeatureIactn) {
        if (this.mainProductFeatureIactns == null) {
            this.mainProductFeatureIactns = new ArrayList<ProductFeatureIactn>();
        }
        this.mainProductFeatureIactns.add(mainProductFeatureIactn);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeMainProductFeatureIactn(ProductFeatureIactn mainProductFeatureIactn) {
        if (this.mainProductFeatureIactns == null) {
            return;
        }
        this.mainProductFeatureIactns.remove(mainProductFeatureIactn);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearMainProductFeatureIactn() {
        if (this.mainProductFeatureIactns == null) {
            return;
        }
        this.mainProductFeatureIactns.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAssocProductFeatureIactn(ProductFeatureIactn assocProductFeatureIactn) {
        if (this.assocProductFeatureIactns == null) {
            this.assocProductFeatureIactns = new ArrayList<ProductFeatureIactn>();
        }
        this.assocProductFeatureIactns.add(assocProductFeatureIactn);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAssocProductFeatureIactn(ProductFeatureIactn assocProductFeatureIactn) {
        if (this.assocProductFeatureIactns == null) {
            return;
        }
        this.assocProductFeatureIactns.remove(assocProductFeatureIactn);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAssocProductFeatureIactn() {
        if (this.assocProductFeatureIactns == null) {
            return;
        }
        this.assocProductFeatureIactns.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addShipmentItemFeature(ShipmentItemFeature shipmentItemFeature) {
        if (this.shipmentItemFeatures == null) {
            this.shipmentItemFeatures = new ArrayList<ShipmentItemFeature>();
        }
        this.shipmentItemFeatures.add(shipmentItemFeature);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeShipmentItemFeature(ShipmentItemFeature shipmentItemFeature) {
        if (this.shipmentItemFeatures == null) {
            return;
        }
        this.shipmentItemFeatures.remove(shipmentItemFeature);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearShipmentItemFeature() {
        if (this.shipmentItemFeatures == null) {
            return;
        }
        this.shipmentItemFeatures.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addSupplierProductFeature(SupplierProductFeature supplierProductFeature) {
        if (this.supplierProductFeatures == null) {
            this.supplierProductFeatures = new ArrayList<SupplierProductFeature>();
        }
        this.supplierProductFeatures.add(supplierProductFeature);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSupplierProductFeature(SupplierProductFeature supplierProductFeature) {
        if (this.supplierProductFeatures == null) {
            return;
        }
        this.supplierProductFeatures.remove(supplierProductFeature);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSupplierProductFeature() {
        if (this.supplierProductFeatures == null) {
            return;
        }
        this.supplierProductFeatures.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductFeatureId((String) mapValue.get("productFeatureId"));
        setProductFeatureTypeId((String) mapValue.get("productFeatureTypeId"));
        setProductFeatureCategoryId((String) mapValue.get("productFeatureCategoryId"));
        setDescription((String) mapValue.get("description"));
        setUomId((String) mapValue.get("uomId"));
        setNumberSpecified(convertToBigDecimal(mapValue.get("numberSpecified")));
        setDefaultAmount(convertToBigDecimal(mapValue.get("defaultAmount")));
        setDefaultSequenceNum((Long) mapValue.get("defaultSequenceNum"));
        setAbbrev((String) mapValue.get("abbrev"));
        setIdCode((String) mapValue.get("idCode"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productFeatureId", getProductFeatureId());
        mapValue.put("productFeatureTypeId", getProductFeatureTypeId());
        mapValue.put("productFeatureCategoryId", getProductFeatureCategoryId());
        mapValue.put("description", getDescription());
        mapValue.put("uomId", getUomId());
        mapValue.put("numberSpecified", getNumberSpecified());
        mapValue.put("defaultAmount", getDefaultAmount());
        mapValue.put("defaultSequenceNum", getDefaultSequenceNum());
        mapValue.put("abbrev", getAbbrev());
        mapValue.put("idCode", getIdCode());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
