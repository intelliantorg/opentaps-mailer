package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity Product.
 */
@javax.persistence.Entity
@Table(name="PRODUCT")
public class Product extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productId", "PRODUCT_ID");
        fields.put("productTypeId", "PRODUCT_TYPE_ID");
        fields.put("primaryProductCategoryId", "PRIMARY_PRODUCT_CATEGORY_ID");
        fields.put("manufacturerPartyId", "MANUFACTURER_PARTY_ID");
        fields.put("facilityId", "FACILITY_ID");
        fields.put("introductionDate", "INTRODUCTION_DATE");
        fields.put("supportDiscontinuationDate", "SUPPORT_DISCONTINUATION_DATE");
        fields.put("salesDiscontinuationDate", "SALES_DISCONTINUATION_DATE");
        fields.put("salesDiscWhenNotAvail", "SALES_DISC_WHEN_NOT_AVAIL");
        fields.put("internalName", "INTERNAL_NAME");
        fields.put("brandName", "BRAND_NAME");
        fields.put("comments", "COMMENTS");
        fields.put("productName", "PRODUCT_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("longDescription", "LONG_DESCRIPTION");
        fields.put("priceDetailText", "PRICE_DETAIL_TEXT");
        fields.put("smallImageUrl", "SMALL_IMAGE_URL");
        fields.put("mediumImageUrl", "MEDIUM_IMAGE_URL");
        fields.put("largeImageUrl", "LARGE_IMAGE_URL");
        fields.put("detailImageUrl", "DETAIL_IMAGE_URL");
        fields.put("detailScreen", "DETAIL_SCREEN");
        fields.put("inventoryMessage", "INVENTORY_MESSAGE");
        fields.put("requireInventory", "REQUIRE_INVENTORY");
        fields.put("quantityUomId", "QUANTITY_UOM_ID");
        fields.put("quantityIncluded", "QUANTITY_INCLUDED");
        fields.put("piecesIncluded", "PIECES_INCLUDED");
        fields.put("requireAmount", "REQUIRE_AMOUNT");
        fields.put("fixedAmount", "FIXED_AMOUNT");
        fields.put("amountUomTypeId", "AMOUNT_UOM_TYPE_ID");
        fields.put("weightUomId", "WEIGHT_UOM_ID");
        fields.put("weight", "WEIGHT");
        fields.put("heightUomId", "HEIGHT_UOM_ID");
        fields.put("productHeight", "PRODUCT_HEIGHT");
        fields.put("shippingHeight", "SHIPPING_HEIGHT");
        fields.put("widthUomId", "WIDTH_UOM_ID");
        fields.put("productWidth", "PRODUCT_WIDTH");
        fields.put("shippingWidth", "SHIPPING_WIDTH");
        fields.put("depthUomId", "DEPTH_UOM_ID");
        fields.put("productDepth", "PRODUCT_DEPTH");
        fields.put("shippingDepth", "SHIPPING_DEPTH");
        fields.put("productRating", "PRODUCT_RATING");
        fields.put("ratingTypeEnum", "RATING_TYPE_ENUM");
        fields.put("returnable", "RETURNABLE");
        fields.put("taxable", "TAXABLE");
        fields.put("taxCategory", "TAX_CATEGORY");
        fields.put("taxVatCode", "TAX_VAT_CODE");
        fields.put("taxDutyCode", "TAX_DUTY_CODE");
        fields.put("chargeShipping", "CHARGE_SHIPPING");
        fields.put("autoCreateKeywords", "AUTO_CREATE_KEYWORDS");
        fields.put("includeInPromotions", "INCLUDE_IN_PROMOTIONS");
        fields.put("isVirtual", "IS_VIRTUAL");
        fields.put("isVariant", "IS_VARIANT");
        fields.put("originGeoId", "ORIGIN_GEO_ID");
        fields.put("requirementMethodEnumId", "REQUIREMENT_METHOD_ENUM_ID");
        fields.put("billOfMaterialLevel", "BILL_OF_MATERIAL_LEVEL");
        fields.put("reservMaxPersons", "RESERV_MAX_PERSONS");
        fields.put("reserv2ndPPPerc", "RESERV2ND_P_P_PERC");
        fields.put("reservNthPPPerc", "RESERV_NTH_P_P_PERC");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("inShippingBox", "IN_SHIPPING_BOX");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("Product", fields);
}
  public static enum Fields implements EntityFieldInterface<Product> {
    productId("productId"),
    productTypeId("productTypeId"),
    primaryProductCategoryId("primaryProductCategoryId"),
    manufacturerPartyId("manufacturerPartyId"),
    facilityId("facilityId"),
    introductionDate("introductionDate"),
    supportDiscontinuationDate("supportDiscontinuationDate"),
    salesDiscontinuationDate("salesDiscontinuationDate"),
    salesDiscWhenNotAvail("salesDiscWhenNotAvail"),
    internalName("internalName"),
    brandName("brandName"),
    comments("comments"),
    productName("productName"),
    description("description"),
    longDescription("longDescription"),
    priceDetailText("priceDetailText"),
    smallImageUrl("smallImageUrl"),
    mediumImageUrl("mediumImageUrl"),
    largeImageUrl("largeImageUrl"),
    detailImageUrl("detailImageUrl"),
    detailScreen("detailScreen"),
    inventoryMessage("inventoryMessage"),
    requireInventory("requireInventory"),
    quantityUomId("quantityUomId"),
    quantityIncluded("quantityIncluded"),
    piecesIncluded("piecesIncluded"),
    requireAmount("requireAmount"),
    fixedAmount("fixedAmount"),
    amountUomTypeId("amountUomTypeId"),
    weightUomId("weightUomId"),
    weight("weight"),
    heightUomId("heightUomId"),
    productHeight("productHeight"),
    shippingHeight("shippingHeight"),
    widthUomId("widthUomId"),
    productWidth("productWidth"),
    shippingWidth("shippingWidth"),
    depthUomId("depthUomId"),
    productDepth("productDepth"),
    shippingDepth("shippingDepth"),
    productRating("productRating"),
    ratingTypeEnum("ratingTypeEnum"),
    returnable("returnable"),
    taxable("taxable"),
    taxCategory("taxCategory"),
    taxVatCode("taxVatCode"),
    taxDutyCode("taxDutyCode"),
    chargeShipping("chargeShipping"),
    autoCreateKeywords("autoCreateKeywords"),
    includeInPromotions("includeInPromotions"),
    isVirtual("isVirtual"),
    isVariant("isVariant"),
    originGeoId("originGeoId"),
    requirementMethodEnumId("requirementMethodEnumId"),
    billOfMaterialLevel("billOfMaterialLevel"),
    reservMaxPersons("reservMaxPersons"),
    reserv2ndPPPerc("reserv2ndPPPerc"),
    reservNthPPPerc("reservNthPPPerc"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    inShippingBox("inShippingBox"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Product_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Product_GEN")   
    @Id
    
    @Column(name="PRODUCT_ID")
    private String productId;
    
    @Column(name="PRODUCT_TYPE_ID")
    private String productTypeId;
    
    @Column(name="PRIMARY_PRODUCT_CATEGORY_ID")
    private String primaryProductCategoryId;
    
    @Column(name="MANUFACTURER_PARTY_ID")
    private String manufacturerPartyId;
    
    @Column(name="FACILITY_ID")
    private String facilityId;
    
    @Column(name="INTRODUCTION_DATE")
    private Timestamp introductionDate;
    
    @Column(name="SUPPORT_DISCONTINUATION_DATE")
    private Timestamp supportDiscontinuationDate;
    
    @Column(name="SALES_DISCONTINUATION_DATE")
    private Timestamp salesDiscontinuationDate;
    
    @Column(name="SALES_DISC_WHEN_NOT_AVAIL")
    private String salesDiscWhenNotAvail;
    
    @Column(name="INTERNAL_NAME")
    private String internalName;
    
    @Column(name="BRAND_NAME")
    private String brandName;
    
    @Column(name="COMMENTS")
    private String comments;
    
    @Column(name="PRODUCT_NAME")
    private String productName;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="LONG_DESCRIPTION")
    private String longDescription;
    
    @Column(name="PRICE_DETAIL_TEXT")
    private String priceDetailText;
    
    @Column(name="SMALL_IMAGE_URL")
    private String smallImageUrl;
    
    @Column(name="MEDIUM_IMAGE_URL")
    private String mediumImageUrl;
    
    @Column(name="LARGE_IMAGE_URL")
    private String largeImageUrl;
    
    @Column(name="DETAIL_IMAGE_URL")
    private String detailImageUrl;
    
    @Column(name="DETAIL_SCREEN")
    private String detailScreen;
    
    @Column(name="INVENTORY_MESSAGE")
    private String inventoryMessage;
    
    @Column(name="REQUIRE_INVENTORY")
    private String requireInventory;
    
    @Column(name="QUANTITY_UOM_ID")
    private String quantityUomId;
    
    @Column(name="QUANTITY_INCLUDED")
    private BigDecimal quantityIncluded;
    
    @Column(name="PIECES_INCLUDED")
    private Long piecesIncluded;
    
    @Column(name="REQUIRE_AMOUNT")
    private String requireAmount;
    
    @Column(name="FIXED_AMOUNT")
    private BigDecimal fixedAmount;
    
    @Column(name="AMOUNT_UOM_TYPE_ID")
    private String amountUomTypeId;
    
    @Column(name="WEIGHT_UOM_ID")
    private String weightUomId;
    
    @Column(name="WEIGHT")
    private BigDecimal weight;
    
    @Column(name="HEIGHT_UOM_ID")
    private String heightUomId;
    
    @Column(name="PRODUCT_HEIGHT")
    private BigDecimal productHeight;
    
    @Column(name="SHIPPING_HEIGHT")
    private BigDecimal shippingHeight;
    
    @Column(name="WIDTH_UOM_ID")
    private String widthUomId;
    
    @Column(name="PRODUCT_WIDTH")
    private BigDecimal productWidth;
    
    @Column(name="SHIPPING_WIDTH")
    private BigDecimal shippingWidth;
    
    @Column(name="DEPTH_UOM_ID")
    private String depthUomId;
    
    @Column(name="PRODUCT_DEPTH")
    private BigDecimal productDepth;
    
    @Column(name="SHIPPING_DEPTH")
    private BigDecimal shippingDepth;
    
    @Column(name="PRODUCT_RATING")
    private BigDecimal productRating;
    
    @Column(name="RATING_TYPE_ENUM")
    private String ratingTypeEnum;
    
    @Column(name="RETURNABLE")
    private String returnable;
    
    @Column(name="TAXABLE")
    private String taxable;
    
    @Column(name="TAX_CATEGORY")
    private String taxCategory;
    
    @Column(name="TAX_VAT_CODE")
    private String taxVatCode;
    
    @Column(name="TAX_DUTY_CODE")
    private String taxDutyCode;
    
    @Column(name="CHARGE_SHIPPING")
    private String chargeShipping;
    
    @Column(name="AUTO_CREATE_KEYWORDS")
    private String autoCreateKeywords;
    
    @Column(name="INCLUDE_IN_PROMOTIONS")
    private String includeInPromotions;
    
    @Column(name="IS_VIRTUAL")
    private String isVirtual;
    
    @Column(name="IS_VARIANT")
    private String isVariant;
    
    @Column(name="ORIGIN_GEO_ID")
    private String originGeoId;
    
    @Column(name="REQUIREMENT_METHOD_ENUM_ID")
    private String requirementMethodEnumId;
    
    @Column(name="BILL_OF_MATERIAL_LEVEL")
    private Long billOfMaterialLevel;
    
    @Column(name="RESERV_MAX_PERSONS")
    private BigDecimal reservMaxPersons;
    
    @Column(name="RESERV2ND_P_P_PERC")
    private BigDecimal reserv2ndPPPerc;
    
    @Column(name="RESERV_NTH_P_P_PERC")
    private BigDecimal reservNthPPPerc;
    
    @Column(name="CREATED_DATE")
    private Timestamp createdDate;
    
    @Column(name="CREATED_BY_USER_LOGIN")
    private String createdByUserLogin;
    
    @Column(name="LAST_MODIFIED_DATE")
    private Timestamp lastModifiedDate;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="IN_SHIPPING_BOX")
    private String inShippingBox;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductType productType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_TYPE_ID")
    private List<ProductTypeAttr> productTypeAttrs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_PRODUCT_CATEGORY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductCategory primaryProductCategory = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="FACILITY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Facility facility = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="MANUFACTURER_PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party manufacturerParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="QUANTITY_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom quantityUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="AMOUNT_UOM_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UomType amountUomType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="WEIGHT_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom weightUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="HEIGHT_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom heightUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="WIDTH_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom widthUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="DEPTH_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom depthUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="RATING_TYPE_ENUM", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration ratingEnumeration = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="REQUIREMENT_METHOD_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration requirementMethodEnumeration = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_GEO_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Geo originGeo = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY_USER_LOGIN", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin relatedCreatedByUserLogin = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="LAST_MODIFIED_BY_USER_LOGIN", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin relatedLastModifiedByUserLogin = null;
    private transient List<ProductFeatureAndAppl> productFeatureAndAppls = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="TAX_CATEGORY")
    private List<SimpleSalesTaxLookup> simpleSalesTaxLookups = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<Agreement> agreements = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<AgreementProductAppl> agreementProductAppls = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<AgreementTerm> agreementTerms = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<CartAbandonedLine> cartAbandonedLines = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<CommunicationEventProduct> communicationEventProducts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<CostComponent> costComponents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<CustRequestItem> custRequestItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<DataImportInventory> dataImportInventorys = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<DataImportOrderItem> dataImportOrderItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<DataImportShoppingListItem> dataImportShoppingListItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INSTANCE_OF_PRODUCT_ID")
    private List<FixedAsset> instanceOfFixedAssets = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<FixedAssetProduct> fixedAssetProducts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<GoodIdentification> goodIdentifications = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<InventoryEventPlanned> inventoryEventPlanneds = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<InventoryItem> inventoryItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<InventoryItemTempRes> inventoryItemTempReses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<InvoiceItem> invoiceItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<MrpInventoryEvent> mrpInventoryEvents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<OrderItem> orderItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<OrderSummaryEntry> orderSummaryEntrys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<PartyNeed> partyNeeds = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="mainProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductAssoc> mainProductAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="assocProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID_TO")
    private List<ProductAssoc> assocProductAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductAttribute> productAttributes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductAverageCost> productAverageCosts = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductCalculatedInfo productCalculatedInfo = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductCategoryMember> productCategoryMembers = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductConfig> productProductConfigs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductConfigProduct> productProductConfigProducts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductConfigStats> productProductConfigStatses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductContent> productContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductFacility> productFacilitys = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductFacilityLocation> productFacilityLocations = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductFeatureAppl> productFeatureAppls = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductFeatureApplAttr> productFeatureApplAttrs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductGeo> productGeos = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductGlAccount> productGlAccounts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductKeyword> productKeywords = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductMaint> productMaints = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductManufacturingRule> productManufacturingRules = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID_FOR")
    private List<ProductManufacturingRule> productForProductManufacturingRules = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID_IN")
    private List<ProductManufacturingRule> productInProductManufacturingRules = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID_IN_SUBST")
    private List<ProductManufacturingRule> productSubstProductManufacturingRules = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductMeter> productMeters = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductOrderItem> productOrderItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductPaymentMethodType> productPaymentMethodTypes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductPrice> productPrices = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductPromoProduct> productPromoProducts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductReview> productReviews = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductStoreSurveyAppl> productStoreSurveyAppls = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<ProductSubscriptionResource> productSubscriptionResources = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<QuoteItem> quoteItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ReorderGuideline> reorderGuidelines = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<Requirement> requirements = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ReturnItem> returnItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<SalesForecastItem> salesForecastItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ShipmentItem> shipmentItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SUB_PRODUCT_ID")
    private List<ShipmentPackageContent> subShipmentPackageContents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ShipmentReceipt> shipmentReceipts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<ShoppingListItem> shoppingListItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID")
    private List<Subscription> subscriptions = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<SupplierProduct> supplierProducts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="product", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_ID")
    private List<WorkEffortGoodStandard> workEffortGoodStandards = null;

  /**
   * Default constructor.
   */
  public Product() {
      super();
      this.baseEntityName = "Product";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Product(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param productTypeId the productTypeId to set
     */
    public void setProductTypeId(String productTypeId) {
        this.productTypeId = productTypeId;
    }
    /**
     * Auto generated value setter.
     * @param primaryProductCategoryId the primaryProductCategoryId to set
     */
    public void setPrimaryProductCategoryId(String primaryProductCategoryId) {
        this.primaryProductCategoryId = primaryProductCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param manufacturerPartyId the manufacturerPartyId to set
     */
    public void setManufacturerPartyId(String manufacturerPartyId) {
        this.manufacturerPartyId = manufacturerPartyId;
    }
    /**
     * Auto generated value setter.
     * @param facilityId the facilityId to set
     */
    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }
    /**
     * Auto generated value setter.
     * @param introductionDate the introductionDate to set
     */
    public void setIntroductionDate(Timestamp introductionDate) {
        this.introductionDate = introductionDate;
    }
    /**
     * Auto generated value setter.
     * @param supportDiscontinuationDate the supportDiscontinuationDate to set
     */
    public void setSupportDiscontinuationDate(Timestamp supportDiscontinuationDate) {
        this.supportDiscontinuationDate = supportDiscontinuationDate;
    }
    /**
     * Auto generated value setter.
     * @param salesDiscontinuationDate the salesDiscontinuationDate to set
     */
    public void setSalesDiscontinuationDate(Timestamp salesDiscontinuationDate) {
        this.salesDiscontinuationDate = salesDiscontinuationDate;
    }
    /**
     * Auto generated value setter.
     * @param salesDiscWhenNotAvail the salesDiscWhenNotAvail to set
     */
    public void setSalesDiscWhenNotAvail(String salesDiscWhenNotAvail) {
        this.salesDiscWhenNotAvail = salesDiscWhenNotAvail;
    }
    /**
     * Auto generated value setter.
     * @param internalName the internalName to set
     */
    public void setInternalName(String internalName) {
        this.internalName = internalName;
    }
    /**
     * Auto generated value setter.
     * @param brandName the brandName to set
     */
    public void setBrandName(String brandName) {
        this.brandName = brandName;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param productName the productName to set
     */
    public void setProductName(String productName) {
        this.productName = productName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param longDescription the longDescription to set
     */
    public void setLongDescription(String longDescription) {
        this.longDescription = longDescription;
    }
    /**
     * Auto generated value setter.
     * @param priceDetailText the priceDetailText to set
     */
    public void setPriceDetailText(String priceDetailText) {
        this.priceDetailText = priceDetailText;
    }
    /**
     * Auto generated value setter.
     * @param smallImageUrl the smallImageUrl to set
     */
    public void setSmallImageUrl(String smallImageUrl) {
        this.smallImageUrl = smallImageUrl;
    }
    /**
     * Auto generated value setter.
     * @param mediumImageUrl the mediumImageUrl to set
     */
    public void setMediumImageUrl(String mediumImageUrl) {
        this.mediumImageUrl = mediumImageUrl;
    }
    /**
     * Auto generated value setter.
     * @param largeImageUrl the largeImageUrl to set
     */
    public void setLargeImageUrl(String largeImageUrl) {
        this.largeImageUrl = largeImageUrl;
    }
    /**
     * Auto generated value setter.
     * @param detailImageUrl the detailImageUrl to set
     */
    public void setDetailImageUrl(String detailImageUrl) {
        this.detailImageUrl = detailImageUrl;
    }
    /**
     * Auto generated value setter.
     * @param detailScreen the detailScreen to set
     */
    public void setDetailScreen(String detailScreen) {
        this.detailScreen = detailScreen;
    }
    /**
     * Auto generated value setter.
     * @param inventoryMessage the inventoryMessage to set
     */
    public void setInventoryMessage(String inventoryMessage) {
        this.inventoryMessage = inventoryMessage;
    }
    /**
     * Auto generated value setter.
     * @param requireInventory the requireInventory to set
     */
    public void setRequireInventory(String requireInventory) {
        this.requireInventory = requireInventory;
    }
    /**
     * Auto generated value setter.
     * @param quantityUomId the quantityUomId to set
     */
    public void setQuantityUomId(String quantityUomId) {
        this.quantityUomId = quantityUomId;
    }
    /**
     * Auto generated value setter.
     * @param quantityIncluded the quantityIncluded to set
     */
    public void setQuantityIncluded(BigDecimal quantityIncluded) {
        this.quantityIncluded = quantityIncluded;
    }
    /**
     * Auto generated value setter.
     * @param piecesIncluded the piecesIncluded to set
     */
    public void setPiecesIncluded(Long piecesIncluded) {
        this.piecesIncluded = piecesIncluded;
    }
    /**
     * Auto generated value setter.
     * @param requireAmount the requireAmount to set
     */
    public void setRequireAmount(String requireAmount) {
        this.requireAmount = requireAmount;
    }
    /**
     * Auto generated value setter.
     * @param fixedAmount the fixedAmount to set
     */
    public void setFixedAmount(BigDecimal fixedAmount) {
        this.fixedAmount = fixedAmount;
    }
    /**
     * Auto generated value setter.
     * @param amountUomTypeId the amountUomTypeId to set
     */
    public void setAmountUomTypeId(String amountUomTypeId) {
        this.amountUomTypeId = amountUomTypeId;
    }
    /**
     * Auto generated value setter.
     * @param weightUomId the weightUomId to set
     */
    public void setWeightUomId(String weightUomId) {
        this.weightUomId = weightUomId;
    }
    /**
     * Auto generated value setter.
     * @param weight the weight to set
     */
    public void setWeight(BigDecimal weight) {
        this.weight = weight;
    }
    /**
     * Auto generated value setter.
     * @param heightUomId the heightUomId to set
     */
    public void setHeightUomId(String heightUomId) {
        this.heightUomId = heightUomId;
    }
    /**
     * Auto generated value setter.
     * @param productHeight the productHeight to set
     */
    public void setProductHeight(BigDecimal productHeight) {
        this.productHeight = productHeight;
    }
    /**
     * Auto generated value setter.
     * @param shippingHeight the shippingHeight to set
     */
    public void setShippingHeight(BigDecimal shippingHeight) {
        this.shippingHeight = shippingHeight;
    }
    /**
     * Auto generated value setter.
     * @param widthUomId the widthUomId to set
     */
    public void setWidthUomId(String widthUomId) {
        this.widthUomId = widthUomId;
    }
    /**
     * Auto generated value setter.
     * @param productWidth the productWidth to set
     */
    public void setProductWidth(BigDecimal productWidth) {
        this.productWidth = productWidth;
    }
    /**
     * Auto generated value setter.
     * @param shippingWidth the shippingWidth to set
     */
    public void setShippingWidth(BigDecimal shippingWidth) {
        this.shippingWidth = shippingWidth;
    }
    /**
     * Auto generated value setter.
     * @param depthUomId the depthUomId to set
     */
    public void setDepthUomId(String depthUomId) {
        this.depthUomId = depthUomId;
    }
    /**
     * Auto generated value setter.
     * @param productDepth the productDepth to set
     */
    public void setProductDepth(BigDecimal productDepth) {
        this.productDepth = productDepth;
    }
    /**
     * Auto generated value setter.
     * @param shippingDepth the shippingDepth to set
     */
    public void setShippingDepth(BigDecimal shippingDepth) {
        this.shippingDepth = shippingDepth;
    }
    /**
     * Auto generated value setter.
     * @param productRating the productRating to set
     */
    public void setProductRating(BigDecimal productRating) {
        this.productRating = productRating;
    }
    /**
     * Auto generated value setter.
     * @param ratingTypeEnum the ratingTypeEnum to set
     */
    public void setRatingTypeEnum(String ratingTypeEnum) {
        this.ratingTypeEnum = ratingTypeEnum;
    }
    /**
     * Auto generated value setter.
     * @param returnable the returnable to set
     */
    public void setReturnable(String returnable) {
        this.returnable = returnable;
    }
    /**
     * Auto generated value setter.
     * @param taxable the taxable to set
     */
    public void setTaxable(String taxable) {
        this.taxable = taxable;
    }
    /**
     * Auto generated value setter.
     * @param taxCategory the taxCategory to set
     */
    public void setTaxCategory(String taxCategory) {
        this.taxCategory = taxCategory;
    }
    /**
     * Auto generated value setter.
     * @param taxVatCode the taxVatCode to set
     */
    public void setTaxVatCode(String taxVatCode) {
        this.taxVatCode = taxVatCode;
    }
    /**
     * Auto generated value setter.
     * @param taxDutyCode the taxDutyCode to set
     */
    public void setTaxDutyCode(String taxDutyCode) {
        this.taxDutyCode = taxDutyCode;
    }
    /**
     * Auto generated value setter.
     * @param chargeShipping the chargeShipping to set
     */
    public void setChargeShipping(String chargeShipping) {
        this.chargeShipping = chargeShipping;
    }
    /**
     * Auto generated value setter.
     * @param autoCreateKeywords the autoCreateKeywords to set
     */
    public void setAutoCreateKeywords(String autoCreateKeywords) {
        this.autoCreateKeywords = autoCreateKeywords;
    }
    /**
     * Auto generated value setter.
     * @param includeInPromotions the includeInPromotions to set
     */
    public void setIncludeInPromotions(String includeInPromotions) {
        this.includeInPromotions = includeInPromotions;
    }
    /**
     * Auto generated value setter.
     * @param isVirtual the isVirtual to set
     */
    public void setIsVirtual(String isVirtual) {
        this.isVirtual = isVirtual;
    }
    /**
     * Auto generated value setter.
     * @param isVariant the isVariant to set
     */
    public void setIsVariant(String isVariant) {
        this.isVariant = isVariant;
    }
    /**
     * Auto generated value setter.
     * @param originGeoId the originGeoId to set
     */
    public void setOriginGeoId(String originGeoId) {
        this.originGeoId = originGeoId;
    }
    /**
     * Auto generated value setter.
     * @param requirementMethodEnumId the requirementMethodEnumId to set
     */
    public void setRequirementMethodEnumId(String requirementMethodEnumId) {
        this.requirementMethodEnumId = requirementMethodEnumId;
    }
    /**
     * Auto generated value setter.
     * @param billOfMaterialLevel the billOfMaterialLevel to set
     */
    public void setBillOfMaterialLevel(Long billOfMaterialLevel) {
        this.billOfMaterialLevel = billOfMaterialLevel;
    }
    /**
     * Auto generated value setter.
     * @param reservMaxPersons the reservMaxPersons to set
     */
    public void setReservMaxPersons(BigDecimal reservMaxPersons) {
        this.reservMaxPersons = reservMaxPersons;
    }
    /**
     * Auto generated value setter.
     * @param reserv2ndPPPerc the reserv2ndPPPerc to set
     */
    public void setReserv2ndPPPerc(BigDecimal reserv2ndPPPerc) {
        this.reserv2ndPPPerc = reserv2ndPPPerc;
    }
    /**
     * Auto generated value setter.
     * @param reservNthPPPerc the reservNthPPPerc to set
     */
    public void setReservNthPPPerc(BigDecimal reservNthPPPerc) {
        this.reservNthPPPerc = reservNthPPPerc;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param inShippingBox the inShippingBox to set
     */
    public void setInShippingBox(String inShippingBox) {
        this.inShippingBox = inShippingBox;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductTypeId() {
        return this.productTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPrimaryProductCategoryId() {
        return this.primaryProductCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getManufacturerPartyId() {
        return this.manufacturerPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFacilityId() {
        return this.facilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getIntroductionDate() {
        return this.introductionDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getSupportDiscontinuationDate() {
        return this.supportDiscontinuationDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getSalesDiscontinuationDate() {
        return this.salesDiscontinuationDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalesDiscWhenNotAvail() {
        return this.salesDiscWhenNotAvail;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInternalName() {
        return this.internalName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBrandName() {
        return this.brandName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductName() {
        return this.productName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLongDescription() {
        return this.longDescription;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPriceDetailText() {
        return this.priceDetailText;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSmallImageUrl() {
        return this.smallImageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMediumImageUrl() {
        return this.mediumImageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLargeImageUrl() {
        return this.largeImageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDetailImageUrl() {
        return this.detailImageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDetailScreen() {
        return this.detailScreen;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInventoryMessage() {
        return this.inventoryMessage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRequireInventory() {
        return this.requireInventory;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getQuantityUomId() {
        return this.quantityUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantityIncluded() {
        return this.quantityIncluded;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getPiecesIncluded() {
        return this.piecesIncluded;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRequireAmount() {
        return this.requireAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getFixedAmount() {
        return this.fixedAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAmountUomTypeId() {
        return this.amountUomTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWeightUomId() {
        return this.weightUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getWeight() {
        return this.weight;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getHeightUomId() {
        return this.heightUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getProductHeight() {
        return this.productHeight;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getShippingHeight() {
        return this.shippingHeight;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWidthUomId() {
        return this.widthUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getProductWidth() {
        return this.productWidth;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getShippingWidth() {
        return this.shippingWidth;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDepthUomId() {
        return this.depthUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getProductDepth() {
        return this.productDepth;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getShippingDepth() {
        return this.shippingDepth;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getProductRating() {
        return this.productRating;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRatingTypeEnum() {
        return this.ratingTypeEnum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getReturnable() {
        return this.returnable;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxable() {
        return this.taxable;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxCategory() {
        return this.taxCategory;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxVatCode() {
        return this.taxVatCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxDutyCode() {
        return this.taxDutyCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChargeShipping() {
        return this.chargeShipping;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAutoCreateKeywords() {
        return this.autoCreateKeywords;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIncludeInPromotions() {
        return this.includeInPromotions;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsVirtual() {
        return this.isVirtual;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsVariant() {
        return this.isVariant;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOriginGeoId() {
        return this.originGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRequirementMethodEnumId() {
        return this.requirementMethodEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getBillOfMaterialLevel() {
        return this.billOfMaterialLevel;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getReservMaxPersons() {
        return this.reservMaxPersons;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getReserv2ndPPPerc() {
        return this.reserv2ndPPPerc;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getReservNthPPPerc() {
        return this.reservNthPPPerc;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInShippingBox() {
        return this.inShippingBox;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>ProductType</code> by the relation named <code>ProductType</code>.
     * @return the <code>ProductType</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductType getProductType() throws RepositoryException {
        if (this.productType == null) {
            this.productType = getRelatedOne(ProductType.class, "ProductType");
        }
        return this.productType;
    }
    /**
     * Auto generated method that gets the related <code>ProductTypeAttr</code> by the relation named <code>ProductTypeAttr</code>.
     * @return the list of <code>ProductTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductTypeAttr> getProductTypeAttrs() throws RepositoryException {
        if (this.productTypeAttrs == null) {
            this.productTypeAttrs = getRelated(ProductTypeAttr.class, "ProductTypeAttr");
        }
        return this.productTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>ProductCategory</code> by the relation named <code>PrimaryProductCategory</code>.
     * @return the <code>ProductCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductCategory getPrimaryProductCategory() throws RepositoryException {
        if (this.primaryProductCategory == null) {
            this.primaryProductCategory = getRelatedOne(ProductCategory.class, "PrimaryProductCategory");
        }
        return this.primaryProductCategory;
    }
    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>Facility</code>.
     * @return the <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public Facility getFacility() throws RepositoryException {
        if (this.facility == null) {
            this.facility = getRelatedOne(Facility.class, "Facility");
        }
        return this.facility;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>ManufacturerParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getManufacturerParty() throws RepositoryException {
        if (this.manufacturerParty == null) {
            this.manufacturerParty = getRelatedOne(Party.class, "ManufacturerParty");
        }
        return this.manufacturerParty;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>QuantityUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getQuantityUom() throws RepositoryException {
        if (this.quantityUom == null) {
            this.quantityUom = getRelatedOne(Uom.class, "QuantityUom");
        }
        return this.quantityUom;
    }
    /**
     * Auto generated method that gets the related <code>UomType</code> by the relation named <code>AmountUomType</code>.
     * @return the <code>UomType</code>
     * @throws RepositoryException if an error occurs
     */
    public UomType getAmountUomType() throws RepositoryException {
        if (this.amountUomType == null) {
            this.amountUomType = getRelatedOne(UomType.class, "AmountUomType");
        }
        return this.amountUomType;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>WeightUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getWeightUom() throws RepositoryException {
        if (this.weightUom == null) {
            this.weightUom = getRelatedOne(Uom.class, "WeightUom");
        }
        return this.weightUom;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>HeightUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getHeightUom() throws RepositoryException {
        if (this.heightUom == null) {
            this.heightUom = getRelatedOne(Uom.class, "HeightUom");
        }
        return this.heightUom;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>WidthUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getWidthUom() throws RepositoryException {
        if (this.widthUom == null) {
            this.widthUom = getRelatedOne(Uom.class, "WidthUom");
        }
        return this.widthUom;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>DepthUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getDepthUom() throws RepositoryException {
        if (this.depthUom == null) {
            this.depthUom = getRelatedOne(Uom.class, "DepthUom");
        }
        return this.depthUom;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>RatingEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getRatingEnumeration() throws RepositoryException {
        if (this.ratingEnumeration == null) {
            this.ratingEnumeration = getRelatedOne(Enumeration.class, "RatingEnumeration");
        }
        return this.ratingEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>RequirementMethodEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getRequirementMethodEnumeration() throws RepositoryException {
        if (this.requirementMethodEnumeration == null) {
            this.requirementMethodEnumeration = getRelatedOne(Enumeration.class, "RequirementMethodEnumeration");
        }
        return this.requirementMethodEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>Geo</code> by the relation named <code>OriginGeo</code>.
     * @return the <code>Geo</code>
     * @throws RepositoryException if an error occurs
     */
    public Geo getOriginGeo() throws RepositoryException {
        if (this.originGeo == null) {
            this.originGeo = getRelatedOne(Geo.class, "OriginGeo");
        }
        return this.originGeo;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>CreatedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedCreatedByUserLogin() throws RepositoryException {
        if (this.relatedCreatedByUserLogin == null) {
            this.relatedCreatedByUserLogin = getRelatedOne(UserLogin.class, "CreatedByUserLogin");
        }
        return this.relatedCreatedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>LastModifiedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedLastModifiedByUserLogin() throws RepositoryException {
        if (this.relatedLastModifiedByUserLogin == null) {
            this.relatedLastModifiedByUserLogin = getRelatedOne(UserLogin.class, "LastModifiedByUserLogin");
        }
        return this.relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureAndAppl</code> by the relation named <code>ProductFeatureAndAppl</code>.
     * @return the list of <code>ProductFeatureAndAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureAndAppl> getProductFeatureAndAppls() throws RepositoryException {
        if (this.productFeatureAndAppls == null) {
            this.productFeatureAndAppls = getRelated(ProductFeatureAndAppl.class, "ProductFeatureAndAppl");
        }
        return this.productFeatureAndAppls;
    }
    /**
     * Auto generated method that gets the related <code>SimpleSalesTaxLookup</code> by the relation named <code>SimpleSalesTaxLookup</code>.
     * @return the list of <code>SimpleSalesTaxLookup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SimpleSalesTaxLookup> getSimpleSalesTaxLookups() throws RepositoryException {
        if (this.simpleSalesTaxLookups == null) {
            this.simpleSalesTaxLookups = getRelated(SimpleSalesTaxLookup.class, "SimpleSalesTaxLookup");
        }
        return this.simpleSalesTaxLookups;
    }
    /**
     * Auto generated method that gets the related <code>Agreement</code> by the relation named <code>Agreement</code>.
     * @return the list of <code>Agreement</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Agreement> getAgreements() throws RepositoryException {
        if (this.agreements == null) {
            this.agreements = getRelated(Agreement.class, "Agreement");
        }
        return this.agreements;
    }
    /**
     * Auto generated method that gets the related <code>AgreementProductAppl</code> by the relation named <code>AgreementProductAppl</code>.
     * @return the list of <code>AgreementProductAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementProductAppl> getAgreementProductAppls() throws RepositoryException {
        if (this.agreementProductAppls == null) {
            this.agreementProductAppls = getRelated(AgreementProductAppl.class, "AgreementProductAppl");
        }
        return this.agreementProductAppls;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTerm</code> by the relation named <code>AgreementTerm</code>.
     * @return the list of <code>AgreementTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTerm> getAgreementTerms() throws RepositoryException {
        if (this.agreementTerms == null) {
            this.agreementTerms = getRelated(AgreementTerm.class, "AgreementTerm");
        }
        return this.agreementTerms;
    }
    /**
     * Auto generated method that gets the related <code>CartAbandonedLine</code> by the relation named <code>CartAbandonedLine</code>.
     * @return the list of <code>CartAbandonedLine</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CartAbandonedLine> getCartAbandonedLines() throws RepositoryException {
        if (this.cartAbandonedLines == null) {
            this.cartAbandonedLines = getRelated(CartAbandonedLine.class, "CartAbandonedLine");
        }
        return this.cartAbandonedLines;
    }
    /**
     * Auto generated method that gets the related <code>CommunicationEventProduct</code> by the relation named <code>CommunicationEventProduct</code>.
     * @return the list of <code>CommunicationEventProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommunicationEventProduct> getCommunicationEventProducts() throws RepositoryException {
        if (this.communicationEventProducts == null) {
            this.communicationEventProducts = getRelated(CommunicationEventProduct.class, "CommunicationEventProduct");
        }
        return this.communicationEventProducts;
    }
    /**
     * Auto generated method that gets the related <code>CostComponent</code> by the relation named <code>CostComponent</code>.
     * @return the list of <code>CostComponent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponent> getCostComponents() throws RepositoryException {
        if (this.costComponents == null) {
            this.costComponents = getRelated(CostComponent.class, "CostComponent");
        }
        return this.costComponents;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestItem</code> by the relation named <code>CustRequestItem</code>.
     * @return the list of <code>CustRequestItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestItem> getCustRequestItems() throws RepositoryException {
        if (this.custRequestItems == null) {
            this.custRequestItems = getRelated(CustRequestItem.class, "CustRequestItem");
        }
        return this.custRequestItems;
    }
    /**
     * Auto generated method that gets the related <code>DataImportInventory</code> by the relation named <code>DataImportInventory</code>.
     * @return the list of <code>DataImportInventory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataImportInventory> getDataImportInventorys() throws RepositoryException {
        if (this.dataImportInventorys == null) {
            this.dataImportInventorys = getRelated(DataImportInventory.class, "DataImportInventory");
        }
        return this.dataImportInventorys;
    }
    /**
     * Auto generated method that gets the related <code>DataImportOrderItem</code> by the relation named <code>DataImportOrderItem</code>.
     * @return the list of <code>DataImportOrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataImportOrderItem> getDataImportOrderItems() throws RepositoryException {
        if (this.dataImportOrderItems == null) {
            this.dataImportOrderItems = getRelated(DataImportOrderItem.class, "DataImportOrderItem");
        }
        return this.dataImportOrderItems;
    }
    /**
     * Auto generated method that gets the related <code>DataImportShoppingListItem</code> by the relation named <code>DataImportShoppingListItem</code>.
     * @return the list of <code>DataImportShoppingListItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataImportShoppingListItem> getDataImportShoppingListItems() throws RepositoryException {
        if (this.dataImportShoppingListItems == null) {
            this.dataImportShoppingListItems = getRelated(DataImportShoppingListItem.class, "DataImportShoppingListItem");
        }
        return this.dataImportShoppingListItems;
    }
    /**
     * Auto generated method that gets the related <code>FixedAsset</code> by the relation named <code>InstanceOfFixedAsset</code>.
     * @return the list of <code>FixedAsset</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAsset> getInstanceOfFixedAssets() throws RepositoryException {
        if (this.instanceOfFixedAssets == null) {
            this.instanceOfFixedAssets = getRelated(FixedAsset.class, "InstanceOfFixedAsset");
        }
        return this.instanceOfFixedAssets;
    }
    /**
     * Auto generated method that gets the related <code>FixedAssetProduct</code> by the relation named <code>FixedAssetProduct</code>.
     * @return the list of <code>FixedAssetProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAssetProduct> getFixedAssetProducts() throws RepositoryException {
        if (this.fixedAssetProducts == null) {
            this.fixedAssetProducts = getRelated(FixedAssetProduct.class, "FixedAssetProduct");
        }
        return this.fixedAssetProducts;
    }
    /**
     * Auto generated method that gets the related <code>GoodIdentification</code> by the relation named <code>GoodIdentification</code>.
     * @return the list of <code>GoodIdentification</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GoodIdentification> getGoodIdentifications() throws RepositoryException {
        if (this.goodIdentifications == null) {
            this.goodIdentifications = getRelated(GoodIdentification.class, "GoodIdentification");
        }
        return this.goodIdentifications;
    }
    /**
     * Auto generated method that gets the related <code>InventoryEventPlanned</code> by the relation named <code>InventoryEventPlanned</code>.
     * @return the list of <code>InventoryEventPlanned</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryEventPlanned> getInventoryEventPlanneds() throws RepositoryException {
        if (this.inventoryEventPlanneds == null) {
            this.inventoryEventPlanneds = getRelated(InventoryEventPlanned.class, "InventoryEventPlanned");
        }
        return this.inventoryEventPlanneds;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItem</code> by the relation named <code>InventoryItem</code>.
     * @return the list of <code>InventoryItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItem> getInventoryItems() throws RepositoryException {
        if (this.inventoryItems == null) {
            this.inventoryItems = getRelated(InventoryItem.class, "InventoryItem");
        }
        return this.inventoryItems;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemTempRes</code> by the relation named <code>InventoryItemTempRes</code>.
     * @return the list of <code>InventoryItemTempRes</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemTempRes> getInventoryItemTempReses() throws RepositoryException {
        if (this.inventoryItemTempReses == null) {
            this.inventoryItemTempReses = getRelated(InventoryItemTempRes.class, "InventoryItemTempRes");
        }
        return this.inventoryItemTempReses;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the list of <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItem> getInvoiceItems() throws RepositoryException {
        if (this.invoiceItems == null) {
            this.invoiceItems = getRelated(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItems;
    }
    /**
     * Auto generated method that gets the related <code>MrpInventoryEvent</code> by the relation named <code>MrpInventoryEvent</code>.
     * @return the list of <code>MrpInventoryEvent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends MrpInventoryEvent> getMrpInventoryEvents() throws RepositoryException {
        if (this.mrpInventoryEvents == null) {
            this.mrpInventoryEvents = getRelated(MrpInventoryEvent.class, "MrpInventoryEvent");
        }
        return this.mrpInventoryEvents;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>OrderItem</code>.
     * @return the list of <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItem> getOrderItems() throws RepositoryException {
        if (this.orderItems == null) {
            this.orderItems = getRelated(OrderItem.class, "OrderItem");
        }
        return this.orderItems;
    }
    /**
     * Auto generated method that gets the related <code>OrderSummaryEntry</code> by the relation named <code>OrderSummaryEntry</code>.
     * @return the list of <code>OrderSummaryEntry</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderSummaryEntry> getOrderSummaryEntrys() throws RepositoryException {
        if (this.orderSummaryEntrys == null) {
            this.orderSummaryEntrys = getRelated(OrderSummaryEntry.class, "OrderSummaryEntry");
        }
        return this.orderSummaryEntrys;
    }
    /**
     * Auto generated method that gets the related <code>PartyNeed</code> by the relation named <code>PartyNeed</code>.
     * @return the list of <code>PartyNeed</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyNeed> getPartyNeeds() throws RepositoryException {
        if (this.partyNeeds == null) {
            this.partyNeeds = getRelated(PartyNeed.class, "PartyNeed");
        }
        return this.partyNeeds;
    }
    /**
     * Auto generated method that gets the related <code>ProductAssoc</code> by the relation named <code>MainProductAssoc</code>.
     * @return the list of <code>ProductAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductAssoc> getMainProductAssocs() throws RepositoryException {
        if (this.mainProductAssocs == null) {
            this.mainProductAssocs = getRelated(ProductAssoc.class, "MainProductAssoc");
        }
        return this.mainProductAssocs;
    }
    /**
     * Auto generated method that gets the related <code>ProductAssoc</code> by the relation named <code>AssocProductAssoc</code>.
     * @return the list of <code>ProductAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductAssoc> getAssocProductAssocs() throws RepositoryException {
        if (this.assocProductAssocs == null) {
            this.assocProductAssocs = getRelated(ProductAssoc.class, "AssocProductAssoc");
        }
        return this.assocProductAssocs;
    }
    /**
     * Auto generated method that gets the related <code>ProductAttribute</code> by the relation named <code>ProductAttribute</code>.
     * @return the list of <code>ProductAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductAttribute> getProductAttributes() throws RepositoryException {
        if (this.productAttributes == null) {
            this.productAttributes = getRelated(ProductAttribute.class, "ProductAttribute");
        }
        return this.productAttributes;
    }
    /**
     * Auto generated method that gets the related <code>ProductAverageCost</code> by the relation named <code>ProductAverageCost</code>.
     * @return the list of <code>ProductAverageCost</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductAverageCost> getProductAverageCosts() throws RepositoryException {
        if (this.productAverageCosts == null) {
            this.productAverageCosts = getRelated(ProductAverageCost.class, "ProductAverageCost");
        }
        return this.productAverageCosts;
    }
    /**
     * Auto generated method that gets the related <code>ProductCalculatedInfo</code> by the relation named <code>ProductCalculatedInfo</code>.
     * @return the <code>ProductCalculatedInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductCalculatedInfo getProductCalculatedInfo() throws RepositoryException {
        if (this.productCalculatedInfo == null) {
            this.productCalculatedInfo = getRelatedOne(ProductCalculatedInfo.class, "ProductCalculatedInfo");
        }
        return this.productCalculatedInfo;
    }
    /**
     * Auto generated method that gets the related <code>ProductCategoryMember</code> by the relation named <code>ProductCategoryMember</code>.
     * @return the list of <code>ProductCategoryMember</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductCategoryMember> getProductCategoryMembers() throws RepositoryException {
        if (this.productCategoryMembers == null) {
            this.productCategoryMembers = getRelated(ProductCategoryMember.class, "ProductCategoryMember");
        }
        return this.productCategoryMembers;
    }
    /**
     * Auto generated method that gets the related <code>ProductConfig</code> by the relation named <code>ProductProductConfig</code>.
     * @return the list of <code>ProductConfig</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductConfig> getProductProductConfigs() throws RepositoryException {
        if (this.productProductConfigs == null) {
            this.productProductConfigs = getRelated(ProductConfig.class, "ProductProductConfig");
        }
        return this.productProductConfigs;
    }
    /**
     * Auto generated method that gets the related <code>ProductConfigProduct</code> by the relation named <code>ProductProductConfigProduct</code>.
     * @return the list of <code>ProductConfigProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductConfigProduct> getProductProductConfigProducts() throws RepositoryException {
        if (this.productProductConfigProducts == null) {
            this.productProductConfigProducts = getRelated(ProductConfigProduct.class, "ProductProductConfigProduct");
        }
        return this.productProductConfigProducts;
    }
    /**
     * Auto generated method that gets the related <code>ProductConfigStats</code> by the relation named <code>ProductProductConfigStats</code>.
     * @return the list of <code>ProductConfigStats</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductConfigStats> getProductProductConfigStatses() throws RepositoryException {
        if (this.productProductConfigStatses == null) {
            this.productProductConfigStatses = getRelated(ProductConfigStats.class, "ProductProductConfigStats");
        }
        return this.productProductConfigStatses;
    }
    /**
     * Auto generated method that gets the related <code>ProductContent</code> by the relation named <code>ProductContent</code>.
     * @return the list of <code>ProductContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductContent> getProductContents() throws RepositoryException {
        if (this.productContents == null) {
            this.productContents = getRelated(ProductContent.class, "ProductContent");
        }
        return this.productContents;
    }
    /**
     * Auto generated method that gets the related <code>ProductFacility</code> by the relation named <code>ProductFacility</code>.
     * @return the list of <code>ProductFacility</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFacility> getProductFacilitys() throws RepositoryException {
        if (this.productFacilitys == null) {
            this.productFacilitys = getRelated(ProductFacility.class, "ProductFacility");
        }
        return this.productFacilitys;
    }
    /**
     * Auto generated method that gets the related <code>ProductFacilityLocation</code> by the relation named <code>ProductFacilityLocation</code>.
     * @return the list of <code>ProductFacilityLocation</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFacilityLocation> getProductFacilityLocations() throws RepositoryException {
        if (this.productFacilityLocations == null) {
            this.productFacilityLocations = getRelated(ProductFacilityLocation.class, "ProductFacilityLocation");
        }
        return this.productFacilityLocations;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureAppl</code> by the relation named <code>ProductFeatureAppl</code>.
     * @return the list of <code>ProductFeatureAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureAppl> getProductFeatureAppls() throws RepositoryException {
        if (this.productFeatureAppls == null) {
            this.productFeatureAppls = getRelated(ProductFeatureAppl.class, "ProductFeatureAppl");
        }
        return this.productFeatureAppls;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureApplAttr</code> by the relation named <code>ProductFeatureApplAttr</code>.
     * @return the list of <code>ProductFeatureApplAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureApplAttr> getProductFeatureApplAttrs() throws RepositoryException {
        if (this.productFeatureApplAttrs == null) {
            this.productFeatureApplAttrs = getRelated(ProductFeatureApplAttr.class, "ProductFeatureApplAttr");
        }
        return this.productFeatureApplAttrs;
    }
    /**
     * Auto generated method that gets the related <code>ProductGeo</code> by the relation named <code>ProductGeo</code>.
     * @return the list of <code>ProductGeo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductGeo> getProductGeos() throws RepositoryException {
        if (this.productGeos == null) {
            this.productGeos = getRelated(ProductGeo.class, "ProductGeo");
        }
        return this.productGeos;
    }
    /**
     * Auto generated method that gets the related <code>ProductGlAccount</code> by the relation named <code>ProductGlAccount</code>.
     * @return the list of <code>ProductGlAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductGlAccount> getProductGlAccounts() throws RepositoryException {
        if (this.productGlAccounts == null) {
            this.productGlAccounts = getRelated(ProductGlAccount.class, "ProductGlAccount");
        }
        return this.productGlAccounts;
    }
    /**
     * Auto generated method that gets the related <code>ProductKeyword</code> by the relation named <code>ProductKeyword</code>.
     * @return the list of <code>ProductKeyword</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductKeyword> getProductKeywords() throws RepositoryException {
        if (this.productKeywords == null) {
            this.productKeywords = getRelated(ProductKeyword.class, "ProductKeyword");
        }
        return this.productKeywords;
    }
    /**
     * Auto generated method that gets the related <code>ProductMaint</code> by the relation named <code>ProductMaint</code>.
     * @return the list of <code>ProductMaint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductMaint> getProductMaints() throws RepositoryException {
        if (this.productMaints == null) {
            this.productMaints = getRelated(ProductMaint.class, "ProductMaint");
        }
        return this.productMaints;
    }
    /**
     * Auto generated method that gets the related <code>ProductManufacturingRule</code> by the relation named <code>ProductManufacturingRule</code>.
     * @return the list of <code>ProductManufacturingRule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductManufacturingRule> getProductManufacturingRules() throws RepositoryException {
        if (this.productManufacturingRules == null) {
            this.productManufacturingRules = getRelated(ProductManufacturingRule.class, "ProductManufacturingRule");
        }
        return this.productManufacturingRules;
    }
    /**
     * Auto generated method that gets the related <code>ProductManufacturingRule</code> by the relation named <code>ProductForProductManufacturingRule</code>.
     * @return the list of <code>ProductManufacturingRule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductManufacturingRule> getProductForProductManufacturingRules() throws RepositoryException {
        if (this.productForProductManufacturingRules == null) {
            this.productForProductManufacturingRules = getRelated(ProductManufacturingRule.class, "ProductForProductManufacturingRule");
        }
        return this.productForProductManufacturingRules;
    }
    /**
     * Auto generated method that gets the related <code>ProductManufacturingRule</code> by the relation named <code>ProductInProductManufacturingRule</code>.
     * @return the list of <code>ProductManufacturingRule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductManufacturingRule> getProductInProductManufacturingRules() throws RepositoryException {
        if (this.productInProductManufacturingRules == null) {
            this.productInProductManufacturingRules = getRelated(ProductManufacturingRule.class, "ProductInProductManufacturingRule");
        }
        return this.productInProductManufacturingRules;
    }
    /**
     * Auto generated method that gets the related <code>ProductManufacturingRule</code> by the relation named <code>ProductSubstProductManufacturingRule</code>.
     * @return the list of <code>ProductManufacturingRule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductManufacturingRule> getProductSubstProductManufacturingRules() throws RepositoryException {
        if (this.productSubstProductManufacturingRules == null) {
            this.productSubstProductManufacturingRules = getRelated(ProductManufacturingRule.class, "ProductSubstProductManufacturingRule");
        }
        return this.productSubstProductManufacturingRules;
    }
    /**
     * Auto generated method that gets the related <code>ProductMeter</code> by the relation named <code>ProductMeter</code>.
     * @return the list of <code>ProductMeter</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductMeter> getProductMeters() throws RepositoryException {
        if (this.productMeters == null) {
            this.productMeters = getRelated(ProductMeter.class, "ProductMeter");
        }
        return this.productMeters;
    }
    /**
     * Auto generated method that gets the related <code>ProductOrderItem</code> by the relation named <code>ProductOrderItem</code>.
     * @return the list of <code>ProductOrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductOrderItem> getProductOrderItems() throws RepositoryException {
        if (this.productOrderItems == null) {
            this.productOrderItems = getRelated(ProductOrderItem.class, "ProductOrderItem");
        }
        return this.productOrderItems;
    }
    /**
     * Auto generated method that gets the related <code>ProductPaymentMethodType</code> by the relation named <code>ProductPaymentMethodType</code>.
     * @return the list of <code>ProductPaymentMethodType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPaymentMethodType> getProductPaymentMethodTypes() throws RepositoryException {
        if (this.productPaymentMethodTypes == null) {
            this.productPaymentMethodTypes = getRelated(ProductPaymentMethodType.class, "ProductPaymentMethodType");
        }
        return this.productPaymentMethodTypes;
    }
    /**
     * Auto generated method that gets the related <code>ProductPrice</code> by the relation named <code>ProductPrice</code>.
     * @return the list of <code>ProductPrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPrice> getProductPrices() throws RepositoryException {
        if (this.productPrices == null) {
            this.productPrices = getRelated(ProductPrice.class, "ProductPrice");
        }
        return this.productPrices;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoProduct</code> by the relation named <code>ProductPromoProduct</code>.
     * @return the list of <code>ProductPromoProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoProduct> getProductPromoProducts() throws RepositoryException {
        if (this.productPromoProducts == null) {
            this.productPromoProducts = getRelated(ProductPromoProduct.class, "ProductPromoProduct");
        }
        return this.productPromoProducts;
    }
    /**
     * Auto generated method that gets the related <code>ProductReview</code> by the relation named <code>ProductReview</code>.
     * @return the list of <code>ProductReview</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductReview> getProductReviews() throws RepositoryException {
        if (this.productReviews == null) {
            this.productReviews = getRelated(ProductReview.class, "ProductReview");
        }
        return this.productReviews;
    }
    /**
     * Auto generated method that gets the related <code>ProductStoreSurveyAppl</code> by the relation named <code>ProductStoreSurveyAppl</code>.
     * @return the list of <code>ProductStoreSurveyAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStoreSurveyAppl> getProductStoreSurveyAppls() throws RepositoryException {
        if (this.productStoreSurveyAppls == null) {
            this.productStoreSurveyAppls = getRelated(ProductStoreSurveyAppl.class, "ProductStoreSurveyAppl");
        }
        return this.productStoreSurveyAppls;
    }
    /**
     * Auto generated method that gets the related <code>ProductSubscriptionResource</code> by the relation named <code>ProductSubscriptionResource</code>.
     * @return the list of <code>ProductSubscriptionResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductSubscriptionResource> getProductSubscriptionResources() throws RepositoryException {
        if (this.productSubscriptionResources == null) {
            this.productSubscriptionResources = getRelated(ProductSubscriptionResource.class, "ProductSubscriptionResource");
        }
        return this.productSubscriptionResources;
    }
    /**
     * Auto generated method that gets the related <code>QuoteItem</code> by the relation named <code>QuoteItem</code>.
     * @return the list of <code>QuoteItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteItem> getQuoteItems() throws RepositoryException {
        if (this.quoteItems == null) {
            this.quoteItems = getRelated(QuoteItem.class, "QuoteItem");
        }
        return this.quoteItems;
    }
    /**
     * Auto generated method that gets the related <code>ReorderGuideline</code> by the relation named <code>ReorderGuideline</code>.
     * @return the list of <code>ReorderGuideline</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReorderGuideline> getReorderGuidelines() throws RepositoryException {
        if (this.reorderGuidelines == null) {
            this.reorderGuidelines = getRelated(ReorderGuideline.class, "ReorderGuideline");
        }
        return this.reorderGuidelines;
    }
    /**
     * Auto generated method that gets the related <code>Requirement</code> by the relation named <code>Requirement</code>.
     * @return the list of <code>Requirement</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Requirement> getRequirements() throws RepositoryException {
        if (this.requirements == null) {
            this.requirements = getRelated(Requirement.class, "Requirement");
        }
        return this.requirements;
    }
    /**
     * Auto generated method that gets the related <code>ReturnItem</code> by the relation named <code>ReturnItem</code>.
     * @return the list of <code>ReturnItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnItem> getReturnItems() throws RepositoryException {
        if (this.returnItems == null) {
            this.returnItems = getRelated(ReturnItem.class, "ReturnItem");
        }
        return this.returnItems;
    }
    /**
     * Auto generated method that gets the related <code>SalesForecastItem</code> by the relation named <code>SalesForecastItem</code>.
     * @return the list of <code>SalesForecastItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesForecastItem> getSalesForecastItems() throws RepositoryException {
        if (this.salesForecastItems == null) {
            this.salesForecastItems = getRelated(SalesForecastItem.class, "SalesForecastItem");
        }
        return this.salesForecastItems;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentItem</code> by the relation named <code>ShipmentItem</code>.
     * @return the list of <code>ShipmentItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentItem> getShipmentItems() throws RepositoryException {
        if (this.shipmentItems == null) {
            this.shipmentItems = getRelated(ShipmentItem.class, "ShipmentItem");
        }
        return this.shipmentItems;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentPackageContent</code> by the relation named <code>SubShipmentPackageContent</code>.
     * @return the list of <code>ShipmentPackageContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentPackageContent> getSubShipmentPackageContents() throws RepositoryException {
        if (this.subShipmentPackageContents == null) {
            this.subShipmentPackageContents = getRelated(ShipmentPackageContent.class, "SubShipmentPackageContent");
        }
        return this.subShipmentPackageContents;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentReceipt</code> by the relation named <code>ShipmentReceipt</code>.
     * @return the list of <code>ShipmentReceipt</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentReceipt> getShipmentReceipts() throws RepositoryException {
        if (this.shipmentReceipts == null) {
            this.shipmentReceipts = getRelated(ShipmentReceipt.class, "ShipmentReceipt");
        }
        return this.shipmentReceipts;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingListItem</code> by the relation named <code>ShoppingListItem</code>.
     * @return the list of <code>ShoppingListItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingListItem> getShoppingListItems() throws RepositoryException {
        if (this.shoppingListItems == null) {
            this.shoppingListItems = getRelated(ShoppingListItem.class, "ShoppingListItem");
        }
        return this.shoppingListItems;
    }
    /**
     * Auto generated method that gets the related <code>Subscription</code> by the relation named <code>Subscription</code>.
     * @return the list of <code>Subscription</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Subscription> getSubscriptions() throws RepositoryException {
        if (this.subscriptions == null) {
            this.subscriptions = getRelated(Subscription.class, "Subscription");
        }
        return this.subscriptions;
    }
    /**
     * Auto generated method that gets the related <code>SupplierProduct</code> by the relation named <code>SupplierProduct</code>.
     * @return the list of <code>SupplierProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SupplierProduct> getSupplierProducts() throws RepositoryException {
        if (this.supplierProducts == null) {
            this.supplierProducts = getRelated(SupplierProduct.class, "SupplierProduct");
        }
        return this.supplierProducts;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortGoodStandard</code> by the relation named <code>WorkEffortGoodStandard</code>.
     * @return the list of <code>WorkEffortGoodStandard</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortGoodStandard> getWorkEffortGoodStandards() throws RepositoryException {
        if (this.workEffortGoodStandards == null) {
            this.workEffortGoodStandards = getRelated(WorkEffortGoodStandard.class, "WorkEffortGoodStandard");
        }
        return this.workEffortGoodStandards;
    }

    /**
     * Auto generated value setter.
     * @param productType the productType to set
    */
    public void setProductType(ProductType productType) {
        this.productType = productType;
    }
    /**
     * Auto generated value setter.
     * @param productTypeAttrs the productTypeAttrs to set
    */
    public void setProductTypeAttrs(List<ProductTypeAttr> productTypeAttrs) {
        this.productTypeAttrs = productTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param primaryProductCategory the primaryProductCategory to set
    */
    public void setPrimaryProductCategory(ProductCategory primaryProductCategory) {
        this.primaryProductCategory = primaryProductCategory;
    }
    /**
     * Auto generated value setter.
     * @param facility the facility to set
    */
    public void setFacility(Facility facility) {
        this.facility = facility;
    }
    /**
     * Auto generated value setter.
     * @param manufacturerParty the manufacturerParty to set
    */
    public void setManufacturerParty(Party manufacturerParty) {
        this.manufacturerParty = manufacturerParty;
    }
    /**
     * Auto generated value setter.
     * @param quantityUom the quantityUom to set
    */
    public void setQuantityUom(Uom quantityUom) {
        this.quantityUom = quantityUom;
    }
    /**
     * Auto generated value setter.
     * @param amountUomType the amountUomType to set
    */
    public void setAmountUomType(UomType amountUomType) {
        this.amountUomType = amountUomType;
    }
    /**
     * Auto generated value setter.
     * @param weightUom the weightUom to set
    */
    public void setWeightUom(Uom weightUom) {
        this.weightUom = weightUom;
    }
    /**
     * Auto generated value setter.
     * @param heightUom the heightUom to set
    */
    public void setHeightUom(Uom heightUom) {
        this.heightUom = heightUom;
    }
    /**
     * Auto generated value setter.
     * @param widthUom the widthUom to set
    */
    public void setWidthUom(Uom widthUom) {
        this.widthUom = widthUom;
    }
    /**
     * Auto generated value setter.
     * @param depthUom the depthUom to set
    */
    public void setDepthUom(Uom depthUom) {
        this.depthUom = depthUom;
    }
    /**
     * Auto generated value setter.
     * @param ratingEnumeration the ratingEnumeration to set
    */
    public void setRatingEnumeration(Enumeration ratingEnumeration) {
        this.ratingEnumeration = ratingEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param requirementMethodEnumeration the requirementMethodEnumeration to set
    */
    public void setRequirementMethodEnumeration(Enumeration requirementMethodEnumeration) {
        this.requirementMethodEnumeration = requirementMethodEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param originGeo the originGeo to set
    */
    public void setOriginGeo(Geo originGeo) {
        this.originGeo = originGeo;
    }
    /**
     * Auto generated value setter.
     * @param relatedCreatedByUserLogin the relatedCreatedByUserLogin to set
    */
    public void setRelatedCreatedByUserLogin(UserLogin relatedCreatedByUserLogin) {
        this.relatedCreatedByUserLogin = relatedCreatedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param relatedLastModifiedByUserLogin the relatedLastModifiedByUserLogin to set
    */
    public void setRelatedLastModifiedByUserLogin(UserLogin relatedLastModifiedByUserLogin) {
        this.relatedLastModifiedByUserLogin = relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureAndAppls the productFeatureAndAppls to set
    */
    public void setProductFeatureAndAppls(List<ProductFeatureAndAppl> productFeatureAndAppls) {
        this.productFeatureAndAppls = productFeatureAndAppls;
    }
    /**
     * Auto generated value setter.
     * @param simpleSalesTaxLookups the simpleSalesTaxLookups to set
    */
    public void setSimpleSalesTaxLookups(List<SimpleSalesTaxLookup> simpleSalesTaxLookups) {
        this.simpleSalesTaxLookups = simpleSalesTaxLookups;
    }
    /**
     * Auto generated value setter.
     * @param agreements the agreements to set
    */
    public void setAgreements(List<Agreement> agreements) {
        this.agreements = agreements;
    }
    /**
     * Auto generated value setter.
     * @param agreementProductAppls the agreementProductAppls to set
    */
    public void setAgreementProductAppls(List<AgreementProductAppl> agreementProductAppls) {
        this.agreementProductAppls = agreementProductAppls;
    }
    /**
     * Auto generated value setter.
     * @param agreementTerms the agreementTerms to set
    */
    public void setAgreementTerms(List<AgreementTerm> agreementTerms) {
        this.agreementTerms = agreementTerms;
    }
    /**
     * Auto generated value setter.
     * @param cartAbandonedLines the cartAbandonedLines to set
    */
    public void setCartAbandonedLines(List<CartAbandonedLine> cartAbandonedLines) {
        this.cartAbandonedLines = cartAbandonedLines;
    }
    /**
     * Auto generated value setter.
     * @param communicationEventProducts the communicationEventProducts to set
    */
    public void setCommunicationEventProducts(List<CommunicationEventProduct> communicationEventProducts) {
        this.communicationEventProducts = communicationEventProducts;
    }
    /**
     * Auto generated value setter.
     * @param costComponents the costComponents to set
    */
    public void setCostComponents(List<CostComponent> costComponents) {
        this.costComponents = costComponents;
    }
    /**
     * Auto generated value setter.
     * @param custRequestItems the custRequestItems to set
    */
    public void setCustRequestItems(List<CustRequestItem> custRequestItems) {
        this.custRequestItems = custRequestItems;
    }
    /**
     * Auto generated value setter.
     * @param dataImportInventorys the dataImportInventorys to set
    */
    public void setDataImportInventorys(List<DataImportInventory> dataImportInventorys) {
        this.dataImportInventorys = dataImportInventorys;
    }
    /**
     * Auto generated value setter.
     * @param dataImportOrderItems the dataImportOrderItems to set
    */
    public void setDataImportOrderItems(List<DataImportOrderItem> dataImportOrderItems) {
        this.dataImportOrderItems = dataImportOrderItems;
    }
    /**
     * Auto generated value setter.
     * @param dataImportShoppingListItems the dataImportShoppingListItems to set
    */
    public void setDataImportShoppingListItems(List<DataImportShoppingListItem> dataImportShoppingListItems) {
        this.dataImportShoppingListItems = dataImportShoppingListItems;
    }
    /**
     * Auto generated value setter.
     * @param instanceOfFixedAssets the instanceOfFixedAssets to set
    */
    public void setInstanceOfFixedAssets(List<FixedAsset> instanceOfFixedAssets) {
        this.instanceOfFixedAssets = instanceOfFixedAssets;
    }
    /**
     * Auto generated value setter.
     * @param fixedAssetProducts the fixedAssetProducts to set
    */
    public void setFixedAssetProducts(List<FixedAssetProduct> fixedAssetProducts) {
        this.fixedAssetProducts = fixedAssetProducts;
    }
    /**
     * Auto generated value setter.
     * @param goodIdentifications the goodIdentifications to set
    */
    public void setGoodIdentifications(List<GoodIdentification> goodIdentifications) {
        this.goodIdentifications = goodIdentifications;
    }
    /**
     * Auto generated value setter.
     * @param inventoryEventPlanneds the inventoryEventPlanneds to set
    */
    public void setInventoryEventPlanneds(List<InventoryEventPlanned> inventoryEventPlanneds) {
        this.inventoryEventPlanneds = inventoryEventPlanneds;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItems the inventoryItems to set
    */
    public void setInventoryItems(List<InventoryItem> inventoryItems) {
        this.inventoryItems = inventoryItems;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemTempReses the inventoryItemTempReses to set
    */
    public void setInventoryItemTempReses(List<InventoryItemTempRes> inventoryItemTempReses) {
        this.inventoryItemTempReses = inventoryItemTempReses;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItems the invoiceItems to set
    */
    public void setInvoiceItems(List<InvoiceItem> invoiceItems) {
        this.invoiceItems = invoiceItems;
    }
    /**
     * Auto generated value setter.
     * @param mrpInventoryEvents the mrpInventoryEvents to set
    */
    public void setMrpInventoryEvents(List<MrpInventoryEvent> mrpInventoryEvents) {
        this.mrpInventoryEvents = mrpInventoryEvents;
    }
    /**
     * Auto generated value setter.
     * @param orderItems the orderItems to set
    */
    public void setOrderItems(List<OrderItem> orderItems) {
        this.orderItems = orderItems;
    }
    /**
     * Auto generated value setter.
     * @param orderSummaryEntrys the orderSummaryEntrys to set
    */
    public void setOrderSummaryEntrys(List<OrderSummaryEntry> orderSummaryEntrys) {
        this.orderSummaryEntrys = orderSummaryEntrys;
    }
    /**
     * Auto generated value setter.
     * @param partyNeeds the partyNeeds to set
    */
    public void setPartyNeeds(List<PartyNeed> partyNeeds) {
        this.partyNeeds = partyNeeds;
    }
    /**
     * Auto generated value setter.
     * @param mainProductAssocs the mainProductAssocs to set
    */
    public void setMainProductAssocs(List<ProductAssoc> mainProductAssocs) {
        this.mainProductAssocs = mainProductAssocs;
    }
    /**
     * Auto generated value setter.
     * @param assocProductAssocs the assocProductAssocs to set
    */
    public void setAssocProductAssocs(List<ProductAssoc> assocProductAssocs) {
        this.assocProductAssocs = assocProductAssocs;
    }
    /**
     * Auto generated value setter.
     * @param productAttributes the productAttributes to set
    */
    public void setProductAttributes(List<ProductAttribute> productAttributes) {
        this.productAttributes = productAttributes;
    }
    /**
     * Auto generated value setter.
     * @param productAverageCosts the productAverageCosts to set
    */
    public void setProductAverageCosts(List<ProductAverageCost> productAverageCosts) {
        this.productAverageCosts = productAverageCosts;
    }
    /**
     * Auto generated value setter.
     * @param productCalculatedInfo the productCalculatedInfo to set
    */
    public void setProductCalculatedInfo(ProductCalculatedInfo productCalculatedInfo) {
        this.productCalculatedInfo = productCalculatedInfo;
    }
    /**
     * Auto generated value setter.
     * @param productCategoryMembers the productCategoryMembers to set
    */
    public void setProductCategoryMembers(List<ProductCategoryMember> productCategoryMembers) {
        this.productCategoryMembers = productCategoryMembers;
    }
    /**
     * Auto generated value setter.
     * @param productProductConfigs the productProductConfigs to set
    */
    public void setProductProductConfigs(List<ProductConfig> productProductConfigs) {
        this.productProductConfigs = productProductConfigs;
    }
    /**
     * Auto generated value setter.
     * @param productProductConfigProducts the productProductConfigProducts to set
    */
    public void setProductProductConfigProducts(List<ProductConfigProduct> productProductConfigProducts) {
        this.productProductConfigProducts = productProductConfigProducts;
    }
    /**
     * Auto generated value setter.
     * @param productProductConfigStatses the productProductConfigStatses to set
    */
    public void setProductProductConfigStatses(List<ProductConfigStats> productProductConfigStatses) {
        this.productProductConfigStatses = productProductConfigStatses;
    }
    /**
     * Auto generated value setter.
     * @param productContents the productContents to set
    */
    public void setProductContents(List<ProductContent> productContents) {
        this.productContents = productContents;
    }
    /**
     * Auto generated value setter.
     * @param productFacilitys the productFacilitys to set
    */
    public void setProductFacilitys(List<ProductFacility> productFacilitys) {
        this.productFacilitys = productFacilitys;
    }
    /**
     * Auto generated value setter.
     * @param productFacilityLocations the productFacilityLocations to set
    */
    public void setProductFacilityLocations(List<ProductFacilityLocation> productFacilityLocations) {
        this.productFacilityLocations = productFacilityLocations;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureAppls the productFeatureAppls to set
    */
    public void setProductFeatureAppls(List<ProductFeatureAppl> productFeatureAppls) {
        this.productFeatureAppls = productFeatureAppls;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureApplAttrs the productFeatureApplAttrs to set
    */
    public void setProductFeatureApplAttrs(List<ProductFeatureApplAttr> productFeatureApplAttrs) {
        this.productFeatureApplAttrs = productFeatureApplAttrs;
    }
    /**
     * Auto generated value setter.
     * @param productGeos the productGeos to set
    */
    public void setProductGeos(List<ProductGeo> productGeos) {
        this.productGeos = productGeos;
    }
    /**
     * Auto generated value setter.
     * @param productGlAccounts the productGlAccounts to set
    */
    public void setProductGlAccounts(List<ProductGlAccount> productGlAccounts) {
        this.productGlAccounts = productGlAccounts;
    }
    /**
     * Auto generated value setter.
     * @param productKeywords the productKeywords to set
    */
    public void setProductKeywords(List<ProductKeyword> productKeywords) {
        this.productKeywords = productKeywords;
    }
    /**
     * Auto generated value setter.
     * @param productMaints the productMaints to set
    */
    public void setProductMaints(List<ProductMaint> productMaints) {
        this.productMaints = productMaints;
    }
    /**
     * Auto generated value setter.
     * @param productManufacturingRules the productManufacturingRules to set
    */
    public void setProductManufacturingRules(List<ProductManufacturingRule> productManufacturingRules) {
        this.productManufacturingRules = productManufacturingRules;
    }
    /**
     * Auto generated value setter.
     * @param productForProductManufacturingRules the productForProductManufacturingRules to set
    */
    public void setProductForProductManufacturingRules(List<ProductManufacturingRule> productForProductManufacturingRules) {
        this.productForProductManufacturingRules = productForProductManufacturingRules;
    }
    /**
     * Auto generated value setter.
     * @param productInProductManufacturingRules the productInProductManufacturingRules to set
    */
    public void setProductInProductManufacturingRules(List<ProductManufacturingRule> productInProductManufacturingRules) {
        this.productInProductManufacturingRules = productInProductManufacturingRules;
    }
    /**
     * Auto generated value setter.
     * @param productSubstProductManufacturingRules the productSubstProductManufacturingRules to set
    */
    public void setProductSubstProductManufacturingRules(List<ProductManufacturingRule> productSubstProductManufacturingRules) {
        this.productSubstProductManufacturingRules = productSubstProductManufacturingRules;
    }
    /**
     * Auto generated value setter.
     * @param productMeters the productMeters to set
    */
    public void setProductMeters(List<ProductMeter> productMeters) {
        this.productMeters = productMeters;
    }
    /**
     * Auto generated value setter.
     * @param productOrderItems the productOrderItems to set
    */
    public void setProductOrderItems(List<ProductOrderItem> productOrderItems) {
        this.productOrderItems = productOrderItems;
    }
    /**
     * Auto generated value setter.
     * @param productPaymentMethodTypes the productPaymentMethodTypes to set
    */
    public void setProductPaymentMethodTypes(List<ProductPaymentMethodType> productPaymentMethodTypes) {
        this.productPaymentMethodTypes = productPaymentMethodTypes;
    }
    /**
     * Auto generated value setter.
     * @param productPrices the productPrices to set
    */
    public void setProductPrices(List<ProductPrice> productPrices) {
        this.productPrices = productPrices;
    }
    /**
     * Auto generated value setter.
     * @param productPromoProducts the productPromoProducts to set
    */
    public void setProductPromoProducts(List<ProductPromoProduct> productPromoProducts) {
        this.productPromoProducts = productPromoProducts;
    }
    /**
     * Auto generated value setter.
     * @param productReviews the productReviews to set
    */
    public void setProductReviews(List<ProductReview> productReviews) {
        this.productReviews = productReviews;
    }
    /**
     * Auto generated value setter.
     * @param productStoreSurveyAppls the productStoreSurveyAppls to set
    */
    public void setProductStoreSurveyAppls(List<ProductStoreSurveyAppl> productStoreSurveyAppls) {
        this.productStoreSurveyAppls = productStoreSurveyAppls;
    }
    /**
     * Auto generated value setter.
     * @param productSubscriptionResources the productSubscriptionResources to set
    */
    public void setProductSubscriptionResources(List<ProductSubscriptionResource> productSubscriptionResources) {
        this.productSubscriptionResources = productSubscriptionResources;
    }
    /**
     * Auto generated value setter.
     * @param quoteItems the quoteItems to set
    */
    public void setQuoteItems(List<QuoteItem> quoteItems) {
        this.quoteItems = quoteItems;
    }
    /**
     * Auto generated value setter.
     * @param reorderGuidelines the reorderGuidelines to set
    */
    public void setReorderGuidelines(List<ReorderGuideline> reorderGuidelines) {
        this.reorderGuidelines = reorderGuidelines;
    }
    /**
     * Auto generated value setter.
     * @param requirements the requirements to set
    */
    public void setRequirements(List<Requirement> requirements) {
        this.requirements = requirements;
    }
    /**
     * Auto generated value setter.
     * @param returnItems the returnItems to set
    */
    public void setReturnItems(List<ReturnItem> returnItems) {
        this.returnItems = returnItems;
    }
    /**
     * Auto generated value setter.
     * @param salesForecastItems the salesForecastItems to set
    */
    public void setSalesForecastItems(List<SalesForecastItem> salesForecastItems) {
        this.salesForecastItems = salesForecastItems;
    }
    /**
     * Auto generated value setter.
     * @param shipmentItems the shipmentItems to set
    */
    public void setShipmentItems(List<ShipmentItem> shipmentItems) {
        this.shipmentItems = shipmentItems;
    }
    /**
     * Auto generated value setter.
     * @param subShipmentPackageContents the subShipmentPackageContents to set
    */
    public void setSubShipmentPackageContents(List<ShipmentPackageContent> subShipmentPackageContents) {
        this.subShipmentPackageContents = subShipmentPackageContents;
    }
    /**
     * Auto generated value setter.
     * @param shipmentReceipts the shipmentReceipts to set
    */
    public void setShipmentReceipts(List<ShipmentReceipt> shipmentReceipts) {
        this.shipmentReceipts = shipmentReceipts;
    }
    /**
     * Auto generated value setter.
     * @param shoppingListItems the shoppingListItems to set
    */
    public void setShoppingListItems(List<ShoppingListItem> shoppingListItems) {
        this.shoppingListItems = shoppingListItems;
    }
    /**
     * Auto generated value setter.
     * @param subscriptions the subscriptions to set
    */
    public void setSubscriptions(List<Subscription> subscriptions) {
        this.subscriptions = subscriptions;
    }
    /**
     * Auto generated value setter.
     * @param supplierProducts the supplierProducts to set
    */
    public void setSupplierProducts(List<SupplierProduct> supplierProducts) {
        this.supplierProducts = supplierProducts;
    }
    /**
     * Auto generated value setter.
     * @param workEffortGoodStandards the workEffortGoodStandards to set
    */
    public void setWorkEffortGoodStandards(List<WorkEffortGoodStandard> workEffortGoodStandards) {
        this.workEffortGoodStandards = workEffortGoodStandards;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementProductAppl(AgreementProductAppl agreementProductAppl) {
        if (this.agreementProductAppls == null) {
            this.agreementProductAppls = new ArrayList<AgreementProductAppl>();
        }
        this.agreementProductAppls.add(agreementProductAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementProductAppl(AgreementProductAppl agreementProductAppl) {
        if (this.agreementProductAppls == null) {
            return;
        }
        this.agreementProductAppls.remove(agreementProductAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementProductAppl() {
        if (this.agreementProductAppls == null) {
            return;
        }
        this.agreementProductAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCommunicationEventProduct(CommunicationEventProduct communicationEventProduct) {
        if (this.communicationEventProducts == null) {
            this.communicationEventProducts = new ArrayList<CommunicationEventProduct>();
        }
        this.communicationEventProducts.add(communicationEventProduct);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCommunicationEventProduct(CommunicationEventProduct communicationEventProduct) {
        if (this.communicationEventProducts == null) {
            return;
        }
        this.communicationEventProducts.remove(communicationEventProduct);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCommunicationEventProduct() {
        if (this.communicationEventProducts == null) {
            return;
        }
        this.communicationEventProducts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addDataImportOrderItem(DataImportOrderItem dataImportOrderItem) {
        if (this.dataImportOrderItems == null) {
            this.dataImportOrderItems = new ArrayList<DataImportOrderItem>();
        }
        this.dataImportOrderItems.add(dataImportOrderItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDataImportOrderItem(DataImportOrderItem dataImportOrderItem) {
        if (this.dataImportOrderItems == null) {
            return;
        }
        this.dataImportOrderItems.remove(dataImportOrderItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDataImportOrderItem() {
        if (this.dataImportOrderItems == null) {
            return;
        }
        this.dataImportOrderItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addDataImportShoppingListItem(DataImportShoppingListItem dataImportShoppingListItem) {
        if (this.dataImportShoppingListItems == null) {
            this.dataImportShoppingListItems = new ArrayList<DataImportShoppingListItem>();
        }
        this.dataImportShoppingListItems.add(dataImportShoppingListItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDataImportShoppingListItem(DataImportShoppingListItem dataImportShoppingListItem) {
        if (this.dataImportShoppingListItems == null) {
            return;
        }
        this.dataImportShoppingListItems.remove(dataImportShoppingListItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDataImportShoppingListItem() {
        if (this.dataImportShoppingListItems == null) {
            return;
        }
        this.dataImportShoppingListItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFixedAssetProduct(FixedAssetProduct fixedAssetProduct) {
        if (this.fixedAssetProducts == null) {
            this.fixedAssetProducts = new ArrayList<FixedAssetProduct>();
        }
        this.fixedAssetProducts.add(fixedAssetProduct);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFixedAssetProduct(FixedAssetProduct fixedAssetProduct) {
        if (this.fixedAssetProducts == null) {
            return;
        }
        this.fixedAssetProducts.remove(fixedAssetProduct);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFixedAssetProduct() {
        if (this.fixedAssetProducts == null) {
            return;
        }
        this.fixedAssetProducts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addGoodIdentification(GoodIdentification goodIdentification) {
        if (this.goodIdentifications == null) {
            this.goodIdentifications = new ArrayList<GoodIdentification>();
        }
        this.goodIdentifications.add(goodIdentification);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeGoodIdentification(GoodIdentification goodIdentification) {
        if (this.goodIdentifications == null) {
            return;
        }
        this.goodIdentifications.remove(goodIdentification);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearGoodIdentification() {
        if (this.goodIdentifications == null) {
            return;
        }
        this.goodIdentifications.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInventoryEventPlanned(InventoryEventPlanned inventoryEventPlanned) {
        if (this.inventoryEventPlanneds == null) {
            this.inventoryEventPlanneds = new ArrayList<InventoryEventPlanned>();
        }
        this.inventoryEventPlanneds.add(inventoryEventPlanned);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInventoryEventPlanned(InventoryEventPlanned inventoryEventPlanned) {
        if (this.inventoryEventPlanneds == null) {
            return;
        }
        this.inventoryEventPlanneds.remove(inventoryEventPlanned);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInventoryEventPlanned() {
        if (this.inventoryEventPlanneds == null) {
            return;
        }
        this.inventoryEventPlanneds.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInventoryItemTempRese(InventoryItemTempRes inventoryItemTempRese) {
        if (this.inventoryItemTempReses == null) {
            this.inventoryItemTempReses = new ArrayList<InventoryItemTempRes>();
        }
        this.inventoryItemTempReses.add(inventoryItemTempRese);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInventoryItemTempRese(InventoryItemTempRes inventoryItemTempRese) {
        if (this.inventoryItemTempReses == null) {
            return;
        }
        this.inventoryItemTempReses.remove(inventoryItemTempRese);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInventoryItemTempRese() {
        if (this.inventoryItemTempReses == null) {
            return;
        }
        this.inventoryItemTempReses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addMrpInventoryEvent(MrpInventoryEvent mrpInventoryEvent) {
        if (this.mrpInventoryEvents == null) {
            this.mrpInventoryEvents = new ArrayList<MrpInventoryEvent>();
        }
        this.mrpInventoryEvents.add(mrpInventoryEvent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeMrpInventoryEvent(MrpInventoryEvent mrpInventoryEvent) {
        if (this.mrpInventoryEvents == null) {
            return;
        }
        this.mrpInventoryEvents.remove(mrpInventoryEvent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearMrpInventoryEvent() {
        if (this.mrpInventoryEvents == null) {
            return;
        }
        this.mrpInventoryEvents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderSummaryEntry(OrderSummaryEntry orderSummaryEntry) {
        if (this.orderSummaryEntrys == null) {
            this.orderSummaryEntrys = new ArrayList<OrderSummaryEntry>();
        }
        this.orderSummaryEntrys.add(orderSummaryEntry);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderSummaryEntry(OrderSummaryEntry orderSummaryEntry) {
        if (this.orderSummaryEntrys == null) {
            return;
        }
        this.orderSummaryEntrys.remove(orderSummaryEntry);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderSummaryEntry() {
        if (this.orderSummaryEntrys == null) {
            return;
        }
        this.orderSummaryEntrys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addMainProductAssoc(ProductAssoc mainProductAssoc) {
        if (this.mainProductAssocs == null) {
            this.mainProductAssocs = new ArrayList<ProductAssoc>();
        }
        this.mainProductAssocs.add(mainProductAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeMainProductAssoc(ProductAssoc mainProductAssoc) {
        if (this.mainProductAssocs == null) {
            return;
        }
        this.mainProductAssocs.remove(mainProductAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearMainProductAssoc() {
        if (this.mainProductAssocs == null) {
            return;
        }
        this.mainProductAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAssocProductAssoc(ProductAssoc assocProductAssoc) {
        if (this.assocProductAssocs == null) {
            this.assocProductAssocs = new ArrayList<ProductAssoc>();
        }
        this.assocProductAssocs.add(assocProductAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAssocProductAssoc(ProductAssoc assocProductAssoc) {
        if (this.assocProductAssocs == null) {
            return;
        }
        this.assocProductAssocs.remove(assocProductAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAssocProductAssoc() {
        if (this.assocProductAssocs == null) {
            return;
        }
        this.assocProductAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductAttribute(ProductAttribute productAttribute) {
        if (this.productAttributes == null) {
            this.productAttributes = new ArrayList<ProductAttribute>();
        }
        this.productAttributes.add(productAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductAttribute(ProductAttribute productAttribute) {
        if (this.productAttributes == null) {
            return;
        }
        this.productAttributes.remove(productAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductAttribute() {
        if (this.productAttributes == null) {
            return;
        }
        this.productAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductCategoryMember(ProductCategoryMember productCategoryMember) {
        if (this.productCategoryMembers == null) {
            this.productCategoryMembers = new ArrayList<ProductCategoryMember>();
        }
        this.productCategoryMembers.add(productCategoryMember);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductCategoryMember(ProductCategoryMember productCategoryMember) {
        if (this.productCategoryMembers == null) {
            return;
        }
        this.productCategoryMembers.remove(productCategoryMember);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductCategoryMember() {
        if (this.productCategoryMembers == null) {
            return;
        }
        this.productCategoryMembers.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductProductConfig(ProductConfig productProductConfig) {
        if (this.productProductConfigs == null) {
            this.productProductConfigs = new ArrayList<ProductConfig>();
        }
        this.productProductConfigs.add(productProductConfig);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductProductConfig(ProductConfig productProductConfig) {
        if (this.productProductConfigs == null) {
            return;
        }
        this.productProductConfigs.remove(productProductConfig);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductProductConfig() {
        if (this.productProductConfigs == null) {
            return;
        }
        this.productProductConfigs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductProductConfigProduct(ProductConfigProduct productProductConfigProduct) {
        if (this.productProductConfigProducts == null) {
            this.productProductConfigProducts = new ArrayList<ProductConfigProduct>();
        }
        this.productProductConfigProducts.add(productProductConfigProduct);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductProductConfigProduct(ProductConfigProduct productProductConfigProduct) {
        if (this.productProductConfigProducts == null) {
            return;
        }
        this.productProductConfigProducts.remove(productProductConfigProduct);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductProductConfigProduct() {
        if (this.productProductConfigProducts == null) {
            return;
        }
        this.productProductConfigProducts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductProductConfigStatse(ProductConfigStats productProductConfigStatse) {
        if (this.productProductConfigStatses == null) {
            this.productProductConfigStatses = new ArrayList<ProductConfigStats>();
        }
        this.productProductConfigStatses.add(productProductConfigStatse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductProductConfigStatse(ProductConfigStats productProductConfigStatse) {
        if (this.productProductConfigStatses == null) {
            return;
        }
        this.productProductConfigStatses.remove(productProductConfigStatse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductProductConfigStatse() {
        if (this.productProductConfigStatses == null) {
            return;
        }
        this.productProductConfigStatses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductContent(ProductContent productContent) {
        if (this.productContents == null) {
            this.productContents = new ArrayList<ProductContent>();
        }
        this.productContents.add(productContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductContent(ProductContent productContent) {
        if (this.productContents == null) {
            return;
        }
        this.productContents.remove(productContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductContent() {
        if (this.productContents == null) {
            return;
        }
        this.productContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFacility(ProductFacility productFacility) {
        if (this.productFacilitys == null) {
            this.productFacilitys = new ArrayList<ProductFacility>();
        }
        this.productFacilitys.add(productFacility);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFacility(ProductFacility productFacility) {
        if (this.productFacilitys == null) {
            return;
        }
        this.productFacilitys.remove(productFacility);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFacility() {
        if (this.productFacilitys == null) {
            return;
        }
        this.productFacilitys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFacilityLocation(ProductFacilityLocation productFacilityLocation) {
        if (this.productFacilityLocations == null) {
            this.productFacilityLocations = new ArrayList<ProductFacilityLocation>();
        }
        this.productFacilityLocations.add(productFacilityLocation);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFacilityLocation(ProductFacilityLocation productFacilityLocation) {
        if (this.productFacilityLocations == null) {
            return;
        }
        this.productFacilityLocations.remove(productFacilityLocation);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFacilityLocation() {
        if (this.productFacilityLocations == null) {
            return;
        }
        this.productFacilityLocations.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFeatureAppl(ProductFeatureAppl productFeatureAppl) {
        if (this.productFeatureAppls == null) {
            this.productFeatureAppls = new ArrayList<ProductFeatureAppl>();
        }
        this.productFeatureAppls.add(productFeatureAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFeatureAppl(ProductFeatureAppl productFeatureAppl) {
        if (this.productFeatureAppls == null) {
            return;
        }
        this.productFeatureAppls.remove(productFeatureAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFeatureAppl() {
        if (this.productFeatureAppls == null) {
            return;
        }
        this.productFeatureAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFeatureApplAttr(ProductFeatureApplAttr productFeatureApplAttr) {
        if (this.productFeatureApplAttrs == null) {
            this.productFeatureApplAttrs = new ArrayList<ProductFeatureApplAttr>();
        }
        this.productFeatureApplAttrs.add(productFeatureApplAttr);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFeatureApplAttr(ProductFeatureApplAttr productFeatureApplAttr) {
        if (this.productFeatureApplAttrs == null) {
            return;
        }
        this.productFeatureApplAttrs.remove(productFeatureApplAttr);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFeatureApplAttr() {
        if (this.productFeatureApplAttrs == null) {
            return;
        }
        this.productFeatureApplAttrs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductGeo(ProductGeo productGeo) {
        if (this.productGeos == null) {
            this.productGeos = new ArrayList<ProductGeo>();
        }
        this.productGeos.add(productGeo);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductGeo(ProductGeo productGeo) {
        if (this.productGeos == null) {
            return;
        }
        this.productGeos.remove(productGeo);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductGeo() {
        if (this.productGeos == null) {
            return;
        }
        this.productGeos.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductGlAccount(ProductGlAccount productGlAccount) {
        if (this.productGlAccounts == null) {
            this.productGlAccounts = new ArrayList<ProductGlAccount>();
        }
        this.productGlAccounts.add(productGlAccount);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductGlAccount(ProductGlAccount productGlAccount) {
        if (this.productGlAccounts == null) {
            return;
        }
        this.productGlAccounts.remove(productGlAccount);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductGlAccount() {
        if (this.productGlAccounts == null) {
            return;
        }
        this.productGlAccounts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductKeyword(ProductKeyword productKeyword) {
        if (this.productKeywords == null) {
            this.productKeywords = new ArrayList<ProductKeyword>();
        }
        this.productKeywords.add(productKeyword);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductKeyword(ProductKeyword productKeyword) {
        if (this.productKeywords == null) {
            return;
        }
        this.productKeywords.remove(productKeyword);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductKeyword() {
        if (this.productKeywords == null) {
            return;
        }
        this.productKeywords.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductMaint(ProductMaint productMaint) {
        if (this.productMaints == null) {
            this.productMaints = new ArrayList<ProductMaint>();
        }
        this.productMaints.add(productMaint);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductMaint(ProductMaint productMaint) {
        if (this.productMaints == null) {
            return;
        }
        this.productMaints.remove(productMaint);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductMaint() {
        if (this.productMaints == null) {
            return;
        }
        this.productMaints.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductMeter(ProductMeter productMeter) {
        if (this.productMeters == null) {
            this.productMeters = new ArrayList<ProductMeter>();
        }
        this.productMeters.add(productMeter);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductMeter(ProductMeter productMeter) {
        if (this.productMeters == null) {
            return;
        }
        this.productMeters.remove(productMeter);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductMeter() {
        if (this.productMeters == null) {
            return;
        }
        this.productMeters.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPaymentMethodType(ProductPaymentMethodType productPaymentMethodType) {
        if (this.productPaymentMethodTypes == null) {
            this.productPaymentMethodTypes = new ArrayList<ProductPaymentMethodType>();
        }
        this.productPaymentMethodTypes.add(productPaymentMethodType);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPaymentMethodType(ProductPaymentMethodType productPaymentMethodType) {
        if (this.productPaymentMethodTypes == null) {
            return;
        }
        this.productPaymentMethodTypes.remove(productPaymentMethodType);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPaymentMethodType() {
        if (this.productPaymentMethodTypes == null) {
            return;
        }
        this.productPaymentMethodTypes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPrice(ProductPrice productPrice) {
        if (this.productPrices == null) {
            this.productPrices = new ArrayList<ProductPrice>();
        }
        this.productPrices.add(productPrice);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPrice(ProductPrice productPrice) {
        if (this.productPrices == null) {
            return;
        }
        this.productPrices.remove(productPrice);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPrice() {
        if (this.productPrices == null) {
            return;
        }
        this.productPrices.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPromoProduct(ProductPromoProduct productPromoProduct) {
        if (this.productPromoProducts == null) {
            this.productPromoProducts = new ArrayList<ProductPromoProduct>();
        }
        this.productPromoProducts.add(productPromoProduct);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPromoProduct(ProductPromoProduct productPromoProduct) {
        if (this.productPromoProducts == null) {
            return;
        }
        this.productPromoProducts.remove(productPromoProduct);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPromoProduct() {
        if (this.productPromoProducts == null) {
            return;
        }
        this.productPromoProducts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductSubscriptionResource(ProductSubscriptionResource productSubscriptionResource) {
        if (this.productSubscriptionResources == null) {
            this.productSubscriptionResources = new ArrayList<ProductSubscriptionResource>();
        }
        this.productSubscriptionResources.add(productSubscriptionResource);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductSubscriptionResource(ProductSubscriptionResource productSubscriptionResource) {
        if (this.productSubscriptionResources == null) {
            return;
        }
        this.productSubscriptionResources.remove(productSubscriptionResource);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductSubscriptionResource() {
        if (this.productSubscriptionResources == null) {
            return;
        }
        this.productSubscriptionResources.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addSupplierProduct(SupplierProduct supplierProduct) {
        if (this.supplierProducts == null) {
            this.supplierProducts = new ArrayList<SupplierProduct>();
        }
        this.supplierProducts.add(supplierProduct);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSupplierProduct(SupplierProduct supplierProduct) {
        if (this.supplierProducts == null) {
            return;
        }
        this.supplierProducts.remove(supplierProduct);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSupplierProduct() {
        if (this.supplierProducts == null) {
            return;
        }
        this.supplierProducts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortGoodStandard(WorkEffortGoodStandard workEffortGoodStandard) {
        if (this.workEffortGoodStandards == null) {
            this.workEffortGoodStandards = new ArrayList<WorkEffortGoodStandard>();
        }
        this.workEffortGoodStandards.add(workEffortGoodStandard);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortGoodStandard(WorkEffortGoodStandard workEffortGoodStandard) {
        if (this.workEffortGoodStandards == null) {
            return;
        }
        this.workEffortGoodStandards.remove(workEffortGoodStandard);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortGoodStandard() {
        if (this.workEffortGoodStandards == null) {
            return;
        }
        this.workEffortGoodStandards.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductId((String) mapValue.get("productId"));
        setProductTypeId((String) mapValue.get("productTypeId"));
        setPrimaryProductCategoryId((String) mapValue.get("primaryProductCategoryId"));
        setManufacturerPartyId((String) mapValue.get("manufacturerPartyId"));
        setFacilityId((String) mapValue.get("facilityId"));
        setIntroductionDate((Timestamp) mapValue.get("introductionDate"));
        setSupportDiscontinuationDate((Timestamp) mapValue.get("supportDiscontinuationDate"));
        setSalesDiscontinuationDate((Timestamp) mapValue.get("salesDiscontinuationDate"));
        setSalesDiscWhenNotAvail((String) mapValue.get("salesDiscWhenNotAvail"));
        setInternalName((String) mapValue.get("internalName"));
        setBrandName((String) mapValue.get("brandName"));
        setComments((String) mapValue.get("comments"));
        setProductName((String) mapValue.get("productName"));
        setDescription((String) mapValue.get("description"));
        setLongDescription((String) mapValue.get("longDescription"));
        setPriceDetailText((String) mapValue.get("priceDetailText"));
        setSmallImageUrl((String) mapValue.get("smallImageUrl"));
        setMediumImageUrl((String) mapValue.get("mediumImageUrl"));
        setLargeImageUrl((String) mapValue.get("largeImageUrl"));
        setDetailImageUrl((String) mapValue.get("detailImageUrl"));
        setDetailScreen((String) mapValue.get("detailScreen"));
        setInventoryMessage((String) mapValue.get("inventoryMessage"));
        setRequireInventory((String) mapValue.get("requireInventory"));
        setQuantityUomId((String) mapValue.get("quantityUomId"));
        setQuantityIncluded(convertToBigDecimal(mapValue.get("quantityIncluded")));
        setPiecesIncluded((Long) mapValue.get("piecesIncluded"));
        setRequireAmount((String) mapValue.get("requireAmount"));
        setFixedAmount(convertToBigDecimal(mapValue.get("fixedAmount")));
        setAmountUomTypeId((String) mapValue.get("amountUomTypeId"));
        setWeightUomId((String) mapValue.get("weightUomId"));
        setWeight(convertToBigDecimal(mapValue.get("weight")));
        setHeightUomId((String) mapValue.get("heightUomId"));
        setProductHeight(convertToBigDecimal(mapValue.get("productHeight")));
        setShippingHeight(convertToBigDecimal(mapValue.get("shippingHeight")));
        setWidthUomId((String) mapValue.get("widthUomId"));
        setProductWidth(convertToBigDecimal(mapValue.get("productWidth")));
        setShippingWidth(convertToBigDecimal(mapValue.get("shippingWidth")));
        setDepthUomId((String) mapValue.get("depthUomId"));
        setProductDepth(convertToBigDecimal(mapValue.get("productDepth")));
        setShippingDepth(convertToBigDecimal(mapValue.get("shippingDepth")));
        setProductRating(convertToBigDecimal(mapValue.get("productRating")));
        setRatingTypeEnum((String) mapValue.get("ratingTypeEnum"));
        setReturnable((String) mapValue.get("returnable"));
        setTaxable((String) mapValue.get("taxable"));
        setTaxCategory((String) mapValue.get("taxCategory"));
        setTaxVatCode((String) mapValue.get("taxVatCode"));
        setTaxDutyCode((String) mapValue.get("taxDutyCode"));
        setChargeShipping((String) mapValue.get("chargeShipping"));
        setAutoCreateKeywords((String) mapValue.get("autoCreateKeywords"));
        setIncludeInPromotions((String) mapValue.get("includeInPromotions"));
        setIsVirtual((String) mapValue.get("isVirtual"));
        setIsVariant((String) mapValue.get("isVariant"));
        setOriginGeoId((String) mapValue.get("originGeoId"));
        setRequirementMethodEnumId((String) mapValue.get("requirementMethodEnumId"));
        setBillOfMaterialLevel((Long) mapValue.get("billOfMaterialLevel"));
        setReservMaxPersons(convertToBigDecimal(mapValue.get("reservMaxPersons")));
        setReserv2ndPPPerc(convertToBigDecimal(mapValue.get("reserv2ndPPPerc")));
        setReservNthPPPerc(convertToBigDecimal(mapValue.get("reservNthPPPerc")));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setInShippingBox((String) mapValue.get("inShippingBox"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productId", getProductId());
        mapValue.put("productTypeId", getProductTypeId());
        mapValue.put("primaryProductCategoryId", getPrimaryProductCategoryId());
        mapValue.put("manufacturerPartyId", getManufacturerPartyId());
        mapValue.put("facilityId", getFacilityId());
        mapValue.put("introductionDate", getIntroductionDate());
        mapValue.put("supportDiscontinuationDate", getSupportDiscontinuationDate());
        mapValue.put("salesDiscontinuationDate", getSalesDiscontinuationDate());
        mapValue.put("salesDiscWhenNotAvail", getSalesDiscWhenNotAvail());
        mapValue.put("internalName", getInternalName());
        mapValue.put("brandName", getBrandName());
        mapValue.put("comments", getComments());
        mapValue.put("productName", getProductName());
        mapValue.put("description", getDescription());
        mapValue.put("longDescription", getLongDescription());
        mapValue.put("priceDetailText", getPriceDetailText());
        mapValue.put("smallImageUrl", getSmallImageUrl());
        mapValue.put("mediumImageUrl", getMediumImageUrl());
        mapValue.put("largeImageUrl", getLargeImageUrl());
        mapValue.put("detailImageUrl", getDetailImageUrl());
        mapValue.put("detailScreen", getDetailScreen());
        mapValue.put("inventoryMessage", getInventoryMessage());
        mapValue.put("requireInventory", getRequireInventory());
        mapValue.put("quantityUomId", getQuantityUomId());
        mapValue.put("quantityIncluded", getQuantityIncluded());
        mapValue.put("piecesIncluded", getPiecesIncluded());
        mapValue.put("requireAmount", getRequireAmount());
        mapValue.put("fixedAmount", getFixedAmount());
        mapValue.put("amountUomTypeId", getAmountUomTypeId());
        mapValue.put("weightUomId", getWeightUomId());
        mapValue.put("weight", getWeight());
        mapValue.put("heightUomId", getHeightUomId());
        mapValue.put("productHeight", getProductHeight());
        mapValue.put("shippingHeight", getShippingHeight());
        mapValue.put("widthUomId", getWidthUomId());
        mapValue.put("productWidth", getProductWidth());
        mapValue.put("shippingWidth", getShippingWidth());
        mapValue.put("depthUomId", getDepthUomId());
        mapValue.put("productDepth", getProductDepth());
        mapValue.put("shippingDepth", getShippingDepth());
        mapValue.put("productRating", getProductRating());
        mapValue.put("ratingTypeEnum", getRatingTypeEnum());
        mapValue.put("returnable", getReturnable());
        mapValue.put("taxable", getTaxable());
        mapValue.put("taxCategory", getTaxCategory());
        mapValue.put("taxVatCode", getTaxVatCode());
        mapValue.put("taxDutyCode", getTaxDutyCode());
        mapValue.put("chargeShipping", getChargeShipping());
        mapValue.put("autoCreateKeywords", getAutoCreateKeywords());
        mapValue.put("includeInPromotions", getIncludeInPromotions());
        mapValue.put("isVirtual", getIsVirtual());
        mapValue.put("isVariant", getIsVariant());
        mapValue.put("originGeoId", getOriginGeoId());
        mapValue.put("requirementMethodEnumId", getRequirementMethodEnumId());
        mapValue.put("billOfMaterialLevel", getBillOfMaterialLevel());
        mapValue.put("reservMaxPersons", getReservMaxPersons());
        mapValue.put("reserv2ndPPPerc", getReserv2ndPPPerc());
        mapValue.put("reservNthPPPerc", getReservNthPPPerc());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("inShippingBox", getInShippingBox());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
