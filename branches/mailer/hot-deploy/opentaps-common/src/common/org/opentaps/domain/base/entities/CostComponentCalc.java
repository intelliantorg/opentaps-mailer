package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity CostComponentCalc.
 */
@javax.persistence.Entity
@Table(name="COST_COMPONENT_CALC")
public class CostComponentCalc extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("costComponentCalcId", "COST_COMPONENT_CALC_ID");
        fields.put("description", "DESCRIPTION");
        fields.put("costGlAccountTypeId", "COST_GL_ACCOUNT_TYPE_ID");
        fields.put("offsettingGlAccountTypeId", "OFFSETTING_GL_ACCOUNT_TYPE_ID");
        fields.put("fixedCost", "FIXED_COST");
        fields.put("variableCost", "VARIABLE_COST");
        fields.put("perMilliSecond", "PER_MILLI_SECOND");
        fields.put("currencyUomId", "CURRENCY_UOM_ID");
        fields.put("costCustomMethodId", "COST_CUSTOM_METHOD_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("CostComponentCalc", fields);
}
  public static enum Fields implements EntityFieldInterface<CostComponentCalc> {
    costComponentCalcId("costComponentCalcId"),
    description("description"),
    costGlAccountTypeId("costGlAccountTypeId"),
    offsettingGlAccountTypeId("offsettingGlAccountTypeId"),
    fixedCost("fixedCost"),
    variableCost("variableCost"),
    perMilliSecond("perMilliSecond"),
    currencyUomId("currencyUomId"),
    costCustomMethodId("costCustomMethodId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="CostComponentCalc_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="CostComponentCalc_GEN")   
    @Id
    
    @Column(name="COST_COMPONENT_CALC_ID")
    private String costComponentCalcId;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="COST_GL_ACCOUNT_TYPE_ID")
    private String costGlAccountTypeId;
    
    @Column(name="OFFSETTING_GL_ACCOUNT_TYPE_ID")
    private String offsettingGlAccountTypeId;
    
    @Column(name="FIXED_COST")
    private BigDecimal fixedCost;
    
    @Column(name="VARIABLE_COST")
    private BigDecimal variableCost;
    
    @Column(name="PER_MILLI_SECOND")
    private Long perMilliSecond;
    
    @Column(name="CURRENCY_UOM_ID")
    private String currencyUomId;
    
    @Column(name="COST_CUSTOM_METHOD_ID")
    private String costCustomMethodId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="COST_GL_ACCOUNT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private GlAccountType costGlAccountType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="OFFSETTING_GL_ACCOUNT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private GlAccountType offsettingGlAccountType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CURRENCY_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom uom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="COST_CUSTOM_METHOD_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private CustomMethod customMethod = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="COST_COMPONENT_CALC_ID")
    private List<CostComponent> costComponents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="COST_COMPONENT_CALC_ID")
    private List<WorkEffortCostCalc> workEffortCostCalcs = null;

  /**
   * Default constructor.
   */
  public CostComponentCalc() {
      super();
      this.baseEntityName = "CostComponentCalc";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("costComponentCalcId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public CostComponentCalc(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param costComponentCalcId the costComponentCalcId to set
     */
    public void setCostComponentCalcId(String costComponentCalcId) {
        this.costComponentCalcId = costComponentCalcId;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param costGlAccountTypeId the costGlAccountTypeId to set
     */
    public void setCostGlAccountTypeId(String costGlAccountTypeId) {
        this.costGlAccountTypeId = costGlAccountTypeId;
    }
    /**
     * Auto generated value setter.
     * @param offsettingGlAccountTypeId the offsettingGlAccountTypeId to set
     */
    public void setOffsettingGlAccountTypeId(String offsettingGlAccountTypeId) {
        this.offsettingGlAccountTypeId = offsettingGlAccountTypeId;
    }
    /**
     * Auto generated value setter.
     * @param fixedCost the fixedCost to set
     */
    public void setFixedCost(BigDecimal fixedCost) {
        this.fixedCost = fixedCost;
    }
    /**
     * Auto generated value setter.
     * @param variableCost the variableCost to set
     */
    public void setVariableCost(BigDecimal variableCost) {
        this.variableCost = variableCost;
    }
    /**
     * Auto generated value setter.
     * @param perMilliSecond the perMilliSecond to set
     */
    public void setPerMilliSecond(Long perMilliSecond) {
        this.perMilliSecond = perMilliSecond;
    }
    /**
     * Auto generated value setter.
     * @param currencyUomId the currencyUomId to set
     */
    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param costCustomMethodId the costCustomMethodId to set
     */
    public void setCostCustomMethodId(String costCustomMethodId) {
        this.costCustomMethodId = costCustomMethodId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCostComponentCalcId() {
        return this.costComponentCalcId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCostGlAccountTypeId() {
        return this.costGlAccountTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOffsettingGlAccountTypeId() {
        return this.offsettingGlAccountTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getFixedCost() {
        return this.fixedCost;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getVariableCost() {
        return this.variableCost;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getPerMilliSecond() {
        return this.perMilliSecond;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUomId() {
        return this.currencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCostCustomMethodId() {
        return this.costCustomMethodId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>GlAccountType</code> by the relation named <code>CostGlAccountType</code>.
     * @return the <code>GlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public GlAccountType getCostGlAccountType() throws RepositoryException {
        if (this.costGlAccountType == null) {
            this.costGlAccountType = getRelatedOne(GlAccountType.class, "CostGlAccountType");
        }
        return this.costGlAccountType;
    }
    /**
     * Auto generated method that gets the related <code>GlAccountType</code> by the relation named <code>OffsettingGlAccountType</code>.
     * @return the <code>GlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public GlAccountType getOffsettingGlAccountType() throws RepositoryException {
        if (this.offsettingGlAccountType == null) {
            this.offsettingGlAccountType = getRelatedOne(GlAccountType.class, "OffsettingGlAccountType");
        }
        return this.offsettingGlAccountType;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>Uom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getUom() throws RepositoryException {
        if (this.uom == null) {
            this.uom = getRelatedOne(Uom.class, "Uom");
        }
        return this.uom;
    }
    /**
     * Auto generated method that gets the related <code>CustomMethod</code> by the relation named <code>CustomMethod</code>.
     * @return the <code>CustomMethod</code>
     * @throws RepositoryException if an error occurs
     */
    public CustomMethod getCustomMethod() throws RepositoryException {
        if (this.customMethod == null) {
            this.customMethod = getRelatedOne(CustomMethod.class, "CustomMethod");
        }
        return this.customMethod;
    }
    /**
     * Auto generated method that gets the related <code>CostComponent</code> by the relation named <code>CostComponent</code>.
     * @return the list of <code>CostComponent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponent> getCostComponents() throws RepositoryException {
        if (this.costComponents == null) {
            this.costComponents = getRelated(CostComponent.class, "CostComponent");
        }
        return this.costComponents;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortCostCalc</code> by the relation named <code>WorkEffortCostCalc</code>.
     * @return the list of <code>WorkEffortCostCalc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortCostCalc> getWorkEffortCostCalcs() throws RepositoryException {
        if (this.workEffortCostCalcs == null) {
            this.workEffortCostCalcs = getRelated(WorkEffortCostCalc.class, "WorkEffortCostCalc");
        }
        return this.workEffortCostCalcs;
    }

    /**
     * Auto generated value setter.
     * @param costGlAccountType the costGlAccountType to set
    */
    public void setCostGlAccountType(GlAccountType costGlAccountType) {
        this.costGlAccountType = costGlAccountType;
    }
    /**
     * Auto generated value setter.
     * @param offsettingGlAccountType the offsettingGlAccountType to set
    */
    public void setOffsettingGlAccountType(GlAccountType offsettingGlAccountType) {
        this.offsettingGlAccountType = offsettingGlAccountType;
    }
    /**
     * Auto generated value setter.
     * @param uom the uom to set
    */
    public void setUom(Uom uom) {
        this.uom = uom;
    }
    /**
     * Auto generated value setter.
     * @param customMethod the customMethod to set
    */
    public void setCustomMethod(CustomMethod customMethod) {
        this.customMethod = customMethod;
    }
    /**
     * Auto generated value setter.
     * @param costComponents the costComponents to set
    */
    public void setCostComponents(List<CostComponent> costComponents) {
        this.costComponents = costComponents;
    }
    /**
     * Auto generated value setter.
     * @param workEffortCostCalcs the workEffortCostCalcs to set
    */
    public void setWorkEffortCostCalcs(List<WorkEffortCostCalc> workEffortCostCalcs) {
        this.workEffortCostCalcs = workEffortCostCalcs;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setCostComponentCalcId((String) mapValue.get("costComponentCalcId"));
        setDescription((String) mapValue.get("description"));
        setCostGlAccountTypeId((String) mapValue.get("costGlAccountTypeId"));
        setOffsettingGlAccountTypeId((String) mapValue.get("offsettingGlAccountTypeId"));
        setFixedCost(convertToBigDecimal(mapValue.get("fixedCost")));
        setVariableCost(convertToBigDecimal(mapValue.get("variableCost")));
        setPerMilliSecond((Long) mapValue.get("perMilliSecond"));
        setCurrencyUomId((String) mapValue.get("currencyUomId"));
        setCostCustomMethodId((String) mapValue.get("costCustomMethodId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("costComponentCalcId", getCostComponentCalcId());
        mapValue.put("description", getDescription());
        mapValue.put("costGlAccountTypeId", getCostGlAccountTypeId());
        mapValue.put("offsettingGlAccountTypeId", getOffsettingGlAccountTypeId());
        mapValue.put("fixedCost", getFixedCost());
        mapValue.put("variableCost", getVariableCost());
        mapValue.put("perMilliSecond", getPerMilliSecond());
        mapValue.put("currencyUomId", getCurrencyUomId());
        mapValue.put("costCustomMethodId", getCostCustomMethodId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
