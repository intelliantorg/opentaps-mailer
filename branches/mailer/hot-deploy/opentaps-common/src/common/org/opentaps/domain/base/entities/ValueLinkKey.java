package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ValueLinkKey.
 */
@javax.persistence.Entity
@Table(name="VALUE_LINK_KEY")
public class ValueLinkKey extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("merchantId", "MERCHANT_ID");
        fields.put("publicKey", "PUBLIC_KEY");
        fields.put("privateKey", "PRIVATE_KEY");
        fields.put("exchangeKey", "EXCHANGE_KEY");
        fields.put("workingKey", "WORKING_KEY");
        fields.put("workingKeyIndex", "WORKING_KEY_INDEX");
        fields.put("lastWorkingKey", "LAST_WORKING_KEY");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByTerminal", "LAST_MODIFIED_BY_TERMINAL");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ValueLinkKey", fields);
}
  public static enum Fields implements EntityFieldInterface<ValueLinkKey> {
    merchantId("merchantId"),
    publicKey("publicKey"),
    privateKey("privateKey"),
    exchangeKey("exchangeKey"),
    workingKey("workingKey"),
    workingKeyIndex("workingKeyIndex"),
    lastWorkingKey("lastWorkingKey"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByTerminal("lastModifiedByTerminal"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="ValueLinkKey_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="ValueLinkKey_GEN")   
    @Id
    
    @Column(name="MERCHANT_ID")
    private String merchantId;
    
    @Column(name="PUBLIC_KEY")
    private String publicKey;
    
    @Column(name="PRIVATE_KEY")
    private String privateKey;
    
    @Column(name="EXCHANGE_KEY")
    private String exchangeKey;
    
    @Column(name="WORKING_KEY")
    private String workingKey;
    
    @Column(name="WORKING_KEY_INDEX")
    private Long workingKeyIndex;
    
    @Column(name="LAST_WORKING_KEY")
    private String lastWorkingKey;
    
    @Column(name="LAST_MODIFIED_DATE")
    private Timestamp lastModifiedDate;
    
    @Column(name="LAST_MODIFIED_BY_TERMINAL")
    private String lastModifiedByTerminal;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;

  /**
   * Default constructor.
   */
  public ValueLinkKey() {
      super();
      this.baseEntityName = "ValueLinkKey";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("merchantId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ValueLinkKey(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param merchantId the merchantId to set
     */
    public void setMerchantId(String merchantId) {
        this.merchantId = merchantId;
    }
    /**
     * Auto generated value setter.
     * @param publicKey the publicKey to set
     */
    public void setPublicKey(String publicKey) {
        this.publicKey = publicKey;
    }
    /**
     * Auto generated value setter.
     * @param privateKey the privateKey to set
     */
    public void setPrivateKey(String privateKey) {
        this.privateKey = privateKey;
    }
    /**
     * Auto generated value setter.
     * @param exchangeKey the exchangeKey to set
     */
    public void setExchangeKey(String exchangeKey) {
        this.exchangeKey = exchangeKey;
    }
    /**
     * Auto generated value setter.
     * @param workingKey the workingKey to set
     */
    public void setWorkingKey(String workingKey) {
        this.workingKey = workingKey;
    }
    /**
     * Auto generated value setter.
     * @param workingKeyIndex the workingKeyIndex to set
     */
    public void setWorkingKeyIndex(Long workingKeyIndex) {
        this.workingKeyIndex = workingKeyIndex;
    }
    /**
     * Auto generated value setter.
     * @param lastWorkingKey the lastWorkingKey to set
     */
    public void setLastWorkingKey(String lastWorkingKey) {
        this.lastWorkingKey = lastWorkingKey;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByTerminal the lastModifiedByTerminal to set
     */
    public void setLastModifiedByTerminal(String lastModifiedByTerminal) {
        this.lastModifiedByTerminal = lastModifiedByTerminal;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMerchantId() {
        return this.merchantId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPublicKey() {
        return this.publicKey;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPrivateKey() {
        return this.privateKey;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExchangeKey() {
        return this.exchangeKey;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkingKey() {
        return this.workingKey;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getWorkingKeyIndex() {
        return this.workingKeyIndex;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastWorkingKey() {
        return this.lastWorkingKey;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByTerminal() {
        return this.lastModifiedByTerminal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setMerchantId((String) mapValue.get("merchantId"));
        setPublicKey((String) mapValue.get("publicKey"));
        setPrivateKey((String) mapValue.get("privateKey"));
        setExchangeKey((String) mapValue.get("exchangeKey"));
        setWorkingKey((String) mapValue.get("workingKey"));
        setWorkingKeyIndex((Long) mapValue.get("workingKeyIndex"));
        setLastWorkingKey((String) mapValue.get("lastWorkingKey"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByTerminal((String) mapValue.get("lastModifiedByTerminal"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("merchantId", getMerchantId());
        mapValue.put("publicKey", getPublicKey());
        mapValue.put("privateKey", getPrivateKey());
        mapValue.put("exchangeKey", getExchangeKey());
        mapValue.put("workingKey", getWorkingKey());
        mapValue.put("workingKeyIndex", getWorkingKeyIndex());
        mapValue.put("lastWorkingKey", getLastWorkingKey());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByTerminal", getLastModifiedByTerminal());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
