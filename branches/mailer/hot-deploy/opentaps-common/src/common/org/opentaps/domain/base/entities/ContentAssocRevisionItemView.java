package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ContentAssocRevisionItemView.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectContentAssocRevisionItemViews", query="SELECT C.INSTANCE_OF_CONTENT_ID AS \"instanceOfContentId\",C.DATA_RESOURCE_ID AS \"dataResourceId\",CA.CONTENT_ID AS \"contentId\",CA.CONTENT_ID_TO AS \"contentIdTo\",CA.CONTENT_ASSOC_TYPE_ID AS \"contentAssocTypeId\",CA.THRU_DATE AS \"thruDate\",CA.FROM_DATE AS \"fromDate\",CA.SEQUENCE_NUM AS \"sequenceNum\",CRI.CONTENT_ID AS \"contentId\",CRI.ITEM_CONTENT_ID AS \"itemContentId\",CRI.CONTENT_REVISION_SEQ_ID AS \"contentRevisionSeqId\",CRI.CONTENT_REVISION_SEQ_ID AS \"contentRevisionSeqId\" FROM CONTENT C INNER JOIN CONTENT_ASSOC CA ON C.CONTENT_ID = CA.CONTENT_ID INNER JOIN CONTENT_ASSOC CA ON CA.CONTENT_ID = CRI.ITEM_CONTENT_ID", resultSetMapping="ContentAssocRevisionItemViewMapping")
@SqlResultSetMapping(name="ContentAssocRevisionItemViewMapping", entities={
@EntityResult(entityClass=ContentAssocRevisionItemView.class, fields = {
@FieldResult(name="instanceOfContentId", column="instanceOfContentId")
,@FieldResult(name="dataResourceId", column="dataResourceId")
,@FieldResult(name="contentId", column="contentId")
,@FieldResult(name="contentIdTo", column="contentIdTo")
,@FieldResult(name="contentAssocTypeId", column="contentAssocTypeId")
,@FieldResult(name="thruDate", column="thruDate")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="sequenceNum", column="sequenceNum")
,@FieldResult(name="rootRevisionContentId", column="rootRevisionContentId")
,@FieldResult(name="itemContentId", column="itemContentId")
,@FieldResult(name="contentRevisionSeqId", column="contentRevisionSeqId")
,@FieldResult(name="maxRevisionSeqId", column="maxRevisionSeqId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class ContentAssocRevisionItemView extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("instanceOfContentId", "C.INSTANCE_OF_CONTENT_ID");
        fields.put("dataResourceId", "C.DATA_RESOURCE_ID");
        fields.put("contentId", "CA.CONTENT_ID");
        fields.put("contentIdTo", "CA.CONTENT_ID_TO");
        fields.put("contentAssocTypeId", "CA.CONTENT_ASSOC_TYPE_ID");
        fields.put("thruDate", "CA.THRU_DATE");
        fields.put("fromDate", "CA.FROM_DATE");
        fields.put("sequenceNum", "CA.SEQUENCE_NUM");
        fields.put("rootRevisionContentId", "CRI.CONTENT_ID");
        fields.put("itemContentId", "CRI.ITEM_CONTENT_ID");
        fields.put("contentRevisionSeqId", "CRI.CONTENT_REVISION_SEQ_ID");
        fields.put("maxRevisionSeqId", "CRI.CONTENT_REVISION_SEQ_ID");
fieldMapColumns.put("ContentAssocRevisionItemView", fields);
}
  public static enum Fields implements EntityFieldInterface<ContentAssocRevisionItemView> {
    instanceOfContentId("instanceOfContentId"),
    dataResourceId("dataResourceId"),
    contentId("contentId"),
    contentIdTo("contentIdTo"),
    contentAssocTypeId("contentAssocTypeId"),
    thruDate("thruDate"),
    fromDate("fromDate"),
    sequenceNum("sequenceNum"),
    rootRevisionContentId("rootRevisionContentId"),
    itemContentId("itemContentId"),
    contentRevisionSeqId("contentRevisionSeqId"),
    maxRevisionSeqId("maxRevisionSeqId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    
    
    private String instanceOfContentId;
    
    
    private String dataResourceId;
    @Id
    
    private String contentId;
    
    
    private String contentIdTo;
    
    
    private String contentAssocTypeId;
    
    
    private Timestamp thruDate;
    
    
    private Timestamp fromDate;
    
    
    private Long sequenceNum;
    
    
    private String rootRevisionContentId;
    
    
    private String itemContentId;
    
    
    private String contentRevisionSeqId;
    
    
    private String maxRevisionSeqId;

  /**
   * Default constructor.
   */
  public ContentAssocRevisionItemView() {
      super();
      this.baseEntityName = "ContentAssocRevisionItemView";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("contentId");this.primaryKeyNames.add("contentIdTo");this.primaryKeyNames.add("contentAssocTypeId");this.primaryKeyNames.add("fromDate");this.primaryKeyNames.add("rootRevisionContentId");this.primaryKeyNames.add("itemContentId");this.primaryKeyNames.add("contentRevisionSeqId");this.primaryKeyNames.add("maxRevisionSeqId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ContentAssocRevisionItemView(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param instanceOfContentId the instanceOfContentId to set
     */
    private void setInstanceOfContentId(String instanceOfContentId) {
        this.instanceOfContentId = instanceOfContentId;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceId the dataResourceId to set
     */
    private void setDataResourceId(String dataResourceId) {
        this.dataResourceId = dataResourceId;
    }
    /**
     * Auto generated value setter.
     * @param contentId the contentId to set
     */
    private void setContentId(String contentId) {
        this.contentId = contentId;
    }
    /**
     * Auto generated value setter.
     * @param contentIdTo the contentIdTo to set
     */
    private void setContentIdTo(String contentIdTo) {
        this.contentIdTo = contentIdTo;
    }
    /**
     * Auto generated value setter.
     * @param contentAssocTypeId the contentAssocTypeId to set
     */
    private void setContentAssocTypeId(String contentAssocTypeId) {
        this.contentAssocTypeId = contentAssocTypeId;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    private void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    private void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param sequenceNum the sequenceNum to set
     */
    private void setSequenceNum(Long sequenceNum) {
        this.sequenceNum = sequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param rootRevisionContentId the rootRevisionContentId to set
     */
    private void setRootRevisionContentId(String rootRevisionContentId) {
        this.rootRevisionContentId = rootRevisionContentId;
    }
    /**
     * Auto generated value setter.
     * @param itemContentId the itemContentId to set
     */
    private void setItemContentId(String itemContentId) {
        this.itemContentId = itemContentId;
    }
    /**
     * Auto generated value setter.
     * @param contentRevisionSeqId the contentRevisionSeqId to set
     */
    private void setContentRevisionSeqId(String contentRevisionSeqId) {
        this.contentRevisionSeqId = contentRevisionSeqId;
    }
    /**
     * Auto generated value setter.
     * @param maxRevisionSeqId the maxRevisionSeqId to set
     */
    private void setMaxRevisionSeqId(String maxRevisionSeqId) {
        this.maxRevisionSeqId = maxRevisionSeqId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInstanceOfContentId() {
        return this.instanceOfContentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataResourceId() {
        return this.dataResourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentId() {
        return this.contentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentIdTo() {
        return this.contentIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentAssocTypeId() {
        return this.contentAssocTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getSequenceNum() {
        return this.sequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRootRevisionContentId() {
        return this.rootRevisionContentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getItemContentId() {
        return this.itemContentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentRevisionSeqId() {
        return this.contentRevisionSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMaxRevisionSeqId() {
        return this.maxRevisionSeqId;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setInstanceOfContentId((String) mapValue.get("instanceOfContentId"));
        setDataResourceId((String) mapValue.get("dataResourceId"));
        setContentId((String) mapValue.get("contentId"));
        setContentIdTo((String) mapValue.get("contentIdTo"));
        setContentAssocTypeId((String) mapValue.get("contentAssocTypeId"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setSequenceNum((Long) mapValue.get("sequenceNum"));
        setRootRevisionContentId((String) mapValue.get("rootRevisionContentId"));
        setItemContentId((String) mapValue.get("itemContentId"));
        setContentRevisionSeqId((String) mapValue.get("contentRevisionSeqId"));
        setMaxRevisionSeqId((String) mapValue.get("maxRevisionSeqId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("instanceOfContentId", getInstanceOfContentId());
        mapValue.put("dataResourceId", getDataResourceId());
        mapValue.put("contentId", getContentId());
        mapValue.put("contentIdTo", getContentIdTo());
        mapValue.put("contentAssocTypeId", getContentAssocTypeId());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("sequenceNum", getSequenceNum());
        mapValue.put("rootRevisionContentId", getRootRevisionContentId());
        mapValue.put("itemContentId", getItemContentId());
        mapValue.put("contentRevisionSeqId", getContentRevisionSeqId());
        mapValue.put("maxRevisionSeqId", getMaxRevisionSeqId());
        return mapValue;
    }


}
