package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity GlAccountType.
 */
@javax.persistence.Entity
@Table(name="GL_ACCOUNT_TYPE")
public class GlAccountType extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("glAccountTypeId", "GL_ACCOUNT_TYPE_ID");
        fields.put("parentTypeId", "PARENT_TYPE_ID");
        fields.put("hasTable", "HAS_TABLE");
        fields.put("description", "DESCRIPTION");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("GlAccountType", fields);
}
  public static enum Fields implements EntityFieldInterface<GlAccountType> {
    glAccountTypeId("glAccountTypeId"),
    parentTypeId("parentTypeId"),
    hasTable("hasTable"),
    description("description"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="GlAccountType_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="GlAccountType_GEN")   
    @Id
    
    @Column(name="GL_ACCOUNT_TYPE_ID")
    private String glAccountTypeId;
    
    @Column(name="PARENT_TYPE_ID")
    private String parentTypeId;
    
    @Column(name="HAS_TABLE")
    private String hasTable;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private GlAccountType parentGlAccountType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="COST_GL_ACCOUNT_TYPE_ID")
    private List<CostComponentCalc> costCostComponentCalcs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="OFFSETTING_GL_ACCOUNT_TYPE_ID")
    private List<CostComponentCalc> offsettingCostComponentCalcs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="GL_ACCOUNT_TYPE_ID")
    private List<GlAccount> glAccounts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_TYPE_ID")
    private List<GlAccountType> childGlAccountTypes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="glAccountType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GL_ACCOUNT_TYPE_ID")
    private List<GlAccountTypeDefault> glAccountTypeDefaults = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="DEBIT_GL_ACCOUNT_TYPE_ID")
    private List<InventoryStatusGlAccountType> debitInventoryStatusGlAccountTypes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CREDIT_GL_ACCOUNT_TYPE_ID")
    private List<InventoryStatusGlAccountType> creditInventoryStatusGlAccountTypes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_GL_ACCOUNT_TYPE_ID")
    private List<InvoiceGlAccountType> invoiceInvoiceGlAccountTypes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="GL_ACCOUNT_TYPE_ID")
    private List<PaymentGlAccountTypeMap> paymentGlAccountTypeMaps = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="glAccountType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GL_ACCOUNT_TYPE_ID")
    private List<ProductGlAccount> productGlAccounts = null;

  /**
   * Default constructor.
   */
  public GlAccountType() {
      super();
      this.baseEntityName = "GlAccountType";
      this.isView = false;
      this.resourceName = "AccountingEntityLabels";
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("glAccountTypeId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public GlAccountType(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param glAccountTypeId the glAccountTypeId to set
     */
    public void setGlAccountTypeId(String glAccountTypeId) {
        this.glAccountTypeId = glAccountTypeId;
    }
    /**
     * Auto generated value setter.
     * @param parentTypeId the parentTypeId to set
     */
    public void setParentTypeId(String parentTypeId) {
        this.parentTypeId = parentTypeId;
    }
    /**
     * Auto generated value setter.
     * @param hasTable the hasTable to set
     */
    public void setHasTable(String hasTable) {
        this.hasTable = hasTable;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGlAccountTypeId() {
        return this.glAccountTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParentTypeId() {
        return this.parentTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getHasTable() {
        return this.hasTable;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>GlAccountType</code> by the relation named <code>ParentGlAccountType</code>.
     * @return the <code>GlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public GlAccountType getParentGlAccountType() throws RepositoryException {
        if (this.parentGlAccountType == null) {
            this.parentGlAccountType = getRelatedOne(GlAccountType.class, "ParentGlAccountType");
        }
        return this.parentGlAccountType;
    }
    /**
     * Auto generated method that gets the related <code>CostComponentCalc</code> by the relation named <code>CostCostComponentCalc</code>.
     * @return the list of <code>CostComponentCalc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponentCalc> getCostCostComponentCalcs() throws RepositoryException {
        if (this.costCostComponentCalcs == null) {
            this.costCostComponentCalcs = getRelated(CostComponentCalc.class, "CostCostComponentCalc");
        }
        return this.costCostComponentCalcs;
    }
    /**
     * Auto generated method that gets the related <code>CostComponentCalc</code> by the relation named <code>OffsettingCostComponentCalc</code>.
     * @return the list of <code>CostComponentCalc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponentCalc> getOffsettingCostComponentCalcs() throws RepositoryException {
        if (this.offsettingCostComponentCalcs == null) {
            this.offsettingCostComponentCalcs = getRelated(CostComponentCalc.class, "OffsettingCostComponentCalc");
        }
        return this.offsettingCostComponentCalcs;
    }
    /**
     * Auto generated method that gets the related <code>GlAccount</code> by the relation named <code>GlAccount</code>.
     * @return the list of <code>GlAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GlAccount> getGlAccounts() throws RepositoryException {
        if (this.glAccounts == null) {
            this.glAccounts = getRelated(GlAccount.class, "GlAccount");
        }
        return this.glAccounts;
    }
    /**
     * Auto generated method that gets the related <code>GlAccountType</code> by the relation named <code>ChildGlAccountType</code>.
     * @return the list of <code>GlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GlAccountType> getChildGlAccountTypes() throws RepositoryException {
        if (this.childGlAccountTypes == null) {
            this.childGlAccountTypes = getRelated(GlAccountType.class, "ChildGlAccountType");
        }
        return this.childGlAccountTypes;
    }
    /**
     * Auto generated method that gets the related <code>GlAccountTypeDefault</code> by the relation named <code>GlAccountTypeDefault</code>.
     * @return the list of <code>GlAccountTypeDefault</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GlAccountTypeDefault> getGlAccountTypeDefaults() throws RepositoryException {
        if (this.glAccountTypeDefaults == null) {
            this.glAccountTypeDefaults = getRelated(GlAccountTypeDefault.class, "GlAccountTypeDefault");
        }
        return this.glAccountTypeDefaults;
    }
    /**
     * Auto generated method that gets the related <code>InventoryStatusGlAccountType</code> by the relation named <code>DebitInventoryStatusGlAccountType</code>.
     * @return the list of <code>InventoryStatusGlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryStatusGlAccountType> getDebitInventoryStatusGlAccountTypes() throws RepositoryException {
        if (this.debitInventoryStatusGlAccountTypes == null) {
            this.debitInventoryStatusGlAccountTypes = getRelated(InventoryStatusGlAccountType.class, "DebitInventoryStatusGlAccountType");
        }
        return this.debitInventoryStatusGlAccountTypes;
    }
    /**
     * Auto generated method that gets the related <code>InventoryStatusGlAccountType</code> by the relation named <code>CreditInventoryStatusGlAccountType</code>.
     * @return the list of <code>InventoryStatusGlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryStatusGlAccountType> getCreditInventoryStatusGlAccountTypes() throws RepositoryException {
        if (this.creditInventoryStatusGlAccountTypes == null) {
            this.creditInventoryStatusGlAccountTypes = getRelated(InventoryStatusGlAccountType.class, "CreditInventoryStatusGlAccountType");
        }
        return this.creditInventoryStatusGlAccountTypes;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceGlAccountType</code> by the relation named <code>InvoiceInvoiceGlAccountType</code>.
     * @return the list of <code>InvoiceGlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceGlAccountType> getInvoiceInvoiceGlAccountTypes() throws RepositoryException {
        if (this.invoiceInvoiceGlAccountTypes == null) {
            this.invoiceInvoiceGlAccountTypes = getRelated(InvoiceGlAccountType.class, "InvoiceInvoiceGlAccountType");
        }
        return this.invoiceInvoiceGlAccountTypes;
    }
    /**
     * Auto generated method that gets the related <code>PaymentGlAccountTypeMap</code> by the relation named <code>PaymentGlAccountTypeMap</code>.
     * @return the list of <code>PaymentGlAccountTypeMap</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentGlAccountTypeMap> getPaymentGlAccountTypeMaps() throws RepositoryException {
        if (this.paymentGlAccountTypeMaps == null) {
            this.paymentGlAccountTypeMaps = getRelated(PaymentGlAccountTypeMap.class, "PaymentGlAccountTypeMap");
        }
        return this.paymentGlAccountTypeMaps;
    }
    /**
     * Auto generated method that gets the related <code>ProductGlAccount</code> by the relation named <code>ProductGlAccount</code>.
     * @return the list of <code>ProductGlAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductGlAccount> getProductGlAccounts() throws RepositoryException {
        if (this.productGlAccounts == null) {
            this.productGlAccounts = getRelated(ProductGlAccount.class, "ProductGlAccount");
        }
        return this.productGlAccounts;
    }

    /**
     * Auto generated value setter.
     * @param parentGlAccountType the parentGlAccountType to set
    */
    public void setParentGlAccountType(GlAccountType parentGlAccountType) {
        this.parentGlAccountType = parentGlAccountType;
    }
    /**
     * Auto generated value setter.
     * @param costCostComponentCalcs the costCostComponentCalcs to set
    */
    public void setCostCostComponentCalcs(List<CostComponentCalc> costCostComponentCalcs) {
        this.costCostComponentCalcs = costCostComponentCalcs;
    }
    /**
     * Auto generated value setter.
     * @param offsettingCostComponentCalcs the offsettingCostComponentCalcs to set
    */
    public void setOffsettingCostComponentCalcs(List<CostComponentCalc> offsettingCostComponentCalcs) {
        this.offsettingCostComponentCalcs = offsettingCostComponentCalcs;
    }
    /**
     * Auto generated value setter.
     * @param glAccounts the glAccounts to set
    */
    public void setGlAccounts(List<GlAccount> glAccounts) {
        this.glAccounts = glAccounts;
    }
    /**
     * Auto generated value setter.
     * @param childGlAccountTypes the childGlAccountTypes to set
    */
    public void setChildGlAccountTypes(List<GlAccountType> childGlAccountTypes) {
        this.childGlAccountTypes = childGlAccountTypes;
    }
    /**
     * Auto generated value setter.
     * @param glAccountTypeDefaults the glAccountTypeDefaults to set
    */
    public void setGlAccountTypeDefaults(List<GlAccountTypeDefault> glAccountTypeDefaults) {
        this.glAccountTypeDefaults = glAccountTypeDefaults;
    }
    /**
     * Auto generated value setter.
     * @param debitInventoryStatusGlAccountTypes the debitInventoryStatusGlAccountTypes to set
    */
    public void setDebitInventoryStatusGlAccountTypes(List<InventoryStatusGlAccountType> debitInventoryStatusGlAccountTypes) {
        this.debitInventoryStatusGlAccountTypes = debitInventoryStatusGlAccountTypes;
    }
    /**
     * Auto generated value setter.
     * @param creditInventoryStatusGlAccountTypes the creditInventoryStatusGlAccountTypes to set
    */
    public void setCreditInventoryStatusGlAccountTypes(List<InventoryStatusGlAccountType> creditInventoryStatusGlAccountTypes) {
        this.creditInventoryStatusGlAccountTypes = creditInventoryStatusGlAccountTypes;
    }
    /**
     * Auto generated value setter.
     * @param invoiceInvoiceGlAccountTypes the invoiceInvoiceGlAccountTypes to set
    */
    public void setInvoiceInvoiceGlAccountTypes(List<InvoiceGlAccountType> invoiceInvoiceGlAccountTypes) {
        this.invoiceInvoiceGlAccountTypes = invoiceInvoiceGlAccountTypes;
    }
    /**
     * Auto generated value setter.
     * @param paymentGlAccountTypeMaps the paymentGlAccountTypeMaps to set
    */
    public void setPaymentGlAccountTypeMaps(List<PaymentGlAccountTypeMap> paymentGlAccountTypeMaps) {
        this.paymentGlAccountTypeMaps = paymentGlAccountTypeMaps;
    }
    /**
     * Auto generated value setter.
     * @param productGlAccounts the productGlAccounts to set
    */
    public void setProductGlAccounts(List<ProductGlAccount> productGlAccounts) {
        this.productGlAccounts = productGlAccounts;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addGlAccountTypeDefault(GlAccountTypeDefault glAccountTypeDefault) {
        if (this.glAccountTypeDefaults == null) {
            this.glAccountTypeDefaults = new ArrayList<GlAccountTypeDefault>();
        }
        this.glAccountTypeDefaults.add(glAccountTypeDefault);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeGlAccountTypeDefault(GlAccountTypeDefault glAccountTypeDefault) {
        if (this.glAccountTypeDefaults == null) {
            return;
        }
        this.glAccountTypeDefaults.remove(glAccountTypeDefault);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearGlAccountTypeDefault() {
        if (this.glAccountTypeDefaults == null) {
            return;
        }
        this.glAccountTypeDefaults.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductGlAccount(ProductGlAccount productGlAccount) {
        if (this.productGlAccounts == null) {
            this.productGlAccounts = new ArrayList<ProductGlAccount>();
        }
        this.productGlAccounts.add(productGlAccount);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductGlAccount(ProductGlAccount productGlAccount) {
        if (this.productGlAccounts == null) {
            return;
        }
        this.productGlAccounts.remove(productGlAccount);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductGlAccount() {
        if (this.productGlAccounts == null) {
            return;
        }
        this.productGlAccounts.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setGlAccountTypeId((String) mapValue.get("glAccountTypeId"));
        setParentTypeId((String) mapValue.get("parentTypeId"));
        setHasTable((String) mapValue.get("hasTable"));
        setDescription((String) mapValue.get("description"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("glAccountTypeId", getGlAccountTypeId());
        mapValue.put("parentTypeId", getParentTypeId());
        mapValue.put("hasTable", getHasTable());
        mapValue.put("description", getDescription());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
