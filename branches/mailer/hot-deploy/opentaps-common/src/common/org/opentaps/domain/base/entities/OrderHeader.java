package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity OrderHeader.
 */
@javax.persistence.Entity
@Table(name="ORDER_HEADER")
public class OrderHeader extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("orderId", "ORDER_ID");
        fields.put("orderTypeId", "ORDER_TYPE_ID");
        fields.put("orderName", "ORDER_NAME");
        fields.put("externalId", "EXTERNAL_ID");
        fields.put("salesChannelEnumId", "SALES_CHANNEL_ENUM_ID");
        fields.put("orderDate", "ORDER_DATE");
        fields.put("entryDate", "ENTRY_DATE");
        fields.put("visitId", "VISIT_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("createdBy", "CREATED_BY");
        fields.put("firstAttemptOrderId", "FIRST_ATTEMPT_ORDER_ID");
        fields.put("currencyUom", "CURRENCY_UOM");
        fields.put("syncStatusId", "SYNC_STATUS_ID");
        fields.put("billingAccountId", "BILLING_ACCOUNT_ID");
        fields.put("originFacilityId", "ORIGIN_FACILITY_ID");
        fields.put("webSiteId", "WEB_SITE_ID");
        fields.put("productStoreId", "PRODUCT_STORE_ID");
        fields.put("terminalId", "TERMINAL_ID");
        fields.put("transactionId", "TRANSACTION_ID");
        fields.put("autoOrderShoppingListId", "AUTO_ORDER_SHOPPING_LIST_ID");
        fields.put("needsInventoryIssuance", "NEEDS_INVENTORY_ISSUANCE");
        fields.put("isRushOrder", "IS_RUSH_ORDER");
        fields.put("internalCode", "INTERNAL_CODE");
        fields.put("remainingSubTotal", "REMAINING_SUB_TOTAL");
        fields.put("grandTotal", "GRAND_TOTAL");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("billFromPartyId", "BILL_FROM_PARTY_ID");
        fields.put("billToPartyId", "BILL_TO_PARTY_ID");
fieldMapColumns.put("OrderHeader", fields);
}
  public static enum Fields implements EntityFieldInterface<OrderHeader> {
    orderId("orderId"),
    orderTypeId("orderTypeId"),
    orderName("orderName"),
    externalId("externalId"),
    salesChannelEnumId("salesChannelEnumId"),
    orderDate("orderDate"),
    entryDate("entryDate"),
    visitId("visitId"),
    statusId("statusId"),
    createdBy("createdBy"),
    firstAttemptOrderId("firstAttemptOrderId"),
    currencyUom("currencyUom"),
    syncStatusId("syncStatusId"),
    billingAccountId("billingAccountId"),
    originFacilityId("originFacilityId"),
    webSiteId("webSiteId"),
    productStoreId("productStoreId"),
    terminalId("terminalId"),
    transactionId("transactionId"),
    autoOrderShoppingListId("autoOrderShoppingListId"),
    needsInventoryIssuance("needsInventoryIssuance"),
    isRushOrder("isRushOrder"),
    internalCode("internalCode"),
    remainingSubTotal("remainingSubTotal"),
    grandTotal("grandTotal"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    billFromPartyId("billFromPartyId"),
    billToPartyId("billToPartyId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="OrderHeader_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="OrderHeader_GEN")   
    @Id
    
    @Column(name="ORDER_ID")
    private String orderId;
    
    @Column(name="ORDER_TYPE_ID")
    private String orderTypeId;
    
    @Column(name="ORDER_NAME")
    private String orderName;
    
    @Column(name="EXTERNAL_ID")
    private String externalId;
    
    @Column(name="SALES_CHANNEL_ENUM_ID")
    private String salesChannelEnumId;
    
    @Column(name="ORDER_DATE")
    private Timestamp orderDate;
    
    @Column(name="ENTRY_DATE")
    private Timestamp entryDate;
    
    @Column(name="VISIT_ID")
    private String visitId;
    
    @Column(name="STATUS_ID")
    private String statusId;
    
    @Column(name="CREATED_BY")
    private String createdBy;
    
    @Column(name="FIRST_ATTEMPT_ORDER_ID")
    private String firstAttemptOrderId;
    
    @Column(name="CURRENCY_UOM")
    private String currencyUom;
    
    @Column(name="SYNC_STATUS_ID")
    private String syncStatusId;
    
    @Column(name="BILLING_ACCOUNT_ID")
    private String billingAccountId;
    
    @Column(name="ORIGIN_FACILITY_ID")
    private String originFacilityId;
    
    @Column(name="WEB_SITE_ID")
    private String webSiteId;
    
    @Column(name="PRODUCT_STORE_ID")
    private String productStoreId;
    
    @Column(name="TERMINAL_ID")
    private String terminalId;
    
    @Column(name="TRANSACTION_ID")
    private String transactionId;
    
    @Column(name="AUTO_ORDER_SHOPPING_LIST_ID")
    private String autoOrderShoppingListId;
    
    @Column(name="NEEDS_INVENTORY_ISSUANCE")
    private String needsInventoryIssuance;
    
    @Column(name="IS_RUSH_ORDER")
    private String isRushOrder;
    
    @Column(name="INTERNAL_CODE")
    private String internalCode;
    
    @Column(name="REMAINING_SUB_TOTAL")
    private BigDecimal remainingSubTotal;
    
    @Column(name="GRAND_TOTAL")
    private BigDecimal grandTotal;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="BILL_FROM_PARTY_ID")
    private String billFromPartyId;
    
    @Column(name="BILL_TO_PARTY_ID")
    private String billToPartyId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private OrderType orderType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SALES_CHANNEL_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration salesChannelEnumeration = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_FACILITY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Facility originFacility = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_TYPE_ID")
    private List<OrderTypeAttr> orderTypeAttrs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="BILLING_ACCOUNT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private BillingAccount billingAccount = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_STORE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductStore productStore = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="AUTO_ORDER_SHOPPING_LIST_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ShoppingList autoOrderShoppingList = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin createdByUserLogin = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem statusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SYNC_STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem syncStatusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CURRENCY_UOM", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom uom = null;
    private transient List<OrderHeaderNoteView> orderHeaderNoteViews = null;
    private transient List<OrderItemAndShipGroupAssoc> orderItemAndShipGroupAssocs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="BILL_FROM_PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party billFromVendorParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="BILL_TO_PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party billToCustomerParty = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<CommunicationEventOrder> communicationEventOrders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PURCHASE_ORDER_ID")
    private List<FixedAssetMaint> purchaseFixedAssetMaints = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<FixedAssetMaintOrder> fixedAssetMaintOrders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<GiftCardFulfillment> giftCardFulfillments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<ItemIssuance> itemIssuances = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="salesOrderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="SALES_ORDER_ID")
    private List<OldOrderItemAssociation> salesOldOrderItemAssociations = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="purchaseOrderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PURCHASE_ORDER_ID")
    private List<OldOrderItemAssociation> purchaseOldOrderItemAssociations = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OldOrderItemInventoryRes> oldOrderItemInventoryReses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OldOrderShipmentPreference> oldOrderShipmentPreferences = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<OldValueLinkFulfillment> oldValueLinkFulfillments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<OrderAdjustment> orderAdjustments = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderAttribute> orderAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderContactMech> orderContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderContent> orderContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderDeliverySchedule> orderDeliverySchedules = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderHeaderContent> orderHeaderContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderHeaderNote> orderHeaderNotes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderHeaderWorkEffort> orderHeaderWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItem> orderItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="fromOrderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemAssoc> fromOrderItemAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="toOrderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="TO_ORDER_ID")
    private List<OrderItemAssoc> toOrderItemAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemBilling> orderItemBillings = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemContactMech> orderItemContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemGroup> orderItemGroups = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemPriceInfo> orderItemPriceInfoes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemRole> orderItemRoles = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemShipGroup> orderItemShipGroups = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemShipGroupAssoc> orderItemShipGroupAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderItemShipGrpInvRes> orderItemShipGrpInvReses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<OrderNotification> orderNotifications = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<OrderPaymentPreference> orderPaymentPreferences = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderRequirementCommitment> orderRequirementCommitments = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderRole> orderRoles = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderShipGroupPriority> orderShipGroupPrioritys = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderShipment> orderShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<OrderStatus> orderStatuses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<OrderTerm> orderTerms = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_ORDER_ID")
    private List<PicklistBin> primaryPicklistBins = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<PicklistItem> picklistItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<PosTerminalLog> posTerminalLogs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<ProductOrderItem> productOrderItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="engagementOrderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ENGAGEMENT_ID")
    private List<ProductOrderItem> engagementProductOrderItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<ProductPromoUse> productPromoUses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<ReturnItem> returnItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="REPLACEMENT_ORDER_ID")
    private List<ReturnItemResponse> returnItemResponses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_ORDER_ID")
    private List<Shipment> primaryShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<ShipmentReceipt> shipmentReceipts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<Subscription> subscriptions = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID")
    private List<SurveyResponse> surveyResponses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<TrackingCodeOrder> trackingCodeOrders = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<TrackingCodeOrderReturn> trackingCodeOrderReturns = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="ORDER_ID")
    private List<WorkOrderItemFulfillment> workOrderItemFulfillments = null;

  /**
   * Default constructor.
   */
  public OrderHeader() {
      super();
      this.baseEntityName = "OrderHeader";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("orderId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public OrderHeader(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param orderId the orderId to set
     */
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    /**
     * Auto generated value setter.
     * @param orderTypeId the orderTypeId to set
     */
    public void setOrderTypeId(String orderTypeId) {
        this.orderTypeId = orderTypeId;
    }
    /**
     * Auto generated value setter.
     * @param orderName the orderName to set
     */
    public void setOrderName(String orderName) {
        this.orderName = orderName;
    }
    /**
     * Auto generated value setter.
     * @param externalId the externalId to set
     */
    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }
    /**
     * Auto generated value setter.
     * @param salesChannelEnumId the salesChannelEnumId to set
     */
    public void setSalesChannelEnumId(String salesChannelEnumId) {
        this.salesChannelEnumId = salesChannelEnumId;
    }
    /**
     * Auto generated value setter.
     * @param orderDate the orderDate to set
     */
    public void setOrderDate(Timestamp orderDate) {
        this.orderDate = orderDate;
    }
    /**
     * Auto generated value setter.
     * @param entryDate the entryDate to set
     */
    public void setEntryDate(Timestamp entryDate) {
        this.entryDate = entryDate;
    }
    /**
     * Auto generated value setter.
     * @param visitId the visitId to set
     */
    public void setVisitId(String visitId) {
        this.visitId = visitId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param createdBy the createdBy to set
     */
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }
    /**
     * Auto generated value setter.
     * @param firstAttemptOrderId the firstAttemptOrderId to set
     */
    public void setFirstAttemptOrderId(String firstAttemptOrderId) {
        this.firstAttemptOrderId = firstAttemptOrderId;
    }
    /**
     * Auto generated value setter.
     * @param currencyUom the currencyUom to set
     */
    public void setCurrencyUom(String currencyUom) {
        this.currencyUom = currencyUom;
    }
    /**
     * Auto generated value setter.
     * @param syncStatusId the syncStatusId to set
     */
    public void setSyncStatusId(String syncStatusId) {
        this.syncStatusId = syncStatusId;
    }
    /**
     * Auto generated value setter.
     * @param billingAccountId the billingAccountId to set
     */
    public void setBillingAccountId(String billingAccountId) {
        this.billingAccountId = billingAccountId;
    }
    /**
     * Auto generated value setter.
     * @param originFacilityId the originFacilityId to set
     */
    public void setOriginFacilityId(String originFacilityId) {
        this.originFacilityId = originFacilityId;
    }
    /**
     * Auto generated value setter.
     * @param webSiteId the webSiteId to set
     */
    public void setWebSiteId(String webSiteId) {
        this.webSiteId = webSiteId;
    }
    /**
     * Auto generated value setter.
     * @param productStoreId the productStoreId to set
     */
    public void setProductStoreId(String productStoreId) {
        this.productStoreId = productStoreId;
    }
    /**
     * Auto generated value setter.
     * @param terminalId the terminalId to set
     */
    public void setTerminalId(String terminalId) {
        this.terminalId = terminalId;
    }
    /**
     * Auto generated value setter.
     * @param transactionId the transactionId to set
     */
    public void setTransactionId(String transactionId) {
        this.transactionId = transactionId;
    }
    /**
     * Auto generated value setter.
     * @param autoOrderShoppingListId the autoOrderShoppingListId to set
     */
    public void setAutoOrderShoppingListId(String autoOrderShoppingListId) {
        this.autoOrderShoppingListId = autoOrderShoppingListId;
    }
    /**
     * Auto generated value setter.
     * @param needsInventoryIssuance the needsInventoryIssuance to set
     */
    public void setNeedsInventoryIssuance(String needsInventoryIssuance) {
        this.needsInventoryIssuance = needsInventoryIssuance;
    }
    /**
     * Auto generated value setter.
     * @param isRushOrder the isRushOrder to set
     */
    public void setIsRushOrder(String isRushOrder) {
        this.isRushOrder = isRushOrder;
    }
    /**
     * Auto generated value setter.
     * @param internalCode the internalCode to set
     */
    public void setInternalCode(String internalCode) {
        this.internalCode = internalCode;
    }
    /**
     * Auto generated value setter.
     * @param remainingSubTotal the remainingSubTotal to set
     */
    public void setRemainingSubTotal(BigDecimal remainingSubTotal) {
        this.remainingSubTotal = remainingSubTotal;
    }
    /**
     * Auto generated value setter.
     * @param grandTotal the grandTotal to set
     */
    public void setGrandTotal(BigDecimal grandTotal) {
        this.grandTotal = grandTotal;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param billFromPartyId the billFromPartyId to set
     */
    public void setBillFromPartyId(String billFromPartyId) {
        this.billFromPartyId = billFromPartyId;
    }
    /**
     * Auto generated value setter.
     * @param billToPartyId the billToPartyId to set
     */
    public void setBillToPartyId(String billToPartyId) {
        this.billToPartyId = billToPartyId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderId() {
        return this.orderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderTypeId() {
        return this.orderTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderName() {
        return this.orderName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExternalId() {
        return this.externalId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalesChannelEnumId() {
        return this.salesChannelEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getOrderDate() {
        return this.orderDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getEntryDate() {
        return this.entryDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVisitId() {
        return this.visitId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedBy() {
        return this.createdBy;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFirstAttemptOrderId() {
        return this.firstAttemptOrderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUom() {
        return this.currencyUom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSyncStatusId() {
        return this.syncStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingAccountId() {
        return this.billingAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOriginFacilityId() {
        return this.originFacilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWebSiteId() {
        return this.webSiteId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductStoreId() {
        return this.productStoreId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTerminalId() {
        return this.terminalId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTransactionId() {
        return this.transactionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAutoOrderShoppingListId() {
        return this.autoOrderShoppingListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNeedsInventoryIssuance() {
        return this.needsInventoryIssuance;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsRushOrder() {
        return this.isRushOrder;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInternalCode() {
        return this.internalCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getRemainingSubTotal() {
        return this.remainingSubTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getGrandTotal() {
        return this.grandTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillFromPartyId() {
        return this.billFromPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillToPartyId() {
        return this.billToPartyId;
    }

    /**
     * Auto generated method that gets the related <code>OrderType</code> by the relation named <code>OrderType</code>.
     * @return the <code>OrderType</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderType getOrderType() throws RepositoryException {
        if (this.orderType == null) {
            this.orderType = getRelatedOne(OrderType.class, "OrderType");
        }
        return this.orderType;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>SalesChannelEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getSalesChannelEnumeration() throws RepositoryException {
        if (this.salesChannelEnumeration == null) {
            this.salesChannelEnumeration = getRelatedOne(Enumeration.class, "SalesChannelEnumeration");
        }
        return this.salesChannelEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>OriginFacility</code>.
     * @return the <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public Facility getOriginFacility() throws RepositoryException {
        if (this.originFacility == null) {
            this.originFacility = getRelatedOne(Facility.class, "OriginFacility");
        }
        return this.originFacility;
    }
    /**
     * Auto generated method that gets the related <code>OrderTypeAttr</code> by the relation named <code>OrderTypeAttr</code>.
     * @return the list of <code>OrderTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderTypeAttr> getOrderTypeAttrs() throws RepositoryException {
        if (this.orderTypeAttrs == null) {
            this.orderTypeAttrs = getRelated(OrderTypeAttr.class, "OrderTypeAttr");
        }
        return this.orderTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>BillingAccount</code> by the relation named <code>BillingAccount</code>.
     * @return the <code>BillingAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public BillingAccount getBillingAccount() throws RepositoryException {
        if (this.billingAccount == null) {
            this.billingAccount = getRelatedOne(BillingAccount.class, "BillingAccount");
        }
        return this.billingAccount;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>ProductStore</code>.
     * @return the <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductStore getProductStore() throws RepositoryException {
        if (this.productStore == null) {
            this.productStore = getRelatedOne(ProductStore.class, "ProductStore");
        }
        return this.productStore;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingList</code> by the relation named <code>AutoOrderShoppingList</code>.
     * @return the <code>ShoppingList</code>
     * @throws RepositoryException if an error occurs
     */
    public ShoppingList getAutoOrderShoppingList() throws RepositoryException {
        if (this.autoOrderShoppingList == null) {
            this.autoOrderShoppingList = getRelatedOne(ShoppingList.class, "AutoOrderShoppingList");
        }
        return this.autoOrderShoppingList;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>CreatedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getCreatedByUserLogin() throws RepositoryException {
        if (this.createdByUserLogin == null) {
            this.createdByUserLogin = getRelatedOne(UserLogin.class, "CreatedByUserLogin");
        }
        return this.createdByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>SyncStatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getSyncStatusItem() throws RepositoryException {
        if (this.syncStatusItem == null) {
            this.syncStatusItem = getRelatedOne(StatusItem.class, "SyncStatusItem");
        }
        return this.syncStatusItem;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>Uom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getUom() throws RepositoryException {
        if (this.uom == null) {
            this.uom = getRelatedOne(Uom.class, "Uom");
        }
        return this.uom;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeaderNoteView</code> by the relation named <code>OrderHeaderNoteView</code>.
     * @return the list of <code>OrderHeaderNoteView</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeaderNoteView> getOrderHeaderNoteViews() throws RepositoryException {
        if (this.orderHeaderNoteViews == null) {
            this.orderHeaderNoteViews = getRelated(OrderHeaderNoteView.class, "OrderHeaderNoteView");
        }
        return this.orderHeaderNoteViews;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemAndShipGroupAssoc</code> by the relation named <code>OrderItemAndShipGroupAssoc</code>.
     * @return the list of <code>OrderItemAndShipGroupAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemAndShipGroupAssoc> getOrderItemAndShipGroupAssocs() throws RepositoryException {
        if (this.orderItemAndShipGroupAssocs == null) {
            this.orderItemAndShipGroupAssocs = getRelated(OrderItemAndShipGroupAssoc.class, "OrderItemAndShipGroupAssoc");
        }
        return this.orderItemAndShipGroupAssocs;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>BillFromVendorParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getBillFromVendorParty() throws RepositoryException {
        if (this.billFromVendorParty == null) {
            this.billFromVendorParty = getRelatedOne(Party.class, "BillFromVendorParty");
        }
        return this.billFromVendorParty;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>BillToCustomerParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getBillToCustomerParty() throws RepositoryException {
        if (this.billToCustomerParty == null) {
            this.billToCustomerParty = getRelatedOne(Party.class, "BillToCustomerParty");
        }
        return this.billToCustomerParty;
    }
    /**
     * Auto generated method that gets the related <code>CommunicationEventOrder</code> by the relation named <code>CommunicationEventOrder</code>.
     * @return the list of <code>CommunicationEventOrder</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommunicationEventOrder> getCommunicationEventOrders() throws RepositoryException {
        if (this.communicationEventOrders == null) {
            this.communicationEventOrders = getRelated(CommunicationEventOrder.class, "CommunicationEventOrder");
        }
        return this.communicationEventOrders;
    }
    /**
     * Auto generated method that gets the related <code>FixedAssetMaint</code> by the relation named <code>PurchaseFixedAssetMaint</code>.
     * @return the list of <code>FixedAssetMaint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAssetMaint> getPurchaseFixedAssetMaints() throws RepositoryException {
        if (this.purchaseFixedAssetMaints == null) {
            this.purchaseFixedAssetMaints = getRelated(FixedAssetMaint.class, "PurchaseFixedAssetMaint");
        }
        return this.purchaseFixedAssetMaints;
    }
    /**
     * Auto generated method that gets the related <code>FixedAssetMaintOrder</code> by the relation named <code>FixedAssetMaintOrder</code>.
     * @return the list of <code>FixedAssetMaintOrder</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAssetMaintOrder> getFixedAssetMaintOrders() throws RepositoryException {
        if (this.fixedAssetMaintOrders == null) {
            this.fixedAssetMaintOrders = getRelated(FixedAssetMaintOrder.class, "FixedAssetMaintOrder");
        }
        return this.fixedAssetMaintOrders;
    }
    /**
     * Auto generated method that gets the related <code>GiftCardFulfillment</code> by the relation named <code>GiftCardFulfillment</code>.
     * @return the list of <code>GiftCardFulfillment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GiftCardFulfillment> getGiftCardFulfillments() throws RepositoryException {
        if (this.giftCardFulfillments == null) {
            this.giftCardFulfillments = getRelated(GiftCardFulfillment.class, "GiftCardFulfillment");
        }
        return this.giftCardFulfillments;
    }
    /**
     * Auto generated method that gets the related <code>ItemIssuance</code> by the relation named <code>ItemIssuance</code>.
     * @return the list of <code>ItemIssuance</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ItemIssuance> getItemIssuances() throws RepositoryException {
        if (this.itemIssuances == null) {
            this.itemIssuances = getRelated(ItemIssuance.class, "ItemIssuance");
        }
        return this.itemIssuances;
    }
    /**
     * Auto generated method that gets the related <code>OldOrderItemAssociation</code> by the relation named <code>SalesOldOrderItemAssociation</code>.
     * @return the list of <code>OldOrderItemAssociation</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldOrderItemAssociation> getSalesOldOrderItemAssociations() throws RepositoryException {
        if (this.salesOldOrderItemAssociations == null) {
            this.salesOldOrderItemAssociations = getRelated(OldOrderItemAssociation.class, "SalesOldOrderItemAssociation");
        }
        return this.salesOldOrderItemAssociations;
    }
    /**
     * Auto generated method that gets the related <code>OldOrderItemAssociation</code> by the relation named <code>PurchaseOldOrderItemAssociation</code>.
     * @return the list of <code>OldOrderItemAssociation</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldOrderItemAssociation> getPurchaseOldOrderItemAssociations() throws RepositoryException {
        if (this.purchaseOldOrderItemAssociations == null) {
            this.purchaseOldOrderItemAssociations = getRelated(OldOrderItemAssociation.class, "PurchaseOldOrderItemAssociation");
        }
        return this.purchaseOldOrderItemAssociations;
    }
    /**
     * Auto generated method that gets the related <code>OldOrderItemInventoryRes</code> by the relation named <code>OldOrderItemInventoryRes</code>.
     * @return the list of <code>OldOrderItemInventoryRes</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldOrderItemInventoryRes> getOldOrderItemInventoryReses() throws RepositoryException {
        if (this.oldOrderItemInventoryReses == null) {
            this.oldOrderItemInventoryReses = getRelated(OldOrderItemInventoryRes.class, "OldOrderItemInventoryRes");
        }
        return this.oldOrderItemInventoryReses;
    }
    /**
     * Auto generated method that gets the related <code>OldOrderShipmentPreference</code> by the relation named <code>OldOrderShipmentPreference</code>.
     * @return the list of <code>OldOrderShipmentPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldOrderShipmentPreference> getOldOrderShipmentPreferences() throws RepositoryException {
        if (this.oldOrderShipmentPreferences == null) {
            this.oldOrderShipmentPreferences = getRelated(OldOrderShipmentPreference.class, "OldOrderShipmentPreference");
        }
        return this.oldOrderShipmentPreferences;
    }
    /**
     * Auto generated method that gets the related <code>OldValueLinkFulfillment</code> by the relation named <code>OldValueLinkFulfillment</code>.
     * @return the list of <code>OldValueLinkFulfillment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldValueLinkFulfillment> getOldValueLinkFulfillments() throws RepositoryException {
        if (this.oldValueLinkFulfillments == null) {
            this.oldValueLinkFulfillments = getRelated(OldValueLinkFulfillment.class, "OldValueLinkFulfillment");
        }
        return this.oldValueLinkFulfillments;
    }
    /**
     * Auto generated method that gets the related <code>OrderAdjustment</code> by the relation named <code>OrderAdjustment</code>.
     * @return the list of <code>OrderAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAdjustment> getOrderAdjustments() throws RepositoryException {
        if (this.orderAdjustments == null) {
            this.orderAdjustments = getRelated(OrderAdjustment.class, "OrderAdjustment");
        }
        return this.orderAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>OrderAttribute</code> by the relation named <code>OrderAttribute</code>.
     * @return the list of <code>OrderAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAttribute> getOrderAttributes() throws RepositoryException {
        if (this.orderAttributes == null) {
            this.orderAttributes = getRelated(OrderAttribute.class, "OrderAttribute");
        }
        return this.orderAttributes;
    }
    /**
     * Auto generated method that gets the related <code>OrderContactMech</code> by the relation named <code>OrderContactMech</code>.
     * @return the list of <code>OrderContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderContactMech> getOrderContactMeches() throws RepositoryException {
        if (this.orderContactMeches == null) {
            this.orderContactMeches = getRelated(OrderContactMech.class, "OrderContactMech");
        }
        return this.orderContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderContent</code> by the relation named <code>OrderContent</code>.
     * @return the list of <code>OrderContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderContent> getOrderContents() throws RepositoryException {
        if (this.orderContents == null) {
            this.orderContents = getRelated(OrderContent.class, "OrderContent");
        }
        return this.orderContents;
    }
    /**
     * Auto generated method that gets the related <code>OrderDeliverySchedule</code> by the relation named <code>OrderDeliverySchedule</code>.
     * @return the list of <code>OrderDeliverySchedule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderDeliverySchedule> getOrderDeliverySchedules() throws RepositoryException {
        if (this.orderDeliverySchedules == null) {
            this.orderDeliverySchedules = getRelated(OrderDeliverySchedule.class, "OrderDeliverySchedule");
        }
        return this.orderDeliverySchedules;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeaderContent</code> by the relation named <code>OrderHeaderContent</code>.
     * @return the list of <code>OrderHeaderContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeaderContent> getOrderHeaderContents() throws RepositoryException {
        if (this.orderHeaderContents == null) {
            this.orderHeaderContents = getRelated(OrderHeaderContent.class, "OrderHeaderContent");
        }
        return this.orderHeaderContents;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeaderNote</code> by the relation named <code>OrderHeaderNote</code>.
     * @return the list of <code>OrderHeaderNote</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeaderNote> getOrderHeaderNotes() throws RepositoryException {
        if (this.orderHeaderNotes == null) {
            this.orderHeaderNotes = getRelated(OrderHeaderNote.class, "OrderHeaderNote");
        }
        return this.orderHeaderNotes;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeaderWorkEffort</code> by the relation named <code>OrderHeaderWorkEffort</code>.
     * @return the list of <code>OrderHeaderWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeaderWorkEffort> getOrderHeaderWorkEfforts() throws RepositoryException {
        if (this.orderHeaderWorkEfforts == null) {
            this.orderHeaderWorkEfforts = getRelated(OrderHeaderWorkEffort.class, "OrderHeaderWorkEffort");
        }
        return this.orderHeaderWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>OrderItem</code>.
     * @return the list of <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItem> getOrderItems() throws RepositoryException {
        if (this.orderItems == null) {
            this.orderItems = getRelated(OrderItem.class, "OrderItem");
        }
        return this.orderItems;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemAssoc</code> by the relation named <code>FromOrderItemAssoc</code>.
     * @return the list of <code>OrderItemAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemAssoc> getFromOrderItemAssocs() throws RepositoryException {
        if (this.fromOrderItemAssocs == null) {
            this.fromOrderItemAssocs = getRelated(OrderItemAssoc.class, "FromOrderItemAssoc");
        }
        return this.fromOrderItemAssocs;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemAssoc</code> by the relation named <code>ToOrderItemAssoc</code>.
     * @return the list of <code>OrderItemAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemAssoc> getToOrderItemAssocs() throws RepositoryException {
        if (this.toOrderItemAssocs == null) {
            this.toOrderItemAssocs = getRelated(OrderItemAssoc.class, "ToOrderItemAssoc");
        }
        return this.toOrderItemAssocs;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemBilling</code> by the relation named <code>OrderItemBilling</code>.
     * @return the list of <code>OrderItemBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemBilling> getOrderItemBillings() throws RepositoryException {
        if (this.orderItemBillings == null) {
            this.orderItemBillings = getRelated(OrderItemBilling.class, "OrderItemBilling");
        }
        return this.orderItemBillings;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemContactMech</code> by the relation named <code>OrderItemContactMech</code>.
     * @return the list of <code>OrderItemContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemContactMech> getOrderItemContactMeches() throws RepositoryException {
        if (this.orderItemContactMeches == null) {
            this.orderItemContactMeches = getRelated(OrderItemContactMech.class, "OrderItemContactMech");
        }
        return this.orderItemContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemGroup</code> by the relation named <code>OrderItemGroup</code>.
     * @return the list of <code>OrderItemGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemGroup> getOrderItemGroups() throws RepositoryException {
        if (this.orderItemGroups == null) {
            this.orderItemGroups = getRelated(OrderItemGroup.class, "OrderItemGroup");
        }
        return this.orderItemGroups;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemPriceInfo</code> by the relation named <code>OrderItemPriceInfo</code>.
     * @return the list of <code>OrderItemPriceInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemPriceInfo> getOrderItemPriceInfoes() throws RepositoryException {
        if (this.orderItemPriceInfoes == null) {
            this.orderItemPriceInfoes = getRelated(OrderItemPriceInfo.class, "OrderItemPriceInfo");
        }
        return this.orderItemPriceInfoes;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemRole</code> by the relation named <code>OrderItemRole</code>.
     * @return the list of <code>OrderItemRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemRole> getOrderItemRoles() throws RepositoryException {
        if (this.orderItemRoles == null) {
            this.orderItemRoles = getRelated(OrderItemRole.class, "OrderItemRole");
        }
        return this.orderItemRoles;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroup</code> by the relation named <code>OrderItemShipGroup</code>.
     * @return the list of <code>OrderItemShipGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemShipGroup> getOrderItemShipGroups() throws RepositoryException {
        if (this.orderItemShipGroups == null) {
            this.orderItemShipGroups = getRelated(OrderItemShipGroup.class, "OrderItemShipGroup");
        }
        return this.orderItemShipGroups;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroupAssoc</code> by the relation named <code>OrderItemShipGroupAssoc</code>.
     * @return the list of <code>OrderItemShipGroupAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemShipGroupAssoc> getOrderItemShipGroupAssocs() throws RepositoryException {
        if (this.orderItemShipGroupAssocs == null) {
            this.orderItemShipGroupAssocs = getRelated(OrderItemShipGroupAssoc.class, "OrderItemShipGroupAssoc");
        }
        return this.orderItemShipGroupAssocs;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGrpInvRes</code> by the relation named <code>OrderItemShipGrpInvRes</code>.
     * @return the list of <code>OrderItemShipGrpInvRes</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemShipGrpInvRes> getOrderItemShipGrpInvReses() throws RepositoryException {
        if (this.orderItemShipGrpInvReses == null) {
            this.orderItemShipGrpInvReses = getRelated(OrderItemShipGrpInvRes.class, "OrderItemShipGrpInvRes");
        }
        return this.orderItemShipGrpInvReses;
    }
    /**
     * Auto generated method that gets the related <code>OrderNotification</code> by the relation named <code>OrderNotification</code>.
     * @return the list of <code>OrderNotification</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderNotification> getOrderNotifications() throws RepositoryException {
        if (this.orderNotifications == null) {
            this.orderNotifications = getRelated(OrderNotification.class, "OrderNotification");
        }
        return this.orderNotifications;
    }
    /**
     * Auto generated method that gets the related <code>OrderPaymentPreference</code> by the relation named <code>OrderPaymentPreference</code>.
     * @return the list of <code>OrderPaymentPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderPaymentPreference> getOrderPaymentPreferences() throws RepositoryException {
        if (this.orderPaymentPreferences == null) {
            this.orderPaymentPreferences = getRelated(OrderPaymentPreference.class, "OrderPaymentPreference");
        }
        return this.orderPaymentPreferences;
    }
    /**
     * Auto generated method that gets the related <code>OrderRequirementCommitment</code> by the relation named <code>OrderRequirementCommitment</code>.
     * @return the list of <code>OrderRequirementCommitment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderRequirementCommitment> getOrderRequirementCommitments() throws RepositoryException {
        if (this.orderRequirementCommitments == null) {
            this.orderRequirementCommitments = getRelated(OrderRequirementCommitment.class, "OrderRequirementCommitment");
        }
        return this.orderRequirementCommitments;
    }
    /**
     * Auto generated method that gets the related <code>OrderRole</code> by the relation named <code>OrderRole</code>.
     * @return the list of <code>OrderRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderRole> getOrderRoles() throws RepositoryException {
        if (this.orderRoles == null) {
            this.orderRoles = getRelated(OrderRole.class, "OrderRole");
        }
        return this.orderRoles;
    }
    /**
     * Auto generated method that gets the related <code>OrderShipGroupPriority</code> by the relation named <code>OrderShipGroupPriority</code>.
     * @return the list of <code>OrderShipGroupPriority</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderShipGroupPriority> getOrderShipGroupPrioritys() throws RepositoryException {
        if (this.orderShipGroupPrioritys == null) {
            this.orderShipGroupPrioritys = getRelated(OrderShipGroupPriority.class, "OrderShipGroupPriority");
        }
        return this.orderShipGroupPrioritys;
    }
    /**
     * Auto generated method that gets the related <code>OrderShipment</code> by the relation named <code>OrderShipment</code>.
     * @return the list of <code>OrderShipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderShipment> getOrderShipments() throws RepositoryException {
        if (this.orderShipments == null) {
            this.orderShipments = getRelated(OrderShipment.class, "OrderShipment");
        }
        return this.orderShipments;
    }
    /**
     * Auto generated method that gets the related <code>OrderStatus</code> by the relation named <code>OrderStatus</code>.
     * @return the list of <code>OrderStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderStatus> getOrderStatuses() throws RepositoryException {
        if (this.orderStatuses == null) {
            this.orderStatuses = getRelated(OrderStatus.class, "OrderStatus");
        }
        return this.orderStatuses;
    }
    /**
     * Auto generated method that gets the related <code>OrderTerm</code> by the relation named <code>OrderTerm</code>.
     * @return the list of <code>OrderTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderTerm> getOrderTerms() throws RepositoryException {
        if (this.orderTerms == null) {
            this.orderTerms = getRelated(OrderTerm.class, "OrderTerm");
        }
        return this.orderTerms;
    }
    /**
     * Auto generated method that gets the related <code>PicklistBin</code> by the relation named <code>PrimaryPicklistBin</code>.
     * @return the list of <code>PicklistBin</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistBin> getPrimaryPicklistBins() throws RepositoryException {
        if (this.primaryPicklistBins == null) {
            this.primaryPicklistBins = getRelated(PicklistBin.class, "PrimaryPicklistBin");
        }
        return this.primaryPicklistBins;
    }
    /**
     * Auto generated method that gets the related <code>PicklistItem</code> by the relation named <code>PicklistItem</code>.
     * @return the list of <code>PicklistItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistItem> getPicklistItems() throws RepositoryException {
        if (this.picklistItems == null) {
            this.picklistItems = getRelated(PicklistItem.class, "PicklistItem");
        }
        return this.picklistItems;
    }
    /**
     * Auto generated method that gets the related <code>PosTerminalLog</code> by the relation named <code>PosTerminalLog</code>.
     * @return the list of <code>PosTerminalLog</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PosTerminalLog> getPosTerminalLogs() throws RepositoryException {
        if (this.posTerminalLogs == null) {
            this.posTerminalLogs = getRelated(PosTerminalLog.class, "PosTerminalLog");
        }
        return this.posTerminalLogs;
    }
    /**
     * Auto generated method that gets the related <code>ProductOrderItem</code> by the relation named <code>ProductOrderItem</code>.
     * @return the list of <code>ProductOrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductOrderItem> getProductOrderItems() throws RepositoryException {
        if (this.productOrderItems == null) {
            this.productOrderItems = getRelated(ProductOrderItem.class, "ProductOrderItem");
        }
        return this.productOrderItems;
    }
    /**
     * Auto generated method that gets the related <code>ProductOrderItem</code> by the relation named <code>EngagementProductOrderItem</code>.
     * @return the list of <code>ProductOrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductOrderItem> getEngagementProductOrderItems() throws RepositoryException {
        if (this.engagementProductOrderItems == null) {
            this.engagementProductOrderItems = getRelated(ProductOrderItem.class, "EngagementProductOrderItem");
        }
        return this.engagementProductOrderItems;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoUse</code> by the relation named <code>ProductPromoUse</code>.
     * @return the list of <code>ProductPromoUse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoUse> getProductPromoUses() throws RepositoryException {
        if (this.productPromoUses == null) {
            this.productPromoUses = getRelated(ProductPromoUse.class, "ProductPromoUse");
        }
        return this.productPromoUses;
    }
    /**
     * Auto generated method that gets the related <code>ReturnItem</code> by the relation named <code>ReturnItem</code>.
     * @return the list of <code>ReturnItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnItem> getReturnItems() throws RepositoryException {
        if (this.returnItems == null) {
            this.returnItems = getRelated(ReturnItem.class, "ReturnItem");
        }
        return this.returnItems;
    }
    /**
     * Auto generated method that gets the related <code>ReturnItemResponse</code> by the relation named <code>ReturnItemResponse</code>.
     * @return the list of <code>ReturnItemResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnItemResponse> getReturnItemResponses() throws RepositoryException {
        if (this.returnItemResponses == null) {
            this.returnItemResponses = getRelated(ReturnItemResponse.class, "ReturnItemResponse");
        }
        return this.returnItemResponses;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>PrimaryShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getPrimaryShipments() throws RepositoryException {
        if (this.primaryShipments == null) {
            this.primaryShipments = getRelated(Shipment.class, "PrimaryShipment");
        }
        return this.primaryShipments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentReceipt</code> by the relation named <code>ShipmentReceipt</code>.
     * @return the list of <code>ShipmentReceipt</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentReceipt> getShipmentReceipts() throws RepositoryException {
        if (this.shipmentReceipts == null) {
            this.shipmentReceipts = getRelated(ShipmentReceipt.class, "ShipmentReceipt");
        }
        return this.shipmentReceipts;
    }
    /**
     * Auto generated method that gets the related <code>Subscription</code> by the relation named <code>Subscription</code>.
     * @return the list of <code>Subscription</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Subscription> getSubscriptions() throws RepositoryException {
        if (this.subscriptions == null) {
            this.subscriptions = getRelated(Subscription.class, "Subscription");
        }
        return this.subscriptions;
    }
    /**
     * Auto generated method that gets the related <code>SurveyResponse</code> by the relation named <code>SurveyResponse</code>.
     * @return the list of <code>SurveyResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SurveyResponse> getSurveyResponses() throws RepositoryException {
        if (this.surveyResponses == null) {
            this.surveyResponses = getRelated(SurveyResponse.class, "SurveyResponse");
        }
        return this.surveyResponses;
    }
    /**
     * Auto generated method that gets the related <code>TrackingCodeOrder</code> by the relation named <code>TrackingCodeOrder</code>.
     * @return the list of <code>TrackingCodeOrder</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TrackingCodeOrder> getTrackingCodeOrders() throws RepositoryException {
        if (this.trackingCodeOrders == null) {
            this.trackingCodeOrders = getRelated(TrackingCodeOrder.class, "TrackingCodeOrder");
        }
        return this.trackingCodeOrders;
    }
    /**
     * Auto generated method that gets the related <code>TrackingCodeOrderReturn</code> by the relation named <code>TrackingCodeOrderReturn</code>.
     * @return the list of <code>TrackingCodeOrderReturn</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TrackingCodeOrderReturn> getTrackingCodeOrderReturns() throws RepositoryException {
        if (this.trackingCodeOrderReturns == null) {
            this.trackingCodeOrderReturns = getRelated(TrackingCodeOrderReturn.class, "TrackingCodeOrderReturn");
        }
        return this.trackingCodeOrderReturns;
    }
    /**
     * Auto generated method that gets the related <code>WorkOrderItemFulfillment</code> by the relation named <code>WorkOrderItemFulfillment</code>.
     * @return the list of <code>WorkOrderItemFulfillment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkOrderItemFulfillment> getWorkOrderItemFulfillments() throws RepositoryException {
        if (this.workOrderItemFulfillments == null) {
            this.workOrderItemFulfillments = getRelated(WorkOrderItemFulfillment.class, "WorkOrderItemFulfillment");
        }
        return this.workOrderItemFulfillments;
    }

    /**
     * Auto generated value setter.
     * @param orderType the orderType to set
    */
    public void setOrderType(OrderType orderType) {
        this.orderType = orderType;
    }
    /**
     * Auto generated value setter.
     * @param salesChannelEnumeration the salesChannelEnumeration to set
    */
    public void setSalesChannelEnumeration(Enumeration salesChannelEnumeration) {
        this.salesChannelEnumeration = salesChannelEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param originFacility the originFacility to set
    */
    public void setOriginFacility(Facility originFacility) {
        this.originFacility = originFacility;
    }
    /**
     * Auto generated value setter.
     * @param orderTypeAttrs the orderTypeAttrs to set
    */
    public void setOrderTypeAttrs(List<OrderTypeAttr> orderTypeAttrs) {
        this.orderTypeAttrs = orderTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param billingAccount the billingAccount to set
    */
    public void setBillingAccount(BillingAccount billingAccount) {
        this.billingAccount = billingAccount;
    }
    /**
     * Auto generated value setter.
     * @param productStore the productStore to set
    */
    public void setProductStore(ProductStore productStore) {
        this.productStore = productStore;
    }
    /**
     * Auto generated value setter.
     * @param autoOrderShoppingList the autoOrderShoppingList to set
    */
    public void setAutoOrderShoppingList(ShoppingList autoOrderShoppingList) {
        this.autoOrderShoppingList = autoOrderShoppingList;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
    */
    public void setCreatedByUserLogin(UserLogin createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param syncStatusItem the syncStatusItem to set
    */
    public void setSyncStatusItem(StatusItem syncStatusItem) {
        this.syncStatusItem = syncStatusItem;
    }
    /**
     * Auto generated value setter.
     * @param uom the uom to set
    */
    public void setUom(Uom uom) {
        this.uom = uom;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaderNoteViews the orderHeaderNoteViews to set
    */
    public void setOrderHeaderNoteViews(List<OrderHeaderNoteView> orderHeaderNoteViews) {
        this.orderHeaderNoteViews = orderHeaderNoteViews;
    }
    /**
     * Auto generated value setter.
     * @param orderItemAndShipGroupAssocs the orderItemAndShipGroupAssocs to set
    */
    public void setOrderItemAndShipGroupAssocs(List<OrderItemAndShipGroupAssoc> orderItemAndShipGroupAssocs) {
        this.orderItemAndShipGroupAssocs = orderItemAndShipGroupAssocs;
    }
    /**
     * Auto generated value setter.
     * @param billFromVendorParty the billFromVendorParty to set
    */
    public void setBillFromVendorParty(Party billFromVendorParty) {
        this.billFromVendorParty = billFromVendorParty;
    }
    /**
     * Auto generated value setter.
     * @param billToCustomerParty the billToCustomerParty to set
    */
    public void setBillToCustomerParty(Party billToCustomerParty) {
        this.billToCustomerParty = billToCustomerParty;
    }
    /**
     * Auto generated value setter.
     * @param communicationEventOrders the communicationEventOrders to set
    */
    public void setCommunicationEventOrders(List<CommunicationEventOrder> communicationEventOrders) {
        this.communicationEventOrders = communicationEventOrders;
    }
    /**
     * Auto generated value setter.
     * @param purchaseFixedAssetMaints the purchaseFixedAssetMaints to set
    */
    public void setPurchaseFixedAssetMaints(List<FixedAssetMaint> purchaseFixedAssetMaints) {
        this.purchaseFixedAssetMaints = purchaseFixedAssetMaints;
    }
    /**
     * Auto generated value setter.
     * @param fixedAssetMaintOrders the fixedAssetMaintOrders to set
    */
    public void setFixedAssetMaintOrders(List<FixedAssetMaintOrder> fixedAssetMaintOrders) {
        this.fixedAssetMaintOrders = fixedAssetMaintOrders;
    }
    /**
     * Auto generated value setter.
     * @param giftCardFulfillments the giftCardFulfillments to set
    */
    public void setGiftCardFulfillments(List<GiftCardFulfillment> giftCardFulfillments) {
        this.giftCardFulfillments = giftCardFulfillments;
    }
    /**
     * Auto generated value setter.
     * @param itemIssuances the itemIssuances to set
    */
    public void setItemIssuances(List<ItemIssuance> itemIssuances) {
        this.itemIssuances = itemIssuances;
    }
    /**
     * Auto generated value setter.
     * @param salesOldOrderItemAssociations the salesOldOrderItemAssociations to set
    */
    public void setSalesOldOrderItemAssociations(List<OldOrderItemAssociation> salesOldOrderItemAssociations) {
        this.salesOldOrderItemAssociations = salesOldOrderItemAssociations;
    }
    /**
     * Auto generated value setter.
     * @param purchaseOldOrderItemAssociations the purchaseOldOrderItemAssociations to set
    */
    public void setPurchaseOldOrderItemAssociations(List<OldOrderItemAssociation> purchaseOldOrderItemAssociations) {
        this.purchaseOldOrderItemAssociations = purchaseOldOrderItemAssociations;
    }
    /**
     * Auto generated value setter.
     * @param oldOrderItemInventoryReses the oldOrderItemInventoryReses to set
    */
    public void setOldOrderItemInventoryReses(List<OldOrderItemInventoryRes> oldOrderItemInventoryReses) {
        this.oldOrderItemInventoryReses = oldOrderItemInventoryReses;
    }
    /**
     * Auto generated value setter.
     * @param oldOrderShipmentPreferences the oldOrderShipmentPreferences to set
    */
    public void setOldOrderShipmentPreferences(List<OldOrderShipmentPreference> oldOrderShipmentPreferences) {
        this.oldOrderShipmentPreferences = oldOrderShipmentPreferences;
    }
    /**
     * Auto generated value setter.
     * @param oldValueLinkFulfillments the oldValueLinkFulfillments to set
    */
    public void setOldValueLinkFulfillments(List<OldValueLinkFulfillment> oldValueLinkFulfillments) {
        this.oldValueLinkFulfillments = oldValueLinkFulfillments;
    }
    /**
     * Auto generated value setter.
     * @param orderAdjustments the orderAdjustments to set
    */
    public void setOrderAdjustments(List<OrderAdjustment> orderAdjustments) {
        this.orderAdjustments = orderAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param orderAttributes the orderAttributes to set
    */
    public void setOrderAttributes(List<OrderAttribute> orderAttributes) {
        this.orderAttributes = orderAttributes;
    }
    /**
     * Auto generated value setter.
     * @param orderContactMeches the orderContactMeches to set
    */
    public void setOrderContactMeches(List<OrderContactMech> orderContactMeches) {
        this.orderContactMeches = orderContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderContents the orderContents to set
    */
    public void setOrderContents(List<OrderContent> orderContents) {
        this.orderContents = orderContents;
    }
    /**
     * Auto generated value setter.
     * @param orderDeliverySchedules the orderDeliverySchedules to set
    */
    public void setOrderDeliverySchedules(List<OrderDeliverySchedule> orderDeliverySchedules) {
        this.orderDeliverySchedules = orderDeliverySchedules;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaderContents the orderHeaderContents to set
    */
    public void setOrderHeaderContents(List<OrderHeaderContent> orderHeaderContents) {
        this.orderHeaderContents = orderHeaderContents;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaderNotes the orderHeaderNotes to set
    */
    public void setOrderHeaderNotes(List<OrderHeaderNote> orderHeaderNotes) {
        this.orderHeaderNotes = orderHeaderNotes;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaderWorkEfforts the orderHeaderWorkEfforts to set
    */
    public void setOrderHeaderWorkEfforts(List<OrderHeaderWorkEffort> orderHeaderWorkEfforts) {
        this.orderHeaderWorkEfforts = orderHeaderWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param orderItems the orderItems to set
    */
    public void setOrderItems(List<OrderItem> orderItems) {
        this.orderItems = orderItems;
    }
    /**
     * Auto generated value setter.
     * @param fromOrderItemAssocs the fromOrderItemAssocs to set
    */
    public void setFromOrderItemAssocs(List<OrderItemAssoc> fromOrderItemAssocs) {
        this.fromOrderItemAssocs = fromOrderItemAssocs;
    }
    /**
     * Auto generated value setter.
     * @param toOrderItemAssocs the toOrderItemAssocs to set
    */
    public void setToOrderItemAssocs(List<OrderItemAssoc> toOrderItemAssocs) {
        this.toOrderItemAssocs = toOrderItemAssocs;
    }
    /**
     * Auto generated value setter.
     * @param orderItemBillings the orderItemBillings to set
    */
    public void setOrderItemBillings(List<OrderItemBilling> orderItemBillings) {
        this.orderItemBillings = orderItemBillings;
    }
    /**
     * Auto generated value setter.
     * @param orderItemContactMeches the orderItemContactMeches to set
    */
    public void setOrderItemContactMeches(List<OrderItemContactMech> orderItemContactMeches) {
        this.orderItemContactMeches = orderItemContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderItemGroups the orderItemGroups to set
    */
    public void setOrderItemGroups(List<OrderItemGroup> orderItemGroups) {
        this.orderItemGroups = orderItemGroups;
    }
    /**
     * Auto generated value setter.
     * @param orderItemPriceInfoes the orderItemPriceInfoes to set
    */
    public void setOrderItemPriceInfoes(List<OrderItemPriceInfo> orderItemPriceInfoes) {
        this.orderItemPriceInfoes = orderItemPriceInfoes;
    }
    /**
     * Auto generated value setter.
     * @param orderItemRoles the orderItemRoles to set
    */
    public void setOrderItemRoles(List<OrderItemRole> orderItemRoles) {
        this.orderItemRoles = orderItemRoles;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGroups the orderItemShipGroups to set
    */
    public void setOrderItemShipGroups(List<OrderItemShipGroup> orderItemShipGroups) {
        this.orderItemShipGroups = orderItemShipGroups;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGroupAssocs the orderItemShipGroupAssocs to set
    */
    public void setOrderItemShipGroupAssocs(List<OrderItemShipGroupAssoc> orderItemShipGroupAssocs) {
        this.orderItemShipGroupAssocs = orderItemShipGroupAssocs;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGrpInvReses the orderItemShipGrpInvReses to set
    */
    public void setOrderItemShipGrpInvReses(List<OrderItemShipGrpInvRes> orderItemShipGrpInvReses) {
        this.orderItemShipGrpInvReses = orderItemShipGrpInvReses;
    }
    /**
     * Auto generated value setter.
     * @param orderNotifications the orderNotifications to set
    */
    public void setOrderNotifications(List<OrderNotification> orderNotifications) {
        this.orderNotifications = orderNotifications;
    }
    /**
     * Auto generated value setter.
     * @param orderPaymentPreferences the orderPaymentPreferences to set
    */
    public void setOrderPaymentPreferences(List<OrderPaymentPreference> orderPaymentPreferences) {
        this.orderPaymentPreferences = orderPaymentPreferences;
    }
    /**
     * Auto generated value setter.
     * @param orderRequirementCommitments the orderRequirementCommitments to set
    */
    public void setOrderRequirementCommitments(List<OrderRequirementCommitment> orderRequirementCommitments) {
        this.orderRequirementCommitments = orderRequirementCommitments;
    }
    /**
     * Auto generated value setter.
     * @param orderRoles the orderRoles to set
    */
    public void setOrderRoles(List<OrderRole> orderRoles) {
        this.orderRoles = orderRoles;
    }
    /**
     * Auto generated value setter.
     * @param orderShipGroupPrioritys the orderShipGroupPrioritys to set
    */
    public void setOrderShipGroupPrioritys(List<OrderShipGroupPriority> orderShipGroupPrioritys) {
        this.orderShipGroupPrioritys = orderShipGroupPrioritys;
    }
    /**
     * Auto generated value setter.
     * @param orderShipments the orderShipments to set
    */
    public void setOrderShipments(List<OrderShipment> orderShipments) {
        this.orderShipments = orderShipments;
    }
    /**
     * Auto generated value setter.
     * @param orderStatuses the orderStatuses to set
    */
    public void setOrderStatuses(List<OrderStatus> orderStatuses) {
        this.orderStatuses = orderStatuses;
    }
    /**
     * Auto generated value setter.
     * @param orderTerms the orderTerms to set
    */
    public void setOrderTerms(List<OrderTerm> orderTerms) {
        this.orderTerms = orderTerms;
    }
    /**
     * Auto generated value setter.
     * @param primaryPicklistBins the primaryPicklistBins to set
    */
    public void setPrimaryPicklistBins(List<PicklistBin> primaryPicklistBins) {
        this.primaryPicklistBins = primaryPicklistBins;
    }
    /**
     * Auto generated value setter.
     * @param picklistItems the picklistItems to set
    */
    public void setPicklistItems(List<PicklistItem> picklistItems) {
        this.picklistItems = picklistItems;
    }
    /**
     * Auto generated value setter.
     * @param posTerminalLogs the posTerminalLogs to set
    */
    public void setPosTerminalLogs(List<PosTerminalLog> posTerminalLogs) {
        this.posTerminalLogs = posTerminalLogs;
    }
    /**
     * Auto generated value setter.
     * @param productOrderItems the productOrderItems to set
    */
    public void setProductOrderItems(List<ProductOrderItem> productOrderItems) {
        this.productOrderItems = productOrderItems;
    }
    /**
     * Auto generated value setter.
     * @param engagementProductOrderItems the engagementProductOrderItems to set
    */
    public void setEngagementProductOrderItems(List<ProductOrderItem> engagementProductOrderItems) {
        this.engagementProductOrderItems = engagementProductOrderItems;
    }
    /**
     * Auto generated value setter.
     * @param productPromoUses the productPromoUses to set
    */
    public void setProductPromoUses(List<ProductPromoUse> productPromoUses) {
        this.productPromoUses = productPromoUses;
    }
    /**
     * Auto generated value setter.
     * @param returnItems the returnItems to set
    */
    public void setReturnItems(List<ReturnItem> returnItems) {
        this.returnItems = returnItems;
    }
    /**
     * Auto generated value setter.
     * @param returnItemResponses the returnItemResponses to set
    */
    public void setReturnItemResponses(List<ReturnItemResponse> returnItemResponses) {
        this.returnItemResponses = returnItemResponses;
    }
    /**
     * Auto generated value setter.
     * @param primaryShipments the primaryShipments to set
    */
    public void setPrimaryShipments(List<Shipment> primaryShipments) {
        this.primaryShipments = primaryShipments;
    }
    /**
     * Auto generated value setter.
     * @param shipmentReceipts the shipmentReceipts to set
    */
    public void setShipmentReceipts(List<ShipmentReceipt> shipmentReceipts) {
        this.shipmentReceipts = shipmentReceipts;
    }
    /**
     * Auto generated value setter.
     * @param subscriptions the subscriptions to set
    */
    public void setSubscriptions(List<Subscription> subscriptions) {
        this.subscriptions = subscriptions;
    }
    /**
     * Auto generated value setter.
     * @param surveyResponses the surveyResponses to set
    */
    public void setSurveyResponses(List<SurveyResponse> surveyResponses) {
        this.surveyResponses = surveyResponses;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodeOrders the trackingCodeOrders to set
    */
    public void setTrackingCodeOrders(List<TrackingCodeOrder> trackingCodeOrders) {
        this.trackingCodeOrders = trackingCodeOrders;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodeOrderReturns the trackingCodeOrderReturns to set
    */
    public void setTrackingCodeOrderReturns(List<TrackingCodeOrderReturn> trackingCodeOrderReturns) {
        this.trackingCodeOrderReturns = trackingCodeOrderReturns;
    }
    /**
     * Auto generated value setter.
     * @param workOrderItemFulfillments the workOrderItemFulfillments to set
    */
    public void setWorkOrderItemFulfillments(List<WorkOrderItemFulfillment> workOrderItemFulfillments) {
        this.workOrderItemFulfillments = workOrderItemFulfillments;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addCommunicationEventOrder(CommunicationEventOrder communicationEventOrder) {
        if (this.communicationEventOrders == null) {
            this.communicationEventOrders = new ArrayList<CommunicationEventOrder>();
        }
        this.communicationEventOrders.add(communicationEventOrder);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCommunicationEventOrder(CommunicationEventOrder communicationEventOrder) {
        if (this.communicationEventOrders == null) {
            return;
        }
        this.communicationEventOrders.remove(communicationEventOrder);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCommunicationEventOrder() {
        if (this.communicationEventOrders == null) {
            return;
        }
        this.communicationEventOrders.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFixedAssetMaintOrder(FixedAssetMaintOrder fixedAssetMaintOrder) {
        if (this.fixedAssetMaintOrders == null) {
            this.fixedAssetMaintOrders = new ArrayList<FixedAssetMaintOrder>();
        }
        this.fixedAssetMaintOrders.add(fixedAssetMaintOrder);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFixedAssetMaintOrder(FixedAssetMaintOrder fixedAssetMaintOrder) {
        if (this.fixedAssetMaintOrders == null) {
            return;
        }
        this.fixedAssetMaintOrders.remove(fixedAssetMaintOrder);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFixedAssetMaintOrder() {
        if (this.fixedAssetMaintOrders == null) {
            return;
        }
        this.fixedAssetMaintOrders.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addSalesOldOrderItemAssociation(OldOrderItemAssociation salesOldOrderItemAssociation) {
        if (this.salesOldOrderItemAssociations == null) {
            this.salesOldOrderItemAssociations = new ArrayList<OldOrderItemAssociation>();
        }
        this.salesOldOrderItemAssociations.add(salesOldOrderItemAssociation);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSalesOldOrderItemAssociation(OldOrderItemAssociation salesOldOrderItemAssociation) {
        if (this.salesOldOrderItemAssociations == null) {
            return;
        }
        this.salesOldOrderItemAssociations.remove(salesOldOrderItemAssociation);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSalesOldOrderItemAssociation() {
        if (this.salesOldOrderItemAssociations == null) {
            return;
        }
        this.salesOldOrderItemAssociations.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPurchaseOldOrderItemAssociation(OldOrderItemAssociation purchaseOldOrderItemAssociation) {
        if (this.purchaseOldOrderItemAssociations == null) {
            this.purchaseOldOrderItemAssociations = new ArrayList<OldOrderItemAssociation>();
        }
        this.purchaseOldOrderItemAssociations.add(purchaseOldOrderItemAssociation);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePurchaseOldOrderItemAssociation(OldOrderItemAssociation purchaseOldOrderItemAssociation) {
        if (this.purchaseOldOrderItemAssociations == null) {
            return;
        }
        this.purchaseOldOrderItemAssociations.remove(purchaseOldOrderItemAssociation);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPurchaseOldOrderItemAssociation() {
        if (this.purchaseOldOrderItemAssociations == null) {
            return;
        }
        this.purchaseOldOrderItemAssociations.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOldOrderItemInventoryRese(OldOrderItemInventoryRes oldOrderItemInventoryRese) {
        if (this.oldOrderItemInventoryReses == null) {
            this.oldOrderItemInventoryReses = new ArrayList<OldOrderItemInventoryRes>();
        }
        this.oldOrderItemInventoryReses.add(oldOrderItemInventoryRese);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOldOrderItemInventoryRese(OldOrderItemInventoryRes oldOrderItemInventoryRese) {
        if (this.oldOrderItemInventoryReses == null) {
            return;
        }
        this.oldOrderItemInventoryReses.remove(oldOrderItemInventoryRese);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOldOrderItemInventoryRese() {
        if (this.oldOrderItemInventoryReses == null) {
            return;
        }
        this.oldOrderItemInventoryReses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOldOrderShipmentPreference(OldOrderShipmentPreference oldOrderShipmentPreference) {
        if (this.oldOrderShipmentPreferences == null) {
            this.oldOrderShipmentPreferences = new ArrayList<OldOrderShipmentPreference>();
        }
        this.oldOrderShipmentPreferences.add(oldOrderShipmentPreference);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOldOrderShipmentPreference(OldOrderShipmentPreference oldOrderShipmentPreference) {
        if (this.oldOrderShipmentPreferences == null) {
            return;
        }
        this.oldOrderShipmentPreferences.remove(oldOrderShipmentPreference);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOldOrderShipmentPreference() {
        if (this.oldOrderShipmentPreferences == null) {
            return;
        }
        this.oldOrderShipmentPreferences.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderAttribute(OrderAttribute orderAttribute) {
        if (this.orderAttributes == null) {
            this.orderAttributes = new ArrayList<OrderAttribute>();
        }
        this.orderAttributes.add(orderAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderAttribute(OrderAttribute orderAttribute) {
        if (this.orderAttributes == null) {
            return;
        }
        this.orderAttributes.remove(orderAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderAttribute() {
        if (this.orderAttributes == null) {
            return;
        }
        this.orderAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderContactMeche(OrderContactMech orderContactMeche) {
        if (this.orderContactMeches == null) {
            this.orderContactMeches = new ArrayList<OrderContactMech>();
        }
        this.orderContactMeches.add(orderContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderContactMeche(OrderContactMech orderContactMeche) {
        if (this.orderContactMeches == null) {
            return;
        }
        this.orderContactMeches.remove(orderContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderContactMeche() {
        if (this.orderContactMeches == null) {
            return;
        }
        this.orderContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderContent(OrderContent orderContent) {
        if (this.orderContents == null) {
            this.orderContents = new ArrayList<OrderContent>();
        }
        this.orderContents.add(orderContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderContent(OrderContent orderContent) {
        if (this.orderContents == null) {
            return;
        }
        this.orderContents.remove(orderContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderContent() {
        if (this.orderContents == null) {
            return;
        }
        this.orderContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderDeliverySchedule(OrderDeliverySchedule orderDeliverySchedule) {
        if (this.orderDeliverySchedules == null) {
            this.orderDeliverySchedules = new ArrayList<OrderDeliverySchedule>();
        }
        this.orderDeliverySchedules.add(orderDeliverySchedule);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderDeliverySchedule(OrderDeliverySchedule orderDeliverySchedule) {
        if (this.orderDeliverySchedules == null) {
            return;
        }
        this.orderDeliverySchedules.remove(orderDeliverySchedule);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderDeliverySchedule() {
        if (this.orderDeliverySchedules == null) {
            return;
        }
        this.orderDeliverySchedules.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderHeaderContent(OrderHeaderContent orderHeaderContent) {
        if (this.orderHeaderContents == null) {
            this.orderHeaderContents = new ArrayList<OrderHeaderContent>();
        }
        this.orderHeaderContents.add(orderHeaderContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderHeaderContent(OrderHeaderContent orderHeaderContent) {
        if (this.orderHeaderContents == null) {
            return;
        }
        this.orderHeaderContents.remove(orderHeaderContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderHeaderContent() {
        if (this.orderHeaderContents == null) {
            return;
        }
        this.orderHeaderContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderHeaderNote(OrderHeaderNote orderHeaderNote) {
        if (this.orderHeaderNotes == null) {
            this.orderHeaderNotes = new ArrayList<OrderHeaderNote>();
        }
        this.orderHeaderNotes.add(orderHeaderNote);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderHeaderNote(OrderHeaderNote orderHeaderNote) {
        if (this.orderHeaderNotes == null) {
            return;
        }
        this.orderHeaderNotes.remove(orderHeaderNote);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderHeaderNote() {
        if (this.orderHeaderNotes == null) {
            return;
        }
        this.orderHeaderNotes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderHeaderWorkEffort(OrderHeaderWorkEffort orderHeaderWorkEffort) {
        if (this.orderHeaderWorkEfforts == null) {
            this.orderHeaderWorkEfforts = new ArrayList<OrderHeaderWorkEffort>();
        }
        this.orderHeaderWorkEfforts.add(orderHeaderWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderHeaderWorkEffort(OrderHeaderWorkEffort orderHeaderWorkEffort) {
        if (this.orderHeaderWorkEfforts == null) {
            return;
        }
        this.orderHeaderWorkEfforts.remove(orderHeaderWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderHeaderWorkEffort() {
        if (this.orderHeaderWorkEfforts == null) {
            return;
        }
        this.orderHeaderWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItem(OrderItem orderItem) {
        if (this.orderItems == null) {
            this.orderItems = new ArrayList<OrderItem>();
        }
        this.orderItems.add(orderItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItem(OrderItem orderItem) {
        if (this.orderItems == null) {
            return;
        }
        this.orderItems.remove(orderItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItem() {
        if (this.orderItems == null) {
            return;
        }
        this.orderItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFromOrderItemAssoc(OrderItemAssoc fromOrderItemAssoc) {
        if (this.fromOrderItemAssocs == null) {
            this.fromOrderItemAssocs = new ArrayList<OrderItemAssoc>();
        }
        this.fromOrderItemAssocs.add(fromOrderItemAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFromOrderItemAssoc(OrderItemAssoc fromOrderItemAssoc) {
        if (this.fromOrderItemAssocs == null) {
            return;
        }
        this.fromOrderItemAssocs.remove(fromOrderItemAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFromOrderItemAssoc() {
        if (this.fromOrderItemAssocs == null) {
            return;
        }
        this.fromOrderItemAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addToOrderItemAssoc(OrderItemAssoc toOrderItemAssoc) {
        if (this.toOrderItemAssocs == null) {
            this.toOrderItemAssocs = new ArrayList<OrderItemAssoc>();
        }
        this.toOrderItemAssocs.add(toOrderItemAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeToOrderItemAssoc(OrderItemAssoc toOrderItemAssoc) {
        if (this.toOrderItemAssocs == null) {
            return;
        }
        this.toOrderItemAssocs.remove(toOrderItemAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearToOrderItemAssoc() {
        if (this.toOrderItemAssocs == null) {
            return;
        }
        this.toOrderItemAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemBilling(OrderItemBilling orderItemBilling) {
        if (this.orderItemBillings == null) {
            this.orderItemBillings = new ArrayList<OrderItemBilling>();
        }
        this.orderItemBillings.add(orderItemBilling);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemBilling(OrderItemBilling orderItemBilling) {
        if (this.orderItemBillings == null) {
            return;
        }
        this.orderItemBillings.remove(orderItemBilling);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemBilling() {
        if (this.orderItemBillings == null) {
            return;
        }
        this.orderItemBillings.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemContactMeche(OrderItemContactMech orderItemContactMeche) {
        if (this.orderItemContactMeches == null) {
            this.orderItemContactMeches = new ArrayList<OrderItemContactMech>();
        }
        this.orderItemContactMeches.add(orderItemContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemContactMeche(OrderItemContactMech orderItemContactMeche) {
        if (this.orderItemContactMeches == null) {
            return;
        }
        this.orderItemContactMeches.remove(orderItemContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemContactMeche() {
        if (this.orderItemContactMeches == null) {
            return;
        }
        this.orderItemContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemGroup(OrderItemGroup orderItemGroup) {
        if (this.orderItemGroups == null) {
            this.orderItemGroups = new ArrayList<OrderItemGroup>();
        }
        this.orderItemGroups.add(orderItemGroup);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemGroup(OrderItemGroup orderItemGroup) {
        if (this.orderItemGroups == null) {
            return;
        }
        this.orderItemGroups.remove(orderItemGroup);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemGroup() {
        if (this.orderItemGroups == null) {
            return;
        }
        this.orderItemGroups.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemRole(OrderItemRole orderItemRole) {
        if (this.orderItemRoles == null) {
            this.orderItemRoles = new ArrayList<OrderItemRole>();
        }
        this.orderItemRoles.add(orderItemRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemRole(OrderItemRole orderItemRole) {
        if (this.orderItemRoles == null) {
            return;
        }
        this.orderItemRoles.remove(orderItemRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemRole() {
        if (this.orderItemRoles == null) {
            return;
        }
        this.orderItemRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemShipGroup(OrderItemShipGroup orderItemShipGroup) {
        if (this.orderItemShipGroups == null) {
            this.orderItemShipGroups = new ArrayList<OrderItemShipGroup>();
        }
        this.orderItemShipGroups.add(orderItemShipGroup);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemShipGroup(OrderItemShipGroup orderItemShipGroup) {
        if (this.orderItemShipGroups == null) {
            return;
        }
        this.orderItemShipGroups.remove(orderItemShipGroup);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemShipGroup() {
        if (this.orderItemShipGroups == null) {
            return;
        }
        this.orderItemShipGroups.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemShipGroupAssoc(OrderItemShipGroupAssoc orderItemShipGroupAssoc) {
        if (this.orderItemShipGroupAssocs == null) {
            this.orderItemShipGroupAssocs = new ArrayList<OrderItemShipGroupAssoc>();
        }
        this.orderItemShipGroupAssocs.add(orderItemShipGroupAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemShipGroupAssoc(OrderItemShipGroupAssoc orderItemShipGroupAssoc) {
        if (this.orderItemShipGroupAssocs == null) {
            return;
        }
        this.orderItemShipGroupAssocs.remove(orderItemShipGroupAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemShipGroupAssoc() {
        if (this.orderItemShipGroupAssocs == null) {
            return;
        }
        this.orderItemShipGroupAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemShipGrpInvRese(OrderItemShipGrpInvRes orderItemShipGrpInvRese) {
        if (this.orderItemShipGrpInvReses == null) {
            this.orderItemShipGrpInvReses = new ArrayList<OrderItemShipGrpInvRes>();
        }
        this.orderItemShipGrpInvReses.add(orderItemShipGrpInvRese);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemShipGrpInvRese(OrderItemShipGrpInvRes orderItemShipGrpInvRese) {
        if (this.orderItemShipGrpInvReses == null) {
            return;
        }
        this.orderItemShipGrpInvReses.remove(orderItemShipGrpInvRese);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemShipGrpInvRese() {
        if (this.orderItemShipGrpInvReses == null) {
            return;
        }
        this.orderItemShipGrpInvReses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderRequirementCommitment(OrderRequirementCommitment orderRequirementCommitment) {
        if (this.orderRequirementCommitments == null) {
            this.orderRequirementCommitments = new ArrayList<OrderRequirementCommitment>();
        }
        this.orderRequirementCommitments.add(orderRequirementCommitment);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderRequirementCommitment(OrderRequirementCommitment orderRequirementCommitment) {
        if (this.orderRequirementCommitments == null) {
            return;
        }
        this.orderRequirementCommitments.remove(orderRequirementCommitment);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderRequirementCommitment() {
        if (this.orderRequirementCommitments == null) {
            return;
        }
        this.orderRequirementCommitments.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderRole(OrderRole orderRole) {
        if (this.orderRoles == null) {
            this.orderRoles = new ArrayList<OrderRole>();
        }
        this.orderRoles.add(orderRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderRole(OrderRole orderRole) {
        if (this.orderRoles == null) {
            return;
        }
        this.orderRoles.remove(orderRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderRole() {
        if (this.orderRoles == null) {
            return;
        }
        this.orderRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderShipGroupPriority(OrderShipGroupPriority orderShipGroupPriority) {
        if (this.orderShipGroupPrioritys == null) {
            this.orderShipGroupPrioritys = new ArrayList<OrderShipGroupPriority>();
        }
        this.orderShipGroupPrioritys.add(orderShipGroupPriority);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderShipGroupPriority(OrderShipGroupPriority orderShipGroupPriority) {
        if (this.orderShipGroupPrioritys == null) {
            return;
        }
        this.orderShipGroupPrioritys.remove(orderShipGroupPriority);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderShipGroupPriority() {
        if (this.orderShipGroupPrioritys == null) {
            return;
        }
        this.orderShipGroupPrioritys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderShipment(OrderShipment orderShipment) {
        if (this.orderShipments == null) {
            this.orderShipments = new ArrayList<OrderShipment>();
        }
        this.orderShipments.add(orderShipment);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderShipment(OrderShipment orderShipment) {
        if (this.orderShipments == null) {
            return;
        }
        this.orderShipments.remove(orderShipment);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderShipment() {
        if (this.orderShipments == null) {
            return;
        }
        this.orderShipments.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderTerm(OrderTerm orderTerm) {
        if (this.orderTerms == null) {
            this.orderTerms = new ArrayList<OrderTerm>();
        }
        this.orderTerms.add(orderTerm);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderTerm(OrderTerm orderTerm) {
        if (this.orderTerms == null) {
            return;
        }
        this.orderTerms.remove(orderTerm);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderTerm() {
        if (this.orderTerms == null) {
            return;
        }
        this.orderTerms.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPicklistItem(PicklistItem picklistItem) {
        if (this.picklistItems == null) {
            this.picklistItems = new ArrayList<PicklistItem>();
        }
        this.picklistItems.add(picklistItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePicklistItem(PicklistItem picklistItem) {
        if (this.picklistItems == null) {
            return;
        }
        this.picklistItems.remove(picklistItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPicklistItem() {
        if (this.picklistItems == null) {
            return;
        }
        this.picklistItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductOrderItem(ProductOrderItem productOrderItem) {
        if (this.productOrderItems == null) {
            this.productOrderItems = new ArrayList<ProductOrderItem>();
        }
        this.productOrderItems.add(productOrderItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductOrderItem(ProductOrderItem productOrderItem) {
        if (this.productOrderItems == null) {
            return;
        }
        this.productOrderItems.remove(productOrderItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductOrderItem() {
        if (this.productOrderItems == null) {
            return;
        }
        this.productOrderItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addEngagementProductOrderItem(ProductOrderItem engagementProductOrderItem) {
        if (this.engagementProductOrderItems == null) {
            this.engagementProductOrderItems = new ArrayList<ProductOrderItem>();
        }
        this.engagementProductOrderItems.add(engagementProductOrderItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeEngagementProductOrderItem(ProductOrderItem engagementProductOrderItem) {
        if (this.engagementProductOrderItems == null) {
            return;
        }
        this.engagementProductOrderItems.remove(engagementProductOrderItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearEngagementProductOrderItem() {
        if (this.engagementProductOrderItems == null) {
            return;
        }
        this.engagementProductOrderItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPromoUse(ProductPromoUse productPromoUse) {
        if (this.productPromoUses == null) {
            this.productPromoUses = new ArrayList<ProductPromoUse>();
        }
        this.productPromoUses.add(productPromoUse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPromoUse(ProductPromoUse productPromoUse) {
        if (this.productPromoUses == null) {
            return;
        }
        this.productPromoUses.remove(productPromoUse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPromoUse() {
        if (this.productPromoUses == null) {
            return;
        }
        this.productPromoUses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addTrackingCodeOrder(TrackingCodeOrder trackingCodeOrder) {
        if (this.trackingCodeOrders == null) {
            this.trackingCodeOrders = new ArrayList<TrackingCodeOrder>();
        }
        this.trackingCodeOrders.add(trackingCodeOrder);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeTrackingCodeOrder(TrackingCodeOrder trackingCodeOrder) {
        if (this.trackingCodeOrders == null) {
            return;
        }
        this.trackingCodeOrders.remove(trackingCodeOrder);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearTrackingCodeOrder() {
        if (this.trackingCodeOrders == null) {
            return;
        }
        this.trackingCodeOrders.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addTrackingCodeOrderReturn(TrackingCodeOrderReturn trackingCodeOrderReturn) {
        if (this.trackingCodeOrderReturns == null) {
            this.trackingCodeOrderReturns = new ArrayList<TrackingCodeOrderReturn>();
        }
        this.trackingCodeOrderReturns.add(trackingCodeOrderReturn);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeTrackingCodeOrderReturn(TrackingCodeOrderReturn trackingCodeOrderReturn) {
        if (this.trackingCodeOrderReturns == null) {
            return;
        }
        this.trackingCodeOrderReturns.remove(trackingCodeOrderReturn);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearTrackingCodeOrderReturn() {
        if (this.trackingCodeOrderReturns == null) {
            return;
        }
        this.trackingCodeOrderReturns.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkOrderItemFulfillment(WorkOrderItemFulfillment workOrderItemFulfillment) {
        if (this.workOrderItemFulfillments == null) {
            this.workOrderItemFulfillments = new ArrayList<WorkOrderItemFulfillment>();
        }
        this.workOrderItemFulfillments.add(workOrderItemFulfillment);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkOrderItemFulfillment(WorkOrderItemFulfillment workOrderItemFulfillment) {
        if (this.workOrderItemFulfillments == null) {
            return;
        }
        this.workOrderItemFulfillments.remove(workOrderItemFulfillment);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkOrderItemFulfillment() {
        if (this.workOrderItemFulfillments == null) {
            return;
        }
        this.workOrderItemFulfillments.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setOrderId((String) mapValue.get("orderId"));
        setOrderTypeId((String) mapValue.get("orderTypeId"));
        setOrderName((String) mapValue.get("orderName"));
        setExternalId((String) mapValue.get("externalId"));
        setSalesChannelEnumId((String) mapValue.get("salesChannelEnumId"));
        setOrderDate((Timestamp) mapValue.get("orderDate"));
        setEntryDate((Timestamp) mapValue.get("entryDate"));
        setVisitId((String) mapValue.get("visitId"));
        setStatusId((String) mapValue.get("statusId"));
        setCreatedBy((String) mapValue.get("createdBy"));
        setFirstAttemptOrderId((String) mapValue.get("firstAttemptOrderId"));
        setCurrencyUom((String) mapValue.get("currencyUom"));
        setSyncStatusId((String) mapValue.get("syncStatusId"));
        setBillingAccountId((String) mapValue.get("billingAccountId"));
        setOriginFacilityId((String) mapValue.get("originFacilityId"));
        setWebSiteId((String) mapValue.get("webSiteId"));
        setProductStoreId((String) mapValue.get("productStoreId"));
        setTerminalId((String) mapValue.get("terminalId"));
        setTransactionId((String) mapValue.get("transactionId"));
        setAutoOrderShoppingListId((String) mapValue.get("autoOrderShoppingListId"));
        setNeedsInventoryIssuance((String) mapValue.get("needsInventoryIssuance"));
        setIsRushOrder((String) mapValue.get("isRushOrder"));
        setInternalCode((String) mapValue.get("internalCode"));
        setRemainingSubTotal(convertToBigDecimal(mapValue.get("remainingSubTotal")));
        setGrandTotal(convertToBigDecimal(mapValue.get("grandTotal")));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setBillFromPartyId((String) mapValue.get("billFromPartyId"));
        setBillToPartyId((String) mapValue.get("billToPartyId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("orderId", getOrderId());
        mapValue.put("orderTypeId", getOrderTypeId());
        mapValue.put("orderName", getOrderName());
        mapValue.put("externalId", getExternalId());
        mapValue.put("salesChannelEnumId", getSalesChannelEnumId());
        mapValue.put("orderDate", getOrderDate());
        mapValue.put("entryDate", getEntryDate());
        mapValue.put("visitId", getVisitId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("createdBy", getCreatedBy());
        mapValue.put("firstAttemptOrderId", getFirstAttemptOrderId());
        mapValue.put("currencyUom", getCurrencyUom());
        mapValue.put("syncStatusId", getSyncStatusId());
        mapValue.put("billingAccountId", getBillingAccountId());
        mapValue.put("originFacilityId", getOriginFacilityId());
        mapValue.put("webSiteId", getWebSiteId());
        mapValue.put("productStoreId", getProductStoreId());
        mapValue.put("terminalId", getTerminalId());
        mapValue.put("transactionId", getTransactionId());
        mapValue.put("autoOrderShoppingListId", getAutoOrderShoppingListId());
        mapValue.put("needsInventoryIssuance", getNeedsInventoryIssuance());
        mapValue.put("isRushOrder", getIsRushOrder());
        mapValue.put("internalCode", getInternalCode());
        mapValue.put("remainingSubTotal", getRemainingSubTotal());
        mapValue.put("grandTotal", getGrandTotal());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("billFromPartyId", getBillFromPartyId());
        mapValue.put("billToPartyId", getBillToPartyId());
        return mapValue;
    }


}
