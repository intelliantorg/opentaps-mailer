package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity ProductCategoryAndMember.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectProductCategoryAndMembers", query="SELECT PC.PRODUCT_CATEGORY_ID AS \"productCategoryId\",PC.PRODUCT_CATEGORY_TYPE_ID AS \"productCategoryTypeId\",PC.PRIMARY_PARENT_CATEGORY_ID AS \"primaryParentCategoryId\",PC.CATEGORY_NAME AS \"categoryName\",PC.DESCRIPTION AS \"description\",PC.LONG_DESCRIPTION AS \"longDescription\",PC.CATEGORY_IMAGE_URL AS \"categoryImageUrl\",PC.LINK_ONE_IMAGE_URL AS \"linkOneImageUrl\",PC.LINK_TWO_IMAGE_URL AS \"linkTwoImageUrl\",PC.DETAIL_SCREEN AS \"detailScreen\",PC.SHOW_IN_SELECT AS \"showInSelect\",PCM.PRODUCT_ID AS \"productId\",PCM.FROM_DATE AS \"fromDate\",PCM.THRU_DATE AS \"thruDate\",PCM.COMMENTS AS \"comments\",PCM.SEQUENCE_NUM AS \"sequenceNum\",PCM.QUANTITY AS \"quantity\" FROM PRODUCT_CATEGORY PC INNER JOIN PRODUCT_CATEGORY_MEMBER PCM ON PC.PRODUCT_CATEGORY_ID = PCM.PRODUCT_CATEGORY_ID", resultSetMapping="ProductCategoryAndMemberMapping")
@SqlResultSetMapping(name="ProductCategoryAndMemberMapping", entities={
@EntityResult(entityClass=ProductCategoryAndMember.class, fields = {
@FieldResult(name="productCategoryId", column="productCategoryId")
,@FieldResult(name="productCategoryTypeId", column="productCategoryTypeId")
,@FieldResult(name="primaryParentCategoryId", column="primaryParentCategoryId")
,@FieldResult(name="categoryName", column="categoryName")
,@FieldResult(name="description", column="description")
,@FieldResult(name="longDescription", column="longDescription")
,@FieldResult(name="categoryImageUrl", column="categoryImageUrl")
,@FieldResult(name="linkOneImageUrl", column="linkOneImageUrl")
,@FieldResult(name="linkTwoImageUrl", column="linkTwoImageUrl")
,@FieldResult(name="detailScreen", column="detailScreen")
,@FieldResult(name="showInSelect", column="showInSelect")
,@FieldResult(name="productId", column="productId")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="thruDate", column="thruDate")
,@FieldResult(name="comments", column="comments")
,@FieldResult(name="sequenceNum", column="sequenceNum")
,@FieldResult(name="quantity", column="quantity")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class ProductCategoryAndMember extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productCategoryId", "PC.PRODUCT_CATEGORY_ID");
        fields.put("productCategoryTypeId", "PC.PRODUCT_CATEGORY_TYPE_ID");
        fields.put("primaryParentCategoryId", "PC.PRIMARY_PARENT_CATEGORY_ID");
        fields.put("categoryName", "PC.CATEGORY_NAME");
        fields.put("description", "PC.DESCRIPTION");
        fields.put("longDescription", "PC.LONG_DESCRIPTION");
        fields.put("categoryImageUrl", "PC.CATEGORY_IMAGE_URL");
        fields.put("linkOneImageUrl", "PC.LINK_ONE_IMAGE_URL");
        fields.put("linkTwoImageUrl", "PC.LINK_TWO_IMAGE_URL");
        fields.put("detailScreen", "PC.DETAIL_SCREEN");
        fields.put("showInSelect", "PC.SHOW_IN_SELECT");
        fields.put("productId", "PCM.PRODUCT_ID");
        fields.put("fromDate", "PCM.FROM_DATE");
        fields.put("thruDate", "PCM.THRU_DATE");
        fields.put("comments", "PCM.COMMENTS");
        fields.put("sequenceNum", "PCM.SEQUENCE_NUM");
        fields.put("quantity", "PCM.QUANTITY");
fieldMapColumns.put("ProductCategoryAndMember", fields);
}
  public static enum Fields implements EntityFieldInterface<ProductCategoryAndMember> {
    productCategoryId("productCategoryId"),
    productCategoryTypeId("productCategoryTypeId"),
    primaryParentCategoryId("primaryParentCategoryId"),
    categoryName("categoryName"),
    description("description"),
    longDescription("longDescription"),
    categoryImageUrl("categoryImageUrl"),
    linkOneImageUrl("linkOneImageUrl"),
    linkTwoImageUrl("linkTwoImageUrl"),
    detailScreen("detailScreen"),
    showInSelect("showInSelect"),
    productId("productId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    comments("comments"),
    sequenceNum("sequenceNum"),
    quantity("quantity");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    private String productCategoryId;
    
    
    private String productCategoryTypeId;
    
    
    private String primaryParentCategoryId;
    
    
    private String categoryName;
    
    
    private String description;
    
    
    private String longDescription;
    
    
    private String categoryImageUrl;
    
    
    private String linkOneImageUrl;
    
    
    private String linkTwoImageUrl;
    
    
    private String detailScreen;
    
    
    private String showInSelect;
    
    
    private String productId;
    
    
    private Timestamp fromDate;
    
    
    private Timestamp thruDate;
    
    
    private String comments;
    
    
    private Long sequenceNum;
    
    
    private BigDecimal quantity;
    private transient ProductCategoryMember productCategoryMember = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_CATEGORY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductCategory productCategory = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Product product = null;

  /**
   * Default constructor.
   */
  public ProductCategoryAndMember() {
      super();
      this.baseEntityName = "ProductCategoryAndMember";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productCategoryId");this.primaryKeyNames.add("productId");this.primaryKeyNames.add("fromDate");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProductCategoryAndMember(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param productCategoryId the productCategoryId to set
     */
    private void setProductCategoryId(String productCategoryId) {
        this.productCategoryId = productCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param productCategoryTypeId the productCategoryTypeId to set
     */
    private void setProductCategoryTypeId(String productCategoryTypeId) {
        this.productCategoryTypeId = productCategoryTypeId;
    }
    /**
     * Auto generated value setter.
     * @param primaryParentCategoryId the primaryParentCategoryId to set
     */
    private void setPrimaryParentCategoryId(String primaryParentCategoryId) {
        this.primaryParentCategoryId = primaryParentCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param categoryName the categoryName to set
     */
    private void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    private void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param longDescription the longDescription to set
     */
    private void setLongDescription(String longDescription) {
        this.longDescription = longDescription;
    }
    /**
     * Auto generated value setter.
     * @param categoryImageUrl the categoryImageUrl to set
     */
    private void setCategoryImageUrl(String categoryImageUrl) {
        this.categoryImageUrl = categoryImageUrl;
    }
    /**
     * Auto generated value setter.
     * @param linkOneImageUrl the linkOneImageUrl to set
     */
    private void setLinkOneImageUrl(String linkOneImageUrl) {
        this.linkOneImageUrl = linkOneImageUrl;
    }
    /**
     * Auto generated value setter.
     * @param linkTwoImageUrl the linkTwoImageUrl to set
     */
    private void setLinkTwoImageUrl(String linkTwoImageUrl) {
        this.linkTwoImageUrl = linkTwoImageUrl;
    }
    /**
     * Auto generated value setter.
     * @param detailScreen the detailScreen to set
     */
    private void setDetailScreen(String detailScreen) {
        this.detailScreen = detailScreen;
    }
    /**
     * Auto generated value setter.
     * @param showInSelect the showInSelect to set
     */
    private void setShowInSelect(String showInSelect) {
        this.showInSelect = showInSelect;
    }
    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    private void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    private void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    private void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    private void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param sequenceNum the sequenceNum to set
     */
    private void setSequenceNum(Long sequenceNum) {
        this.sequenceNum = sequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param quantity the quantity to set
     */
    private void setQuantity(BigDecimal quantity) {
        this.quantity = quantity;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductCategoryId() {
        return this.productCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductCategoryTypeId() {
        return this.productCategoryTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPrimaryParentCategoryId() {
        return this.primaryParentCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCategoryName() {
        return this.categoryName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLongDescription() {
        return this.longDescription;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCategoryImageUrl() {
        return this.categoryImageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLinkOneImageUrl() {
        return this.linkOneImageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLinkTwoImageUrl() {
        return this.linkTwoImageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDetailScreen() {
        return this.detailScreen;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShowInSelect() {
        return this.showInSelect;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getSequenceNum() {
        return this.sequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantity() {
        return this.quantity;
    }

    /**
     * Auto generated method that gets the related <code>ProductCategoryMember</code> by the relation named <code>ProductCategoryMember</code>.
     * @return the <code>ProductCategoryMember</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductCategoryMember getProductCategoryMember() throws RepositoryException {
        if (this.productCategoryMember == null) {
            this.productCategoryMember = getRelatedOne(ProductCategoryMember.class, "ProductCategoryMember");
        }
        return this.productCategoryMember;
    }
    /**
     * Auto generated method that gets the related <code>ProductCategory</code> by the relation named <code>ProductCategory</code>.
     * @return the <code>ProductCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductCategory getProductCategory() throws RepositoryException {
        if (this.productCategory == null) {
            this.productCategory = getRelatedOne(ProductCategory.class, "ProductCategory");
        }
        return this.productCategory;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>Product</code>.
     * @return the <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public Product getProduct() throws RepositoryException {
        if (this.product == null) {
            this.product = getRelatedOne(Product.class, "Product");
        }
        return this.product;
    }

    /**
     * Auto generated value setter.
     * @param productCategoryMember the productCategoryMember to set
    */
    public void setProductCategoryMember(ProductCategoryMember productCategoryMember) {
        this.productCategoryMember = productCategoryMember;
    }
    /**
     * Auto generated value setter.
     * @param productCategory the productCategory to set
    */
    public void setProductCategory(ProductCategory productCategory) {
        this.productCategory = productCategory;
    }
    /**
     * Auto generated value setter.
     * @param product the product to set
    */
    public void setProduct(Product product) {
        this.product = product;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductCategoryId((String) mapValue.get("productCategoryId"));
        setProductCategoryTypeId((String) mapValue.get("productCategoryTypeId"));
        setPrimaryParentCategoryId((String) mapValue.get("primaryParentCategoryId"));
        setCategoryName((String) mapValue.get("categoryName"));
        setDescription((String) mapValue.get("description"));
        setLongDescription((String) mapValue.get("longDescription"));
        setCategoryImageUrl((String) mapValue.get("categoryImageUrl"));
        setLinkOneImageUrl((String) mapValue.get("linkOneImageUrl"));
        setLinkTwoImageUrl((String) mapValue.get("linkTwoImageUrl"));
        setDetailScreen((String) mapValue.get("detailScreen"));
        setShowInSelect((String) mapValue.get("showInSelect"));
        setProductId((String) mapValue.get("productId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setComments((String) mapValue.get("comments"));
        setSequenceNum((Long) mapValue.get("sequenceNum"));
        setQuantity(convertToBigDecimal(mapValue.get("quantity")));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productCategoryId", getProductCategoryId());
        mapValue.put("productCategoryTypeId", getProductCategoryTypeId());
        mapValue.put("primaryParentCategoryId", getPrimaryParentCategoryId());
        mapValue.put("categoryName", getCategoryName());
        mapValue.put("description", getDescription());
        mapValue.put("longDescription", getLongDescription());
        mapValue.put("categoryImageUrl", getCategoryImageUrl());
        mapValue.put("linkOneImageUrl", getLinkOneImageUrl());
        mapValue.put("linkTwoImageUrl", getLinkTwoImageUrl());
        mapValue.put("detailScreen", getDetailScreen());
        mapValue.put("showInSelect", getShowInSelect());
        mapValue.put("productId", getProductId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("comments", getComments());
        mapValue.put("sequenceNum", getSequenceNum());
        mapValue.put("quantity", getQuantity());
        return mapValue;
    }


}
