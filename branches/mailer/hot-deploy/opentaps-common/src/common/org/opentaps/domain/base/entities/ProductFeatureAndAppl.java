package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity ProductFeatureAndAppl.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectProductFeatureAndAppls", query="SELECT PF.PRODUCT_FEATURE_ID AS \"productFeatureId\",PF.PRODUCT_FEATURE_TYPE_ID AS \"productFeatureTypeId\",PF.PRODUCT_FEATURE_CATEGORY_ID AS \"productFeatureCategoryId\",PF.DESCRIPTION AS \"description\",PF.UOM_ID AS \"uomId\",PF.NUMBER_SPECIFIED AS \"numberSpecified\",PF.DEFAULT_AMOUNT AS \"defaultAmount\",PF.DEFAULT_SEQUENCE_NUM AS \"defaultSequenceNum\",PF.ABBREV AS \"abbrev\",PF.ID_CODE AS \"idCode\",PFA.PRODUCT_ID AS \"productId\",PFA.PRODUCT_FEATURE_APPL_TYPE_ID AS \"productFeatureApplTypeId\",PFA.FROM_DATE AS \"fromDate\",PFA.THRU_DATE AS \"thruDate\",PFA.SEQUENCE_NUM AS \"sequenceNum\",PFA.AMOUNT AS \"amount\",PFA.RECURRING_AMOUNT AS \"recurringAmount\" FROM PRODUCT_FEATURE PF INNER JOIN PRODUCT_FEATURE_APPL PFA ON PF.PRODUCT_FEATURE_ID = PFA.PRODUCT_FEATURE_ID", resultSetMapping="ProductFeatureAndApplMapping")
@SqlResultSetMapping(name="ProductFeatureAndApplMapping", entities={
@EntityResult(entityClass=ProductFeatureAndAppl.class, fields = {
@FieldResult(name="productFeatureId", column="productFeatureId")
,@FieldResult(name="productFeatureTypeId", column="productFeatureTypeId")
,@FieldResult(name="productFeatureCategoryId", column="productFeatureCategoryId")
,@FieldResult(name="description", column="description")
,@FieldResult(name="uomId", column="uomId")
,@FieldResult(name="numberSpecified", column="numberSpecified")
,@FieldResult(name="defaultAmount", column="defaultAmount")
,@FieldResult(name="defaultSequenceNum", column="defaultSequenceNum")
,@FieldResult(name="abbrev", column="abbrev")
,@FieldResult(name="idCode", column="idCode")
,@FieldResult(name="productId", column="productId")
,@FieldResult(name="productFeatureApplTypeId", column="productFeatureApplTypeId")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="thruDate", column="thruDate")
,@FieldResult(name="sequenceNum", column="sequenceNum")
,@FieldResult(name="amount", column="amount")
,@FieldResult(name="recurringAmount", column="recurringAmount")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class ProductFeatureAndAppl extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productFeatureId", "PF.PRODUCT_FEATURE_ID");
        fields.put("productFeatureTypeId", "PF.PRODUCT_FEATURE_TYPE_ID");
        fields.put("productFeatureCategoryId", "PF.PRODUCT_FEATURE_CATEGORY_ID");
        fields.put("description", "PF.DESCRIPTION");
        fields.put("uomId", "PF.UOM_ID");
        fields.put("numberSpecified", "PF.NUMBER_SPECIFIED");
        fields.put("defaultAmount", "PF.DEFAULT_AMOUNT");
        fields.put("defaultSequenceNum", "PF.DEFAULT_SEQUENCE_NUM");
        fields.put("abbrev", "PF.ABBREV");
        fields.put("idCode", "PF.ID_CODE");
        fields.put("productId", "PFA.PRODUCT_ID");
        fields.put("productFeatureApplTypeId", "PFA.PRODUCT_FEATURE_APPL_TYPE_ID");
        fields.put("fromDate", "PFA.FROM_DATE");
        fields.put("thruDate", "PFA.THRU_DATE");
        fields.put("sequenceNum", "PFA.SEQUENCE_NUM");
        fields.put("amount", "PFA.AMOUNT");
        fields.put("recurringAmount", "PFA.RECURRING_AMOUNT");
fieldMapColumns.put("ProductFeatureAndAppl", fields);
}
  public static enum Fields implements EntityFieldInterface<ProductFeatureAndAppl> {
    productFeatureId("productFeatureId"),
    productFeatureTypeId("productFeatureTypeId"),
    productFeatureCategoryId("productFeatureCategoryId"),
    description("description"),
    uomId("uomId"),
    numberSpecified("numberSpecified"),
    defaultAmount("defaultAmount"),
    defaultSequenceNum("defaultSequenceNum"),
    abbrev("abbrev"),
    idCode("idCode"),
    productId("productId"),
    productFeatureApplTypeId("productFeatureApplTypeId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    sequenceNum("sequenceNum"),
    amount("amount"),
    recurringAmount("recurringAmount");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    private String productFeatureId;
    
    
    private String productFeatureTypeId;
    
    
    private String productFeatureCategoryId;
    
    
    private String description;
    
    
    private String uomId;
    
    
    private BigDecimal numberSpecified;
    
    
    private BigDecimal defaultAmount;
    
    
    private Long defaultSequenceNum;
    
    
    private String abbrev;
    
    
    private String idCode;
    
    
    private String productId;
    
    
    private String productFeatureApplTypeId;
    
    
    private Timestamp fromDate;
    
    
    private Timestamp thruDate;
    
    
    private Long sequenceNum;
    
    
    private BigDecimal amount;
    
    
    private BigDecimal recurringAmount;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductFeatureType productFeatureType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_APPL_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductFeatureApplType productFeatureApplType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_FEATURE_CATEGORY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductFeatureCategory productFeatureCategory = null;
    private transient List<SupplierProductFeature> supplierProductFeatures = null;

  /**
   * Default constructor.
   */
  public ProductFeatureAndAppl() {
      super();
      this.baseEntityName = "ProductFeatureAndAppl";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productFeatureId");this.primaryKeyNames.add("productId");this.primaryKeyNames.add("fromDate");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProductFeatureAndAppl(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param productFeatureId the productFeatureId to set
     */
    private void setProductFeatureId(String productFeatureId) {
        this.productFeatureId = productFeatureId;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureTypeId the productFeatureTypeId to set
     */
    private void setProductFeatureTypeId(String productFeatureTypeId) {
        this.productFeatureTypeId = productFeatureTypeId;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureCategoryId the productFeatureCategoryId to set
     */
    private void setProductFeatureCategoryId(String productFeatureCategoryId) {
        this.productFeatureCategoryId = productFeatureCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    private void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param uomId the uomId to set
     */
    private void setUomId(String uomId) {
        this.uomId = uomId;
    }
    /**
     * Auto generated value setter.
     * @param numberSpecified the numberSpecified to set
     */
    private void setNumberSpecified(BigDecimal numberSpecified) {
        this.numberSpecified = numberSpecified;
    }
    /**
     * Auto generated value setter.
     * @param defaultAmount the defaultAmount to set
     */
    private void setDefaultAmount(BigDecimal defaultAmount) {
        this.defaultAmount = defaultAmount;
    }
    /**
     * Auto generated value setter.
     * @param defaultSequenceNum the defaultSequenceNum to set
     */
    private void setDefaultSequenceNum(Long defaultSequenceNum) {
        this.defaultSequenceNum = defaultSequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param abbrev the abbrev to set
     */
    private void setAbbrev(String abbrev) {
        this.abbrev = abbrev;
    }
    /**
     * Auto generated value setter.
     * @param idCode the idCode to set
     */
    private void setIdCode(String idCode) {
        this.idCode = idCode;
    }
    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    private void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureApplTypeId the productFeatureApplTypeId to set
     */
    private void setProductFeatureApplTypeId(String productFeatureApplTypeId) {
        this.productFeatureApplTypeId = productFeatureApplTypeId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    private void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    private void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param sequenceNum the sequenceNum to set
     */
    private void setSequenceNum(Long sequenceNum) {
        this.sequenceNum = sequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param amount the amount to set
     */
    private void setAmount(BigDecimal amount) {
        this.amount = amount;
    }
    /**
     * Auto generated value setter.
     * @param recurringAmount the recurringAmount to set
     */
    private void setRecurringAmount(BigDecimal recurringAmount) {
        this.recurringAmount = recurringAmount;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductFeatureId() {
        return this.productFeatureId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductFeatureTypeId() {
        return this.productFeatureTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductFeatureCategoryId() {
        return this.productFeatureCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUomId() {
        return this.uomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getNumberSpecified() {
        return this.numberSpecified;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getDefaultAmount() {
        return this.defaultAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getDefaultSequenceNum() {
        return this.defaultSequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAbbrev() {
        return this.abbrev;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIdCode() {
        return this.idCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductFeatureApplTypeId() {
        return this.productFeatureApplTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getSequenceNum() {
        return this.sequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getAmount() {
        return this.amount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getRecurringAmount() {
        return this.recurringAmount;
    }

    /**
     * Auto generated method that gets the related <code>ProductFeatureType</code> by the relation named <code>ProductFeatureType</code>.
     * @return the <code>ProductFeatureType</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductFeatureType getProductFeatureType() throws RepositoryException {
        if (this.productFeatureType == null) {
            this.productFeatureType = getRelatedOne(ProductFeatureType.class, "ProductFeatureType");
        }
        return this.productFeatureType;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureApplType</code> by the relation named <code>ProductFeatureApplType</code>.
     * @return the <code>ProductFeatureApplType</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductFeatureApplType getProductFeatureApplType() throws RepositoryException {
        if (this.productFeatureApplType == null) {
            this.productFeatureApplType = getRelatedOne(ProductFeatureApplType.class, "ProductFeatureApplType");
        }
        return this.productFeatureApplType;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureCategory</code> by the relation named <code>ProductFeatureCategory</code>.
     * @return the <code>ProductFeatureCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductFeatureCategory getProductFeatureCategory() throws RepositoryException {
        if (this.productFeatureCategory == null) {
            this.productFeatureCategory = getRelatedOne(ProductFeatureCategory.class, "ProductFeatureCategory");
        }
        return this.productFeatureCategory;
    }
    /**
     * Auto generated method that gets the related <code>SupplierProductFeature</code> by the relation named <code>SupplierProductFeature</code>.
     * @return the list of <code>SupplierProductFeature</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SupplierProductFeature> getSupplierProductFeatures() throws RepositoryException {
        if (this.supplierProductFeatures == null) {
            this.supplierProductFeatures = getRelated(SupplierProductFeature.class, "SupplierProductFeature");
        }
        return this.supplierProductFeatures;
    }

    /**
     * Auto generated value setter.
     * @param productFeatureType the productFeatureType to set
    */
    public void setProductFeatureType(ProductFeatureType productFeatureType) {
        this.productFeatureType = productFeatureType;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureApplType the productFeatureApplType to set
    */
    public void setProductFeatureApplType(ProductFeatureApplType productFeatureApplType) {
        this.productFeatureApplType = productFeatureApplType;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureCategory the productFeatureCategory to set
    */
    public void setProductFeatureCategory(ProductFeatureCategory productFeatureCategory) {
        this.productFeatureCategory = productFeatureCategory;
    }
    /**
     * Auto generated value setter.
     * @param supplierProductFeatures the supplierProductFeatures to set
    */
    public void setSupplierProductFeatures(List<SupplierProductFeature> supplierProductFeatures) {
        this.supplierProductFeatures = supplierProductFeatures;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductFeatureId((String) mapValue.get("productFeatureId"));
        setProductFeatureTypeId((String) mapValue.get("productFeatureTypeId"));
        setProductFeatureCategoryId((String) mapValue.get("productFeatureCategoryId"));
        setDescription((String) mapValue.get("description"));
        setUomId((String) mapValue.get("uomId"));
        setNumberSpecified(convertToBigDecimal(mapValue.get("numberSpecified")));
        setDefaultAmount(convertToBigDecimal(mapValue.get("defaultAmount")));
        setDefaultSequenceNum((Long) mapValue.get("defaultSequenceNum"));
        setAbbrev((String) mapValue.get("abbrev"));
        setIdCode((String) mapValue.get("idCode"));
        setProductId((String) mapValue.get("productId"));
        setProductFeatureApplTypeId((String) mapValue.get("productFeatureApplTypeId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setSequenceNum((Long) mapValue.get("sequenceNum"));
        setAmount(convertToBigDecimal(mapValue.get("amount")));
        setRecurringAmount(convertToBigDecimal(mapValue.get("recurringAmount")));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productFeatureId", getProductFeatureId());
        mapValue.put("productFeatureTypeId", getProductFeatureTypeId());
        mapValue.put("productFeatureCategoryId", getProductFeatureCategoryId());
        mapValue.put("description", getDescription());
        mapValue.put("uomId", getUomId());
        mapValue.put("numberSpecified", getNumberSpecified());
        mapValue.put("defaultAmount", getDefaultAmount());
        mapValue.put("defaultSequenceNum", getDefaultSequenceNum());
        mapValue.put("abbrev", getAbbrev());
        mapValue.put("idCode", getIdCode());
        mapValue.put("productId", getProductId());
        mapValue.put("productFeatureApplTypeId", getProductFeatureApplTypeId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("sequenceNum", getSequenceNum());
        mapValue.put("amount", getAmount());
        mapValue.put("recurringAmount", getRecurringAmount());
        return mapValue;
    }


}
