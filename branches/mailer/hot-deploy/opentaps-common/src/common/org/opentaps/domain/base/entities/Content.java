package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Content.
 */
@javax.persistence.Entity
@Table(name="CONTENT")
public class Content extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("contentId", "CONTENT_ID");
        fields.put("contentTypeId", "CONTENT_TYPE_ID");
        fields.put("ownerContentId", "OWNER_CONTENT_ID");
        fields.put("decoratorContentId", "DECORATOR_CONTENT_ID");
        fields.put("instanceOfContentId", "INSTANCE_OF_CONTENT_ID");
        fields.put("dataResourceId", "DATA_RESOURCE_ID");
        fields.put("templateDataResourceId", "TEMPLATE_DATA_RESOURCE_ID");
        fields.put("dataSourceId", "DATA_SOURCE_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("privilegeEnumId", "PRIVILEGE_ENUM_ID");
        fields.put("serviceName", "SERVICE_NAME");
        fields.put("contentName", "CONTENT_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("localeString", "LOCALE_STRING");
        fields.put("mimeTypeId", "MIME_TYPE_ID");
        fields.put("characterSetId", "CHARACTER_SET_ID");
        fields.put("childLeafCount", "CHILD_LEAF_COUNT");
        fields.put("childBranchCount", "CHILD_BRANCH_COUNT");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("classificationEnumId", "CLASSIFICATION_ENUM_ID");
fieldMapColumns.put("Content", fields);
}
  public static enum Fields implements EntityFieldInterface<Content> {
    contentId("contentId"),
    contentTypeId("contentTypeId"),
    ownerContentId("ownerContentId"),
    decoratorContentId("decoratorContentId"),
    instanceOfContentId("instanceOfContentId"),
    dataResourceId("dataResourceId"),
    templateDataResourceId("templateDataResourceId"),
    dataSourceId("dataSourceId"),
    statusId("statusId"),
    privilegeEnumId("privilegeEnumId"),
    serviceName("serviceName"),
    contentName("contentName"),
    description("description"),
    localeString("localeString"),
    mimeTypeId("mimeTypeId"),
    characterSetId("characterSetId"),
    childLeafCount("childLeafCount"),
    childBranchCount("childBranchCount"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    classificationEnumId("classificationEnumId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Content_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Content_GEN")   
    @Id
    
    @Column(name="CONTENT_ID")
    private String contentId;
    
    @Column(name="CONTENT_TYPE_ID")
    private String contentTypeId;
    
    @Column(name="OWNER_CONTENT_ID")
    private String ownerContentId;
    
    @Column(name="DECORATOR_CONTENT_ID")
    private String decoratorContentId;
    
    @Column(name="INSTANCE_OF_CONTENT_ID")
    private String instanceOfContentId;
    
    @Column(name="DATA_RESOURCE_ID")
    private String dataResourceId;
    
    @Column(name="TEMPLATE_DATA_RESOURCE_ID")
    private String templateDataResourceId;
    
    @Column(name="DATA_SOURCE_ID")
    private String dataSourceId;
    
    @Column(name="STATUS_ID")
    private String statusId;
    
    @Column(name="PRIVILEGE_ENUM_ID")
    private String privilegeEnumId;
    
    @Column(name="SERVICE_NAME")
    private String serviceName;
    
    @Column(name="CONTENT_NAME")
    private String contentName;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="LOCALE_STRING")
    private String localeString;
    
    @Column(name="MIME_TYPE_ID")
    private String mimeTypeId;
    
    @Column(name="CHARACTER_SET_ID")
    private String characterSetId;
    
    @Column(name="CHILD_LEAF_COUNT")
    private Long childLeafCount;
    
    @Column(name="CHILD_BRANCH_COUNT")
    private Long childBranchCount;
    
    @Column(name="CREATED_DATE")
    private Timestamp createdDate;
    
    @Column(name="CREATED_BY_USER_LOGIN")
    private String createdByUserLogin;
    
    @Column(name="LAST_MODIFIED_DATE")
    private Timestamp lastModifiedDate;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="CLASSIFICATION_ENUM_ID")
    private String classificationEnumId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContentType contentType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="DATA_RESOURCE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private DataResource dataResource = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="TEMPLATE_DATA_RESOURCE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private DataResource templateDataResource = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem statusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRIVILEGE_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration privilegeEnumeration = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="MIME_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private MimeType mimeType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CHARACTER_SET_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private CharacterSet characterSet = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_TYPE_ID")
    private List<ContentTypeAttr> contentTypeAttrs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY_USER_LOGIN", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin relatedCreatedByUserLogin = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="LAST_MODIFIED_BY_USER_LOGIN", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin relatedLastModifiedByUserLogin = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="DATA_RESOURCE_ID")
    private List<ProductFeatureDataResource> productFeatureDataResources = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="DATA_SOURCE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private DataSource dataSource = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="DECORATOR_CONTENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Content decoratorContent = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="OWNER_CONTENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Content ownerContent = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="INSTANCE_OF_CONTENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Content instanceOfContent = null;
    private transient List<ContentAssocDataResourceViewFrom> contentAssocDataResourceViewFroms = null;
    private transient List<ContentAssocDataResourceViewTo> contentAssocDataResourceViewToes = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CLASSIFICATION_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration classificationEnumeration = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="fromContent", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<CommEventContentAssoc> fromCommEventContentAssocs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ID")
    private List<ContentApproval> contentApprovals = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="fromContent", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ContentAssoc> fromContentAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="toContent", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID_TO")
    private List<ContentAssoc> toContentAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ContentAttribute> contentAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ContentMetaData> contentMetaDatas = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ContentPurpose> contentPurposes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ContentRevision> contentRevisions = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ContentRole> contentRoles = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<CustRequestContent> custRequestContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<OrderContent> orderContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<OrderHeaderContent> orderHeaderContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<PartyContent> partyContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ProdConfItemContent> prodConfItemContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ProductCategoryContent> productCategoryContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<ProductContent> productContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<SalesOpportunityContent> salesOpportunityContents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INTERNAL_CONTENT_ID")
    private List<ServerHit> serverHits = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INTERNAL_CONTENT_ID")
    private List<ServerHitBin> serverHitBins = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ID")
    private List<SubscriptionResource> subscriptionResources = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ID")
    private List<SurveyResponseAnswer> surveyResponseAnswers = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ID")
    private List<WebPage> webPages = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<WebSiteContent> webSiteContents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ID")
    private List<WebSitePathAlias> webSitePathAliases = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private WebSitePublishPoint webSitePublishPoint = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="content", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTENT_ID")
    private List<WorkEffortContent> workEffortContents = null;

  /**
   * Default constructor.
   */
  public Content() {
      super();
      this.baseEntityName = "Content";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("contentId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Content(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param contentId the contentId to set
     */
    public void setContentId(String contentId) {
        this.contentId = contentId;
    }
    /**
     * Auto generated value setter.
     * @param contentTypeId the contentTypeId to set
     */
    public void setContentTypeId(String contentTypeId) {
        this.contentTypeId = contentTypeId;
    }
    /**
     * Auto generated value setter.
     * @param ownerContentId the ownerContentId to set
     */
    public void setOwnerContentId(String ownerContentId) {
        this.ownerContentId = ownerContentId;
    }
    /**
     * Auto generated value setter.
     * @param decoratorContentId the decoratorContentId to set
     */
    public void setDecoratorContentId(String decoratorContentId) {
        this.decoratorContentId = decoratorContentId;
    }
    /**
     * Auto generated value setter.
     * @param instanceOfContentId the instanceOfContentId to set
     */
    public void setInstanceOfContentId(String instanceOfContentId) {
        this.instanceOfContentId = instanceOfContentId;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceId the dataResourceId to set
     */
    public void setDataResourceId(String dataResourceId) {
        this.dataResourceId = dataResourceId;
    }
    /**
     * Auto generated value setter.
     * @param templateDataResourceId the templateDataResourceId to set
     */
    public void setTemplateDataResourceId(String templateDataResourceId) {
        this.templateDataResourceId = templateDataResourceId;
    }
    /**
     * Auto generated value setter.
     * @param dataSourceId the dataSourceId to set
     */
    public void setDataSourceId(String dataSourceId) {
        this.dataSourceId = dataSourceId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param privilegeEnumId the privilegeEnumId to set
     */
    public void setPrivilegeEnumId(String privilegeEnumId) {
        this.privilegeEnumId = privilegeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param serviceName the serviceName to set
     */
    public void setServiceName(String serviceName) {
        this.serviceName = serviceName;
    }
    /**
     * Auto generated value setter.
     * @param contentName the contentName to set
     */
    public void setContentName(String contentName) {
        this.contentName = contentName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param localeString the localeString to set
     */
    public void setLocaleString(String localeString) {
        this.localeString = localeString;
    }
    /**
     * Auto generated value setter.
     * @param mimeTypeId the mimeTypeId to set
     */
    public void setMimeTypeId(String mimeTypeId) {
        this.mimeTypeId = mimeTypeId;
    }
    /**
     * Auto generated value setter.
     * @param characterSetId the characterSetId to set
     */
    public void setCharacterSetId(String characterSetId) {
        this.characterSetId = characterSetId;
    }
    /**
     * Auto generated value setter.
     * @param childLeafCount the childLeafCount to set
     */
    public void setChildLeafCount(Long childLeafCount) {
        this.childLeafCount = childLeafCount;
    }
    /**
     * Auto generated value setter.
     * @param childBranchCount the childBranchCount to set
     */
    public void setChildBranchCount(Long childBranchCount) {
        this.childBranchCount = childBranchCount;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param classificationEnumId the classificationEnumId to set
     */
    public void setClassificationEnumId(String classificationEnumId) {
        this.classificationEnumId = classificationEnumId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentId() {
        return this.contentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentTypeId() {
        return this.contentTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOwnerContentId() {
        return this.ownerContentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDecoratorContentId() {
        return this.decoratorContentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInstanceOfContentId() {
        return this.instanceOfContentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataResourceId() {
        return this.dataResourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTemplateDataResourceId() {
        return this.templateDataResourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataSourceId() {
        return this.dataSourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPrivilegeEnumId() {
        return this.privilegeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServiceName() {
        return this.serviceName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentName() {
        return this.contentName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLocaleString() {
        return this.localeString;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMimeTypeId() {
        return this.mimeTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCharacterSetId() {
        return this.characterSetId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getChildLeafCount() {
        return this.childLeafCount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getChildBranchCount() {
        return this.childBranchCount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getClassificationEnumId() {
        return this.classificationEnumId;
    }

    /**
     * Auto generated method that gets the related <code>ContentType</code> by the relation named <code>ContentType</code>.
     * @return the <code>ContentType</code>
     * @throws RepositoryException if an error occurs
     */
    public ContentType getContentType() throws RepositoryException {
        if (this.contentType == null) {
            this.contentType = getRelatedOne(ContentType.class, "ContentType");
        }
        return this.contentType;
    }
    /**
     * Auto generated method that gets the related <code>DataResource</code> by the relation named <code>DataResource</code>.
     * @return the <code>DataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public DataResource getDataResource() throws RepositoryException {
        if (this.dataResource == null) {
            this.dataResource = getRelatedOne(DataResource.class, "DataResource");
        }
        return this.dataResource;
    }
    /**
     * Auto generated method that gets the related <code>DataResource</code> by the relation named <code>TemplateDataResource</code>.
     * @return the <code>DataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public DataResource getTemplateDataResource() throws RepositoryException {
        if (this.templateDataResource == null) {
            this.templateDataResource = getRelatedOne(DataResource.class, "TemplateDataResource");
        }
        return this.templateDataResource;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>PrivilegeEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getPrivilegeEnumeration() throws RepositoryException {
        if (this.privilegeEnumeration == null) {
            this.privilegeEnumeration = getRelatedOne(Enumeration.class, "PrivilegeEnumeration");
        }
        return this.privilegeEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>MimeType</code> by the relation named <code>MimeType</code>.
     * @return the <code>MimeType</code>
     * @throws RepositoryException if an error occurs
     */
    public MimeType getMimeType() throws RepositoryException {
        if (this.mimeType == null) {
            this.mimeType = getRelatedOne(MimeType.class, "MimeType");
        }
        return this.mimeType;
    }
    /**
     * Auto generated method that gets the related <code>CharacterSet</code> by the relation named <code>CharacterSet</code>.
     * @return the <code>CharacterSet</code>
     * @throws RepositoryException if an error occurs
     */
    public CharacterSet getCharacterSet() throws RepositoryException {
        if (this.characterSet == null) {
            this.characterSet = getRelatedOne(CharacterSet.class, "CharacterSet");
        }
        return this.characterSet;
    }
    /**
     * Auto generated method that gets the related <code>ContentTypeAttr</code> by the relation named <code>ContentTypeAttr</code>.
     * @return the list of <code>ContentTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentTypeAttr> getContentTypeAttrs() throws RepositoryException {
        if (this.contentTypeAttrs == null) {
            this.contentTypeAttrs = getRelated(ContentTypeAttr.class, "ContentTypeAttr");
        }
        return this.contentTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>CreatedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedCreatedByUserLogin() throws RepositoryException {
        if (this.relatedCreatedByUserLogin == null) {
            this.relatedCreatedByUserLogin = getRelatedOne(UserLogin.class, "CreatedByUserLogin");
        }
        return this.relatedCreatedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>LastModifiedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedLastModifiedByUserLogin() throws RepositoryException {
        if (this.relatedLastModifiedByUserLogin == null) {
            this.relatedLastModifiedByUserLogin = getRelatedOne(UserLogin.class, "LastModifiedByUserLogin");
        }
        return this.relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureDataResource</code> by the relation named <code>ProductFeatureDataResource</code>.
     * @return the list of <code>ProductFeatureDataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureDataResource> getProductFeatureDataResources() throws RepositoryException {
        if (this.productFeatureDataResources == null) {
            this.productFeatureDataResources = getRelated(ProductFeatureDataResource.class, "ProductFeatureDataResource");
        }
        return this.productFeatureDataResources;
    }
    /**
     * Auto generated method that gets the related <code>DataSource</code> by the relation named <code>DataSource</code>.
     * @return the <code>DataSource</code>
     * @throws RepositoryException if an error occurs
     */
    public DataSource getDataSource() throws RepositoryException {
        if (this.dataSource == null) {
            this.dataSource = getRelatedOne(DataSource.class, "DataSource");
        }
        return this.dataSource;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>DecoratorContent</code>.
     * @return the <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public Content getDecoratorContent() throws RepositoryException {
        if (this.decoratorContent == null) {
            this.decoratorContent = getRelatedOne(Content.class, "DecoratorContent");
        }
        return this.decoratorContent;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>OwnerContent</code>.
     * @return the <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public Content getOwnerContent() throws RepositoryException {
        if (this.ownerContent == null) {
            this.ownerContent = getRelatedOne(Content.class, "OwnerContent");
        }
        return this.ownerContent;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>InstanceOfContent</code>.
     * @return the <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public Content getInstanceOfContent() throws RepositoryException {
        if (this.instanceOfContent == null) {
            this.instanceOfContent = getRelatedOne(Content.class, "InstanceOfContent");
        }
        return this.instanceOfContent;
    }
    /**
     * Auto generated method that gets the related <code>ContentAssocDataResourceViewFrom</code> by the relation named <code>ContentAssocDataResourceViewFrom</code>.
     * @return the list of <code>ContentAssocDataResourceViewFrom</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentAssocDataResourceViewFrom> getContentAssocDataResourceViewFroms() throws RepositoryException {
        if (this.contentAssocDataResourceViewFroms == null) {
            this.contentAssocDataResourceViewFroms = getRelated(ContentAssocDataResourceViewFrom.class, "ContentAssocDataResourceViewFrom");
        }
        return this.contentAssocDataResourceViewFroms;
    }
    /**
     * Auto generated method that gets the related <code>ContentAssocDataResourceViewTo</code> by the relation named <code>ContentAssocDataResourceViewTo</code>.
     * @return the list of <code>ContentAssocDataResourceViewTo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentAssocDataResourceViewTo> getContentAssocDataResourceViewToes() throws RepositoryException {
        if (this.contentAssocDataResourceViewToes == null) {
            this.contentAssocDataResourceViewToes = getRelated(ContentAssocDataResourceViewTo.class, "ContentAssocDataResourceViewTo");
        }
        return this.contentAssocDataResourceViewToes;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>ClassificationEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getClassificationEnumeration() throws RepositoryException {
        if (this.classificationEnumeration == null) {
            this.classificationEnumeration = getRelatedOne(Enumeration.class, "ClassificationEnumeration");
        }
        return this.classificationEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>CommEventContentAssoc</code> by the relation named <code>FromCommEventContentAssoc</code>.
     * @return the list of <code>CommEventContentAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommEventContentAssoc> getFromCommEventContentAssocs() throws RepositoryException {
        if (this.fromCommEventContentAssocs == null) {
            this.fromCommEventContentAssocs = getRelated(CommEventContentAssoc.class, "FromCommEventContentAssoc");
        }
        return this.fromCommEventContentAssocs;
    }
    /**
     * Auto generated method that gets the related <code>ContentApproval</code> by the relation named <code>ContentApproval</code>.
     * @return the list of <code>ContentApproval</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentApproval> getContentApprovals() throws RepositoryException {
        if (this.contentApprovals == null) {
            this.contentApprovals = getRelated(ContentApproval.class, "ContentApproval");
        }
        return this.contentApprovals;
    }
    /**
     * Auto generated method that gets the related <code>ContentAssoc</code> by the relation named <code>FromContentAssoc</code>.
     * @return the list of <code>ContentAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentAssoc> getFromContentAssocs() throws RepositoryException {
        if (this.fromContentAssocs == null) {
            this.fromContentAssocs = getRelated(ContentAssoc.class, "FromContentAssoc");
        }
        return this.fromContentAssocs;
    }
    /**
     * Auto generated method that gets the related <code>ContentAssoc</code> by the relation named <code>ToContentAssoc</code>.
     * @return the list of <code>ContentAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentAssoc> getToContentAssocs() throws RepositoryException {
        if (this.toContentAssocs == null) {
            this.toContentAssocs = getRelated(ContentAssoc.class, "ToContentAssoc");
        }
        return this.toContentAssocs;
    }
    /**
     * Auto generated method that gets the related <code>ContentAttribute</code> by the relation named <code>ContentAttribute</code>.
     * @return the list of <code>ContentAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentAttribute> getContentAttributes() throws RepositoryException {
        if (this.contentAttributes == null) {
            this.contentAttributes = getRelated(ContentAttribute.class, "ContentAttribute");
        }
        return this.contentAttributes;
    }
    /**
     * Auto generated method that gets the related <code>ContentMetaData</code> by the relation named <code>ContentMetaData</code>.
     * @return the list of <code>ContentMetaData</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentMetaData> getContentMetaDatas() throws RepositoryException {
        if (this.contentMetaDatas == null) {
            this.contentMetaDatas = getRelated(ContentMetaData.class, "ContentMetaData");
        }
        return this.contentMetaDatas;
    }
    /**
     * Auto generated method that gets the related <code>ContentPurpose</code> by the relation named <code>ContentPurpose</code>.
     * @return the list of <code>ContentPurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentPurpose> getContentPurposes() throws RepositoryException {
        if (this.contentPurposes == null) {
            this.contentPurposes = getRelated(ContentPurpose.class, "ContentPurpose");
        }
        return this.contentPurposes;
    }
    /**
     * Auto generated method that gets the related <code>ContentRevision</code> by the relation named <code>ContentRevision</code>.
     * @return the list of <code>ContentRevision</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentRevision> getContentRevisions() throws RepositoryException {
        if (this.contentRevisions == null) {
            this.contentRevisions = getRelated(ContentRevision.class, "ContentRevision");
        }
        return this.contentRevisions;
    }
    /**
     * Auto generated method that gets the related <code>ContentRole</code> by the relation named <code>ContentRole</code>.
     * @return the list of <code>ContentRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentRole> getContentRoles() throws RepositoryException {
        if (this.contentRoles == null) {
            this.contentRoles = getRelated(ContentRole.class, "ContentRole");
        }
        return this.contentRoles;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestContent</code> by the relation named <code>CustRequestContent</code>.
     * @return the list of <code>CustRequestContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestContent> getCustRequestContents() throws RepositoryException {
        if (this.custRequestContents == null) {
            this.custRequestContents = getRelated(CustRequestContent.class, "CustRequestContent");
        }
        return this.custRequestContents;
    }
    /**
     * Auto generated method that gets the related <code>OrderContent</code> by the relation named <code>OrderContent</code>.
     * @return the list of <code>OrderContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderContent> getOrderContents() throws RepositoryException {
        if (this.orderContents == null) {
            this.orderContents = getRelated(OrderContent.class, "OrderContent");
        }
        return this.orderContents;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeaderContent</code> by the relation named <code>OrderHeaderContent</code>.
     * @return the list of <code>OrderHeaderContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeaderContent> getOrderHeaderContents() throws RepositoryException {
        if (this.orderHeaderContents == null) {
            this.orderHeaderContents = getRelated(OrderHeaderContent.class, "OrderHeaderContent");
        }
        return this.orderHeaderContents;
    }
    /**
     * Auto generated method that gets the related <code>PartyContent</code> by the relation named <code>PartyContent</code>.
     * @return the list of <code>PartyContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContent> getPartyContents() throws RepositoryException {
        if (this.partyContents == null) {
            this.partyContents = getRelated(PartyContent.class, "PartyContent");
        }
        return this.partyContents;
    }
    /**
     * Auto generated method that gets the related <code>ProdConfItemContent</code> by the relation named <code>ProdConfItemContent</code>.
     * @return the list of <code>ProdConfItemContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProdConfItemContent> getProdConfItemContents() throws RepositoryException {
        if (this.prodConfItemContents == null) {
            this.prodConfItemContents = getRelated(ProdConfItemContent.class, "ProdConfItemContent");
        }
        return this.prodConfItemContents;
    }
    /**
     * Auto generated method that gets the related <code>ProductCategoryContent</code> by the relation named <code>ProductCategoryContent</code>.
     * @return the list of <code>ProductCategoryContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductCategoryContent> getProductCategoryContents() throws RepositoryException {
        if (this.productCategoryContents == null) {
            this.productCategoryContents = getRelated(ProductCategoryContent.class, "ProductCategoryContent");
        }
        return this.productCategoryContents;
    }
    /**
     * Auto generated method that gets the related <code>ProductContent</code> by the relation named <code>ProductContent</code>.
     * @return the list of <code>ProductContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductContent> getProductContents() throws RepositoryException {
        if (this.productContents == null) {
            this.productContents = getRelated(ProductContent.class, "ProductContent");
        }
        return this.productContents;
    }
    /**
     * Auto generated method that gets the related <code>SalesOpportunityContent</code> by the relation named <code>SalesOpportunityContent</code>.
     * @return the list of <code>SalesOpportunityContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesOpportunityContent> getSalesOpportunityContents() throws RepositoryException {
        if (this.salesOpportunityContents == null) {
            this.salesOpportunityContents = getRelated(SalesOpportunityContent.class, "SalesOpportunityContent");
        }
        return this.salesOpportunityContents;
    }
    /**
     * Auto generated method that gets the related <code>ServerHit</code> by the relation named <code>ServerHit</code>.
     * @return the list of <code>ServerHit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServerHit> getServerHits() throws RepositoryException {
        if (this.serverHits == null) {
            this.serverHits = getRelated(ServerHit.class, "ServerHit");
        }
        return this.serverHits;
    }
    /**
     * Auto generated method that gets the related <code>ServerHitBin</code> by the relation named <code>ServerHitBin</code>.
     * @return the list of <code>ServerHitBin</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServerHitBin> getServerHitBins() throws RepositoryException {
        if (this.serverHitBins == null) {
            this.serverHitBins = getRelated(ServerHitBin.class, "ServerHitBin");
        }
        return this.serverHitBins;
    }
    /**
     * Auto generated method that gets the related <code>SubscriptionResource</code> by the relation named <code>SubscriptionResource</code>.
     * @return the list of <code>SubscriptionResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SubscriptionResource> getSubscriptionResources() throws RepositoryException {
        if (this.subscriptionResources == null) {
            this.subscriptionResources = getRelated(SubscriptionResource.class, "SubscriptionResource");
        }
        return this.subscriptionResources;
    }
    /**
     * Auto generated method that gets the related <code>SurveyResponseAnswer</code> by the relation named <code>SurveyResponseAnswer</code>.
     * @return the list of <code>SurveyResponseAnswer</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SurveyResponseAnswer> getSurveyResponseAnswers() throws RepositoryException {
        if (this.surveyResponseAnswers == null) {
            this.surveyResponseAnswers = getRelated(SurveyResponseAnswer.class, "SurveyResponseAnswer");
        }
        return this.surveyResponseAnswers;
    }
    /**
     * Auto generated method that gets the related <code>WebPage</code> by the relation named <code>WebPage</code>.
     * @return the list of <code>WebPage</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WebPage> getWebPages() throws RepositoryException {
        if (this.webPages == null) {
            this.webPages = getRelated(WebPage.class, "WebPage");
        }
        return this.webPages;
    }
    /**
     * Auto generated method that gets the related <code>WebSiteContent</code> by the relation named <code>WebSiteContent</code>.
     * @return the list of <code>WebSiteContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WebSiteContent> getWebSiteContents() throws RepositoryException {
        if (this.webSiteContents == null) {
            this.webSiteContents = getRelated(WebSiteContent.class, "WebSiteContent");
        }
        return this.webSiteContents;
    }
    /**
     * Auto generated method that gets the related <code>WebSitePathAlias</code> by the relation named <code>WebSitePathAlias</code>.
     * @return the list of <code>WebSitePathAlias</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WebSitePathAlias> getWebSitePathAliases() throws RepositoryException {
        if (this.webSitePathAliases == null) {
            this.webSitePathAliases = getRelated(WebSitePathAlias.class, "WebSitePathAlias");
        }
        return this.webSitePathAliases;
    }
    /**
     * Auto generated method that gets the related <code>WebSitePublishPoint</code> by the relation named <code>WebSitePublishPoint</code>.
     * @return the <code>WebSitePublishPoint</code>
     * @throws RepositoryException if an error occurs
     */
    public WebSitePublishPoint getWebSitePublishPoint() throws RepositoryException {
        if (this.webSitePublishPoint == null) {
            this.webSitePublishPoint = getRelatedOne(WebSitePublishPoint.class, "WebSitePublishPoint");
        }
        return this.webSitePublishPoint;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortContent</code> by the relation named <code>WorkEffortContent</code>.
     * @return the list of <code>WorkEffortContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortContent> getWorkEffortContents() throws RepositoryException {
        if (this.workEffortContents == null) {
            this.workEffortContents = getRelated(WorkEffortContent.class, "WorkEffortContent");
        }
        return this.workEffortContents;
    }

    /**
     * Auto generated value setter.
     * @param contentType the contentType to set
    */
    public void setContentType(ContentType contentType) {
        this.contentType = contentType;
    }
    /**
     * Auto generated value setter.
     * @param dataResource the dataResource to set
    */
    public void setDataResource(DataResource dataResource) {
        this.dataResource = dataResource;
    }
    /**
     * Auto generated value setter.
     * @param templateDataResource the templateDataResource to set
    */
    public void setTemplateDataResource(DataResource templateDataResource) {
        this.templateDataResource = templateDataResource;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param privilegeEnumeration the privilegeEnumeration to set
    */
    public void setPrivilegeEnumeration(Enumeration privilegeEnumeration) {
        this.privilegeEnumeration = privilegeEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param mimeType the mimeType to set
    */
    public void setMimeType(MimeType mimeType) {
        this.mimeType = mimeType;
    }
    /**
     * Auto generated value setter.
     * @param characterSet the characterSet to set
    */
    public void setCharacterSet(CharacterSet characterSet) {
        this.characterSet = characterSet;
    }
    /**
     * Auto generated value setter.
     * @param contentTypeAttrs the contentTypeAttrs to set
    */
    public void setContentTypeAttrs(List<ContentTypeAttr> contentTypeAttrs) {
        this.contentTypeAttrs = contentTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param relatedCreatedByUserLogin the relatedCreatedByUserLogin to set
    */
    public void setRelatedCreatedByUserLogin(UserLogin relatedCreatedByUserLogin) {
        this.relatedCreatedByUserLogin = relatedCreatedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param relatedLastModifiedByUserLogin the relatedLastModifiedByUserLogin to set
    */
    public void setRelatedLastModifiedByUserLogin(UserLogin relatedLastModifiedByUserLogin) {
        this.relatedLastModifiedByUserLogin = relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureDataResources the productFeatureDataResources to set
    */
    public void setProductFeatureDataResources(List<ProductFeatureDataResource> productFeatureDataResources) {
        this.productFeatureDataResources = productFeatureDataResources;
    }
    /**
     * Auto generated value setter.
     * @param dataSource the dataSource to set
    */
    public void setDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
    }
    /**
     * Auto generated value setter.
     * @param decoratorContent the decoratorContent to set
    */
    public void setDecoratorContent(Content decoratorContent) {
        this.decoratorContent = decoratorContent;
    }
    /**
     * Auto generated value setter.
     * @param ownerContent the ownerContent to set
    */
    public void setOwnerContent(Content ownerContent) {
        this.ownerContent = ownerContent;
    }
    /**
     * Auto generated value setter.
     * @param instanceOfContent the instanceOfContent to set
    */
    public void setInstanceOfContent(Content instanceOfContent) {
        this.instanceOfContent = instanceOfContent;
    }
    /**
     * Auto generated value setter.
     * @param contentAssocDataResourceViewFroms the contentAssocDataResourceViewFroms to set
    */
    public void setContentAssocDataResourceViewFroms(List<ContentAssocDataResourceViewFrom> contentAssocDataResourceViewFroms) {
        this.contentAssocDataResourceViewFroms = contentAssocDataResourceViewFroms;
    }
    /**
     * Auto generated value setter.
     * @param contentAssocDataResourceViewToes the contentAssocDataResourceViewToes to set
    */
    public void setContentAssocDataResourceViewToes(List<ContentAssocDataResourceViewTo> contentAssocDataResourceViewToes) {
        this.contentAssocDataResourceViewToes = contentAssocDataResourceViewToes;
    }
    /**
     * Auto generated value setter.
     * @param classificationEnumeration the classificationEnumeration to set
    */
    public void setClassificationEnumeration(Enumeration classificationEnumeration) {
        this.classificationEnumeration = classificationEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param fromCommEventContentAssocs the fromCommEventContentAssocs to set
    */
    public void setFromCommEventContentAssocs(List<CommEventContentAssoc> fromCommEventContentAssocs) {
        this.fromCommEventContentAssocs = fromCommEventContentAssocs;
    }
    /**
     * Auto generated value setter.
     * @param contentApprovals the contentApprovals to set
    */
    public void setContentApprovals(List<ContentApproval> contentApprovals) {
        this.contentApprovals = contentApprovals;
    }
    /**
     * Auto generated value setter.
     * @param fromContentAssocs the fromContentAssocs to set
    */
    public void setFromContentAssocs(List<ContentAssoc> fromContentAssocs) {
        this.fromContentAssocs = fromContentAssocs;
    }
    /**
     * Auto generated value setter.
     * @param toContentAssocs the toContentAssocs to set
    */
    public void setToContentAssocs(List<ContentAssoc> toContentAssocs) {
        this.toContentAssocs = toContentAssocs;
    }
    /**
     * Auto generated value setter.
     * @param contentAttributes the contentAttributes to set
    */
    public void setContentAttributes(List<ContentAttribute> contentAttributes) {
        this.contentAttributes = contentAttributes;
    }
    /**
     * Auto generated value setter.
     * @param contentMetaDatas the contentMetaDatas to set
    */
    public void setContentMetaDatas(List<ContentMetaData> contentMetaDatas) {
        this.contentMetaDatas = contentMetaDatas;
    }
    /**
     * Auto generated value setter.
     * @param contentPurposes the contentPurposes to set
    */
    public void setContentPurposes(List<ContentPurpose> contentPurposes) {
        this.contentPurposes = contentPurposes;
    }
    /**
     * Auto generated value setter.
     * @param contentRevisions the contentRevisions to set
    */
    public void setContentRevisions(List<ContentRevision> contentRevisions) {
        this.contentRevisions = contentRevisions;
    }
    /**
     * Auto generated value setter.
     * @param contentRoles the contentRoles to set
    */
    public void setContentRoles(List<ContentRole> contentRoles) {
        this.contentRoles = contentRoles;
    }
    /**
     * Auto generated value setter.
     * @param custRequestContents the custRequestContents to set
    */
    public void setCustRequestContents(List<CustRequestContent> custRequestContents) {
        this.custRequestContents = custRequestContents;
    }
    /**
     * Auto generated value setter.
     * @param orderContents the orderContents to set
    */
    public void setOrderContents(List<OrderContent> orderContents) {
        this.orderContents = orderContents;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaderContents the orderHeaderContents to set
    */
    public void setOrderHeaderContents(List<OrderHeaderContent> orderHeaderContents) {
        this.orderHeaderContents = orderHeaderContents;
    }
    /**
     * Auto generated value setter.
     * @param partyContents the partyContents to set
    */
    public void setPartyContents(List<PartyContent> partyContents) {
        this.partyContents = partyContents;
    }
    /**
     * Auto generated value setter.
     * @param prodConfItemContents the prodConfItemContents to set
    */
    public void setProdConfItemContents(List<ProdConfItemContent> prodConfItemContents) {
        this.prodConfItemContents = prodConfItemContents;
    }
    /**
     * Auto generated value setter.
     * @param productCategoryContents the productCategoryContents to set
    */
    public void setProductCategoryContents(List<ProductCategoryContent> productCategoryContents) {
        this.productCategoryContents = productCategoryContents;
    }
    /**
     * Auto generated value setter.
     * @param productContents the productContents to set
    */
    public void setProductContents(List<ProductContent> productContents) {
        this.productContents = productContents;
    }
    /**
     * Auto generated value setter.
     * @param salesOpportunityContents the salesOpportunityContents to set
    */
    public void setSalesOpportunityContents(List<SalesOpportunityContent> salesOpportunityContents) {
        this.salesOpportunityContents = salesOpportunityContents;
    }
    /**
     * Auto generated value setter.
     * @param serverHits the serverHits to set
    */
    public void setServerHits(List<ServerHit> serverHits) {
        this.serverHits = serverHits;
    }
    /**
     * Auto generated value setter.
     * @param serverHitBins the serverHitBins to set
    */
    public void setServerHitBins(List<ServerHitBin> serverHitBins) {
        this.serverHitBins = serverHitBins;
    }
    /**
     * Auto generated value setter.
     * @param subscriptionResources the subscriptionResources to set
    */
    public void setSubscriptionResources(List<SubscriptionResource> subscriptionResources) {
        this.subscriptionResources = subscriptionResources;
    }
    /**
     * Auto generated value setter.
     * @param surveyResponseAnswers the surveyResponseAnswers to set
    */
    public void setSurveyResponseAnswers(List<SurveyResponseAnswer> surveyResponseAnswers) {
        this.surveyResponseAnswers = surveyResponseAnswers;
    }
    /**
     * Auto generated value setter.
     * @param webPages the webPages to set
    */
    public void setWebPages(List<WebPage> webPages) {
        this.webPages = webPages;
    }
    /**
     * Auto generated value setter.
     * @param webSiteContents the webSiteContents to set
    */
    public void setWebSiteContents(List<WebSiteContent> webSiteContents) {
        this.webSiteContents = webSiteContents;
    }
    /**
     * Auto generated value setter.
     * @param webSitePathAliases the webSitePathAliases to set
    */
    public void setWebSitePathAliases(List<WebSitePathAlias> webSitePathAliases) {
        this.webSitePathAliases = webSitePathAliases;
    }
    /**
     * Auto generated value setter.
     * @param webSitePublishPoint the webSitePublishPoint to set
    */
    public void setWebSitePublishPoint(WebSitePublishPoint webSitePublishPoint) {
        this.webSitePublishPoint = webSitePublishPoint;
    }
    /**
     * Auto generated value setter.
     * @param workEffortContents the workEffortContents to set
    */
    public void setWorkEffortContents(List<WorkEffortContent> workEffortContents) {
        this.workEffortContents = workEffortContents;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addFromCommEventContentAssoc(CommEventContentAssoc fromCommEventContentAssoc) {
        if (this.fromCommEventContentAssocs == null) {
            this.fromCommEventContentAssocs = new ArrayList<CommEventContentAssoc>();
        }
        this.fromCommEventContentAssocs.add(fromCommEventContentAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFromCommEventContentAssoc(CommEventContentAssoc fromCommEventContentAssoc) {
        if (this.fromCommEventContentAssocs == null) {
            return;
        }
        this.fromCommEventContentAssocs.remove(fromCommEventContentAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFromCommEventContentAssoc() {
        if (this.fromCommEventContentAssocs == null) {
            return;
        }
        this.fromCommEventContentAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFromContentAssoc(ContentAssoc fromContentAssoc) {
        if (this.fromContentAssocs == null) {
            this.fromContentAssocs = new ArrayList<ContentAssoc>();
        }
        this.fromContentAssocs.add(fromContentAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFromContentAssoc(ContentAssoc fromContentAssoc) {
        if (this.fromContentAssocs == null) {
            return;
        }
        this.fromContentAssocs.remove(fromContentAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFromContentAssoc() {
        if (this.fromContentAssocs == null) {
            return;
        }
        this.fromContentAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addToContentAssoc(ContentAssoc toContentAssoc) {
        if (this.toContentAssocs == null) {
            this.toContentAssocs = new ArrayList<ContentAssoc>();
        }
        this.toContentAssocs.add(toContentAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeToContentAssoc(ContentAssoc toContentAssoc) {
        if (this.toContentAssocs == null) {
            return;
        }
        this.toContentAssocs.remove(toContentAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearToContentAssoc() {
        if (this.toContentAssocs == null) {
            return;
        }
        this.toContentAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addContentAttribute(ContentAttribute contentAttribute) {
        if (this.contentAttributes == null) {
            this.contentAttributes = new ArrayList<ContentAttribute>();
        }
        this.contentAttributes.add(contentAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContentAttribute(ContentAttribute contentAttribute) {
        if (this.contentAttributes == null) {
            return;
        }
        this.contentAttributes.remove(contentAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContentAttribute() {
        if (this.contentAttributes == null) {
            return;
        }
        this.contentAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addContentMetaData(ContentMetaData contentMetaData) {
        if (this.contentMetaDatas == null) {
            this.contentMetaDatas = new ArrayList<ContentMetaData>();
        }
        this.contentMetaDatas.add(contentMetaData);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContentMetaData(ContentMetaData contentMetaData) {
        if (this.contentMetaDatas == null) {
            return;
        }
        this.contentMetaDatas.remove(contentMetaData);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContentMetaData() {
        if (this.contentMetaDatas == null) {
            return;
        }
        this.contentMetaDatas.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addContentPurpose(ContentPurpose contentPurpose) {
        if (this.contentPurposes == null) {
            this.contentPurposes = new ArrayList<ContentPurpose>();
        }
        this.contentPurposes.add(contentPurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContentPurpose(ContentPurpose contentPurpose) {
        if (this.contentPurposes == null) {
            return;
        }
        this.contentPurposes.remove(contentPurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContentPurpose() {
        if (this.contentPurposes == null) {
            return;
        }
        this.contentPurposes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addContentRevision(ContentRevision contentRevision) {
        if (this.contentRevisions == null) {
            this.contentRevisions = new ArrayList<ContentRevision>();
        }
        this.contentRevisions.add(contentRevision);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContentRevision(ContentRevision contentRevision) {
        if (this.contentRevisions == null) {
            return;
        }
        this.contentRevisions.remove(contentRevision);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContentRevision() {
        if (this.contentRevisions == null) {
            return;
        }
        this.contentRevisions.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addContentRole(ContentRole contentRole) {
        if (this.contentRoles == null) {
            this.contentRoles = new ArrayList<ContentRole>();
        }
        this.contentRoles.add(contentRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContentRole(ContentRole contentRole) {
        if (this.contentRoles == null) {
            return;
        }
        this.contentRoles.remove(contentRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContentRole() {
        if (this.contentRoles == null) {
            return;
        }
        this.contentRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestContent(CustRequestContent custRequestContent) {
        if (this.custRequestContents == null) {
            this.custRequestContents = new ArrayList<CustRequestContent>();
        }
        this.custRequestContents.add(custRequestContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestContent(CustRequestContent custRequestContent) {
        if (this.custRequestContents == null) {
            return;
        }
        this.custRequestContents.remove(custRequestContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestContent() {
        if (this.custRequestContents == null) {
            return;
        }
        this.custRequestContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderContent(OrderContent orderContent) {
        if (this.orderContents == null) {
            this.orderContents = new ArrayList<OrderContent>();
        }
        this.orderContents.add(orderContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderContent(OrderContent orderContent) {
        if (this.orderContents == null) {
            return;
        }
        this.orderContents.remove(orderContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderContent() {
        if (this.orderContents == null) {
            return;
        }
        this.orderContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderHeaderContent(OrderHeaderContent orderHeaderContent) {
        if (this.orderHeaderContents == null) {
            this.orderHeaderContents = new ArrayList<OrderHeaderContent>();
        }
        this.orderHeaderContents.add(orderHeaderContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderHeaderContent(OrderHeaderContent orderHeaderContent) {
        if (this.orderHeaderContents == null) {
            return;
        }
        this.orderHeaderContents.remove(orderHeaderContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderHeaderContent() {
        if (this.orderHeaderContents == null) {
            return;
        }
        this.orderHeaderContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyContent(PartyContent partyContent) {
        if (this.partyContents == null) {
            this.partyContents = new ArrayList<PartyContent>();
        }
        this.partyContents.add(partyContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyContent(PartyContent partyContent) {
        if (this.partyContents == null) {
            return;
        }
        this.partyContents.remove(partyContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyContent() {
        if (this.partyContents == null) {
            return;
        }
        this.partyContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProdConfItemContent(ProdConfItemContent prodConfItemContent) {
        if (this.prodConfItemContents == null) {
            this.prodConfItemContents = new ArrayList<ProdConfItemContent>();
        }
        this.prodConfItemContents.add(prodConfItemContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProdConfItemContent(ProdConfItemContent prodConfItemContent) {
        if (this.prodConfItemContents == null) {
            return;
        }
        this.prodConfItemContents.remove(prodConfItemContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProdConfItemContent() {
        if (this.prodConfItemContents == null) {
            return;
        }
        this.prodConfItemContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductCategoryContent(ProductCategoryContent productCategoryContent) {
        if (this.productCategoryContents == null) {
            this.productCategoryContents = new ArrayList<ProductCategoryContent>();
        }
        this.productCategoryContents.add(productCategoryContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductCategoryContent(ProductCategoryContent productCategoryContent) {
        if (this.productCategoryContents == null) {
            return;
        }
        this.productCategoryContents.remove(productCategoryContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductCategoryContent() {
        if (this.productCategoryContents == null) {
            return;
        }
        this.productCategoryContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductContent(ProductContent productContent) {
        if (this.productContents == null) {
            this.productContents = new ArrayList<ProductContent>();
        }
        this.productContents.add(productContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductContent(ProductContent productContent) {
        if (this.productContents == null) {
            return;
        }
        this.productContents.remove(productContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductContent() {
        if (this.productContents == null) {
            return;
        }
        this.productContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addSalesOpportunityContent(SalesOpportunityContent salesOpportunityContent) {
        if (this.salesOpportunityContents == null) {
            this.salesOpportunityContents = new ArrayList<SalesOpportunityContent>();
        }
        this.salesOpportunityContents.add(salesOpportunityContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSalesOpportunityContent(SalesOpportunityContent salesOpportunityContent) {
        if (this.salesOpportunityContents == null) {
            return;
        }
        this.salesOpportunityContents.remove(salesOpportunityContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSalesOpportunityContent() {
        if (this.salesOpportunityContents == null) {
            return;
        }
        this.salesOpportunityContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWebSiteContent(WebSiteContent webSiteContent) {
        if (this.webSiteContents == null) {
            this.webSiteContents = new ArrayList<WebSiteContent>();
        }
        this.webSiteContents.add(webSiteContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWebSiteContent(WebSiteContent webSiteContent) {
        if (this.webSiteContents == null) {
            return;
        }
        this.webSiteContents.remove(webSiteContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWebSiteContent() {
        if (this.webSiteContents == null) {
            return;
        }
        this.webSiteContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortContent(WorkEffortContent workEffortContent) {
        if (this.workEffortContents == null) {
            this.workEffortContents = new ArrayList<WorkEffortContent>();
        }
        this.workEffortContents.add(workEffortContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortContent(WorkEffortContent workEffortContent) {
        if (this.workEffortContents == null) {
            return;
        }
        this.workEffortContents.remove(workEffortContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortContent() {
        if (this.workEffortContents == null) {
            return;
        }
        this.workEffortContents.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setContentId((String) mapValue.get("contentId"));
        setContentTypeId((String) mapValue.get("contentTypeId"));
        setOwnerContentId((String) mapValue.get("ownerContentId"));
        setDecoratorContentId((String) mapValue.get("decoratorContentId"));
        setInstanceOfContentId((String) mapValue.get("instanceOfContentId"));
        setDataResourceId((String) mapValue.get("dataResourceId"));
        setTemplateDataResourceId((String) mapValue.get("templateDataResourceId"));
        setDataSourceId((String) mapValue.get("dataSourceId"));
        setStatusId((String) mapValue.get("statusId"));
        setPrivilegeEnumId((String) mapValue.get("privilegeEnumId"));
        setServiceName((String) mapValue.get("serviceName"));
        setContentName((String) mapValue.get("contentName"));
        setDescription((String) mapValue.get("description"));
        setLocaleString((String) mapValue.get("localeString"));
        setMimeTypeId((String) mapValue.get("mimeTypeId"));
        setCharacterSetId((String) mapValue.get("characterSetId"));
        setChildLeafCount((Long) mapValue.get("childLeafCount"));
        setChildBranchCount((Long) mapValue.get("childBranchCount"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setClassificationEnumId((String) mapValue.get("classificationEnumId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("contentId", getContentId());
        mapValue.put("contentTypeId", getContentTypeId());
        mapValue.put("ownerContentId", getOwnerContentId());
        mapValue.put("decoratorContentId", getDecoratorContentId());
        mapValue.put("instanceOfContentId", getInstanceOfContentId());
        mapValue.put("dataResourceId", getDataResourceId());
        mapValue.put("templateDataResourceId", getTemplateDataResourceId());
        mapValue.put("dataSourceId", getDataSourceId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("privilegeEnumId", getPrivilegeEnumId());
        mapValue.put("serviceName", getServiceName());
        mapValue.put("contentName", getContentName());
        mapValue.put("description", getDescription());
        mapValue.put("localeString", getLocaleString());
        mapValue.put("mimeTypeId", getMimeTypeId());
        mapValue.put("characterSetId", getCharacterSetId());
        mapValue.put("childLeafCount", getChildLeafCount());
        mapValue.put("childBranchCount", getChildBranchCount());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("classificationEnumId", getClassificationEnumId());
        return mapValue;
    }


}
