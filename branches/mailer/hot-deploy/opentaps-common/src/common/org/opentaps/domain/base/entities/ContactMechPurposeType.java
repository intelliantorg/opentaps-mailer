package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ContactMechPurposeType.
 */
@javax.persistence.Entity
@Table(name="CONTACT_MECH_PURPOSE_TYPE")
public class ContactMechPurposeType extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("contactMechPurposeTypeId", "CONTACT_MECH_PURPOSE_TYPE_ID");
        fields.put("description", "DESCRIPTION");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ContactMechPurposeType", fields);
}
  public static enum Fields implements EntityFieldInterface<ContactMechPurposeType> {
    contactMechPurposeTypeId("contactMechPurposeTypeId"),
    description("description"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="ContactMechPurposeType_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="ContactMechPurposeType_GEN")   
    @Id
    
    @Column(name="CONTACT_MECH_PURPOSE_TYPE_ID")
    private String contactMechPurposeTypeId;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMechPurposeType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_PURPOSE_TYPE_ID")
    private List<ContactMechTypePurpose> contactMechTypePurposes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMechPurposeType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_PURPOSE_TYPE_ID")
    private List<FacilityContactMechPurpose> facilityContactMechPurposes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMechPurposeType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_PURPOSE_TYPE_ID")
    private List<InvoiceContactMech> invoiceContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMechPurposeType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_PURPOSE_TYPE_ID")
    private List<OrderContactMech> orderContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMechPurposeType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_PURPOSE_TYPE_ID")
    private List<OrderItemContactMech> orderItemContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMechPurposeType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_PURPOSE_TYPE_ID")
    private List<PartyContactMechPurpose> partyContactMechPurposes = null;

  /**
   * Default constructor.
   */
  public ContactMechPurposeType() {
      super();
      this.baseEntityName = "ContactMechPurposeType";
      this.isView = false;
      this.resourceName = "PartyEntityLabels";
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("contactMechPurposeTypeId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ContactMechPurposeType(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param contactMechPurposeTypeId the contactMechPurposeTypeId to set
     */
    public void setContactMechPurposeTypeId(String contactMechPurposeTypeId) {
        this.contactMechPurposeTypeId = contactMechPurposeTypeId;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechPurposeTypeId() {
        return this.contactMechPurposeTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>ContactMechTypePurpose</code> by the relation named <code>ContactMechTypePurpose</code>.
     * @return the list of <code>ContactMechTypePurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactMechTypePurpose> getContactMechTypePurposes() throws RepositoryException {
        if (this.contactMechTypePurposes == null) {
            this.contactMechTypePurposes = getRelated(ContactMechTypePurpose.class, "ContactMechTypePurpose");
        }
        return this.contactMechTypePurposes;
    }
    /**
     * Auto generated method that gets the related <code>FacilityContactMechPurpose</code> by the relation named <code>FacilityContactMechPurpose</code>.
     * @return the list of <code>FacilityContactMechPurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FacilityContactMechPurpose> getFacilityContactMechPurposes() throws RepositoryException {
        if (this.facilityContactMechPurposes == null) {
            this.facilityContactMechPurposes = getRelated(FacilityContactMechPurpose.class, "FacilityContactMechPurpose");
        }
        return this.facilityContactMechPurposes;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceContactMech</code> by the relation named <code>InvoiceContactMech</code>.
     * @return the list of <code>InvoiceContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceContactMech> getInvoiceContactMeches() throws RepositoryException {
        if (this.invoiceContactMeches == null) {
            this.invoiceContactMeches = getRelated(InvoiceContactMech.class, "InvoiceContactMech");
        }
        return this.invoiceContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderContactMech</code> by the relation named <code>OrderContactMech</code>.
     * @return the list of <code>OrderContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderContactMech> getOrderContactMeches() throws RepositoryException {
        if (this.orderContactMeches == null) {
            this.orderContactMeches = getRelated(OrderContactMech.class, "OrderContactMech");
        }
        return this.orderContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemContactMech</code> by the relation named <code>OrderItemContactMech</code>.
     * @return the list of <code>OrderItemContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemContactMech> getOrderItemContactMeches() throws RepositoryException {
        if (this.orderItemContactMeches == null) {
            this.orderItemContactMeches = getRelated(OrderItemContactMech.class, "OrderItemContactMech");
        }
        return this.orderItemContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>PartyContactMechPurpose</code> by the relation named <code>PartyContactMechPurpose</code>.
     * @return the list of <code>PartyContactMechPurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContactMechPurpose> getPartyContactMechPurposes() throws RepositoryException {
        if (this.partyContactMechPurposes == null) {
            this.partyContactMechPurposes = getRelated(PartyContactMechPurpose.class, "PartyContactMechPurpose");
        }
        return this.partyContactMechPurposes;
    }

    /**
     * Auto generated value setter.
     * @param contactMechTypePurposes the contactMechTypePurposes to set
    */
    public void setContactMechTypePurposes(List<ContactMechTypePurpose> contactMechTypePurposes) {
        this.contactMechTypePurposes = contactMechTypePurposes;
    }
    /**
     * Auto generated value setter.
     * @param facilityContactMechPurposes the facilityContactMechPurposes to set
    */
    public void setFacilityContactMechPurposes(List<FacilityContactMechPurpose> facilityContactMechPurposes) {
        this.facilityContactMechPurposes = facilityContactMechPurposes;
    }
    /**
     * Auto generated value setter.
     * @param invoiceContactMeches the invoiceContactMeches to set
    */
    public void setInvoiceContactMeches(List<InvoiceContactMech> invoiceContactMeches) {
        this.invoiceContactMeches = invoiceContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderContactMeches the orderContactMeches to set
    */
    public void setOrderContactMeches(List<OrderContactMech> orderContactMeches) {
        this.orderContactMeches = orderContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderItemContactMeches the orderItemContactMeches to set
    */
    public void setOrderItemContactMeches(List<OrderItemContactMech> orderItemContactMeches) {
        this.orderItemContactMeches = orderItemContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param partyContactMechPurposes the partyContactMechPurposes to set
    */
    public void setPartyContactMechPurposes(List<PartyContactMechPurpose> partyContactMechPurposes) {
        this.partyContactMechPurposes = partyContactMechPurposes;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addContactMechTypePurpose(ContactMechTypePurpose contactMechTypePurpose) {
        if (this.contactMechTypePurposes == null) {
            this.contactMechTypePurposes = new ArrayList<ContactMechTypePurpose>();
        }
        this.contactMechTypePurposes.add(contactMechTypePurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContactMechTypePurpose(ContactMechTypePurpose contactMechTypePurpose) {
        if (this.contactMechTypePurposes == null) {
            return;
        }
        this.contactMechTypePurposes.remove(contactMechTypePurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContactMechTypePurpose() {
        if (this.contactMechTypePurposes == null) {
            return;
        }
        this.contactMechTypePurposes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFacilityContactMechPurpose(FacilityContactMechPurpose facilityContactMechPurpose) {
        if (this.facilityContactMechPurposes == null) {
            this.facilityContactMechPurposes = new ArrayList<FacilityContactMechPurpose>();
        }
        this.facilityContactMechPurposes.add(facilityContactMechPurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFacilityContactMechPurpose(FacilityContactMechPurpose facilityContactMechPurpose) {
        if (this.facilityContactMechPurposes == null) {
            return;
        }
        this.facilityContactMechPurposes.remove(facilityContactMechPurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFacilityContactMechPurpose() {
        if (this.facilityContactMechPurposes == null) {
            return;
        }
        this.facilityContactMechPurposes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceContactMeche(InvoiceContactMech invoiceContactMeche) {
        if (this.invoiceContactMeches == null) {
            this.invoiceContactMeches = new ArrayList<InvoiceContactMech>();
        }
        this.invoiceContactMeches.add(invoiceContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceContactMeche(InvoiceContactMech invoiceContactMeche) {
        if (this.invoiceContactMeches == null) {
            return;
        }
        this.invoiceContactMeches.remove(invoiceContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceContactMeche() {
        if (this.invoiceContactMeches == null) {
            return;
        }
        this.invoiceContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderContactMeche(OrderContactMech orderContactMeche) {
        if (this.orderContactMeches == null) {
            this.orderContactMeches = new ArrayList<OrderContactMech>();
        }
        this.orderContactMeches.add(orderContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderContactMeche(OrderContactMech orderContactMeche) {
        if (this.orderContactMeches == null) {
            return;
        }
        this.orderContactMeches.remove(orderContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderContactMeche() {
        if (this.orderContactMeches == null) {
            return;
        }
        this.orderContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemContactMeche(OrderItemContactMech orderItemContactMeche) {
        if (this.orderItemContactMeches == null) {
            this.orderItemContactMeches = new ArrayList<OrderItemContactMech>();
        }
        this.orderItemContactMeches.add(orderItemContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemContactMeche(OrderItemContactMech orderItemContactMeche) {
        if (this.orderItemContactMeches == null) {
            return;
        }
        this.orderItemContactMeches.remove(orderItemContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemContactMeche() {
        if (this.orderItemContactMeches == null) {
            return;
        }
        this.orderItemContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyContactMechPurpose(PartyContactMechPurpose partyContactMechPurpose) {
        if (this.partyContactMechPurposes == null) {
            this.partyContactMechPurposes = new ArrayList<PartyContactMechPurpose>();
        }
        this.partyContactMechPurposes.add(partyContactMechPurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyContactMechPurpose(PartyContactMechPurpose partyContactMechPurpose) {
        if (this.partyContactMechPurposes == null) {
            return;
        }
        this.partyContactMechPurposes.remove(partyContactMechPurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyContactMechPurpose() {
        if (this.partyContactMechPurposes == null) {
            return;
        }
        this.partyContactMechPurposes.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setContactMechPurposeTypeId((String) mapValue.get("contactMechPurposeTypeId"));
        setDescription((String) mapValue.get("description"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("contactMechPurposeTypeId", getContactMechPurposeTypeId());
        mapValue.put("description", getDescription());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
