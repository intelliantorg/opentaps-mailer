package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity CustRequest.
 */
@javax.persistence.Entity
@Table(name="CUST_REQUEST")
public class CustRequest extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("custRequestId", "CUST_REQUEST_ID");
        fields.put("custRequestTypeId", "CUST_REQUEST_TYPE_ID");
        fields.put("custRequestCategoryId", "CUST_REQUEST_CATEGORY_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("fromPartyId", "FROM_PARTY_ID");
        fields.put("priority", "PRIORITY");
        fields.put("custRequestDate", "CUST_REQUEST_DATE");
        fields.put("responseRequiredDate", "RESPONSE_REQUIRED_DATE");
        fields.put("custRequestName", "CUST_REQUEST_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("maximumAmountUomId", "MAXIMUM_AMOUNT_UOM_ID");
        fields.put("productStoreId", "PRODUCT_STORE_ID");
        fields.put("salesChannelEnumId", "SALES_CHANNEL_ENUM_ID");
        fields.put("fulfillContactMechId", "FULFILL_CONTACT_MECH_ID");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("fulfilledDateTime", "FULFILLED_DATE_TIME");
fieldMapColumns.put("CustRequest", fields);
}
  public static enum Fields implements EntityFieldInterface<CustRequest> {
    custRequestId("custRequestId"),
    custRequestTypeId("custRequestTypeId"),
    custRequestCategoryId("custRequestCategoryId"),
    statusId("statusId"),
    fromPartyId("fromPartyId"),
    priority("priority"),
    custRequestDate("custRequestDate"),
    responseRequiredDate("responseRequiredDate"),
    custRequestName("custRequestName"),
    description("description"),
    maximumAmountUomId("maximumAmountUomId"),
    productStoreId("productStoreId"),
    salesChannelEnumId("salesChannelEnumId"),
    fulfillContactMechId("fulfillContactMechId"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    fulfilledDateTime("fulfilledDateTime");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="CustRequest_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="CustRequest_GEN")   
    @Id
    
    @Column(name="CUST_REQUEST_ID")
    private String custRequestId;
    
    @Column(name="CUST_REQUEST_TYPE_ID")
    private String custRequestTypeId;
    
    @Column(name="CUST_REQUEST_CATEGORY_ID")
    private String custRequestCategoryId;
    
    @Column(name="STATUS_ID")
    private String statusId;
    
    @Column(name="FROM_PARTY_ID")
    private String fromPartyId;
    
    @Column(name="PRIORITY")
    private Long priority;
    
    @Column(name="CUST_REQUEST_DATE")
    private Timestamp custRequestDate;
    
    @Column(name="RESPONSE_REQUIRED_DATE")
    private Timestamp responseRequiredDate;
    
    @Column(name="CUST_REQUEST_NAME")
    private String custRequestName;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="MAXIMUM_AMOUNT_UOM_ID")
    private String maximumAmountUomId;
    
    @Column(name="PRODUCT_STORE_ID")
    private String productStoreId;
    
    @Column(name="SALES_CHANNEL_ENUM_ID")
    private String salesChannelEnumId;
    
    @Column(name="FULFILL_CONTACT_MECH_ID")
    private String fulfillContactMechId;
    
    @Column(name="CREATED_DATE")
    private Timestamp createdDate;
    
    @Column(name="CREATED_BY_USER_LOGIN")
    private String createdByUserLogin;
    
    @Column(name="LAST_MODIFIED_DATE")
    private Timestamp lastModifiedDate;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="FULFILLED_DATE_TIME")
    private Timestamp fulfilledDateTime;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CUST_REQUEST_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private CustRequestType custRequestType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CUST_REQUEST_CATEGORY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private CustRequestCategory custRequestCategory = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem statusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="FROM_PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party fromParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="MAXIMUM_AMOUNT_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom uom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_STORE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductStore productStore = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SALES_CHANNEL_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration salesChannelEnumeration = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CUST_REQUEST_TYPE_ID")
    private List<CustRequestTypeAttr> custRequestTypeAttrs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="FULFILL_CONTACT_MECH_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactMech fulfillContactMech = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<CustRequestAttribute> custRequestAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<CustRequestCommEvent> custRequestCommEvents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<CustRequestContent> custRequestContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<CustRequestItem> custRequestItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<CustRequestItemWorkEffort> custRequestItemWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<CustRequestRole> custRequestRoles = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<CustRequestStatus> custRequestStatuses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<CustRequestWorkEffort> custRequestWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<QuoteItem> quoteItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<RequirementCustRequest> requirementCustRequests = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="custRequest", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CUST_REQUEST_ID")
    private List<RespondingParty> respondingPartys = null;

  /**
   * Default constructor.
   */
  public CustRequest() {
      super();
      this.baseEntityName = "CustRequest";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("custRequestId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public CustRequest(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param custRequestId the custRequestId to set
     */
    public void setCustRequestId(String custRequestId) {
        this.custRequestId = custRequestId;
    }
    /**
     * Auto generated value setter.
     * @param custRequestTypeId the custRequestTypeId to set
     */
    public void setCustRequestTypeId(String custRequestTypeId) {
        this.custRequestTypeId = custRequestTypeId;
    }
    /**
     * Auto generated value setter.
     * @param custRequestCategoryId the custRequestCategoryId to set
     */
    public void setCustRequestCategoryId(String custRequestCategoryId) {
        this.custRequestCategoryId = custRequestCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param fromPartyId the fromPartyId to set
     */
    public void setFromPartyId(String fromPartyId) {
        this.fromPartyId = fromPartyId;
    }
    /**
     * Auto generated value setter.
     * @param priority the priority to set
     */
    public void setPriority(Long priority) {
        this.priority = priority;
    }
    /**
     * Auto generated value setter.
     * @param custRequestDate the custRequestDate to set
     */
    public void setCustRequestDate(Timestamp custRequestDate) {
        this.custRequestDate = custRequestDate;
    }
    /**
     * Auto generated value setter.
     * @param responseRequiredDate the responseRequiredDate to set
     */
    public void setResponseRequiredDate(Timestamp responseRequiredDate) {
        this.responseRequiredDate = responseRequiredDate;
    }
    /**
     * Auto generated value setter.
     * @param custRequestName the custRequestName to set
     */
    public void setCustRequestName(String custRequestName) {
        this.custRequestName = custRequestName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param maximumAmountUomId the maximumAmountUomId to set
     */
    public void setMaximumAmountUomId(String maximumAmountUomId) {
        this.maximumAmountUomId = maximumAmountUomId;
    }
    /**
     * Auto generated value setter.
     * @param productStoreId the productStoreId to set
     */
    public void setProductStoreId(String productStoreId) {
        this.productStoreId = productStoreId;
    }
    /**
     * Auto generated value setter.
     * @param salesChannelEnumId the salesChannelEnumId to set
     */
    public void setSalesChannelEnumId(String salesChannelEnumId) {
        this.salesChannelEnumId = salesChannelEnumId;
    }
    /**
     * Auto generated value setter.
     * @param fulfillContactMechId the fulfillContactMechId to set
     */
    public void setFulfillContactMechId(String fulfillContactMechId) {
        this.fulfillContactMechId = fulfillContactMechId;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param fulfilledDateTime the fulfilledDateTime to set
     */
    public void setFulfilledDateTime(Timestamp fulfilledDateTime) {
        this.fulfilledDateTime = fulfilledDateTime;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCustRequestId() {
        return this.custRequestId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCustRequestTypeId() {
        return this.custRequestTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCustRequestCategoryId() {
        return this.custRequestCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFromPartyId() {
        return this.fromPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getPriority() {
        return this.priority;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCustRequestDate() {
        return this.custRequestDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getResponseRequiredDate() {
        return this.responseRequiredDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCustRequestName() {
        return this.custRequestName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMaximumAmountUomId() {
        return this.maximumAmountUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductStoreId() {
        return this.productStoreId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalesChannelEnumId() {
        return this.salesChannelEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFulfillContactMechId() {
        return this.fulfillContactMechId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFulfilledDateTime() {
        return this.fulfilledDateTime;
    }

    /**
     * Auto generated method that gets the related <code>CustRequestType</code> by the relation named <code>CustRequestType</code>.
     * @return the <code>CustRequestType</code>
     * @throws RepositoryException if an error occurs
     */
    public CustRequestType getCustRequestType() throws RepositoryException {
        if (this.custRequestType == null) {
            this.custRequestType = getRelatedOne(CustRequestType.class, "CustRequestType");
        }
        return this.custRequestType;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestCategory</code> by the relation named <code>CustRequestCategory</code>.
     * @return the <code>CustRequestCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public CustRequestCategory getCustRequestCategory() throws RepositoryException {
        if (this.custRequestCategory == null) {
            this.custRequestCategory = getRelatedOne(CustRequestCategory.class, "CustRequestCategory");
        }
        return this.custRequestCategory;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>FromParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getFromParty() throws RepositoryException {
        if (this.fromParty == null) {
            this.fromParty = getRelatedOne(Party.class, "FromParty");
        }
        return this.fromParty;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>Uom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getUom() throws RepositoryException {
        if (this.uom == null) {
            this.uom = getRelatedOne(Uom.class, "Uom");
        }
        return this.uom;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>ProductStore</code>.
     * @return the <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductStore getProductStore() throws RepositoryException {
        if (this.productStore == null) {
            this.productStore = getRelatedOne(ProductStore.class, "ProductStore");
        }
        return this.productStore;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>SalesChannelEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getSalesChannelEnumeration() throws RepositoryException {
        if (this.salesChannelEnumeration == null) {
            this.salesChannelEnumeration = getRelatedOne(Enumeration.class, "SalesChannelEnumeration");
        }
        return this.salesChannelEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestTypeAttr</code> by the relation named <code>CustRequestTypeAttr</code>.
     * @return the list of <code>CustRequestTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestTypeAttr> getCustRequestTypeAttrs() throws RepositoryException {
        if (this.custRequestTypeAttrs == null) {
            this.custRequestTypeAttrs = getRelated(CustRequestTypeAttr.class, "CustRequestTypeAttr");
        }
        return this.custRequestTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>ContactMech</code> by the relation named <code>FulfillContactMech</code>.
     * @return the <code>ContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMech getFulfillContactMech() throws RepositoryException {
        if (this.fulfillContactMech == null) {
            this.fulfillContactMech = getRelatedOne(ContactMech.class, "FulfillContactMech");
        }
        return this.fulfillContactMech;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestAttribute</code> by the relation named <code>CustRequestAttribute</code>.
     * @return the list of <code>CustRequestAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestAttribute> getCustRequestAttributes() throws RepositoryException {
        if (this.custRequestAttributes == null) {
            this.custRequestAttributes = getRelated(CustRequestAttribute.class, "CustRequestAttribute");
        }
        return this.custRequestAttributes;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestCommEvent</code> by the relation named <code>CustRequestCommEvent</code>.
     * @return the list of <code>CustRequestCommEvent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestCommEvent> getCustRequestCommEvents() throws RepositoryException {
        if (this.custRequestCommEvents == null) {
            this.custRequestCommEvents = getRelated(CustRequestCommEvent.class, "CustRequestCommEvent");
        }
        return this.custRequestCommEvents;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestContent</code> by the relation named <code>CustRequestContent</code>.
     * @return the list of <code>CustRequestContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestContent> getCustRequestContents() throws RepositoryException {
        if (this.custRequestContents == null) {
            this.custRequestContents = getRelated(CustRequestContent.class, "CustRequestContent");
        }
        return this.custRequestContents;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestItem</code> by the relation named <code>CustRequestItem</code>.
     * @return the list of <code>CustRequestItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestItem> getCustRequestItems() throws RepositoryException {
        if (this.custRequestItems == null) {
            this.custRequestItems = getRelated(CustRequestItem.class, "CustRequestItem");
        }
        return this.custRequestItems;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestItemWorkEffort</code> by the relation named <code>CustRequestItemWorkEffort</code>.
     * @return the list of <code>CustRequestItemWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestItemWorkEffort> getCustRequestItemWorkEfforts() throws RepositoryException {
        if (this.custRequestItemWorkEfforts == null) {
            this.custRequestItemWorkEfforts = getRelated(CustRequestItemWorkEffort.class, "CustRequestItemWorkEffort");
        }
        return this.custRequestItemWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestRole</code> by the relation named <code>CustRequestRole</code>.
     * @return the list of <code>CustRequestRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestRole> getCustRequestRoles() throws RepositoryException {
        if (this.custRequestRoles == null) {
            this.custRequestRoles = getRelated(CustRequestRole.class, "CustRequestRole");
        }
        return this.custRequestRoles;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestStatus</code> by the relation named <code>CustRequestStatus</code>.
     * @return the list of <code>CustRequestStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestStatus> getCustRequestStatuses() throws RepositoryException {
        if (this.custRequestStatuses == null) {
            this.custRequestStatuses = getRelated(CustRequestStatus.class, "CustRequestStatus");
        }
        return this.custRequestStatuses;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestWorkEffort</code> by the relation named <code>CustRequestWorkEffort</code>.
     * @return the list of <code>CustRequestWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestWorkEffort> getCustRequestWorkEfforts() throws RepositoryException {
        if (this.custRequestWorkEfforts == null) {
            this.custRequestWorkEfforts = getRelated(CustRequestWorkEffort.class, "CustRequestWorkEffort");
        }
        return this.custRequestWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>QuoteItem</code> by the relation named <code>QuoteItem</code>.
     * @return the list of <code>QuoteItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteItem> getQuoteItems() throws RepositoryException {
        if (this.quoteItems == null) {
            this.quoteItems = getRelated(QuoteItem.class, "QuoteItem");
        }
        return this.quoteItems;
    }
    /**
     * Auto generated method that gets the related <code>RequirementCustRequest</code> by the relation named <code>RequirementCustRequest</code>.
     * @return the list of <code>RequirementCustRequest</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RequirementCustRequest> getRequirementCustRequests() throws RepositoryException {
        if (this.requirementCustRequests == null) {
            this.requirementCustRequests = getRelated(RequirementCustRequest.class, "RequirementCustRequest");
        }
        return this.requirementCustRequests;
    }
    /**
     * Auto generated method that gets the related <code>RespondingParty</code> by the relation named <code>RespondingParty</code>.
     * @return the list of <code>RespondingParty</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RespondingParty> getRespondingPartys() throws RepositoryException {
        if (this.respondingPartys == null) {
            this.respondingPartys = getRelated(RespondingParty.class, "RespondingParty");
        }
        return this.respondingPartys;
    }

    /**
     * Auto generated value setter.
     * @param custRequestType the custRequestType to set
    */
    public void setCustRequestType(CustRequestType custRequestType) {
        this.custRequestType = custRequestType;
    }
    /**
     * Auto generated value setter.
     * @param custRequestCategory the custRequestCategory to set
    */
    public void setCustRequestCategory(CustRequestCategory custRequestCategory) {
        this.custRequestCategory = custRequestCategory;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param fromParty the fromParty to set
    */
    public void setFromParty(Party fromParty) {
        this.fromParty = fromParty;
    }
    /**
     * Auto generated value setter.
     * @param uom the uom to set
    */
    public void setUom(Uom uom) {
        this.uom = uom;
    }
    /**
     * Auto generated value setter.
     * @param productStore the productStore to set
    */
    public void setProductStore(ProductStore productStore) {
        this.productStore = productStore;
    }
    /**
     * Auto generated value setter.
     * @param salesChannelEnumeration the salesChannelEnumeration to set
    */
    public void setSalesChannelEnumeration(Enumeration salesChannelEnumeration) {
        this.salesChannelEnumeration = salesChannelEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param custRequestTypeAttrs the custRequestTypeAttrs to set
    */
    public void setCustRequestTypeAttrs(List<CustRequestTypeAttr> custRequestTypeAttrs) {
        this.custRequestTypeAttrs = custRequestTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param fulfillContactMech the fulfillContactMech to set
    */
    public void setFulfillContactMech(ContactMech fulfillContactMech) {
        this.fulfillContactMech = fulfillContactMech;
    }
    /**
     * Auto generated value setter.
     * @param custRequestAttributes the custRequestAttributes to set
    */
    public void setCustRequestAttributes(List<CustRequestAttribute> custRequestAttributes) {
        this.custRequestAttributes = custRequestAttributes;
    }
    /**
     * Auto generated value setter.
     * @param custRequestCommEvents the custRequestCommEvents to set
    */
    public void setCustRequestCommEvents(List<CustRequestCommEvent> custRequestCommEvents) {
        this.custRequestCommEvents = custRequestCommEvents;
    }
    /**
     * Auto generated value setter.
     * @param custRequestContents the custRequestContents to set
    */
    public void setCustRequestContents(List<CustRequestContent> custRequestContents) {
        this.custRequestContents = custRequestContents;
    }
    /**
     * Auto generated value setter.
     * @param custRequestItems the custRequestItems to set
    */
    public void setCustRequestItems(List<CustRequestItem> custRequestItems) {
        this.custRequestItems = custRequestItems;
    }
    /**
     * Auto generated value setter.
     * @param custRequestItemWorkEfforts the custRequestItemWorkEfforts to set
    */
    public void setCustRequestItemWorkEfforts(List<CustRequestItemWorkEffort> custRequestItemWorkEfforts) {
        this.custRequestItemWorkEfforts = custRequestItemWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param custRequestRoles the custRequestRoles to set
    */
    public void setCustRequestRoles(List<CustRequestRole> custRequestRoles) {
        this.custRequestRoles = custRequestRoles;
    }
    /**
     * Auto generated value setter.
     * @param custRequestStatuses the custRequestStatuses to set
    */
    public void setCustRequestStatuses(List<CustRequestStatus> custRequestStatuses) {
        this.custRequestStatuses = custRequestStatuses;
    }
    /**
     * Auto generated value setter.
     * @param custRequestWorkEfforts the custRequestWorkEfforts to set
    */
    public void setCustRequestWorkEfforts(List<CustRequestWorkEffort> custRequestWorkEfforts) {
        this.custRequestWorkEfforts = custRequestWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param quoteItems the quoteItems to set
    */
    public void setQuoteItems(List<QuoteItem> quoteItems) {
        this.quoteItems = quoteItems;
    }
    /**
     * Auto generated value setter.
     * @param requirementCustRequests the requirementCustRequests to set
    */
    public void setRequirementCustRequests(List<RequirementCustRequest> requirementCustRequests) {
        this.requirementCustRequests = requirementCustRequests;
    }
    /**
     * Auto generated value setter.
     * @param respondingPartys the respondingPartys to set
    */
    public void setRespondingPartys(List<RespondingParty> respondingPartys) {
        this.respondingPartys = respondingPartys;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestAttribute(CustRequestAttribute custRequestAttribute) {
        if (this.custRequestAttributes == null) {
            this.custRequestAttributes = new ArrayList<CustRequestAttribute>();
        }
        this.custRequestAttributes.add(custRequestAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestAttribute(CustRequestAttribute custRequestAttribute) {
        if (this.custRequestAttributes == null) {
            return;
        }
        this.custRequestAttributes.remove(custRequestAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestAttribute() {
        if (this.custRequestAttributes == null) {
            return;
        }
        this.custRequestAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestCommEvent(CustRequestCommEvent custRequestCommEvent) {
        if (this.custRequestCommEvents == null) {
            this.custRequestCommEvents = new ArrayList<CustRequestCommEvent>();
        }
        this.custRequestCommEvents.add(custRequestCommEvent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestCommEvent(CustRequestCommEvent custRequestCommEvent) {
        if (this.custRequestCommEvents == null) {
            return;
        }
        this.custRequestCommEvents.remove(custRequestCommEvent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestCommEvent() {
        if (this.custRequestCommEvents == null) {
            return;
        }
        this.custRequestCommEvents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestContent(CustRequestContent custRequestContent) {
        if (this.custRequestContents == null) {
            this.custRequestContents = new ArrayList<CustRequestContent>();
        }
        this.custRequestContents.add(custRequestContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestContent(CustRequestContent custRequestContent) {
        if (this.custRequestContents == null) {
            return;
        }
        this.custRequestContents.remove(custRequestContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestContent() {
        if (this.custRequestContents == null) {
            return;
        }
        this.custRequestContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestItem(CustRequestItem custRequestItem) {
        if (this.custRequestItems == null) {
            this.custRequestItems = new ArrayList<CustRequestItem>();
        }
        this.custRequestItems.add(custRequestItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestItem(CustRequestItem custRequestItem) {
        if (this.custRequestItems == null) {
            return;
        }
        this.custRequestItems.remove(custRequestItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestItem() {
        if (this.custRequestItems == null) {
            return;
        }
        this.custRequestItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestItemWorkEffort(CustRequestItemWorkEffort custRequestItemWorkEffort) {
        if (this.custRequestItemWorkEfforts == null) {
            this.custRequestItemWorkEfforts = new ArrayList<CustRequestItemWorkEffort>();
        }
        this.custRequestItemWorkEfforts.add(custRequestItemWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestItemWorkEffort(CustRequestItemWorkEffort custRequestItemWorkEffort) {
        if (this.custRequestItemWorkEfforts == null) {
            return;
        }
        this.custRequestItemWorkEfforts.remove(custRequestItemWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestItemWorkEffort() {
        if (this.custRequestItemWorkEfforts == null) {
            return;
        }
        this.custRequestItemWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestRole(CustRequestRole custRequestRole) {
        if (this.custRequestRoles == null) {
            this.custRequestRoles = new ArrayList<CustRequestRole>();
        }
        this.custRequestRoles.add(custRequestRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestRole(CustRequestRole custRequestRole) {
        if (this.custRequestRoles == null) {
            return;
        }
        this.custRequestRoles.remove(custRequestRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestRole() {
        if (this.custRequestRoles == null) {
            return;
        }
        this.custRequestRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestWorkEffort(CustRequestWorkEffort custRequestWorkEffort) {
        if (this.custRequestWorkEfforts == null) {
            this.custRequestWorkEfforts = new ArrayList<CustRequestWorkEffort>();
        }
        this.custRequestWorkEfforts.add(custRequestWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestWorkEffort(CustRequestWorkEffort custRequestWorkEffort) {
        if (this.custRequestWorkEfforts == null) {
            return;
        }
        this.custRequestWorkEfforts.remove(custRequestWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestWorkEffort() {
        if (this.custRequestWorkEfforts == null) {
            return;
        }
        this.custRequestWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addRequirementCustRequest(RequirementCustRequest requirementCustRequest) {
        if (this.requirementCustRequests == null) {
            this.requirementCustRequests = new ArrayList<RequirementCustRequest>();
        }
        this.requirementCustRequests.add(requirementCustRequest);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeRequirementCustRequest(RequirementCustRequest requirementCustRequest) {
        if (this.requirementCustRequests == null) {
            return;
        }
        this.requirementCustRequests.remove(requirementCustRequest);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearRequirementCustRequest() {
        if (this.requirementCustRequests == null) {
            return;
        }
        this.requirementCustRequests.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addRespondingParty(RespondingParty respondingParty) {
        if (this.respondingPartys == null) {
            this.respondingPartys = new ArrayList<RespondingParty>();
        }
        this.respondingPartys.add(respondingParty);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeRespondingParty(RespondingParty respondingParty) {
        if (this.respondingPartys == null) {
            return;
        }
        this.respondingPartys.remove(respondingParty);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearRespondingParty() {
        if (this.respondingPartys == null) {
            return;
        }
        this.respondingPartys.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setCustRequestId((String) mapValue.get("custRequestId"));
        setCustRequestTypeId((String) mapValue.get("custRequestTypeId"));
        setCustRequestCategoryId((String) mapValue.get("custRequestCategoryId"));
        setStatusId((String) mapValue.get("statusId"));
        setFromPartyId((String) mapValue.get("fromPartyId"));
        setPriority((Long) mapValue.get("priority"));
        setCustRequestDate((Timestamp) mapValue.get("custRequestDate"));
        setResponseRequiredDate((Timestamp) mapValue.get("responseRequiredDate"));
        setCustRequestName((String) mapValue.get("custRequestName"));
        setDescription((String) mapValue.get("description"));
        setMaximumAmountUomId((String) mapValue.get("maximumAmountUomId"));
        setProductStoreId((String) mapValue.get("productStoreId"));
        setSalesChannelEnumId((String) mapValue.get("salesChannelEnumId"));
        setFulfillContactMechId((String) mapValue.get("fulfillContactMechId"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setFulfilledDateTime((Timestamp) mapValue.get("fulfilledDateTime"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("custRequestId", getCustRequestId());
        mapValue.put("custRequestTypeId", getCustRequestTypeId());
        mapValue.put("custRequestCategoryId", getCustRequestCategoryId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("fromPartyId", getFromPartyId());
        mapValue.put("priority", getPriority());
        mapValue.put("custRequestDate", getCustRequestDate());
        mapValue.put("responseRequiredDate", getResponseRequiredDate());
        mapValue.put("custRequestName", getCustRequestName());
        mapValue.put("description", getDescription());
        mapValue.put("maximumAmountUomId", getMaximumAmountUomId());
        mapValue.put("productStoreId", getProductStoreId());
        mapValue.put("salesChannelEnumId", getSalesChannelEnumId());
        mapValue.put("fulfillContactMechId", getFulfillContactMechId());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("fulfilledDateTime", getFulfilledDateTime());
        return mapValue;
    }


}
