package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;

/**
 * Auto generated base entity PartyAndPerson.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectPartyAndPersons", query="SELECT PTY.PARTY_ID AS \"partyId\",PTY.PARTY_TYPE_ID AS \"partyTypeId\",PTY.EXTERNAL_ID AS \"externalId\",PTY.PREFERRED_CURRENCY_UOM_ID AS \"preferredCurrencyUomId\",PTY.DESCRIPTION AS \"description\",PTY.STATUS_ID AS \"statusId\",PTY.CREATED_DATE AS \"createdDate\",PTY.CREATED_BY_USER_LOGIN AS \"createdByUserLogin\",PTY.LAST_MODIFIED_DATE AS \"lastModifiedDate\",PTY.LAST_MODIFIED_BY_USER_LOGIN AS \"lastModifiedByUserLogin\",PERS.SALUTATION AS \"salutation\",PERS.FIRST_NAME AS \"firstName\",PERS.MIDDLE_NAME AS \"middleName\",PERS.LAST_NAME AS \"lastName\",PERS.PERSONAL_TITLE AS \"personalTitle\",PERS.SUFFIX AS \"suffix\",PERS.NICKNAME AS \"nickname\",PERS.FIRST_NAME_LOCAL AS \"firstNameLocal\",PERS.LAST_NAME_LOCAL AS \"lastNameLocal\",PERS.MEMBER_ID AS \"memberId\",PERS.GENDER AS \"gender\",PERS.BIRTH_DATE AS \"birthDate\",PERS.HEIGHT AS \"height\",PERS.WEIGHT AS \"weight\",PERS.MOTHERS_MAIDEN_NAME AS \"mothersMaidenName\",PERS.MARITAL_STATUS AS \"maritalStatus\",PERS.SOCIAL_SECURITY_NUMBER AS \"socialSecurityNumber\",PERS.PASSPORT_NUMBER AS \"passportNumber\",PERS.PASSPORT_EXPIRE_DATE AS \"passportExpireDate\",PERS.TOTAL_YEARS_WORK_EXPERIENCE AS \"totalYearsWorkExperience\",PERS.COMMENTS AS \"comments\",PERS.EMPLOYMENT_STATUS_ENUM_ID AS \"employmentStatusEnumId\",PERS.RESIDENCE_STATUS_ENUM_ID AS \"residenceStatusEnumId\",PERS.OCCUPATION AS \"occupation\",PERS.YEARS_WITH_EMPLOYER AS \"yearsWithEmployer\",PERS.MONTHS_WITH_EMPLOYER AS \"monthsWithEmployer\",PERS.EXISTING_CUSTOMER AS \"existingCustomer\" FROM PARTY PTY INNER JOIN PERSON PERS ON PTY.PARTY_ID = PERS.PARTY_ID", resultSetMapping="PartyAndPersonMapping")
@SqlResultSetMapping(name="PartyAndPersonMapping", entities={
@EntityResult(entityClass=PartyAndPerson.class, fields = {
@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="partyTypeId", column="partyTypeId")
,@FieldResult(name="externalId", column="externalId")
,@FieldResult(name="preferredCurrencyUomId", column="preferredCurrencyUomId")
,@FieldResult(name="description", column="description")
,@FieldResult(name="statusId", column="statusId")
,@FieldResult(name="createdDate", column="createdDate")
,@FieldResult(name="createdByUserLogin", column="createdByUserLogin")
,@FieldResult(name="lastModifiedDate", column="lastModifiedDate")
,@FieldResult(name="lastModifiedByUserLogin", column="lastModifiedByUserLogin")
,@FieldResult(name="salutation", column="salutation")
,@FieldResult(name="firstName", column="firstName")
,@FieldResult(name="middleName", column="middleName")
,@FieldResult(name="lastName", column="lastName")
,@FieldResult(name="personalTitle", column="personalTitle")
,@FieldResult(name="suffix", column="suffix")
,@FieldResult(name="nickname", column="nickname")
,@FieldResult(name="firstNameLocal", column="firstNameLocal")
,@FieldResult(name="lastNameLocal", column="lastNameLocal")
,@FieldResult(name="memberId", column="memberId")
,@FieldResult(name="gender", column="gender")
,@FieldResult(name="birthDate", column="birthDate")
,@FieldResult(name="height", column="height")
,@FieldResult(name="weight", column="weight")
,@FieldResult(name="mothersMaidenName", column="mothersMaidenName")
,@FieldResult(name="maritalStatus", column="maritalStatus")
,@FieldResult(name="socialSecurityNumber", column="socialSecurityNumber")
,@FieldResult(name="passportNumber", column="passportNumber")
,@FieldResult(name="passportExpireDate", column="passportExpireDate")
,@FieldResult(name="totalYearsWorkExperience", column="totalYearsWorkExperience")
,@FieldResult(name="comments", column="comments")
,@FieldResult(name="employmentStatusEnumId", column="employmentStatusEnumId")
,@FieldResult(name="residenceStatusEnumId", column="residenceStatusEnumId")
,@FieldResult(name="occupation", column="occupation")
,@FieldResult(name="yearsWithEmployer", column="yearsWithEmployer")
,@FieldResult(name="monthsWithEmployer", column="monthsWithEmployer")
,@FieldResult(name="existingCustomer", column="existingCustomer")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class PartyAndPerson extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("partyId", "PTY.PARTY_ID");
        fields.put("partyTypeId", "PTY.PARTY_TYPE_ID");
        fields.put("externalId", "PTY.EXTERNAL_ID");
        fields.put("preferredCurrencyUomId", "PTY.PREFERRED_CURRENCY_UOM_ID");
        fields.put("description", "PTY.DESCRIPTION");
        fields.put("statusId", "PTY.STATUS_ID");
        fields.put("createdDate", "PTY.CREATED_DATE");
        fields.put("createdByUserLogin", "PTY.CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "PTY.LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "PTY.LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("salutation", "PERS.SALUTATION");
        fields.put("firstName", "PERS.FIRST_NAME");
        fields.put("middleName", "PERS.MIDDLE_NAME");
        fields.put("lastName", "PERS.LAST_NAME");
        fields.put("personalTitle", "PERS.PERSONAL_TITLE");
        fields.put("suffix", "PERS.SUFFIX");
        fields.put("nickname", "PERS.NICKNAME");
        fields.put("firstNameLocal", "PERS.FIRST_NAME_LOCAL");
        fields.put("lastNameLocal", "PERS.LAST_NAME_LOCAL");
        fields.put("memberId", "PERS.MEMBER_ID");
        fields.put("gender", "PERS.GENDER");
        fields.put("birthDate", "PERS.BIRTH_DATE");
        fields.put("height", "PERS.HEIGHT");
        fields.put("weight", "PERS.WEIGHT");
        fields.put("mothersMaidenName", "PERS.MOTHERS_MAIDEN_NAME");
        fields.put("maritalStatus", "PERS.MARITAL_STATUS");
        fields.put("socialSecurityNumber", "PERS.SOCIAL_SECURITY_NUMBER");
        fields.put("passportNumber", "PERS.PASSPORT_NUMBER");
        fields.put("passportExpireDate", "PERS.PASSPORT_EXPIRE_DATE");
        fields.put("totalYearsWorkExperience", "PERS.TOTAL_YEARS_WORK_EXPERIENCE");
        fields.put("comments", "PERS.COMMENTS");
        fields.put("employmentStatusEnumId", "PERS.EMPLOYMENT_STATUS_ENUM_ID");
        fields.put("residenceStatusEnumId", "PERS.RESIDENCE_STATUS_ENUM_ID");
        fields.put("occupation", "PERS.OCCUPATION");
        fields.put("yearsWithEmployer", "PERS.YEARS_WITH_EMPLOYER");
        fields.put("monthsWithEmployer", "PERS.MONTHS_WITH_EMPLOYER");
        fields.put("existingCustomer", "PERS.EXISTING_CUSTOMER");
fieldMapColumns.put("PartyAndPerson", fields);
}
  public static enum Fields implements EntityFieldInterface<PartyAndPerson> {
    partyId("partyId"),
    partyTypeId("partyTypeId"),
    externalId("externalId"),
    preferredCurrencyUomId("preferredCurrencyUomId"),
    description("description"),
    statusId("statusId"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    salutation("salutation"),
    firstName("firstName"),
    middleName("middleName"),
    lastName("lastName"),
    personalTitle("personalTitle"),
    suffix("suffix"),
    nickname("nickname"),
    firstNameLocal("firstNameLocal"),
    lastNameLocal("lastNameLocal"),
    memberId("memberId"),
    gender("gender"),
    birthDate("birthDate"),
    height("height"),
    weight("weight"),
    mothersMaidenName("mothersMaidenName"),
    maritalStatus("maritalStatus"),
    socialSecurityNumber("socialSecurityNumber"),
    passportNumber("passportNumber"),
    passportExpireDate("passportExpireDate"),
    totalYearsWorkExperience("totalYearsWorkExperience"),
    comments("comments"),
    employmentStatusEnumId("employmentStatusEnumId"),
    residenceStatusEnumId("residenceStatusEnumId"),
    occupation("occupation"),
    yearsWithEmployer("yearsWithEmployer"),
    monthsWithEmployer("monthsWithEmployer"),
    existingCustomer("existingCustomer");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    private String partyId;
    
    
    private String partyTypeId;
    
    
    private String externalId;
    
    
    private String preferredCurrencyUomId;
    
    
    private String description;
    
    
    private String statusId;
    
    
    private Timestamp createdDate;
    
    
    private String createdByUserLogin;
    
    
    private Timestamp lastModifiedDate;
    
    
    private String lastModifiedByUserLogin;
    
    
    private String salutation;
    
    
    private String firstName;
    
    
    private String middleName;
    
    
    private String lastName;
    
    
    private String personalTitle;
    
    
    private String suffix;
    
    
    private String nickname;
    
    
    private String firstNameLocal;
    
    
    private String lastNameLocal;
    
    
    private String memberId;
    
    
    private String gender;
    
    
    private Date birthDate;
    
    
    private BigDecimal height;
    
    
    private BigDecimal weight;
    
    
    private String mothersMaidenName;
    
    
    private String maritalStatus;
    
    
    private String socialSecurityNumber;
    
    
    private String passportNumber;
    
    
    private Date passportExpireDate;
    
    
    private BigDecimal totalYearsWorkExperience;
    
    
    private String comments;
    
    
    private String employmentStatusEnumId;
    
    
    private String residenceStatusEnumId;
    
    
    private String occupation;
    
    
    private Long yearsWithEmployer;
    
    
    private Long monthsWithEmployer;
    
    
    private String existingCustomer;

  /**
   * Default constructor.
   */
  public PartyAndPerson() {
      super();
      this.baseEntityName = "PartyAndPerson";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("partyId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public PartyAndPerson(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    private void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param partyTypeId the partyTypeId to set
     */
    private void setPartyTypeId(String partyTypeId) {
        this.partyTypeId = partyTypeId;
    }
    /**
     * Auto generated value setter.
     * @param externalId the externalId to set
     */
    private void setExternalId(String externalId) {
        this.externalId = externalId;
    }
    /**
     * Auto generated value setter.
     * @param preferredCurrencyUomId the preferredCurrencyUomId to set
     */
    private void setPreferredCurrencyUomId(String preferredCurrencyUomId) {
        this.preferredCurrencyUomId = preferredCurrencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    private void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    private void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    private void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    private void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    private void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    private void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param salutation the salutation to set
     */
    private void setSalutation(String salutation) {
        this.salutation = salutation;
    }
    /**
     * Auto generated value setter.
     * @param firstName the firstName to set
     */
    private void setFirstName(String firstName) {
        this.firstName = firstName;
    }
    /**
     * Auto generated value setter.
     * @param middleName the middleName to set
     */
    private void setMiddleName(String middleName) {
        this.middleName = middleName;
    }
    /**
     * Auto generated value setter.
     * @param lastName the lastName to set
     */
    private void setLastName(String lastName) {
        this.lastName = lastName;
    }
    /**
     * Auto generated value setter.
     * @param personalTitle the personalTitle to set
     */
    private void setPersonalTitle(String personalTitle) {
        this.personalTitle = personalTitle;
    }
    /**
     * Auto generated value setter.
     * @param suffix the suffix to set
     */
    private void setSuffix(String suffix) {
        this.suffix = suffix;
    }
    /**
     * Auto generated value setter.
     * @param nickname the nickname to set
     */
    private void setNickname(String nickname) {
        this.nickname = nickname;
    }
    /**
     * Auto generated value setter.
     * @param firstNameLocal the firstNameLocal to set
     */
    private void setFirstNameLocal(String firstNameLocal) {
        this.firstNameLocal = firstNameLocal;
    }
    /**
     * Auto generated value setter.
     * @param lastNameLocal the lastNameLocal to set
     */
    private void setLastNameLocal(String lastNameLocal) {
        this.lastNameLocal = lastNameLocal;
    }
    /**
     * Auto generated value setter.
     * @param memberId the memberId to set
     */
    private void setMemberId(String memberId) {
        this.memberId = memberId;
    }
    /**
     * Auto generated value setter.
     * @param gender the gender to set
     */
    private void setGender(String gender) {
        this.gender = gender;
    }
    /**
     * Auto generated value setter.
     * @param birthDate the birthDate to set
     */
    private void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }
    /**
     * Auto generated value setter.
     * @param height the height to set
     */
    private void setHeight(BigDecimal height) {
        this.height = height;
    }
    /**
     * Auto generated value setter.
     * @param weight the weight to set
     */
    private void setWeight(BigDecimal weight) {
        this.weight = weight;
    }
    /**
     * Auto generated value setter.
     * @param mothersMaidenName the mothersMaidenName to set
     */
    private void setMothersMaidenName(String mothersMaidenName) {
        this.mothersMaidenName = mothersMaidenName;
    }
    /**
     * Auto generated value setter.
     * @param maritalStatus the maritalStatus to set
     */
    private void setMaritalStatus(String maritalStatus) {
        this.maritalStatus = maritalStatus;
    }
    /**
     * Auto generated value setter.
     * @param socialSecurityNumber the socialSecurityNumber to set
     */
    private void setSocialSecurityNumber(String socialSecurityNumber) {
        this.socialSecurityNumber = socialSecurityNumber;
    }
    /**
     * Auto generated value setter.
     * @param passportNumber the passportNumber to set
     */
    private void setPassportNumber(String passportNumber) {
        this.passportNumber = passportNumber;
    }
    /**
     * Auto generated value setter.
     * @param passportExpireDate the passportExpireDate to set
     */
    private void setPassportExpireDate(Date passportExpireDate) {
        this.passportExpireDate = passportExpireDate;
    }
    /**
     * Auto generated value setter.
     * @param totalYearsWorkExperience the totalYearsWorkExperience to set
     */
    private void setTotalYearsWorkExperience(BigDecimal totalYearsWorkExperience) {
        this.totalYearsWorkExperience = totalYearsWorkExperience;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    private void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param employmentStatusEnumId the employmentStatusEnumId to set
     */
    private void setEmploymentStatusEnumId(String employmentStatusEnumId) {
        this.employmentStatusEnumId = employmentStatusEnumId;
    }
    /**
     * Auto generated value setter.
     * @param residenceStatusEnumId the residenceStatusEnumId to set
     */
    private void setResidenceStatusEnumId(String residenceStatusEnumId) {
        this.residenceStatusEnumId = residenceStatusEnumId;
    }
    /**
     * Auto generated value setter.
     * @param occupation the occupation to set
     */
    private void setOccupation(String occupation) {
        this.occupation = occupation;
    }
    /**
     * Auto generated value setter.
     * @param yearsWithEmployer the yearsWithEmployer to set
     */
    private void setYearsWithEmployer(Long yearsWithEmployer) {
        this.yearsWithEmployer = yearsWithEmployer;
    }
    /**
     * Auto generated value setter.
     * @param monthsWithEmployer the monthsWithEmployer to set
     */
    private void setMonthsWithEmployer(Long monthsWithEmployer) {
        this.monthsWithEmployer = monthsWithEmployer;
    }
    /**
     * Auto generated value setter.
     * @param existingCustomer the existingCustomer to set
     */
    private void setExistingCustomer(String existingCustomer) {
        this.existingCustomer = existingCustomer;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyTypeId() {
        return this.partyTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExternalId() {
        return this.externalId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPreferredCurrencyUomId() {
        return this.preferredCurrencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalutation() {
        return this.salutation;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFirstName() {
        return this.firstName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMiddleName() {
        return this.middleName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastName() {
        return this.lastName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPersonalTitle() {
        return this.personalTitle;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSuffix() {
        return this.suffix;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNickname() {
        return this.nickname;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFirstNameLocal() {
        return this.firstNameLocal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastNameLocal() {
        return this.lastNameLocal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMemberId() {
        return this.memberId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGender() {
        return this.gender;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Date</code>
     */
    public Date getBirthDate() {
        return this.birthDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getHeight() {
        return this.height;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getWeight() {
        return this.weight;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMothersMaidenName() {
        return this.mothersMaidenName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMaritalStatus() {
        return this.maritalStatus;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSocialSecurityNumber() {
        return this.socialSecurityNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPassportNumber() {
        return this.passportNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Date</code>
     */
    public Date getPassportExpireDate() {
        return this.passportExpireDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getTotalYearsWorkExperience() {
        return this.totalYearsWorkExperience;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEmploymentStatusEnumId() {
        return this.employmentStatusEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getResidenceStatusEnumId() {
        return this.residenceStatusEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOccupation() {
        return this.occupation;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getYearsWithEmployer() {
        return this.yearsWithEmployer;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getMonthsWithEmployer() {
        return this.monthsWithEmployer;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExistingCustomer() {
        return this.existingCustomer;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPartyId((String) mapValue.get("partyId"));
        setPartyTypeId((String) mapValue.get("partyTypeId"));
        setExternalId((String) mapValue.get("externalId"));
        setPreferredCurrencyUomId((String) mapValue.get("preferredCurrencyUomId"));
        setDescription((String) mapValue.get("description"));
        setStatusId((String) mapValue.get("statusId"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setSalutation((String) mapValue.get("salutation"));
        setFirstName((String) mapValue.get("firstName"));
        setMiddleName((String) mapValue.get("middleName"));
        setLastName((String) mapValue.get("lastName"));
        setPersonalTitle((String) mapValue.get("personalTitle"));
        setSuffix((String) mapValue.get("suffix"));
        setNickname((String) mapValue.get("nickname"));
        setFirstNameLocal((String) mapValue.get("firstNameLocal"));
        setLastNameLocal((String) mapValue.get("lastNameLocal"));
        setMemberId((String) mapValue.get("memberId"));
        setGender((String) mapValue.get("gender"));
        setBirthDate((Date) mapValue.get("birthDate"));
        setHeight(convertToBigDecimal(mapValue.get("height")));
        setWeight(convertToBigDecimal(mapValue.get("weight")));
        setMothersMaidenName((String) mapValue.get("mothersMaidenName"));
        setMaritalStatus((String) mapValue.get("maritalStatus"));
        setSocialSecurityNumber((String) mapValue.get("socialSecurityNumber"));
        setPassportNumber((String) mapValue.get("passportNumber"));
        setPassportExpireDate((Date) mapValue.get("passportExpireDate"));
        setTotalYearsWorkExperience(convertToBigDecimal(mapValue.get("totalYearsWorkExperience")));
        setComments((String) mapValue.get("comments"));
        setEmploymentStatusEnumId((String) mapValue.get("employmentStatusEnumId"));
        setResidenceStatusEnumId((String) mapValue.get("residenceStatusEnumId"));
        setOccupation((String) mapValue.get("occupation"));
        setYearsWithEmployer((Long) mapValue.get("yearsWithEmployer"));
        setMonthsWithEmployer((Long) mapValue.get("monthsWithEmployer"));
        setExistingCustomer((String) mapValue.get("existingCustomer"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("partyId", getPartyId());
        mapValue.put("partyTypeId", getPartyTypeId());
        mapValue.put("externalId", getExternalId());
        mapValue.put("preferredCurrencyUomId", getPreferredCurrencyUomId());
        mapValue.put("description", getDescription());
        mapValue.put("statusId", getStatusId());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("salutation", getSalutation());
        mapValue.put("firstName", getFirstName());
        mapValue.put("middleName", getMiddleName());
        mapValue.put("lastName", getLastName());
        mapValue.put("personalTitle", getPersonalTitle());
        mapValue.put("suffix", getSuffix());
        mapValue.put("nickname", getNickname());
        mapValue.put("firstNameLocal", getFirstNameLocal());
        mapValue.put("lastNameLocal", getLastNameLocal());
        mapValue.put("memberId", getMemberId());
        mapValue.put("gender", getGender());
        mapValue.put("birthDate", getBirthDate());
        mapValue.put("height", getHeight());
        mapValue.put("weight", getWeight());
        mapValue.put("mothersMaidenName", getMothersMaidenName());
        mapValue.put("maritalStatus", getMaritalStatus());
        mapValue.put("socialSecurityNumber", getSocialSecurityNumber());
        mapValue.put("passportNumber", getPassportNumber());
        mapValue.put("passportExpireDate", getPassportExpireDate());
        mapValue.put("totalYearsWorkExperience", getTotalYearsWorkExperience());
        mapValue.put("comments", getComments());
        mapValue.put("employmentStatusEnumId", getEmploymentStatusEnumId());
        mapValue.put("residenceStatusEnumId", getResidenceStatusEnumId());
        mapValue.put("occupation", getOccupation());
        mapValue.put("yearsWithEmployer", getYearsWithEmployer());
        mapValue.put("monthsWithEmployer", getMonthsWithEmployer());
        mapValue.put("existingCustomer", getExistingCustomer());
        return mapValue;
    }


}
