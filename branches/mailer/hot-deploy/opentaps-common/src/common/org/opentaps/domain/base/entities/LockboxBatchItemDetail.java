package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity LockboxBatchItemDetail.
 */
@javax.persistence.Entity
@Table(name="LOCKBOX_BATCH_ITEM_DETAIL")
@IdClass(LockboxBatchItemDetailPk.class)
public class LockboxBatchItemDetail extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("lockboxBatchId", "LOCKBOX_BATCH_ID");
        fields.put("itemSeqId", "ITEM_SEQ_ID");
        fields.put("detailSeqId", "DETAIL_SEQ_ID");
        fields.put("invoiceNumber", "INVOICE_NUMBER");
        fields.put("invoiceAmount", "INVOICE_AMOUNT");
        fields.put("customerId", "CUSTOMER_ID");
        fields.put("paymentId", "PAYMENT_ID");
        fields.put("paymentApplicationId", "PAYMENT_APPLICATION_ID");
        fields.put("isUserEntered", "IS_USER_ENTERED");
        fields.put("amountToApply", "AMOUNT_TO_APPLY");
        fields.put("cashDiscount", "CASH_DISCOUNT");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("LockboxBatchItemDetail", fields);
}
  public static enum Fields implements EntityFieldInterface<LockboxBatchItemDetail> {
    lockboxBatchId("lockboxBatchId"),
    itemSeqId("itemSeqId"),
    detailSeqId("detailSeqId"),
    invoiceNumber("invoiceNumber"),
    invoiceAmount("invoiceAmount"),
    customerId("customerId"),
    paymentId("paymentId"),
    paymentApplicationId("paymentApplicationId"),
    isUserEntered("isUserEntered"),
    amountToApply("amountToApply"),
    cashDiscount("cashDiscount"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="LOCKBOX_BATCH_ID")
    private String lockboxBatchId;
    @Id
    
    @Column(name="ITEM_SEQ_ID")
    private String itemSeqId;
    @Id
    
    @Column(name="DETAIL_SEQ_ID")
    private String detailSeqId;
    
    @Column(name="INVOICE_NUMBER")
    private String invoiceNumber;
    
    @Column(name="INVOICE_AMOUNT")
    private BigDecimal invoiceAmount;
    
    @Column(name="CUSTOMER_ID")
    private String customerId;
    
    @Column(name="PAYMENT_ID")
    private String paymentId;
    
    @Column(name="PAYMENT_APPLICATION_ID")
    private String paymentApplicationId;
    
    @Column(name="IS_USER_ENTERED")
    private String isUserEntered;
    
    @Column(name="AMOUNT_TO_APPLY")
    private BigDecimal amountToApply;
    
    @Column(name="CASH_DISCOUNT")
    private BigDecimal cashDiscount;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="LOCKBOX_BATCH_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private LockboxBatch lockboxBatch = null;
    private transient LockboxBatchItem lockboxBatchItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PAYMENT_APPLICATION_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private PaymentApplication paymentApplication = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PAYMENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Payment payment = null;

  /**
   * Default constructor.
   */
  public LockboxBatchItemDetail() {
      super();
      this.baseEntityName = "LockboxBatchItemDetail";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("lockboxBatchId");this.primaryKeyNames.add("itemSeqId");this.primaryKeyNames.add("detailSeqId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public LockboxBatchItemDetail(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param lockboxBatchId the lockboxBatchId to set
     */
    public void setLockboxBatchId(String lockboxBatchId) {
        this.lockboxBatchId = lockboxBatchId;
    }
    /**
     * Auto generated value setter.
     * @param itemSeqId the itemSeqId to set
     */
    public void setItemSeqId(String itemSeqId) {
        this.itemSeqId = itemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param detailSeqId the detailSeqId to set
     */
    public void setDetailSeqId(String detailSeqId) {
        this.detailSeqId = detailSeqId;
    }
    /**
     * Auto generated value setter.
     * @param invoiceNumber the invoiceNumber to set
     */
    public void setInvoiceNumber(String invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
    }
    /**
     * Auto generated value setter.
     * @param invoiceAmount the invoiceAmount to set
     */
    public void setInvoiceAmount(BigDecimal invoiceAmount) {
        this.invoiceAmount = invoiceAmount;
    }
    /**
     * Auto generated value setter.
     * @param customerId the customerId to set
     */
    public void setCustomerId(String customerId) {
        this.customerId = customerId;
    }
    /**
     * Auto generated value setter.
     * @param paymentId the paymentId to set
     */
    public void setPaymentId(String paymentId) {
        this.paymentId = paymentId;
    }
    /**
     * Auto generated value setter.
     * @param paymentApplicationId the paymentApplicationId to set
     */
    public void setPaymentApplicationId(String paymentApplicationId) {
        this.paymentApplicationId = paymentApplicationId;
    }
    /**
     * Auto generated value setter.
     * @param isUserEntered the isUserEntered to set
     */
    public void setIsUserEntered(String isUserEntered) {
        this.isUserEntered = isUserEntered;
    }
    /**
     * Auto generated value setter.
     * @param amountToApply the amountToApply to set
     */
    public void setAmountToApply(BigDecimal amountToApply) {
        this.amountToApply = amountToApply;
    }
    /**
     * Auto generated value setter.
     * @param cashDiscount the cashDiscount to set
     */
    public void setCashDiscount(BigDecimal cashDiscount) {
        this.cashDiscount = cashDiscount;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLockboxBatchId() {
        return this.lockboxBatchId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getItemSeqId() {
        return this.itemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDetailSeqId() {
        return this.detailSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceNumber() {
        return this.invoiceNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getInvoiceAmount() {
        return this.invoiceAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCustomerId() {
        return this.customerId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentId() {
        return this.paymentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentApplicationId() {
        return this.paymentApplicationId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsUserEntered() {
        return this.isUserEntered;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getAmountToApply() {
        return this.amountToApply;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getCashDiscount() {
        return this.cashDiscount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>LockboxBatch</code> by the relation named <code>LockboxBatch</code>.
     * @return the <code>LockboxBatch</code>
     * @throws RepositoryException if an error occurs
     */
    public LockboxBatch getLockboxBatch() throws RepositoryException {
        if (this.lockboxBatch == null) {
            this.lockboxBatch = getRelatedOne(LockboxBatch.class, "LockboxBatch");
        }
        return this.lockboxBatch;
    }
    /**
     * Auto generated method that gets the related <code>LockboxBatchItem</code> by the relation named <code>LockboxBatchItem</code>.
     * @return the <code>LockboxBatchItem</code>
     * @throws RepositoryException if an error occurs
     */
    public LockboxBatchItem getLockboxBatchItem() throws RepositoryException {
        if (this.lockboxBatchItem == null) {
            this.lockboxBatchItem = getRelatedOne(LockboxBatchItem.class, "LockboxBatchItem");
        }
        return this.lockboxBatchItem;
    }
    /**
     * Auto generated method that gets the related <code>PaymentApplication</code> by the relation named <code>PaymentApplication</code>.
     * @return the <code>PaymentApplication</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentApplication getPaymentApplication() throws RepositoryException {
        if (this.paymentApplication == null) {
            this.paymentApplication = getRelatedOne(PaymentApplication.class, "PaymentApplication");
        }
        return this.paymentApplication;
    }
    /**
     * Auto generated method that gets the related <code>Payment</code> by the relation named <code>Payment</code>.
     * @return the <code>Payment</code>
     * @throws RepositoryException if an error occurs
     */
    public Payment getPayment() throws RepositoryException {
        if (this.payment == null) {
            this.payment = getRelatedOne(Payment.class, "Payment");
        }
        return this.payment;
    }

    /**
     * Auto generated value setter.
     * @param lockboxBatch the lockboxBatch to set
    */
    public void setLockboxBatch(LockboxBatch lockboxBatch) {
        this.lockboxBatch = lockboxBatch;
    }
    /**
     * Auto generated value setter.
     * @param lockboxBatchItem the lockboxBatchItem to set
    */
    public void setLockboxBatchItem(LockboxBatchItem lockboxBatchItem) {
        this.lockboxBatchItem = lockboxBatchItem;
    }
    /**
     * Auto generated value setter.
     * @param paymentApplication the paymentApplication to set
    */
    public void setPaymentApplication(PaymentApplication paymentApplication) {
        this.paymentApplication = paymentApplication;
    }
    /**
     * Auto generated value setter.
     * @param payment the payment to set
    */
    public void setPayment(Payment payment) {
        this.payment = payment;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setLockboxBatchId((String) mapValue.get("lockboxBatchId"));
        setItemSeqId((String) mapValue.get("itemSeqId"));
        setDetailSeqId((String) mapValue.get("detailSeqId"));
        setInvoiceNumber((String) mapValue.get("invoiceNumber"));
        setInvoiceAmount(convertToBigDecimal(mapValue.get("invoiceAmount")));
        setCustomerId((String) mapValue.get("customerId"));
        setPaymentId((String) mapValue.get("paymentId"));
        setPaymentApplicationId((String) mapValue.get("paymentApplicationId"));
        setIsUserEntered((String) mapValue.get("isUserEntered"));
        setAmountToApply(convertToBigDecimal(mapValue.get("amountToApply")));
        setCashDiscount(convertToBigDecimal(mapValue.get("cashDiscount")));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("lockboxBatchId", getLockboxBatchId());
        mapValue.put("itemSeqId", getItemSeqId());
        mapValue.put("detailSeqId", getDetailSeqId());
        mapValue.put("invoiceNumber", getInvoiceNumber());
        mapValue.put("invoiceAmount", getInvoiceAmount());
        mapValue.put("customerId", getCustomerId());
        mapValue.put("paymentId", getPaymentId());
        mapValue.put("paymentApplicationId", getPaymentApplicationId());
        mapValue.put("isUserEntered", getIsUserEntered());
        mapValue.put("amountToApply", getAmountToApply());
        mapValue.put("cashDiscount", getCashDiscount());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
