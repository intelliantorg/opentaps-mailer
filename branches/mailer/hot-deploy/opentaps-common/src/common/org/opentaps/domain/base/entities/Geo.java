package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Geo.
 */
@javax.persistence.Entity
@Table(name="GEO")
public class Geo extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("geoId", "GEO_ID");
        fields.put("geoTypeId", "GEO_TYPE_ID");
        fields.put("geoName", "GEO_NAME");
        fields.put("geoCode", "GEO_CODE");
        fields.put("geoSecCode", "GEO_SEC_CODE");
        fields.put("abbreviation", "ABBREVIATION");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("Geo", fields);
}
  public static enum Fields implements EntityFieldInterface<Geo> {
    geoId("geoId"),
    geoTypeId("geoTypeId"),
    geoName("geoName"),
    geoCode("geoCode"),
    geoSecCode("geoSecCode"),
    abbreviation("abbreviation"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Geo_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Geo_GEN")   
    @Id
    
    @Column(name="GEO_ID")
    private String geoId;
    
    @Column(name="GEO_TYPE_ID")
    private String geoTypeId;
    
    @Column(name="GEO_NAME")
    private String geoName;
    
    @Column(name="GEO_CODE")
    private String geoCode;
    
    @Column(name="GEO_SEC_CODE")
    private String geoSecCode;
    
    @Column(name="ABBREVIATION")
    private String abbreviation;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="GEO_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private GeoType geoType = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="geo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GEO_ID")
    private List<AgreementGeographicalApplic> agreementGeographicalApplics = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="GEO_ID")
    private List<CostComponent> costComponents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="mainGeo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GEO_ID")
    private List<GeoAssoc> mainGeoAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="assocGeo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GEO_ID_TO")
    private List<GeoAssoc> assocGeoAssocs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="TAX_AUTH_GEO_ID")
    private List<InvoiceItem> taxInvoiceItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="geo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GEO_ID")
    private List<OldPartyTaxInfo> oldPartyTaxInfoes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_GEO_ID")
    private List<OrderAdjustment> primaryOrderAdjustments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SECONDARY_GEO_ID")
    private List<OrderAdjustment> secondaryOrderAdjustments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="TAX_AUTH_GEO_ID")
    private List<PaymentApplication> paymentApplications = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY_GEO_ID")
    private List<PostalAddress> countryPostalAddresses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATE_PROVINCE_GEO_ID")
    private List<PostalAddress> stateProvincePostalAddresses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTY_GEO_ID")
    private List<PostalAddress> countyPostalAddresses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="POSTAL_CODE_GEO_ID")
    private List<PostalAddress> postalCodePostalAddresses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="geo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GEO_ID")
    private List<PostalAddressBoundary> postalAddressBoundarys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_GEO_ID")
    private List<Product> originProducts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="geo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GEO_ID")
    private List<ProductGeo> productGeos = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INCLUDE_GEO_ID")
    private List<ProductStoreShipmentMeth> includeProductStoreShipmentMeths = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="EXCLUDE_GEO_ID")
    private List<ProductStoreShipmentMeth> excludeProductStoreShipmentMeths = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_GEO_ID")
    private List<QuoteAdjustment> primaryQuoteAdjustments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SECONDARY_GEO_ID")
    private List<QuoteAdjustment> secondaryQuoteAdjustments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="GEO_ID")
    private List<ReorderGuideline> reorderGuidelines = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_GEO_ID")
    private List<ReturnAdjustment> primaryReturnAdjustments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SECONDARY_GEO_ID")
    private List<ReturnAdjustment> secondaryReturnAdjustments = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="geo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="GEO_ID")
    private List<SegmentGroupGeo> segmentGroupGeos = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="GEO_ID_TO")
    private List<ShipmentCostEstimate> toShipmentCostEstimates = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="GEO_ID_FROM")
    private List<ShipmentCostEstimate> fromShipmentCostEstimates = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="taxAuthGeo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="TAX_AUTH_GEO_ID")
    private List<TaxAuthority> taxAuthTaxAuthoritys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="STATE_GEO_ID")
    private List<TestGeoData> stateTestGeoDatas = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY_GEO_ID")
    private List<TestGeoData> countryTestGeoDatas = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY_GEO_ID")
    private List<WorkflowPackage> countryWorkflowPackages = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY_GEO_ID")
    private List<WorkflowProcess> countryWorkflowProcesses = null;

  /**
   * Default constructor.
   */
  public Geo() {
      super();
      this.baseEntityName = "Geo";
      this.isView = false;
      this.resourceName = "CommonEntityLabels";
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("geoId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Geo(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param geoId the geoId to set
     */
    public void setGeoId(String geoId) {
        this.geoId = geoId;
    }
    /**
     * Auto generated value setter.
     * @param geoTypeId the geoTypeId to set
     */
    public void setGeoTypeId(String geoTypeId) {
        this.geoTypeId = geoTypeId;
    }
    /**
     * Auto generated value setter.
     * @param geoName the geoName to set
     */
    public void setGeoName(String geoName) {
        this.geoName = geoName;
    }
    /**
     * Auto generated value setter.
     * @param geoCode the geoCode to set
     */
    public void setGeoCode(String geoCode) {
        this.geoCode = geoCode;
    }
    /**
     * Auto generated value setter.
     * @param geoSecCode the geoSecCode to set
     */
    public void setGeoSecCode(String geoSecCode) {
        this.geoSecCode = geoSecCode;
    }
    /**
     * Auto generated value setter.
     * @param abbreviation the abbreviation to set
     */
    public void setAbbreviation(String abbreviation) {
        this.abbreviation = abbreviation;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoId() {
        return this.geoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoTypeId() {
        return this.geoTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoName() {
        return this.geoName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoCode() {
        return this.geoCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoSecCode() {
        return this.geoSecCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAbbreviation() {
        return this.abbreviation;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>GeoType</code> by the relation named <code>GeoType</code>.
     * @return the <code>GeoType</code>
     * @throws RepositoryException if an error occurs
     */
    public GeoType getGeoType() throws RepositoryException {
        if (this.geoType == null) {
            this.geoType = getRelatedOne(GeoType.class, "GeoType");
        }
        return this.geoType;
    }
    /**
     * Auto generated method that gets the related <code>AgreementGeographicalApplic</code> by the relation named <code>AgreementGeographicalApplic</code>.
     * @return the list of <code>AgreementGeographicalApplic</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementGeographicalApplic> getAgreementGeographicalApplics() throws RepositoryException {
        if (this.agreementGeographicalApplics == null) {
            this.agreementGeographicalApplics = getRelated(AgreementGeographicalApplic.class, "AgreementGeographicalApplic");
        }
        return this.agreementGeographicalApplics;
    }
    /**
     * Auto generated method that gets the related <code>CostComponent</code> by the relation named <code>CostComponent</code>.
     * @return the list of <code>CostComponent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponent> getCostComponents() throws RepositoryException {
        if (this.costComponents == null) {
            this.costComponents = getRelated(CostComponent.class, "CostComponent");
        }
        return this.costComponents;
    }
    /**
     * Auto generated method that gets the related <code>GeoAssoc</code> by the relation named <code>MainGeoAssoc</code>.
     * @return the list of <code>GeoAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GeoAssoc> getMainGeoAssocs() throws RepositoryException {
        if (this.mainGeoAssocs == null) {
            this.mainGeoAssocs = getRelated(GeoAssoc.class, "MainGeoAssoc");
        }
        return this.mainGeoAssocs;
    }
    /**
     * Auto generated method that gets the related <code>GeoAssoc</code> by the relation named <code>AssocGeoAssoc</code>.
     * @return the list of <code>GeoAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GeoAssoc> getAssocGeoAssocs() throws RepositoryException {
        if (this.assocGeoAssocs == null) {
            this.assocGeoAssocs = getRelated(GeoAssoc.class, "AssocGeoAssoc");
        }
        return this.assocGeoAssocs;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>TaxInvoiceItem</code>.
     * @return the list of <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItem> getTaxInvoiceItems() throws RepositoryException {
        if (this.taxInvoiceItems == null) {
            this.taxInvoiceItems = getRelated(InvoiceItem.class, "TaxInvoiceItem");
        }
        return this.taxInvoiceItems;
    }
    /**
     * Auto generated method that gets the related <code>OldPartyTaxInfo</code> by the relation named <code>OldPartyTaxInfo</code>.
     * @return the list of <code>OldPartyTaxInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldPartyTaxInfo> getOldPartyTaxInfoes() throws RepositoryException {
        if (this.oldPartyTaxInfoes == null) {
            this.oldPartyTaxInfoes = getRelated(OldPartyTaxInfo.class, "OldPartyTaxInfo");
        }
        return this.oldPartyTaxInfoes;
    }
    /**
     * Auto generated method that gets the related <code>OrderAdjustment</code> by the relation named <code>PrimaryOrderAdjustment</code>.
     * @return the list of <code>OrderAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAdjustment> getPrimaryOrderAdjustments() throws RepositoryException {
        if (this.primaryOrderAdjustments == null) {
            this.primaryOrderAdjustments = getRelated(OrderAdjustment.class, "PrimaryOrderAdjustment");
        }
        return this.primaryOrderAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>OrderAdjustment</code> by the relation named <code>SecondaryOrderAdjustment</code>.
     * @return the list of <code>OrderAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAdjustment> getSecondaryOrderAdjustments() throws RepositoryException {
        if (this.secondaryOrderAdjustments == null) {
            this.secondaryOrderAdjustments = getRelated(OrderAdjustment.class, "SecondaryOrderAdjustment");
        }
        return this.secondaryOrderAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>PaymentApplication</code> by the relation named <code>PaymentApplication</code>.
     * @return the list of <code>PaymentApplication</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentApplication> getPaymentApplications() throws RepositoryException {
        if (this.paymentApplications == null) {
            this.paymentApplications = getRelated(PaymentApplication.class, "PaymentApplication");
        }
        return this.paymentApplications;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddress</code> by the relation named <code>CountryPostalAddress</code>.
     * @return the list of <code>PostalAddress</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PostalAddress> getCountryPostalAddresses() throws RepositoryException {
        if (this.countryPostalAddresses == null) {
            this.countryPostalAddresses = getRelated(PostalAddress.class, "CountryPostalAddress");
        }
        return this.countryPostalAddresses;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddress</code> by the relation named <code>StateProvincePostalAddress</code>.
     * @return the list of <code>PostalAddress</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PostalAddress> getStateProvincePostalAddresses() throws RepositoryException {
        if (this.stateProvincePostalAddresses == null) {
            this.stateProvincePostalAddresses = getRelated(PostalAddress.class, "StateProvincePostalAddress");
        }
        return this.stateProvincePostalAddresses;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddress</code> by the relation named <code>CountyPostalAddress</code>.
     * @return the list of <code>PostalAddress</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PostalAddress> getCountyPostalAddresses() throws RepositoryException {
        if (this.countyPostalAddresses == null) {
            this.countyPostalAddresses = getRelated(PostalAddress.class, "CountyPostalAddress");
        }
        return this.countyPostalAddresses;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddress</code> by the relation named <code>PostalCodePostalAddress</code>.
     * @return the list of <code>PostalAddress</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PostalAddress> getPostalCodePostalAddresses() throws RepositoryException {
        if (this.postalCodePostalAddresses == null) {
            this.postalCodePostalAddresses = getRelated(PostalAddress.class, "PostalCodePostalAddress");
        }
        return this.postalCodePostalAddresses;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddressBoundary</code> by the relation named <code>PostalAddressBoundary</code>.
     * @return the list of <code>PostalAddressBoundary</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PostalAddressBoundary> getPostalAddressBoundarys() throws RepositoryException {
        if (this.postalAddressBoundarys == null) {
            this.postalAddressBoundarys = getRelated(PostalAddressBoundary.class, "PostalAddressBoundary");
        }
        return this.postalAddressBoundarys;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>OriginProduct</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getOriginProducts() throws RepositoryException {
        if (this.originProducts == null) {
            this.originProducts = getRelated(Product.class, "OriginProduct");
        }
        return this.originProducts;
    }
    /**
     * Auto generated method that gets the related <code>ProductGeo</code> by the relation named <code>ProductGeo</code>.
     * @return the list of <code>ProductGeo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductGeo> getProductGeos() throws RepositoryException {
        if (this.productGeos == null) {
            this.productGeos = getRelated(ProductGeo.class, "ProductGeo");
        }
        return this.productGeos;
    }
    /**
     * Auto generated method that gets the related <code>ProductStoreShipmentMeth</code> by the relation named <code>IncludeProductStoreShipmentMeth</code>.
     * @return the list of <code>ProductStoreShipmentMeth</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStoreShipmentMeth> getIncludeProductStoreShipmentMeths() throws RepositoryException {
        if (this.includeProductStoreShipmentMeths == null) {
            this.includeProductStoreShipmentMeths = getRelated(ProductStoreShipmentMeth.class, "IncludeProductStoreShipmentMeth");
        }
        return this.includeProductStoreShipmentMeths;
    }
    /**
     * Auto generated method that gets the related <code>ProductStoreShipmentMeth</code> by the relation named <code>ExcludeProductStoreShipmentMeth</code>.
     * @return the list of <code>ProductStoreShipmentMeth</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStoreShipmentMeth> getExcludeProductStoreShipmentMeths() throws RepositoryException {
        if (this.excludeProductStoreShipmentMeths == null) {
            this.excludeProductStoreShipmentMeths = getRelated(ProductStoreShipmentMeth.class, "ExcludeProductStoreShipmentMeth");
        }
        return this.excludeProductStoreShipmentMeths;
    }
    /**
     * Auto generated method that gets the related <code>QuoteAdjustment</code> by the relation named <code>PrimaryQuoteAdjustment</code>.
     * @return the list of <code>QuoteAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteAdjustment> getPrimaryQuoteAdjustments() throws RepositoryException {
        if (this.primaryQuoteAdjustments == null) {
            this.primaryQuoteAdjustments = getRelated(QuoteAdjustment.class, "PrimaryQuoteAdjustment");
        }
        return this.primaryQuoteAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>QuoteAdjustment</code> by the relation named <code>SecondaryQuoteAdjustment</code>.
     * @return the list of <code>QuoteAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteAdjustment> getSecondaryQuoteAdjustments() throws RepositoryException {
        if (this.secondaryQuoteAdjustments == null) {
            this.secondaryQuoteAdjustments = getRelated(QuoteAdjustment.class, "SecondaryQuoteAdjustment");
        }
        return this.secondaryQuoteAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>ReorderGuideline</code> by the relation named <code>ReorderGuideline</code>.
     * @return the list of <code>ReorderGuideline</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReorderGuideline> getReorderGuidelines() throws RepositoryException {
        if (this.reorderGuidelines == null) {
            this.reorderGuidelines = getRelated(ReorderGuideline.class, "ReorderGuideline");
        }
        return this.reorderGuidelines;
    }
    /**
     * Auto generated method that gets the related <code>ReturnAdjustment</code> by the relation named <code>PrimaryReturnAdjustment</code>.
     * @return the list of <code>ReturnAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnAdjustment> getPrimaryReturnAdjustments() throws RepositoryException {
        if (this.primaryReturnAdjustments == null) {
            this.primaryReturnAdjustments = getRelated(ReturnAdjustment.class, "PrimaryReturnAdjustment");
        }
        return this.primaryReturnAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>ReturnAdjustment</code> by the relation named <code>SecondaryReturnAdjustment</code>.
     * @return the list of <code>ReturnAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnAdjustment> getSecondaryReturnAdjustments() throws RepositoryException {
        if (this.secondaryReturnAdjustments == null) {
            this.secondaryReturnAdjustments = getRelated(ReturnAdjustment.class, "SecondaryReturnAdjustment");
        }
        return this.secondaryReturnAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>SegmentGroupGeo</code> by the relation named <code>SegmentGroupGeo</code>.
     * @return the list of <code>SegmentGroupGeo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SegmentGroupGeo> getSegmentGroupGeos() throws RepositoryException {
        if (this.segmentGroupGeos == null) {
            this.segmentGroupGeos = getRelated(SegmentGroupGeo.class, "SegmentGroupGeo");
        }
        return this.segmentGroupGeos;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentCostEstimate</code> by the relation named <code>ToShipmentCostEstimate</code>.
     * @return the list of <code>ShipmentCostEstimate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentCostEstimate> getToShipmentCostEstimates() throws RepositoryException {
        if (this.toShipmentCostEstimates == null) {
            this.toShipmentCostEstimates = getRelated(ShipmentCostEstimate.class, "ToShipmentCostEstimate");
        }
        return this.toShipmentCostEstimates;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentCostEstimate</code> by the relation named <code>FromShipmentCostEstimate</code>.
     * @return the list of <code>ShipmentCostEstimate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentCostEstimate> getFromShipmentCostEstimates() throws RepositoryException {
        if (this.fromShipmentCostEstimates == null) {
            this.fromShipmentCostEstimates = getRelated(ShipmentCostEstimate.class, "FromShipmentCostEstimate");
        }
        return this.fromShipmentCostEstimates;
    }
    /**
     * Auto generated method that gets the related <code>TaxAuthority</code> by the relation named <code>TaxAuthTaxAuthority</code>.
     * @return the list of <code>TaxAuthority</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TaxAuthority> getTaxAuthTaxAuthoritys() throws RepositoryException {
        if (this.taxAuthTaxAuthoritys == null) {
            this.taxAuthTaxAuthoritys = getRelated(TaxAuthority.class, "TaxAuthTaxAuthority");
        }
        return this.taxAuthTaxAuthoritys;
    }
    /**
     * Auto generated method that gets the related <code>TestGeoData</code> by the relation named <code>StateTestGeoData</code>.
     * @return the list of <code>TestGeoData</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TestGeoData> getStateTestGeoDatas() throws RepositoryException {
        if (this.stateTestGeoDatas == null) {
            this.stateTestGeoDatas = getRelated(TestGeoData.class, "StateTestGeoData");
        }
        return this.stateTestGeoDatas;
    }
    /**
     * Auto generated method that gets the related <code>TestGeoData</code> by the relation named <code>CountryTestGeoData</code>.
     * @return the list of <code>TestGeoData</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TestGeoData> getCountryTestGeoDatas() throws RepositoryException {
        if (this.countryTestGeoDatas == null) {
            this.countryTestGeoDatas = getRelated(TestGeoData.class, "CountryTestGeoData");
        }
        return this.countryTestGeoDatas;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowPackage</code> by the relation named <code>CountryWorkflowPackage</code>.
     * @return the list of <code>WorkflowPackage</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowPackage> getCountryWorkflowPackages() throws RepositoryException {
        if (this.countryWorkflowPackages == null) {
            this.countryWorkflowPackages = getRelated(WorkflowPackage.class, "CountryWorkflowPackage");
        }
        return this.countryWorkflowPackages;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowProcess</code> by the relation named <code>CountryWorkflowProcess</code>.
     * @return the list of <code>WorkflowProcess</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowProcess> getCountryWorkflowProcesses() throws RepositoryException {
        if (this.countryWorkflowProcesses == null) {
            this.countryWorkflowProcesses = getRelated(WorkflowProcess.class, "CountryWorkflowProcess");
        }
        return this.countryWorkflowProcesses;
    }

    /**
     * Auto generated value setter.
     * @param geoType the geoType to set
    */
    public void setGeoType(GeoType geoType) {
        this.geoType = geoType;
    }
    /**
     * Auto generated value setter.
     * @param agreementGeographicalApplics the agreementGeographicalApplics to set
    */
    public void setAgreementGeographicalApplics(List<AgreementGeographicalApplic> agreementGeographicalApplics) {
        this.agreementGeographicalApplics = agreementGeographicalApplics;
    }
    /**
     * Auto generated value setter.
     * @param costComponents the costComponents to set
    */
    public void setCostComponents(List<CostComponent> costComponents) {
        this.costComponents = costComponents;
    }
    /**
     * Auto generated value setter.
     * @param mainGeoAssocs the mainGeoAssocs to set
    */
    public void setMainGeoAssocs(List<GeoAssoc> mainGeoAssocs) {
        this.mainGeoAssocs = mainGeoAssocs;
    }
    /**
     * Auto generated value setter.
     * @param assocGeoAssocs the assocGeoAssocs to set
    */
    public void setAssocGeoAssocs(List<GeoAssoc> assocGeoAssocs) {
        this.assocGeoAssocs = assocGeoAssocs;
    }
    /**
     * Auto generated value setter.
     * @param taxInvoiceItems the taxInvoiceItems to set
    */
    public void setTaxInvoiceItems(List<InvoiceItem> taxInvoiceItems) {
        this.taxInvoiceItems = taxInvoiceItems;
    }
    /**
     * Auto generated value setter.
     * @param oldPartyTaxInfoes the oldPartyTaxInfoes to set
    */
    public void setOldPartyTaxInfoes(List<OldPartyTaxInfo> oldPartyTaxInfoes) {
        this.oldPartyTaxInfoes = oldPartyTaxInfoes;
    }
    /**
     * Auto generated value setter.
     * @param primaryOrderAdjustments the primaryOrderAdjustments to set
    */
    public void setPrimaryOrderAdjustments(List<OrderAdjustment> primaryOrderAdjustments) {
        this.primaryOrderAdjustments = primaryOrderAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param secondaryOrderAdjustments the secondaryOrderAdjustments to set
    */
    public void setSecondaryOrderAdjustments(List<OrderAdjustment> secondaryOrderAdjustments) {
        this.secondaryOrderAdjustments = secondaryOrderAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param paymentApplications the paymentApplications to set
    */
    public void setPaymentApplications(List<PaymentApplication> paymentApplications) {
        this.paymentApplications = paymentApplications;
    }
    /**
     * Auto generated value setter.
     * @param countryPostalAddresses the countryPostalAddresses to set
    */
    public void setCountryPostalAddresses(List<PostalAddress> countryPostalAddresses) {
        this.countryPostalAddresses = countryPostalAddresses;
    }
    /**
     * Auto generated value setter.
     * @param stateProvincePostalAddresses the stateProvincePostalAddresses to set
    */
    public void setStateProvincePostalAddresses(List<PostalAddress> stateProvincePostalAddresses) {
        this.stateProvincePostalAddresses = stateProvincePostalAddresses;
    }
    /**
     * Auto generated value setter.
     * @param countyPostalAddresses the countyPostalAddresses to set
    */
    public void setCountyPostalAddresses(List<PostalAddress> countyPostalAddresses) {
        this.countyPostalAddresses = countyPostalAddresses;
    }
    /**
     * Auto generated value setter.
     * @param postalCodePostalAddresses the postalCodePostalAddresses to set
    */
    public void setPostalCodePostalAddresses(List<PostalAddress> postalCodePostalAddresses) {
        this.postalCodePostalAddresses = postalCodePostalAddresses;
    }
    /**
     * Auto generated value setter.
     * @param postalAddressBoundarys the postalAddressBoundarys to set
    */
    public void setPostalAddressBoundarys(List<PostalAddressBoundary> postalAddressBoundarys) {
        this.postalAddressBoundarys = postalAddressBoundarys;
    }
    /**
     * Auto generated value setter.
     * @param originProducts the originProducts to set
    */
    public void setOriginProducts(List<Product> originProducts) {
        this.originProducts = originProducts;
    }
    /**
     * Auto generated value setter.
     * @param productGeos the productGeos to set
    */
    public void setProductGeos(List<ProductGeo> productGeos) {
        this.productGeos = productGeos;
    }
    /**
     * Auto generated value setter.
     * @param includeProductStoreShipmentMeths the includeProductStoreShipmentMeths to set
    */
    public void setIncludeProductStoreShipmentMeths(List<ProductStoreShipmentMeth> includeProductStoreShipmentMeths) {
        this.includeProductStoreShipmentMeths = includeProductStoreShipmentMeths;
    }
    /**
     * Auto generated value setter.
     * @param excludeProductStoreShipmentMeths the excludeProductStoreShipmentMeths to set
    */
    public void setExcludeProductStoreShipmentMeths(List<ProductStoreShipmentMeth> excludeProductStoreShipmentMeths) {
        this.excludeProductStoreShipmentMeths = excludeProductStoreShipmentMeths;
    }
    /**
     * Auto generated value setter.
     * @param primaryQuoteAdjustments the primaryQuoteAdjustments to set
    */
    public void setPrimaryQuoteAdjustments(List<QuoteAdjustment> primaryQuoteAdjustments) {
        this.primaryQuoteAdjustments = primaryQuoteAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param secondaryQuoteAdjustments the secondaryQuoteAdjustments to set
    */
    public void setSecondaryQuoteAdjustments(List<QuoteAdjustment> secondaryQuoteAdjustments) {
        this.secondaryQuoteAdjustments = secondaryQuoteAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param reorderGuidelines the reorderGuidelines to set
    */
    public void setReorderGuidelines(List<ReorderGuideline> reorderGuidelines) {
        this.reorderGuidelines = reorderGuidelines;
    }
    /**
     * Auto generated value setter.
     * @param primaryReturnAdjustments the primaryReturnAdjustments to set
    */
    public void setPrimaryReturnAdjustments(List<ReturnAdjustment> primaryReturnAdjustments) {
        this.primaryReturnAdjustments = primaryReturnAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param secondaryReturnAdjustments the secondaryReturnAdjustments to set
    */
    public void setSecondaryReturnAdjustments(List<ReturnAdjustment> secondaryReturnAdjustments) {
        this.secondaryReturnAdjustments = secondaryReturnAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param segmentGroupGeos the segmentGroupGeos to set
    */
    public void setSegmentGroupGeos(List<SegmentGroupGeo> segmentGroupGeos) {
        this.segmentGroupGeos = segmentGroupGeos;
    }
    /**
     * Auto generated value setter.
     * @param toShipmentCostEstimates the toShipmentCostEstimates to set
    */
    public void setToShipmentCostEstimates(List<ShipmentCostEstimate> toShipmentCostEstimates) {
        this.toShipmentCostEstimates = toShipmentCostEstimates;
    }
    /**
     * Auto generated value setter.
     * @param fromShipmentCostEstimates the fromShipmentCostEstimates to set
    */
    public void setFromShipmentCostEstimates(List<ShipmentCostEstimate> fromShipmentCostEstimates) {
        this.fromShipmentCostEstimates = fromShipmentCostEstimates;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthTaxAuthoritys the taxAuthTaxAuthoritys to set
    */
    public void setTaxAuthTaxAuthoritys(List<TaxAuthority> taxAuthTaxAuthoritys) {
        this.taxAuthTaxAuthoritys = taxAuthTaxAuthoritys;
    }
    /**
     * Auto generated value setter.
     * @param stateTestGeoDatas the stateTestGeoDatas to set
    */
    public void setStateTestGeoDatas(List<TestGeoData> stateTestGeoDatas) {
        this.stateTestGeoDatas = stateTestGeoDatas;
    }
    /**
     * Auto generated value setter.
     * @param countryTestGeoDatas the countryTestGeoDatas to set
    */
    public void setCountryTestGeoDatas(List<TestGeoData> countryTestGeoDatas) {
        this.countryTestGeoDatas = countryTestGeoDatas;
    }
    /**
     * Auto generated value setter.
     * @param countryWorkflowPackages the countryWorkflowPackages to set
    */
    public void setCountryWorkflowPackages(List<WorkflowPackage> countryWorkflowPackages) {
        this.countryWorkflowPackages = countryWorkflowPackages;
    }
    /**
     * Auto generated value setter.
     * @param countryWorkflowProcesses the countryWorkflowProcesses to set
    */
    public void setCountryWorkflowProcesses(List<WorkflowProcess> countryWorkflowProcesses) {
        this.countryWorkflowProcesses = countryWorkflowProcesses;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementGeographicalApplic(AgreementGeographicalApplic agreementGeographicalApplic) {
        if (this.agreementGeographicalApplics == null) {
            this.agreementGeographicalApplics = new ArrayList<AgreementGeographicalApplic>();
        }
        this.agreementGeographicalApplics.add(agreementGeographicalApplic);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementGeographicalApplic(AgreementGeographicalApplic agreementGeographicalApplic) {
        if (this.agreementGeographicalApplics == null) {
            return;
        }
        this.agreementGeographicalApplics.remove(agreementGeographicalApplic);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementGeographicalApplic() {
        if (this.agreementGeographicalApplics == null) {
            return;
        }
        this.agreementGeographicalApplics.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addMainGeoAssoc(GeoAssoc mainGeoAssoc) {
        if (this.mainGeoAssocs == null) {
            this.mainGeoAssocs = new ArrayList<GeoAssoc>();
        }
        this.mainGeoAssocs.add(mainGeoAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeMainGeoAssoc(GeoAssoc mainGeoAssoc) {
        if (this.mainGeoAssocs == null) {
            return;
        }
        this.mainGeoAssocs.remove(mainGeoAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearMainGeoAssoc() {
        if (this.mainGeoAssocs == null) {
            return;
        }
        this.mainGeoAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAssocGeoAssoc(GeoAssoc assocGeoAssoc) {
        if (this.assocGeoAssocs == null) {
            this.assocGeoAssocs = new ArrayList<GeoAssoc>();
        }
        this.assocGeoAssocs.add(assocGeoAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAssocGeoAssoc(GeoAssoc assocGeoAssoc) {
        if (this.assocGeoAssocs == null) {
            return;
        }
        this.assocGeoAssocs.remove(assocGeoAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAssocGeoAssoc() {
        if (this.assocGeoAssocs == null) {
            return;
        }
        this.assocGeoAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOldPartyTaxInfoe(OldPartyTaxInfo oldPartyTaxInfoe) {
        if (this.oldPartyTaxInfoes == null) {
            this.oldPartyTaxInfoes = new ArrayList<OldPartyTaxInfo>();
        }
        this.oldPartyTaxInfoes.add(oldPartyTaxInfoe);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOldPartyTaxInfoe(OldPartyTaxInfo oldPartyTaxInfoe) {
        if (this.oldPartyTaxInfoes == null) {
            return;
        }
        this.oldPartyTaxInfoes.remove(oldPartyTaxInfoe);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOldPartyTaxInfoe() {
        if (this.oldPartyTaxInfoes == null) {
            return;
        }
        this.oldPartyTaxInfoes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPostalAddressBoundary(PostalAddressBoundary postalAddressBoundary) {
        if (this.postalAddressBoundarys == null) {
            this.postalAddressBoundarys = new ArrayList<PostalAddressBoundary>();
        }
        this.postalAddressBoundarys.add(postalAddressBoundary);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePostalAddressBoundary(PostalAddressBoundary postalAddressBoundary) {
        if (this.postalAddressBoundarys == null) {
            return;
        }
        this.postalAddressBoundarys.remove(postalAddressBoundary);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPostalAddressBoundary() {
        if (this.postalAddressBoundarys == null) {
            return;
        }
        this.postalAddressBoundarys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductGeo(ProductGeo productGeo) {
        if (this.productGeos == null) {
            this.productGeos = new ArrayList<ProductGeo>();
        }
        this.productGeos.add(productGeo);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductGeo(ProductGeo productGeo) {
        if (this.productGeos == null) {
            return;
        }
        this.productGeos.remove(productGeo);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductGeo() {
        if (this.productGeos == null) {
            return;
        }
        this.productGeos.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addSegmentGroupGeo(SegmentGroupGeo segmentGroupGeo) {
        if (this.segmentGroupGeos == null) {
            this.segmentGroupGeos = new ArrayList<SegmentGroupGeo>();
        }
        this.segmentGroupGeos.add(segmentGroupGeo);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSegmentGroupGeo(SegmentGroupGeo segmentGroupGeo) {
        if (this.segmentGroupGeos == null) {
            return;
        }
        this.segmentGroupGeos.remove(segmentGroupGeo);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSegmentGroupGeo() {
        if (this.segmentGroupGeos == null) {
            return;
        }
        this.segmentGroupGeos.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addTaxAuthTaxAuthority(TaxAuthority taxAuthTaxAuthority) {
        if (this.taxAuthTaxAuthoritys == null) {
            this.taxAuthTaxAuthoritys = new ArrayList<TaxAuthority>();
        }
        this.taxAuthTaxAuthoritys.add(taxAuthTaxAuthority);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeTaxAuthTaxAuthority(TaxAuthority taxAuthTaxAuthority) {
        if (this.taxAuthTaxAuthoritys == null) {
            return;
        }
        this.taxAuthTaxAuthoritys.remove(taxAuthTaxAuthority);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearTaxAuthTaxAuthority() {
        if (this.taxAuthTaxAuthoritys == null) {
            return;
        }
        this.taxAuthTaxAuthoritys.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setGeoId((String) mapValue.get("geoId"));
        setGeoTypeId((String) mapValue.get("geoTypeId"));
        setGeoName((String) mapValue.get("geoName"));
        setGeoCode((String) mapValue.get("geoCode"));
        setGeoSecCode((String) mapValue.get("geoSecCode"));
        setAbbreviation((String) mapValue.get("abbreviation"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("geoId", getGeoId());
        mapValue.put("geoTypeId", getGeoTypeId());
        mapValue.put("geoName", getGeoName());
        mapValue.put("geoCode", getGeoCode());
        mapValue.put("geoSecCode", getGeoSecCode());
        mapValue.put("abbreviation", getAbbreviation());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
