/*
 * Copyright (c) 2009 Open Source Strategies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 *
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY BY THE GWT BUILD

package org.opentaps.gwt.common.client.messages;

import com.google.gwt.i18n.client.Messages;

public interface CommonMessages extends Messages {
    @DefaultMessage("Account")
    String account();
    @DefaultMessage("Account Id")
    String accountId();
    @DefaultMessage("Account List")
    String accountList();
    @DefaultMessage("Account Name")
    String accountName();
    @DefaultMessage("Accounting")
    String accounting();
    @DefaultMessage("EFT Account: AHC/Electronic Check")
    String accountingAHCElectronicCheck();
    @DefaultMessage("Account")
    String accountingAccount();
    @DefaultMessage("Account ID")
    String accountingAccountId();
    @DefaultMessage("Account Limit")
    String accountingAccountLimit();
    @DefaultMessage("Account Number")
    String accountingAccountNumber();
    @DefaultMessage("Account Type")
    String accountingAccountType();
    @DefaultMessage("Accounts")
    String accountingAccounts();
    @DefaultMessage("Add New Credit Card")
    String accountingAddNewCreditCard();
    @DefaultMessage("Add New EFT Account")
    String accountingAddNewEftAccount();
    @DefaultMessage("Add New Gift Card")
    String accountingAddNewGiftCard();
    @DefaultMessage("Additional Shipping Charge For Shipment #{0}")
    String accountingAdditionalShippingChargeForShipment(String shipmentId);
    @DefaultMessage("Admin")
    String accountingAdmin();
    @DefaultMessage("Agreement")
    String accountingAgreement();
    @DefaultMessage("List Available Agreements")
    String accountingAgreementAvailable();
    @DefaultMessage("Agreement Date")
    String accountingAgreementDate();
    @DefaultMessage("Agreement Id")
    String accountingAgreementId();
    @DefaultMessage("Agreement Item")
    String accountingAgreementItem();
    @DefaultMessage("Agreement Item Seq Id")
    String accountingAgreementItemSeqId();
    @DefaultMessage("Terms")
    String accountingAgreementItemTerms();
    @DefaultMessage("Agreement Item Type Id")
    String accountingAgreementItemTypeId();
    @DefaultMessage("Agreement Items")
    String accountingAgreementItems();
    @DefaultMessage("Promotions")
    String accountingAgreementPromoAppls();
    @DefaultMessage("Agreement Term Id")
    String accountingAgreementTermId();
    @DefaultMessage("Agreement Terms")
    String accountingAgreementTerms();
    @DefaultMessage("Agreement Type Id")
    String accountingAgreementTypeId();
    @DefaultMessage("Agreements")
    String accountingAgreements();
    @DefaultMessage("Amount")
    String accountingAmount();
    @DefaultMessage("Amount Applied")
    String accountingAmountApplied();
    @DefaultMessage("Amount not yet applied")
    String accountingAmountNotApplied();
    @DefaultMessage("Amount To Use")
    String accountingAmountToUse();
    @DefaultMessage("Any Invoice Status")
    String accountingAnyInvoiceStatus();
    @DefaultMessage("Any Payment Method")
    String accountingAnyPaymentMethod();
    @DefaultMessage("Any Payment Status")
    String accountingAnyPaymentStatus();
    @DefaultMessage("Applying {0} from payment [{1}] to {2}")
    String accountingApplicationSuccess(String isoCode, String paymentId, String toMessage);
    @DefaultMessage("to billing account [{0}]")
    String accountingApplicationToBillingAccount(String billingAccountId);
    @DefaultMessage("to invoice [{0}]")
    String accountingApplicationToInvoice(String invoiceId);
    @DefaultMessage("to invoice [{0}] Item [{1}]")
    String accountingApplicationToInvoiceItem(String paymentApplication_invoiceId, String paymentApplication_invoiceItemSeqId);
    @DefaultMessage("to payment [{0}]")
    String accountingApplicationToPayment(String paymentId);
    @DefaultMessage("to Tax Authority area [{0}]")
    String accountingApplicationToTax(String taxAuthGeoId);
    @DefaultMessage("Applications")
    String accountingApplications();
    @DefaultMessage("Applied Payments")
    String accountingAppliedPayments();
    @DefaultMessage("Apply this payment to")
    String accountingApplyPaymentoTo();
    @DefaultMessage("Apply to Invoice Items")
    String accountingApplyToInvoiceItems();
    @DefaultMessage("Arithmetic properties for Invoice services not configured properly. Cannot proceed.")
    String accountingAritmeticPropertiesNotConfigured();
    @DefaultMessage("Assets")
    String accountingAssets();
    @DefaultMessage("Assign Payment to This Invoice")
    String accountingAssignPaymentToInvoice();
    @DefaultMessage("Assign Sales Invoice type to Revenue GL Account Number")
    String accountingAssignSalesInvoiceToRevenue();
    @DefaultMessage("Authorize")
    String accountingAuthorize();
    @DefaultMessage("Available Internal Organizations")
    String accountingAvailableInternalOrganizations();
    @DefaultMessage("Balance Due")
    String accountingBalanceDue();
    @DefaultMessage("Balance Sheet")
    String accountingBalanceSheet();
    @DefaultMessage("Bank")
    String accountingBank();
    @DefaultMessage("Bank Name")
    String accountingBankName();
    @DefaultMessage("Bill-To Address1")
    String accountingBillToAddress1();
    @DefaultMessage("Bill-To Address2")
    String accountingBillToAddress2();
    @DefaultMessage("Bill-Up To")
    String accountingBillUpTo();
    @DefaultMessage("Billing")
    String accountingBilling();
    @DefaultMessage("Billing Accounts")
    String accountingBillingAcc();
    @DefaultMessage("Billing Account")
    String accountingBillingAccount();
    @DefaultMessage("Billing Account [{0}] balance not found...( \"")
    String accountingBillingAccountBalanceNotFound(String billingAccountId);
    @DefaultMessage("Billing Account [{0}] doesn''t have a positive balance: {1}")
    String accountingBillingAccountBalanceProblem(String billingAccountId, String isoCode);
    @DefaultMessage("Currencies are not the same, Billing Account [{0}] has currency: {1} and Payment [{2}] has currency: {3}")
    String accountingBillingAccountCurrencyProblem(String billingAccountId, String accountCurrencyUomId, String paymentId, String paymentCurrencyUomId);
    @DefaultMessage("Billing Acct ID")
    String accountingBillingAccountId();
    @DefaultMessage("Billing Account Invoices")
    String accountingBillingAccountInvoices();
    @DefaultMessage("Billing Account [{0}] has {1} to apply but {2} is requested")
    String accountingBillingAccountLessRequested(String billingAccountId, String isoCode, String isoCode1);
    @DefaultMessage("Billing Account [{0}] has only  {1} available so {2} is too much")
    String accountingBillingAccountNotEnough(String billingAccountId, String isoCode, String isoCode1);
    @DefaultMessage("Billing Account [{0}] not found...")
    String accountingBillingAccountNotFound(String billingAccountId);
    @DefaultMessage("Pay With Billing Account Only")
    String accountingBillingAccountOnly();
    @DefaultMessage("Billing Account Payments")
    String accountingBillingAccountPayments();
    @DefaultMessage("Billing Accounts")
    String accountingBillingAccounts();
    @DefaultMessage("Billing Acct")
    String accountingBillingAcct();
    @DefaultMessage("Billing Address")
    String accountingBillingAddress();
    @DefaultMessage("Available Balance")
    String accountingBillingAvailableBalance();
    @DefaultMessage("This is the amount which can be used for new orders.")
    String accountingBillingAvailableBalanceMessage();
    @DefaultMessage("Billing Contact Mech")
    String accountingBillingContactMechId();
    @DefaultMessage("Billing Address; Add Party/Role first, then select from drop-down")
    String accountingBillingContactMechIdMessage();
    @DefaultMessage("AccountingBilling Information")
    String accountingBillingInformation();
    @DefaultMessage("Billing Accounts")
    String accountingBillingMenu();
    @DefaultMessage("Net Balance")
    String accountingBillingNetBalance();
    @DefaultMessage("This is the amount which is currently outstanding on the billing account.")
    String accountingBillingNetBalanceMessage();
    @DefaultMessage("Cannot get payment for application [{0}] due to {1}")
    String accountingCannotGetPaymentForApplication(String payAppl, String msg);
    @DefaultMessage("Capture")
    String accountingCapture();
    @DefaultMessage("The credit card specified does not belong to you, you may not view or edit it")
    String accountingCardInfoNotBelongToYou();
    @DefaultMessage("Card Number")
    String accountingCardNumber();
    @DefaultMessage("Card Security Code")
    String accountingCardSecurityCode();
    @DefaultMessage("Card Type")
    String accountingCardType();
    @DefaultMessage("Chart of Accounts")
    String accountingChartOfAcctsMenu();
    @DefaultMessage("Check Amount")
    String accountingCheckAmount();
    @DefaultMessage("Check If You Have A Gift Card To Use Today")
    String accountingCheckGiftCard();
    @DefaultMessage("Checks")
    String accountingChecks();
    @DefaultMessage("Comments")
    String accountingComments();
    @DefaultMessage("Companies")
    String accountingCompanies();
    @DefaultMessage("OFBiz: Accounting Manager")
    String accountingCompanyName();
    @DefaultMessage("Company Name on Account")
    String accountingCompanyNameAccount();
    @DefaultMessage("Company Name on Card")
    String accountingCompanyNameCard();
    @DefaultMessage("Company Name on Account")
    String accountingCompanyNameOnAccount();
    @DefaultMessage("Company Name on Card")
    String accountingCompanyNameOnCard();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String accountingCompanySubtitle();
    @DefaultMessage("Copy Agreement")
    String accountingCopyAgreement();
    @DefaultMessage("Could not find GlAccount with ID")
    String accountingCouldNotFindGlAccount();
    @DefaultMessage("Create Assignment")
    String accountingCreateAssignment();
    @DefaultMessage("Create Billing Account")
    String accountingCreateBillingAccount();
    @DefaultMessage("Security Error: to run createBillingAccount you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission <br>")
    String accountingCreateBillingAccountPermissionError();
    @DefaultMessage("Create Billing Account Role")
    String accountingCreateBillingAccountRole();
    @DefaultMessage("Security Error : to run createBillingAccountRole you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission")
    String accountingCreateBillingAccountRolePermissionError();
    @DefaultMessage("Create Billing Account Term")
    String accountingCreateBillingAccountTerm();
    @DefaultMessage("Security Error : to run createBillingAccountTerm you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission")
    String accountingCreateBillingAccountTermPermissionError();
    @DefaultMessage("Security Error: to run createFixedAssetMaintOrder you must have the ACCOUNTING_CREATEUPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission")
    String accountingCreateFixedAssetMaintOrderPermissionError();
    @DefaultMessage("Create New Credit Card")
    String accountingCreateNewCreditCard();
    @DefaultMessage("Create New EFT Account")
    String accountingCreateNewEftAccount();
    @DefaultMessage("Create New Gift Card")
    String accountingCreateNewGiftCard();
    @DefaultMessage("New Invoice")
    String accountingCreateNewInvoice();
    @DefaultMessage("Create Payment")
    String accountingCreatePayment();
    @DefaultMessage("Security Error : To Create a Payment you must either be the to or from party or have the PAY_INFO_CREATE or PAY_INFO_ADMIN permissions.")
    String accountingCreatePaymentPermissionError();
    @DefaultMessage("Security Error: to run createGlAccount you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission<br>")
    String accountingCreatePermissionError();
    @DefaultMessage("Credit Card")
    String accountingCreditCard();
    @DefaultMessage("Credit Card Information")
    String accountingCreditCardInformation();
    @DefaultMessage("Your current balance is:")
    String accountingCurrentBalance();
    @DefaultMessage("Problem checking you balance; check your card and pin number and try again")
    String accountingCurrentBalanceProblem();
    @DefaultMessage("Cust.Nr")
    String accountingCustNr();
    @DefaultMessage("Customer")
    String accountingCustomer();
    @DefaultMessage("DataExchange")
    String accountingDataExchange();
    @DefaultMessage("Data source error")
    String accountingDataSourceError();
    @DefaultMessage("Debit and Credit Totals must be equal to post to GL.")
    String accountingDebitCreditMustEqual();
    @DefaultMessage("Security Error : to run removeBillingAccountTerm you must have the ACCOUNTING_DELETE or ACCOUNTING_ADMIN permission")
    String accountingDeleteBillingAccountTermPermissionError();
    @DefaultMessage("Security Error: to run deleteFixedAssetMaintOrder you must have the ACCOUNTING_DELETE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission")
    String accountingDeleteFixedAssetMaintOrderPermissionError();
    @DefaultMessage("Descr")
    String accountingDescr();
    @DefaultMessage("Description")
    String accountingDescription();
    @DefaultMessage("Due Date")
    String accountingDueDate();
    @DefaultMessage("EFT Account")
    String accountingEFTAccount();
    @DefaultMessage("EFT Account Information")
    String accountingEFTAccountInformation();
    @DefaultMessage("Edit Credit Card")
    String accountingEditCreditCard();
    @DefaultMessage("Create/Update Financial Account")
    String accountingEditFinAccount();
    @DefaultMessage("Edit Gift Card")
    String accountingEditGiftCard();
    @DefaultMessage("Edit Payment")
    String accountingEditPayment();
    @DefaultMessage("Effective")
    String accountingEffective();
    @DefaultMessage("Effective Date")
    String accountingEffectiveDate();
    @DefaultMessage("EFT Account")
    String accountingEftAccount();
    @DefaultMessage("The EFT Account specified does not belong to you, you may not view or edit it")
    String accountingEftNotBelongToYou();
    @DefaultMessage("Email message with attached invoice: {0} scheduled to be sent....")
    String accountingEmailScheduledToSend(String parameters_invoiceId);
    @DefaultMessage("Leave empty for maximum amount")
    String accountingEmptyForMaxAmount();
    @DefaultMessage("Enter your physical and virtual card and pin number to link your account")
    String accountingEnterGiftCardLink();
    @DefaultMessage("Enter your gift card number and PIN to check the balance")
    String accountingEnterGiftCardNumber();
    @DefaultMessage("Entity/data problem creating invoice from order items: {0}")
    String accountingEntityDataProblemCreatingInvoiceFromOrderItems(String reason);
    @DefaultMessage("Equities")
    String accountingEquities();
    @DefaultMessage("Error creating InvoiceContactMech from order")
    String accountingErrorCreatingInvoiceContactMechFromOrder();
    @DefaultMessage("Error creating invoice for return [{0}]")
    String accountingErrorCreatingInvoiceForReturn(String returnId);
    @DefaultMessage("Error creating invoice for shipment [{0}].")
    String accountingErrorCreatingInvoiceForShipment(String shipmentId);
    @DefaultMessage("Error creating invoice from order")
    String accountingErrorCreatingInvoiceFromOrder();
    @DefaultMessage("Error creating invoice from order while checking payment applications")
    String accountingErrorCreatingInvoiceFromOrderCheckPaymentAppl();
    @DefaultMessage("Error creating InvoiceItem from order")
    String accountingErrorCreatingInvoiceItemFromOrder();
    @DefaultMessage("Error creating InvoiceRole from order")
    String accountingErrorCreatingInvoiceRoleFromOrder();
    @DefaultMessage("Error creating InvoiceTerm from order")
    String accountingErrorCreatingInvoiceTermFromOrder();
    @DefaultMessage("Error creating OrderAdjustmentBilling from order")
    String accountingErrorCreatingOrderAdjustmentBillingFromOrder();
    @DefaultMessage("Error creating OrderItemBilling from order")
    String accountingErrorCreatingOrderItemBillingFromOrder();
    @DefaultMessage("Expiration Date")
    String accountingExpirationDate();
    @DefaultMessage("Accounting External Account Id")
    String accountingExternalAccountId();
    @DefaultMessage("Foreign Exchange Rates")
    String accountingFX();
    @DefaultMessage("Financial Account")
    String accountingFinAccount();
    @DefaultMessage("Authentications")
    String accountingFinAccountAuth();
    @DefaultMessage("Transactions")
    String accountingFinAccountTransations();
    @DefaultMessage("Financial Accounts")
    String accountingFinAccounts();
    @DefaultMessage("Find Financial Account")
    String accountingFindFinAccount();
    @DefaultMessage("Find Invoices")
    String accountingFindInvoices();
    @DefaultMessage("Find Payment")
    String accountingFindPayment();
    @DefaultMessage("Find Payments")
    String accountingFindPayments();
    @DefaultMessage("First Name on Card")
    String accountingFirstNameCard();
    @DefaultMessage("01-Jan")
    String accountingFiscalMonth01();
    @DefaultMessage("02-Feb")
    String accountingFiscalMonth02();
    @DefaultMessage("03-Mar")
    String accountingFiscalMonth03();
    @DefaultMessage("04-Apr")
    String accountingFiscalMonth04();
    @DefaultMessage("05-May")
    String accountingFiscalMonth05();
    @DefaultMessage("06-Jun")
    String accountingFiscalMonth06();
    @DefaultMessage("07-Jul")
    String accountingFiscalMonth07();
    @DefaultMessage("08-Aug")
    String accountingFiscalMonth08();
    @DefaultMessage("09-Sep")
    String accountingFiscalMonth09();
    @DefaultMessage("10-Oct")
    String accountingFiscalMonth10();
    @DefaultMessage("11-Nov")
    String accountingFiscalMonth11();
    @DefaultMessage("12-Dec")
    String accountingFiscalMonth12();
    @DefaultMessage("Fixed Asset")
    String accountingFixedAsset();
    @DefaultMessage("Calendar")
    String accountingFixedAssetCalendar();
    @DefaultMessage("Children")
    String accountingFixedAssetChildren();
    @DefaultMessage("Create/Update Fixed Asset")
    String accountingFixedAssetEdit();
    @DefaultMessage("Government Agency")
    String accountingFixedAssetGovAgencyPartyId();
    @DefaultMessage("Asset Id")
    String accountingFixedAssetId();
    @DefaultMessage("Fixed Asset Id [{0}] Already Exists")
    String accountingFixedAssetIdAlreadyExists(String parameters_fixedAssetId);
    @DefaultMessage("Value")
    String accountingFixedAssetIdentIdValue();
    @DefaultMessage("Identification Type")
    String accountingFixedAssetIdentType();
    @DefaultMessage("Identifications")
    String accountingFixedAssetIdents();
    @DefaultMessage("License Number")
    String accountingFixedAssetLicenseNumber();
    @DefaultMessage("Maintenance")
    String accountingFixedAssetMaint();
    @DefaultMessage("Interval Meter Type")
    String accountingFixedAssetMaintIntervalMeterType();
    @DefaultMessage("Interval Quantity")
    String accountingFixedAssetMaintIntervalQuantity();
    @DefaultMessage("Interval Uom")
    String accountingFixedAssetMaintIntervalUom();
    @DefaultMessage("If the Product Maintenance is specified, this will be set/reset automatically")
    String accountingFixedAssetMaintMessage1();
    @DefaultMessage("Only use if applicable, can use Maintenance Type instead")
    String accountingFixedAssetMaintMessage2();
    @DefaultMessage("If Maintenance Template is specified with Product Maintenance, this will be set/reset automatically")
    String accountingFixedAssetMaintMessage3();
    @DefaultMessage("Meter Value")
    String accountingFixedAssetMaintMeterValue();
    @DefaultMessage("Meters Readings")
    String accountingFixedAssetMaintMeters();
    @DefaultMessage("Maintenace Name")
    String accountingFixedAssetMaintName();
    @DefaultMessage("Purchase Orders")
    String accountingFixedAssetMaintOrders();
    @DefaultMessage("Maintenace Type")
    String accountingFixedAssetMaintType();
    @DefaultMessage("Maintenance Template")
    String accountingFixedAssetMaintenanceTemplate();
    @DefaultMessage("Maintenances")
    String accountingFixedAssetMaints();
    @DefaultMessage("*) empty, but maximum from fixed Asset capacity shown")
    String accountingFixedAssetMessage1();
    @DefaultMessage("Fixed Asset Name")
    String accountingFixedAssetName();
    @DefaultMessage("Add link to Fixed Asset")
    String accountingFixedAssetNew();
    @DefaultMessage("Asset Group")
    String accountingFixedAssetParent();
    @DefaultMessage("Party Roles")
    String accountingFixedAssetParties();
    @DefaultMessage("Add a link to a fixed Asset")
    String accountingFixedAssetProductAdd();
    @DefaultMessage("Link New product to Fixed Asset")
    String accountingFixedAssetProductNew();
    @DefaultMessage("Usage Type")
    String accountingFixedAssetProductType();
    @DefaultMessage("Type of usage")
    String accountingFixedAssetProductTypeId();
    @DefaultMessage("Update a link to a fixed Asset")
    String accountingFixedAssetProductUpd();
    @DefaultMessage("Products")
    String accountingFixedAssetProducts();
    @DefaultMessage("Registration Number")
    String accountingFixedAssetRegNumber();
    @DefaultMessage("Registrations")
    String accountingFixedAssetRegistrations();
    @DefaultMessage("RollUp")
    String accountingFixedAssetRollUp();
    @DefaultMessage("Standard Cost already Exists")
    String accountingFixedAssetStdCostAlreadyExists();
    @DefaultMessage("Standard Cost Type")
    String accountingFixedAssetStdCostTypeId();
    @DefaultMessage("Standard Costs")
    String accountingFixedAssetStdCosts();
    @DefaultMessage("Asset Type")
    String accountingFixedAssetTypeId();
    @DefaultMessage("Fixed Assets")
    String accountingFixedAssets();
    @DefaultMessage("From Party")
    String accountingFromParty();
    @DefaultMessage("From Party ID")
    String accountingFromPartyId();
    @DefaultMessage("At least the ''from'' party should be the same as the ''to'' party of the other payment")
    String accountingFromPartySameToParty();
    @DefaultMessage("Gateway Response")
    String accountingGatewayResponse();
    @DefaultMessage("Gateway Responses")
    String accountingGatewayResponses();
    @DefaultMessage("Gift")
    String accountingGift();
    @DefaultMessage("Gift Card")
    String accountingGiftCard();
    @DefaultMessage("Gift Card Balance")
    String accountingGiftCardBalance();
    @DefaultMessage("Gift Card Information")
    String accountingGiftCardInformation();
    @DefaultMessage("Gift Card Link")
    String accountingGiftCardLink();
    @DefaultMessage("Gift Card Number")
    String accountingGiftCardNumber();
    @DefaultMessage("GL Account")
    String accountingGlAcc();
    @DefaultMessage("GL Account")
    String accountingGlAccount();
    @DefaultMessage("GL Account Assignments")
    String accountingGlAccountAssignments();
    @DefaultMessage("GL Account Class")
    String accountingGlAccountClass();
    @DefaultMessage("GL Account defaults")
    String accountingGlAccountDefault();
    @DefaultMessage("GL Account ID")
    String accountingGlAccountId();
    @DefaultMessage("GL Accounts")
    String accountingGlAccounts();
    @DefaultMessage("GL Accounts")
    String accountingGlAccs();
    @DefaultMessage("Hide Fields")
    String accountingHideFields();
    @DefaultMessage("Ignore Invoice Items")
    String accountingIgnoreInvoiceItems();
    @DefaultMessage("prorateShipping is not N for productStoreId {0}: Additional shipping charges for shipments are ignored")
    String accountingIgnoringAdditionalShipCharges(String productStoreId);
    @DefaultMessage("Illegal values passed to create invoice service")
    String accountingIllegalValuesPassedToCreateInvoiceService();
    @DefaultMessage("Income Statement")
    String accountingIncomeStatement();
    @DefaultMessage("Information")
    String accountingInformation();
    @DefaultMessage("Inv.Nr")
    String accountingInvNr();
    @DefaultMessage("Invoice")
    String accountingInvoice();
    @DefaultMessage("Invoice [{0}] is cancelled, cannot be applied to...")
    String accountingInvoiceCancelledCannotApplyTo(String invoiceId);
    @DefaultMessage("INVOICE")
    String accountingInvoiceCapitals();
    @DefaultMessage("Entity/data problem creating commission invoice: {0}")
    String accountingInvoiceCommissionEntityDataProblem(String reason);
    @DefaultMessage("Error creating commission invoice")
    String accountingInvoiceCommissionError();
    @DefaultMessage("Error creating invoice item for commission invoice")
    String accountingInvoiceCommissionErrorItem();
    @DefaultMessage("Error creating invoice role for commission invoice")
    String accountingInvoiceCommissionErrorRole();
    @DefaultMessage("This type of invoice has no commission, not creating commission invoice")
    String accountingInvoiceCommissionInvalid();
    @DefaultMessage("Multiple orders or returns, not handled.")
    String accountingInvoiceCommissionMultHeader();
    @DefaultMessage("No order or return items, not creating commission invoice")
    String accountingInvoiceCommissionNoItems();
    @DefaultMessage("This invoice has an amount of zero, so no commission invoice will be created")
    String accountingInvoiceCommissionZeroInvoiceAmount();
    @DefaultMessage("Invoice [{0}]  is already completely covered by payments...")
    String accountingInvoiceCompletelyApplied(String invoiceId);
    @DefaultMessage("Invoice Date")
    String accountingInvoiceDate();
    @DefaultMessage("Inv. Date")
    String accountingInvoiceDateAbbr();
    @DefaultMessage("Header")
    String accountingInvoiceHeader();
    @DefaultMessage("Header Detailed Information")
    String accountingInvoiceHeaderDetailedInformation();
    @DefaultMessage("InvoiceID")
    String accountingInvoiceID();
    @DefaultMessage("Invoice Item")
    String accountingInvoiceItem();
    @DefaultMessage("Add a new invoice Item")
    String accountingInvoiceItemAdd();
    @DefaultMessage("Invoice [{0} Item [{1} has {2} to apply but  {3} is requested")
    String accountingInvoiceItemLessRequested(String invoiceId, String invoiceItemSeqId, String isoCode, String isoCode1);
    @DefaultMessage("Requested Amount is {0} to much for this Invoice [{1}] Item [{2}]")
    String accountingInvoiceItemNotEnough(String isoCode, String invoiceId, String invoiceItemSeqId);
    @DefaultMessage("Invoice [{0}]  item [{1}] record not found")
    String accountingInvoiceItemNotFound(String invoiceId, String invoiceItemSeqId);
    @DefaultMessage("Payment currency [{0}] and invoice Item currency [{1}] not the same \"")
    String accountingInvoiceItemPaymentCurrencyProblem(String paymentCurrencyId, String itemCurrency);
    @DefaultMessage("Item Nr")
    String accountingInvoiceItemSeqId();
    @DefaultMessage("Items")
    String accountingInvoiceItems();
    @DefaultMessage("Invoice [{0} has {1} to apply but  {2} is requested")
    String accountingInvoiceLessRequested(String invoiceId, String isoCode, String isoCode1);
    @DefaultMessage("Requested Amount is {0} to much for this Invoice [{1}]")
    String accountingInvoiceNotEnough(String isoCode, String invoiceId);
    @DefaultMessage("Invoice [{0}] record not found")
    String accountingInvoiceNotFound(String invoiceId);
    @DefaultMessage("Overview")
    String accountingInvoiceOverview();
    @DefaultMessage("PDF")
    String accountingInvoicePDF();
    @DefaultMessage("Paid")
    String accountingInvoicePaid();
    @DefaultMessage("Payment currency [{0}] and invoice currency [{1}] not the same")
    String accountingInvoicePaymentCurrencyProblem(String paymentCurrencyId, String invoiceCurrency);
    @DefaultMessage("Payments")
    String accountingInvoicePayments();
    @DefaultMessage("Purchase Invoice")
    String accountingInvoicePurchase();
    @DefaultMessage("Roles")
    String accountingInvoiceRoles();
    @DefaultMessage("Sales Invoice")
    String accountingInvoiceSales();
    @DefaultMessage("Status")
    String accountingInvoiceStatus();
    @DefaultMessage("Status History")
    String accountingInvoiceStatusHistory();
    @DefaultMessage("Status to ''Approved''")
    String accountingInvoiceStatusToApproved();
    @DefaultMessage("Status to ''Cancelled''")
    String accountingInvoiceStatusToCancelled();
    @DefaultMessage("Status to ''In Process''")
    String accountingInvoiceStatusToInProcess();
    @DefaultMessage("Status to ''Paid''")
    String accountingInvoiceStatusToPaid();
    @DefaultMessage("Status to ''Ready''")
    String accountingInvoiceStatusToReady();
    @DefaultMessage("Status to ''Received''")
    String accountingInvoiceStatusToReceived();
    @DefaultMessage("Status to ''Sent''")
    String accountingInvoiceStatusToSent();
    @DefaultMessage("Status to ''Writeoff''")
    String accountingInvoiceStatusToWriteoff();
    @DefaultMessage("Invoice Total")
    String accountingInvoiceTotal();
    @DefaultMessage("Invoice [{0}] has a total value of zero....cannot apply anything...")
    String accountingInvoiceTotalZero(String invoiceId);
    @DefaultMessage("Invoices")
    String accountingInvoices();
    @DefaultMessage("Invoices Found")
    String accountingInvoicesFound();
    @DefaultMessage("Invoices")
    String accountingInvoicesMenu();
    @DefaultMessage("ItemNr")
    String accountingItemNr();
    @DefaultMessage("Last Name on Card")
    String accountingLastNameCard();
    @DefaultMessage("Leave empty for maximum amount")
    String accountingLeaveEmptyForMaximumAmount();
    @DefaultMessage("Liabilities")
    String accountingLiabilities();
    @DefaultMessage("Line Total")
    String accountingLineTotal();
    @DefaultMessage("Possible invoices to apply")
    String accountingListInvoicesNotYetApplied();
    @DefaultMessage("Possible payments to apply")
    String accountingListPaymentsNotYetApplied();
    @DefaultMessage("Lookup Invoices")
    String accountingLookupInvoices();
    @DefaultMessage("Lookup Payment")
    String accountingLookupPayment();
    @DefaultMessage("Main")
    String accountingMainMenu();
    @DefaultMessage("Accounting Manager Main Page")
    String accountingMainPage();
    @DefaultMessage("Welcome to the Accounting Manager!")
    String accountingMainPageNote();
    @DefaultMessage("NOTE")
    String accountingMainPageNote1();
    @DefaultMessage("A full accounting and financials component for OFBiz is available.")
    String accountingMainPageNote2();
    @DefaultMessage("Click here")
    String accountingMainPageNote3();
    @DefaultMessage("for complete details.")
    String accountingMainPageNote4();
    @DefaultMessage("Accounting Manager Application")
    String accountingManagerApplication();
    @DefaultMessage("Manual Journal Entry")
    String accountingManualJournalEntry();
    @DefaultMessage("Manual Transactions Posting")
    String accountingManualPostTrans();
    @DefaultMessage("Manual Electronic Transaction")
    String accountingManualTransaction();
    @DefaultMessage("Method")
    String accountingMethod();
    @DefaultMessage("Middle Name on Card")
    String accountingMiddleNameCard();
    @DefaultMessage("Name on Account")
    String accountingNameAccount();
    @DefaultMessage("Name on Account")
    String accountingNameOnAccount();
    @DefaultMessage("Name on Card")
    String accountingNameOnCard();
    @DefaultMessage("Account #")
    String accountingNb();
    @DefaultMessage("Net Income")
    String accountingNetIncome();
    @DefaultMessage("New Account")
    String accountingNewAccount();
    @DefaultMessage("Create Agreement")
    String accountingNewAgreement();
    @DefaultMessage("Create Agreement Item")
    String accountingNewAgreementItem();
    @DefaultMessage("Create Term")
    String accountingNewAgreementItemTerm();
    @DefaultMessage("Add New Promotion")
    String accountingNewAgreementPromoAppl();
    @DefaultMessage("Create Agreement Term")
    String accountingNewAgreementTerm();
    @DefaultMessage("New Billing Account")
    String accountingNewBillingAccount();
    @DefaultMessage("New Fixed Asset")
    String accountingNewFixedAsset();
    @DefaultMessage("Create Fixed Asset Identification")
    String accountingNewFixedAssetIdents();
    @DefaultMessage("Create Fixed Asset Identification Type")
    String accountingNewFixedAssetIdentsType();
    @DefaultMessage("New Maintenance")
    String accountingNewFixedAssetMaint();
    @DefaultMessage("New Standard Cost")
    String accountingNewFixedAssetStdCost();
    @DefaultMessage("New Payment")
    String accountingNewPayment();
    @DefaultMessage("New Tax Authority")
    String accountingNewTaxAuthority();
    @DefaultMessage("New Tax Authority Party Info")
    String accountingNewTaxAuthorityPartyInfo();
    @DefaultMessage("No Account")
    String accountingNoAccount();
    @DefaultMessage("Amount requested to apply is zero or not provided: no amount applied/n")
    String accountingNoAmount();
    @DefaultMessage("No Billing Account")
    String accountingNoBillingAccount();
    @DefaultMessage("No billing accounts found.")
    String accountingNoBillingAccountFound();
    @DefaultMessage("No billing account roles exist.")
    String accountingNoBillingAccountRole();
    @DefaultMessage("No billing account terms exist.")
    String accountingNoBillingAccountTerm();
    @DefaultMessage("No general/billing address found for party:")
    String accountingNoGenBilAddressFound();
    @DefaultMessage("No Invoices Found")
    String accountingNoInvoicesFound();
    @DefaultMessage("No known invoice item type for the return adjustment type [{0}]")
    String accountingNoKnownInvoiceItemTypeReturnAdjustmentType(String returnAdjustmentTypeId);
    @DefaultMessage("No known invoice item type for the return item type [{0}]")
    String accountingNoKnownInvoiceItemTypeReturnItemType(String returnItemTypeId);
    @DefaultMessage("No OrderHeader, cannot create invoice")
    String accountingNoOrderHeader();
    @DefaultMessage("No order items to invoice, not creating invoice.")
    String accountingNoOrderItemsToInvoice();
    @DefaultMessage("No payment method information on file")
    String accountingNoPaymentMethodInformation();
    @DefaultMessage("There are no payment methods on file.")
    String accountingNoPaymentMethods();
    @DefaultMessage("There are no payment methods on file")
    String accountingNoPaymentMethodsOnFile();
    @DefaultMessage("No applications found..")
    String accountingNoPaymentsApplicationsfound();
    @DefaultMessage("No Payments found")
    String accountingNoPaymentsfound();
    @DefaultMessage("No contact information set")
    String accountingNocontactinformationset();
    @DefaultMessage("No current invoice line items")
    String accountingNocurrentinvoicelineitems();
    @DefaultMessage("This cannot be changed without re-creating the GL Account.")
    String accountingNotModificationRecrationGlAccount();
    @DefaultMessage("Number")
    String accountingNumber();
    @DefaultMessage("Offline Payment")
    String accountingOfflinePayment();
    @DefaultMessage("Open")
    String accountingOpenPayments();
    @DefaultMessage("Order Item with id {0} not found.")
    String accountingOrderItemWithIdNotFound(String orderItemSeqId);
    @DefaultMessage("Order #")
    String accountingOrderNr();
    @DefaultMessage("Accounting Order Payment Preference Id")
    String accountingOrderPaymentPreferenceId();
    @DefaultMessage("Order with id {0} not found.")
    String accountingOrderWithIdNotFound(String orderId);
    @DefaultMessage("Orders")
    String accountingOrders();
    @DefaultMessage("Organization Party Id")
    String accountingOrganizationPartyId();
    @DefaultMessage("Override Revenue Gl Account Id")
    String accountingOverrideRevenueGlAccountId();
    @DefaultMessage("PIN")
    String accountingPIN();
    @DefaultMessage("PIN Number")
    String accountingPINNumber();
    @DefaultMessage("The new status is not a valid change")
    String accountingPSInvalidStatusChange();
    @DefaultMessage("Status cannot be set to ''Confirmed'', the payment is not fully applied!")
    String accountingPSNotConfirmedNotFullyApplied();
    @DefaultMessage("Status does not allow an update of the information")
    String accountingPSUpdateNotAllowedBecauseOfStatus();
    @DefaultMessage("Agreement Price List")
    String accountingPageTitleAgreementPriceList();
    @DefaultMessage("Paid Date")
    String accountingPaidDate();
    @DefaultMessage("Party Billed From")
    String accountingPartyBilledFrom();
    @DefaultMessage("Party Billed To")
    String accountingPartyBilledTo();
    @DefaultMessage("Party Id From")
    String accountingPartyIdFrom();
    @DefaultMessage("Party Id To")
    String accountingPartyIdTo();
    @DefaultMessage("Party must be an Internal Organization (set in PartyRole)")
    String accountingPartyMustBeInternalOrganization();
    @DefaultMessage("Add a new Party Role")
    String accountingPartyRoleAdd();
    @DefaultMessage("Party Role List")
    String accountingPartyRoleList();
    @DefaultMessage("Pay only with Billing Account")
    String accountingPayOnlyWithBillingAccount();
    @DefaultMessage("Pay With PayPal")
    String accountingPayWithPayPal();
    @DefaultMessage("Pay With WorldPay")
    String accountingPayWithWorldPay();
    @DefaultMessage("Payment")
    String accountingPayment();
    @DefaultMessage("Payment [{0}] is already fully applied")
    String accountingPaymentAlreadyApplied(String paymentId);
    @DefaultMessage("Payment already received")
    String accountingPaymentAlreadyReceived();
    @DefaultMessage("PaymentID [{0}] with amount {1} removed from")
    String accountingPaymentApplRemoved(String paymentApplication_paymentId, String payment_currencyUomId);
    @DefaultMessage("Billing Account ID [{0}]")
    String accountingPaymentApplToBillingAccount(String paymentApplication_billingAccountId);
    @DefaultMessage("invoiceID [{0}]")
    String accountingPaymentApplToInvoice(String paymentApplication_invoiceId);
    @DefaultMessage("other paymentID [{0}]")
    String accountingPaymentApplToPayment(String paymentApplication_toPaymentId);
    @DefaultMessage("Tax Authority area [{0}]")
    String accountingPaymentApplToTaxAuth(String paymentApplication_taxAuthGeoId);
    @DefaultMessage("PaymentApplication record [{0}] not found")
    String accountingPaymentApplicationNotFound(String paymentApplicationId);
    @DefaultMessage("Payment application requires either an invoiceId, a billingAccountId, a taxAuthGeoId or a glAccountId")
    String accountingPaymentApplicationParameterMissing();
    @DefaultMessage("Payment [{0}] is cancelled and cannot be applied")
    String accountingPaymentCancelled(String paymentId);
    @DefaultMessage("Sorry, no payments were selected.")
    String accountingPaymentCheckMessage1();
    @DefaultMessage("Payment [{0}] is confirmed and cannot be applied")
    String accountingPaymentConfirmed(String paymentId);
    @DefaultMessage("Payment Date")
    String accountingPaymentDate();
    @DefaultMessage("Accounting Payment Gateway Response Id")
    String accountingPaymentGatewayResponseId();
    @DefaultMessage("Payment Header")
    String accountingPaymentHeader();
    @DefaultMessage("PaymentID")
    String accountingPaymentID();
    @DefaultMessage("PaymentId blank or not supplied.... .....")
    String accountingPaymentIdBlankNotSupplied();
    @DefaultMessage("PaymentID to apply")
    String accountingPaymentIdTo();
    @DefaultMessage("Payment Information")
    String accountingPaymentInformation();
    @DefaultMessage("Payment [{0}] has  {1} to apply but {2} is requested")
    String accountingPaymentLessRequested(String paymentId, String isoCode, String isoCode1);
    @DefaultMessage("Payment Method")
    String accountingPaymentMethod();
    @DefaultMessage("Payment Method Id")
    String accountingPaymentMethodId();
    @DefaultMessage("No values are passed for paymentMethodId or paymentMethodTypeId. At least pass paymentMethodId.")
    String accountingPaymentMethodIdPaymentMethodTypeIdNullError();
    @DefaultMessage("Payment Method Information")
    String accountingPaymentMethodInformation();
    @DefaultMessage("Payment Method Type")
    String accountingPaymentMethodType();
    @DefaultMessage("Payment [{0}] has an amount ({1} to apply and the  {2} requested is too much")
    String accountingPaymentNotEnough(String paymentId, String isoCode, String isoCode1);
    @DefaultMessage("Original Amt.")
    String accountingPaymentOriginalAmount();
    @DefaultMessage("Payment Preference Id")
    String accountingPaymentPreferenceId();
    @DefaultMessage("Payment Properties")
    String accountingPaymentProperties();
    @DefaultMessage("Payment Props")
    String accountingPaymentProps();
    @DefaultMessage("Payment [{0}] record not found....")
    String accountingPaymentRecordNotFound(String paymentId);
    @DefaultMessage("sent from")
    String accountingPaymentSentForm();
    @DefaultMessage("Applications")
    String accountingPaymentTabApplications();
    @DefaultMessage("Header")
    String accountingPaymentTabHeader();
    @DefaultMessage("Overview")
    String accountingPaymentTabOverview();
    @DefaultMessage("Status to ''Cancelled''")
    String accountingPaymentTabStatusToCancelled();
    @DefaultMessage("Status to ''Confirmed''")
    String accountingPaymentTabStatusToConfirmed();
    @DefaultMessage("Status to ''Received''")
    String accountingPaymentTabStatusToReceived();
    @DefaultMessage("Status to ''Sent''")
    String accountingPaymentTabStatusToSent();
    @DefaultMessage("Payment Type")
    String accountingPaymentType();
    @DefaultMessage("Payment Via")
    String accountingPaymentVia();
    @DefaultMessage("Payments")
    String accountingPayments();
    @DefaultMessage("Payments Applied")
    String accountingPaymentsApplied();
    @DefaultMessage("Payment(s) Found")
    String accountingPaymentsFound();
    @DefaultMessage("Payments")
    String accountingPaymentsMenu();
    @DefaultMessage("Payments received")
    String accountingPaymentsReceived();
    @DefaultMessage("Payments send")
    String accountingPaymentsSend();
    @DefaultMessage("Payments Sent")
    String accountingPaymentsSent();
    @DefaultMessage("You do not have permission for this function.")
    String accountingPermissionError();
    @DefaultMessage("Physical Card")
    String accountingPhysicalCard();
    @DefaultMessage("Pin Number")
    String accountingPinNumber();
    @DefaultMessage("Please Send Payment To")
    String accountingPleaseSendPaymentTo();
    @DefaultMessage("Post Transaction")
    String accountingPostTransaction();
    @DefaultMessage("Organization Accounting Preferences")
    String accountingPreference();
    @DefaultMessage("Prefix on Card")
    String accountingPrefixCard();
    @DefaultMessage("Print As Check")
    String accountingPrintAsCheck();
    @DefaultMessage("Checks to Print")
    String accountingPrintChecks();
    @DefaultMessage("Security Error: to print checks, you must have the ACCOUNTING_PRINT_CHECKS permission")
    String accountingPrintChecksPermissionError();
    @DefaultMessage("Problem changing invoice status to {0}")
    String accountingProblemChangingInvoiceStatusTo(String newStatus);
    @DefaultMessage("Problem getting issued items from shipments")
    String accountingProblemGettingItemsFromShipments();
    @DefaultMessage("Problem getting OrderItem/OrderItemBilling records {0}")
    String accountingProblemGettingOrderItemOrderItemBilling(String lookup);
    @DefaultMessage("Problem getting OrderPaymentPreference records")
    String accountingProblemGettingOrderPaymentPreferences();
    @DefaultMessage("Problem getting PaymentApplication(s) for Invoice ID [{0}]")
    String accountingProblemGettingPaymentApplication(String invoiceId);
    @DefaultMessage("Problem looking up OrderItemBilling records for {0}")
    String accountingProblemLookingUpOrderItemBilling(String billFields);
    @DefaultMessage("Problem storing OrderAdjustments: {0}")
    String accountingProblemStoringOrderAdjustments(String orderAdjustments);
    @DefaultMessage("Product")
    String accountingProduct();
    @DefaultMessage("Product Id")
    String accountingProductId();
    @DefaultMessage("Product Rates")
    String accountingProductRates();
    @DefaultMessage("Receive Payment")
    String accountingReceivePayment();
    @DefaultMessage("Reference Number")
    String accountingReferenceNumber();
    @DefaultMessage("Reports")
    String accountingReports();
    @DefaultMessage("Role Type")
    String accountingRoleType();
    @DefaultMessage("Role Type Id From")
    String accountingRoleTypeIdFrom();
    @DefaultMessage("Role Type Id To")
    String accountingRoleTypeIdTo();
    @DefaultMessage("Routing Number")
    String accountingRoutingNumber();
    @DefaultMessage("Sales Invoice type to Revenue GL Account Number assignment list")
    String accountingSalesInvoiceToRevenue();
    @DefaultMessage("Card Security Code")
    String accountingSecurityCodeCard();
    @DefaultMessage("Mark Checks Sent")
    String accountingSendChecks();
    @DefaultMessage("Service/other problem creating InvoiceItem from order header adjustment")
    String accountingServiceErrorCreatingInvoiceItemFromOrder();
    @DefaultMessage("Service/other problem creating InvoiceTerm from order")
    String accountingServiceErrorCreatingInvoiceTermFromOrder();
    @DefaultMessage("Service/other problem creating invoice from order items: {0}")
    String accountingServiceOtherProblemCreatingInvoiceFromOrderItems(String reason);
    @DefaultMessage("Shipment not found.")
    String accountingShipmentNotFound();
    @DefaultMessage("Shipment is not of type SALES_RETURN.")
    String accountingShipmentNotSalesReturn();
    @DefaultMessage("Shipments of different types found; shipment [{0}] of type [{1}] is of different type from the previous ones.")
    String accountingShipmentsOfDifferentTypes(String tmpShipmentId, String shipmentTypeId);
    @DefaultMessage("Show All Fixed Assets")
    String accountingShowAllFixedAssets();
    @DefaultMessage("Show All Invoices")
    String accountingShowAllInvoices();
    @DefaultMessage("Show All Payments")
    String accountingShowAllPayments();
    @DefaultMessage("Show Invoices")
    String accountingShowInvoices();
    @DefaultMessage("Show Payments")
    String accountingShowPayments();
    @DefaultMessage("Single Use Credit Card")
    String accountingSingleUseCreditCard();
    @DefaultMessage("Single Use EFT Account")
    String accountingSingleUseEFTAccount();
    @DefaultMessage("Single Use Gift Card")
    String accountingSingleUseGiftCard();
    @DefaultMessage("Specify either Invoice or toPayment or billing account or taxGeoId....")
    String accountingSpecifyInvoiceToPaymentBillingAccountTaxGeoId();
    @DefaultMessage("Split Payment")
    String accountingSplitPayment();
    @DefaultMessage("Accounting Status")
    String accountingStatus();
    @DefaultMessage("successfull")
    String accountingSuccessFull();
    @DefaultMessage("Suffix on Card")
    String accountingSuffixCard();
    @DefaultMessage("Tax Authorities")
    String accountingTaxAuthorities();
    @DefaultMessage("Tax Authority")
    String accountingTaxAuthority();
    @DefaultMessage("Tax Authority Party")
    String accountingTaxAuthorityParty();
    @DefaultMessage("Tax Summary Report")
    String accountingTaxSummary();
    @DefaultMessage("Term Type Id")
    String accountingTermTypeId();
    @DefaultMessage("Text Data")
    String accountingTextData();
    @DefaultMessage("Thru Date")
    String accountingThruDate();
    @DefaultMessage("Title Transfer")
    String accountingTitleTransfer();
    @DefaultMessage("To Party")
    String accountingToParty();
    @DefaultMessage("To Party Id")
    String accountingToPartyId();
    @DefaultMessage("TOTAL")
    String accountingTotalCapital();
    @DefaultMessage("Transaction Type")
    String accountingTransactionType();
    @DefaultMessage("This transaction type is not yet supported")
    String accountingTransactionTypeNotYetSupported();
    @DefaultMessage("Transactions")
    String accountingTransactions();
    @DefaultMessage("Trial Balance")
    String accountingTrialBalance();
    @DefaultMessage("Trouble calling authOrderPaymentPreference service")
    String accountingTroubleCallingAuthOrderPaymentPreferenceService();
    @DefaultMessage("Trouble calling calcTaxService")
    String accountingTroubleCallingCalcTaxService();
    @DefaultMessage("Accounting trouble calling calculateInvoicedAdjustmentTotal service")
    String accountingTroubleCallingCalculateInvoicedAdjustmentTotalService();
    @DefaultMessage("Trouble calling createInvoiceForOrder service; invoice not created for shipment")
    String accountingTroubleCallingCreateInvoiceForOrderService();
    @DefaultMessage("Trouble calling createInvoicesFromShipment service; invoice not created for shipment [{0}]")
    String accountingTroubleCallingCreateInvoicesFromShipmentService(String shipmentId);
    @DefaultMessage("Trouble calling createInvoicesFromShipments service")
    String accountingTroubleCallingCreateInvoicesFromShipmentsService();
    @DefaultMessage("Trouble calling createOrderAdjustment service")
    String accountingTroubleCallingCreateOrderAdjustmentService();
    @DefaultMessage("Trouble calling createOrderPaymentPreference service")
    String accountingTroubleCallingCreateOrderPaymentPreferenceService();
    @DefaultMessage("Trouble calling releaseOrderPaymentPreference service")
    String accountingTroubleCallingReleaseOrderPaymentPreferenceService();
    @DefaultMessage("Trouble getting Shipment entity for shipment [{0}]")
    String accountingTroubleGettingShipmentEntity(String tmpShipmentId);
    @DefaultMessage("Unable to authorize additional shipping charges for shipmentId {0} to paymentMethodId {1} (orderPaymentPreferenceId {2})")
    String accountingUnableToAuthAdditionalShipCharges(String shipmentId, String paymentMethodId, String orderPaymentPreferenceId);
    @DefaultMessage("Unit Price")
    String accountingUnitPrice();
    @DefaultMessage("Update the availability")
    String accountingUpdateAvailability();
    @DefaultMessage("Update Billing Account")
    String accountingUpdateBillingAccount();
    @DefaultMessage("Security Error : to run updateAcctgTrans you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission<br>")
    String accountingUpdateBillingAccountPermissionError();
    @DefaultMessage("Security Error : to run updateBillingAccountRole you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission")
    String accountingUpdateBillingAccountRolePermissionError();
    @DefaultMessage("Security Error : to run updateBillingAccountTerm you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission")
    String accountingUpdateBillingAccountTermPermissionError();
    @DefaultMessage("Update Foreign Exchange Rates")
    String accountingUpdateFX();
    @DefaultMessage("Security Error : To Update a Payment you must either be the to or from party or have the PAY_INFO_UPDATE or PAY_INFO_ADMIN permissions.")
    String accountingUpdatePaymentPermissionError();
    @DefaultMessage("Use Account")
    String accountingUseAccount();
    @DefaultMessage("Use Gift Card Not On File")
    String accountingUseGiftCardNotOnFile();
    @DefaultMessage("Use regular expression validation pattern")
    String accountingValidationPattern();
    @DefaultMessage("You do not have permission to view this page. (\"ACCOUNTING_VIEW\" or \"ACCOUNTING_ADMIN\" needed)")
    String accountingViewPermissionError();
    @DefaultMessage("Virtual Card")
    String accountingVirtualCard();
    @DefaultMessage("Credit Card: Visa/Mastercard/Amex/Discover")
    String accountingVisaMastercardAmexDiscover();
    @DefaultMessage("Tax Auth Geo ID")
    String accountingtaxAuthGeoId();
    @DefaultMessage("Assign GL Account")
    String acctgAssignGlAccount();
    @DefaultMessage("Chart of Accounts")
    String acctgChartOfAcctsTabMenu();
    @DefaultMessage("Journal Entry")
    String acctgEditGlJournalEntry();
    @DefaultMessage("GL Account :")
    String acctgGlAcctLabel();
    @DefaultMessage("Fiscal Type :")
    String acctgGlFiscalTypeLable();
    @DefaultMessage("Description :")
    String acctgGlJrnlDescLabel();
    @DefaultMessage("GL Journal ID :")
    String acctgGlJrnlIdLabel();
    @DefaultMessage("Non-editable System ID")
    String acctgGlJrnlIdToolTip();
    @DefaultMessage("GL Party :")
    String acctgGlPartyLabel();
    @DefaultMessage("List GL Organization")
    String acctgListGlAcctOrg();
    @DefaultMessage("Navigate Accounts")
    String acctgNavigateAccts();
    @DefaultMessage("Add Feature Type")
    String addFeatureType();
    @DefaultMessage("Add Features")
    String addFeatures();
    @DefaultMessage("Add Selectable Feature")
    String addSelectableFeature();
    @DefaultMessage("Address")
    String address();
    @DefaultMessage("Address (2)")
    String address2();
    @DefaultMessage("Timing of Commissions")
    String agreementItemType_description_COMM_TIMING();
    @DefaultMessage("Commission")
    String agreementType_description_COMMISSION_AGREEMENT();
    @DefaultMessage("Employment")
    String agreementType_description_EMPLOYMENT_AGREEMENT();
    @DefaultMessage("Other")
    String agreementType_description_OTHER_AGREEMENT();
    @DefaultMessage("Partner")
    String agreementType_description_PARTNER_AGREEMENT();
    @DefaultMessage("Partner Sales")
    String agreementType_description_PARTNER_SALES_AGR();
    @DefaultMessage("Product")
    String agreementType_description_PRODUCT_AGREEMENT();
    @DefaultMessage("Purchase")
    String agreementType_description_PURCHASE_AGREEMENT();
    @DefaultMessage("Customer")
    String agreementType_description_SALES_AGREEMENT();
    @DefaultMessage("- Any -")
    String anyFeatureType();
    @DefaultMessage("Apply To All")
    String applyToAll();
    @DefaultMessage("As Of")
    String asOf();
    @DefaultMessage("Attention Name")
    String attnName();
    @DefaultMessage("Bulgarian")
    String bu();
    @DefaultMessage("By Date")
    String byDate();
    @DefaultMessage("For Closed Time Period")
    String byTimePeriod();
    @DefaultMessage("Click here For Calendar")
    String calendar_click_here_for_calendar();
    @DefaultMessage("<table><tr><td><image src=\"{0}\"/></td><td> You have a call from<br> {1}</td></tr></table>")
    String callInDisplayMessage(String icon, String link);
    @DefaultMessage("No product information passed, not adding anything to cart.")
    String cart_addToCart_noProductInfoPassed();
    @DefaultMessage("Configuration Is Not Valid")
    String cart_addToCart_productConfigurationIsNotValid();
    @DefaultMessage("Added {0} items to the cart.")
    String cart_add_category_defaults(String totalQuantity);
    @DefaultMessage("No agreement specified to add from.")
    String cart_agreement_not_specified_to_add_from();
    @DefaultMessage("No category specified to add from.")
    String cart_category_not_specified_to_add_from();
    @DefaultMessage("Could NOT add product {0} to cart.")
    String cart_could_not_add_product_to_cart(String productId);
    @DefaultMessage("Could not get agreement through {0} [read error]: {1}.")
    String cart_could_not_get_agreement(String agreementId, String message);
    @DefaultMessage("Could not get products in category {0} to add to cart [read error].")
    String cart_could_not_get_products_in_category(String categorieId);
    @DefaultMessage("Could not get products in category {0} to add to cart [read error]: {1}.")
    String cart_could_not_get_products_in_category_cart(String categorieId, String message);
    @DefaultMessage("No order specified to add from")
    String cart_order_not_specified_to_add_from();
    @DefaultMessage("Price must be a positive number")
    String cart_price_not_positive_number();
    @DefaultMessage("This product cannot be purchased from the chosen supplier for the given quantity and currency.")
    String cart_product_not_valid_for_supplier();
    @DefaultMessage("Quantity must be a positive number")
    String cart_quantity_not_positive_number();
    @DefaultMessage("Catalog")
    String catalog();
    @DefaultMessage("OFBiz: Catalog Manager")
    String catalogCompanyName();
    @DefaultMessage("Categories")
    String categories();
    @DefaultMessage("Upload Category Image")
    String categoryUploadImage();
    @DefaultMessage("Cannot cancel item at this time; please try again.")
    String checkevents_cannot_cancel_item();
    @DefaultMessage("Cart is empty.")
    String checkevents_cart_empty();
    @DefaultMessage("Insufficient credit available on accounts.")
    String checkevents_insufficient_credit_available_on_account();
    @DefaultMessage("Invalid amount set for Billing Account #{0}.")
    String checkevents_invalid_amount_set_for_billing_account(String billingAccountId);
    @DefaultMessage("Invalid amount set for Payment method.")
    String checkevents_invalid_amount_set_for_payment_method();
    @DefaultMessage("Not enough available on account #[billingAccountId].")
    String checkevents_not_enough_available_on_account();
    @DefaultMessage("Selected payment methods will not cover this order.")
    String checkevents_payment_not_cover_this_order();
    @DefaultMessage("ERROR: Could not create order (problem invoking the service: {0})")
    String checkhelper_could_not_create_order_invoking_service(String service);
    @DefaultMessage("ERROR: Could not create order (problem parsing order totals).")
    String checkhelper_could_not_create_order_parsing_totals();
    @DefaultMessage("Database error.")
    String checkhelper_database_error();
    @DefaultMessage("Did not complete the order, the following occurred:")
    String checkhelper_did_not_complete_order_following_occurred();
    @DefaultMessage("Please enter the amount to place on your gift card.")
    String checkhelper_enter_amount_to_place_on_gift_card();
    @DefaultMessage("Please enter your gift card number.")
    String checkhelper_enter_gift_card_number();
    @DefaultMessage("Please enter your gift card pin number.")
    String checkhelper_enter_gift_card_pin_number();
    @DefaultMessage("Please enter a shipping address.")
    String checkhelper_enter_shipping_address();
    @DefaultMessage("This gift card does not exist.")
    String checkhelper_gift_card_does_not_exist();
    @DefaultMessage("This gift card no longer has any value.")
    String checkhelper_gift_card_has_no_value();
    @DefaultMessage("Insufficient credit available on account.")
    String checkhelper_insufficient_credit_available_on_account();
    @DefaultMessage("Invalid amount for gift card entered.")
    String checkhelper_invalid_amount_for_gift_card();
    @DefaultMessage("There are no items in the cart.")
    String checkhelper_no_items_in_cart();
    @DefaultMessage("Problem with gift card information.")
    String checkhelper_problem_with_gift_card_information();
    @DefaultMessage("Problems getting order header. Cannot check external gateways!")
    String checkhelper_problems_getting_order_header();
    @DefaultMessage("Problems getting payment preference. Cannot check external gateways!")
    String checkhelper_problems_getting_payment_preference();
    @DefaultMessage("Problems parsing amount.")
    String checkhelper_problems_parsing_amount();
    @DefaultMessage("Problems reading the database, please try again.")
    String checkhelper_problems_reading_database();
    @DefaultMessage("ERROR: Sales Order Lines lookup failed.")
    String checkhelper_sales_order_lines_lookup_failed();
    @DefaultMessage("Please select a method of payment.")
    String checkhelper_select_method_of_payment();
    @DefaultMessage("Please Select a Shipping Destination.")
    String checkhelper_select_shipping_destination();
    @DefaultMessage("Please Select a Shipping Method.")
    String checkhelper_select_shipping_method();
    @DefaultMessage("Please Select a Splitting Preference.")
    String checkhelper_select_splitting_preference();
    @DefaultMessage("Please Specify Whether or Not This Order is a Gift.")
    String checkhelper_specify_if_order_is_gift();
    @DefaultMessage("Please specify ship after date as a date.")
    String checkhelper_specify_if_shipAfterDate_is_date();
    @DefaultMessage("Please specify a ship before date as a date.")
    String checkhelper_specify_if_shipBeforeDate_is_date();
    @DefaultMessage("Totals do not match order total.")
    String checkhelper_totals_do_not_match_order_total();
    @DefaultMessage("Totals do not match order total.")
    String checkhelpertotalsdonotmatchordertotal();
    @DefaultMessage("City")
    String city();
    @DefaultMessage("Classification")
    String classification();
    @DefaultMessage("ERROR: Communication event must have a from contact mech that is an email for comm event Id")
    String commeventservices_communication_event_from_contact_mech_must_be_email();
    @DefaultMessage("ERROR: Communication event is not an email communication and cannot be emailed for communication event Id")
    String commeventservices_communication_event_must_be_email_for_email();
    @DefaultMessage("ERROR: Communication Event not found for communication event Id")
    String commeventservices_communication_event_not_found_failure();
    @DefaultMessage("ERROR: Communication event must have a to contact mech that is an email for comm event Id")
    String commeventservices_communication_event_to_contact_mech_must_be_email();
    @DefaultMessage("Error calling sendEmailToContactList service")
    String commeventservices_errorCallingSendEmailToContactListService();
    @DefaultMessage("Error calling sendMail service")
    String commeventservices_errorCallingSendMailService();
    @DefaultMessage("Error calling updateContactListParty service")
    String commeventservices_errorCallingUpdateContactListPartyService();
    @DefaultMessage("Error in sendEmailToContactList service")
    String commeventservices_errorInSendEmailToContactListService();
    @DefaultMessage("Skipping invalid email address")
    String commeventservices_skippingInvalidEmailAddress();
    @DefaultMessage("Accepted")
    String commonAccepted();
    @DefaultMessage("Accounting")
    String commonAccounting();
    @DefaultMessage("Active and Inactive")
    String commonActiveInactive();
    @DefaultMessage("Active Only")
    String commonActiveOnly();
    @DefaultMessage("Add")
    String commonAdd();
    @DefaultMessage("Add a")
    String commonAddA();
    @DefaultMessage("Add Default")
    String commonAddDefault();
    @DefaultMessage("Add ID")
    String commonAddId();
    @DefaultMessage("Add New")
    String commonAddNew();
    @DefaultMessage("Add Problem")
    String commonAddProblem();
    @DefaultMessage("Address 1")
    String commonAddress1();
    @DefaultMessage("Address 2")
    String commonAddress2();
    @DefaultMessage("Address Line")
    String commonAddressLine();
    @DefaultMessage("Addresses")
    String commonAddresses();
    @DefaultMessage("All")
    String commonAll();
    @DefaultMessage("All Day")
    String commonAllDay();
    @DefaultMessage("All methods")
    String commonAllMethods();
    @DefaultMessage("All Week")
    String commonAllWeek();
    @DefaultMessage("(allow solicitation?)")
    String commonAllowSolicitation();
    @DefaultMessage("Always Include")
    String commonAlwaysInclude();
    @DefaultMessage("Amount")
    String commonAmount();
    @DefaultMessage("And")
    String commonAnd();
    @DefaultMessage("Any")
    String commonAny();
    @DefaultMessage("Any Order Status")
    String commonAnyOrderStatus();
    @DefaultMessage("Any Order Type")
    String commonAnyOrderType();
    @DefaultMessage("Any return status")
    String commonAnyReturnStatus();
    @DefaultMessage("Any Role Type")
    String commonAnyRoleType();
    @DefaultMessage("Any Channel")
    String commonAnySalesChannel();
    @DefaultMessage("Any Store")
    String commonAnyStore();
    @DefaultMessage("Any Web Site")
    String commonAnyWebSite();
    @DefaultMessage("Apply")
    String commonApply();
    @DefaultMessage("Approved")
    String commonApproved();
    @DefaultMessage("April")
    String commonApril();
    @DefaultMessage("Area")
    String commonArea();
    @DefaultMessage("Area Code")
    String commonAreaCode();
    @DefaultMessage("Associate")
    String commonAssociate();
    @DefaultMessage("Associations")
    String commonAssocs();
    @DefaultMessage("At")
    String commonAt();
    @DefaultMessage("Attention Name")
    String commonAttentionName();
    @DefaultMessage("Attn")
    String commonAttn();
    @DefaultMessage("August")
    String commonAugust();
    @DefaultMessage("Available")
    String commonAvailable();
    @DefaultMessage("Average")
    String commonAverage();
    @DefaultMessage("Back")
    String commonBack();
    @DefaultMessage("Back to")
    String commonBackTo();
    @DefaultMessage("Back To List")
    String commonBackToList();
    @DefaultMessage("Back to Options")
    String commonBackToOptions();
    @DefaultMessage("AccntNr")
    String commonBankAccntNrAbbr();
    @DefaultMessage("Benefit")
    String commonBenefit();
    @DefaultMessage("but")
    String commonBut();
    @DefaultMessage("By")
    String commonBy();
    @DefaultMessage("Cancel")
    String commonCancel();
    @DefaultMessage("Cancel All")
    String commonCancelAll();
    @DefaultMessage("Cancel/Done")
    String commonCancelDone();
    @DefaultMessage("Cancelled")
    String commonCancelled();
    @DefaultMessage("Change")
    String commonChange();
    @DefaultMessage("Charts")
    String commonChart();
    @DefaultMessage("Checked")
    String commonChecked();
    @DefaultMessage("Checking")
    String commonChecking();
    @DefaultMessage("Checkout Without Login")
    String commonCheckoutAnonymous();
    @DefaultMessage("You may checkout without creating an account")
    String commonCheckoutAnonymousMsg();
    @DefaultMessage("Choose Language")
    String commonChooseLanguage();
    @DefaultMessage("City")
    String commonCity();
    @DefaultMessage("Clear")
    String commonClear();
    @DefaultMessage("Clear All")
    String commonClearAll();
    @DefaultMessage("Click Here")
    String commonClickHere();
    @DefaultMessage("Close")
    String commonClose();
    @DefaultMessage("-")
    String commonCloseTab();
    @DefaultMessage("Coming Soon!")
    String commonComingSoon();
    @DefaultMessage("Comment")
    String commonComment();
    @DefaultMessage("Comments")
    String commonComments();
    @DefaultMessage("Completed")
    String commonCompleted();
    @DefaultMessage("Completion Date")
    String commonCompletionDate();
    @DefaultMessage("Configuration")
    String commonConfiguration();
    @DefaultMessage("Confirm")
    String commonConfirm();
    @DefaultMessage("ContactMechId")
    String commonContactMechID();
    @DefaultMessage("Contact Purpose")
    String commonContactPurpose();
    @DefaultMessage("Contact Us")
    String commonContactUs();
    @DefaultMessage("Contacts")
    String commonContacts();
    @DefaultMessage("Content")
    String commonContent();
    @DefaultMessage("Continue")
    String commonContinue();
    @DefaultMessage("Copy")
    String commonCopy();
    @DefaultMessage("Could be Used as")
    String commonCouldBeUsedAs();
    @DefaultMessage("Could be used for")
    String commonCouldBeUsedFor();
    @DefaultMessage("Country")
    String commonCountry();
    @DefaultMessage("County")
    String commonCounty();
    @DefaultMessage("County-City")
    String commonCountyCity();
    @DefaultMessage("Create")
    String commonCreate();
    @DefaultMessage("Create New")
    String commonCreateNew();
    @DefaultMessage("Created")
    String commonCreated();
    @DefaultMessage("Created By")
    String commonCreatedBy();
    @DefaultMessage("Credit")
    String commonCredit();
    @DefaultMessage("Currency")
    String commonCurrency();
    @DefaultMessage("Current")
    String commonCurrent();
    @DefaultMessage("Custom Length")
    String commonCustomLength();
    @DefaultMessage("Customer")
    String commonCustomer();
    @DefaultMessage("Daily")
    String commonDaily();
    @DefaultMessage("Database Problem")
    String commonDatabaseProblem();
    @DefaultMessage("Date")
    String commonDate();
    @DefaultMessage("Date Filter")
    String commonDateFilter();
    @DefaultMessage("Day")
    String commonDay();
    @DefaultMessage("Days")
    String commonDays();
    @DefaultMessage("Debit")
    String commonDebit();
    @DefaultMessage("December")
    String commonDecember();
    @DefaultMessage("Delete")
    String commonDelete();
    @DefaultMessage("Delete All")
    String commonDeleteAll();
    @DefaultMessage("Depth")
    String commonDepth();
    @DefaultMessage("Description")
    String commonDescription();
    @DefaultMessage("Destination")
    String commonDestination();
    @DefaultMessage("Detail")
    String commonDetail();
    @DefaultMessage("Details")
    String commonDetails();
    @DefaultMessage("Digital Product Upload")
    String commonDigitalProductUpload();
    @DefaultMessage("Disabled")
    String commonDisabled();
    @DefaultMessage("Distance")
    String commonDistance();
    @DefaultMessage("Duplicate")
    String commonDuplicate();
    @DefaultMessage("Edit")
    String commonEdit();
    @DefaultMessage("Elements Found")
    String commonElementsFound();
    @DefaultMessage("Email")
    String commonEmail();
    @DefaultMessage("Email Password")
    String commonEmailPassword();
    @DefaultMessage("Email To")
    String commonEmailTo();
    @DefaultMessage("Email Type")
    String commonEmailType();
    @DefaultMessage("Emails")
    String commonEmails();
    @DefaultMessage("")
    String commonEmptyHeader();
    @DefaultMessage("Enabled")
    String commonEnabled();
    @DefaultMessage("End date")
    String commonEndDate();
    @DefaultMessage("End Date/Time")
    String commonEndDateTime();
    @DefaultMessage("Entries")
    String commonEntries();
    @DefaultMessage("Entry")
    String commonEntry();
    @DefaultMessage("The following required fields where found empty")
    String commonErrorMessage1();
    @DefaultMessage("The following errors occurred")
    String commonErrorMessage2();
    @DefaultMessage("The following occurred")
    String commonErrorMessage3();
    @DefaultMessage("EventDate")
    String commonEventDate();
    @DefaultMessage("Exclude")
    String commonExclude();
    @DefaultMessage("Expectation")
    String commonExpectation();
    @DefaultMessage("Expire")
    String commonExpire();
    @DefaultMessage("Expire All")
    String commonExpireAll();
    @DefaultMessage("Expire Date")
    String commonExpireDate();
    @DefaultMessage("Expires")
    String commonExpires();
    @DefaultMessage("Export")
    String commonExport();
    @DefaultMessage("ext")
    String commonExt();
    @DefaultMessage("False")
    String commonFalse();
    @DefaultMessage("February")
    String commonFebruary();
    @DefaultMessage("Female")
    String commonFemale();
    @DefaultMessage("Fields marked with (*) are required.")
    String commonFieldsMarkedAreRequired();
    @DefaultMessage("Filter")
    String commonFilter();
    @DefaultMessage("Bank")
    String commonFinBankName();
    @DefaultMessage("Find")
    String commonFind();
    @DefaultMessage("Find All")
    String commonFindAll();
    @DefaultMessage("Finish Date/Time")
    String commonFinishDate();
    @DefaultMessage("The Following Error Occurred")
    String commonFollowingErrorOccurred();
    @DefaultMessage("The Following Errors Occurred")
    String commonFollowingErrorsOccurred();
    @DefaultMessage("The Following Occurred")
    String commonFollowingOccurred();
    @DefaultMessage("For")
    String commonFor();
    @DefaultMessage("Forgot Your Password")
    String commonForgotYourPassword();
    @DefaultMessage("Format: yyyy-MM-dd")
    String commonFormatDate();
    @DefaultMessage("One of the date fields is incorrect, format must be yyyy-MM-dd HH:mm:ss.SSS")
    String commonFormatDateFieldNotCorrect();
    @DefaultMessage("Format: yyyy-MM-dd HH:mm:ss.SSS")
    String commonFormatDateTime();
    @DefaultMessage("Format: {0}")
    String commonFormatLocalizedDateTime(String localizedFormat);
    @DefaultMessage("Format: HH:mm:ss.SSS")
    String commonFormatTime();
    @DefaultMessage("Found")
    String commonFound();
    @DefaultMessage("Frame Alert")
    String commonFrameAlert1();
    @DefaultMessage("This document is designed to be viewed using the frames feature. If you see this message, you are using a non-frame-capable web client.")
    String commonFrameAlert2();
    @DefaultMessage("Friday")
    String commonFriday();
    @DefaultMessage("From")
    String commonFrom();
    @DefaultMessage("From Address")
    String commonFromAddress();
    @DefaultMessage("From Date")
    String commonFromDate();
    @DefaultMessage("From Date is missing")
    String commonFromDateMissing();
    @DefaultMessage("From Date is not a valid Date-Time.")
    String commonFromDateNotValidDateTime();
    @DefaultMessage("From Date / Thru Date")
    String commonFromDateThruDate();
    @DefaultMessage("From Date &amp; Time")
    String commonFromDateTime();
    @DefaultMessage("Security Error: To run {0} you must have the {0}_{1} or {1}_ADMIN permission")
    String commonGenericPermissionError(String resourceDescription, String mainAction);
    @DefaultMessage("Geo")
    String commonGeo();
    @DefaultMessage("Geos")
    String commonGeos();
    @DefaultMessage("Get Password Hint")
    String commonGetPasswordHint();
    @DefaultMessage("Global")
    String commonGlobal();
    @DefaultMessage("Go!")
    String commonGo();
    @DefaultMessage("Go Back")
    String commonGoBack();
    @DefaultMessage("Go to Page")
    String commonGotoPage();
    @DefaultMessage("Go To Parent")
    String commonGotoParent();
    @DefaultMessage("Group")
    String commonGroup();
    @DefaultMessage("Hardware")
    String commonHardware();
    @DefaultMessage("Height")
    String commonHeight();
    @DefaultMessage("Held")
    String commonHeld();
    @DefaultMessage("Hide Fields")
    String commonHideFields();
    @DefaultMessage("Hour")
    String commonHour();
    @DefaultMessage("Hourly")
    String commonHourly();
    @DefaultMessage("ID")
    String commonId();
    @DefaultMessage("Id Already Exist")
    String commonIdAlreadyExist();
    @DefaultMessage("ID Code")
    String commonIdCode();
    @DefaultMessage("Identifier")
    String commonIdentifier();
    @DefaultMessage("IDs")
    String commonIds();
    @DefaultMessage("In")
    String commonIn();
    @DefaultMessage("In The")
    String commonInThe();
    @DefaultMessage("Include")
    String commonInclude();
    @DefaultMessage("Information")
    String commonInformation();
    @DefaultMessage("Input")
    String commonInput();
    @DefaultMessage("Insert")
    String commonInsert();
    @DefaultMessage("Into")
    String commonInto();
    @DefaultMessage("Introduction Date")
    String commonIntroductionDate();
    @DefaultMessage("is a")
    String commonIsA();
    @DefaultMessage("Is Anonymous")
    String commonIsAnonymous();
    @DefaultMessage("Item")
    String commonItem();
    @DefaultMessage("Items")
    String commonItems();
    @DefaultMessage("January")
    String commonJanuary();
    @DefaultMessage("July")
    String commonJuly();
    @DefaultMessage("June")
    String commonJune();
    @DefaultMessage("Label number")
    String commonLabelNumber();
    @DefaultMessage("Language")
    String commonLanguageTitle();
    @DefaultMessage("Large")
    String commonLarge();
    @DefaultMessage("Last Updated")
    String commonLastUpdated();
    @DefaultMessage("Length")
    String commonLength();
    @DefaultMessage("less than")
    String commonLessThan();
    @DefaultMessage("Line")
    String commonLine();
    @DefaultMessage("Link")
    String commonLink();
    @DefaultMessage("List")
    String commonList();
    @DefaultMessage("List All")
    String commonListAll();
    @DefaultMessage("Login")
    String commonLogin();
    @DefaultMessage("log in here")
    String commonLoginHere();
    @DefaultMessage("Logout")
    String commonLogout();
    @DefaultMessage("Lookup")
    String commonLookup();
    @DefaultMessage("Main")
    String commonMain();
    @DefaultMessage("Male")
    String commonMale();
    @DefaultMessage("Manager")
    String commonManager();
    @DefaultMessage("Many")
    String commonMany();
    @DefaultMessage("March")
    String commonMarch();
    @DefaultMessage("Matched")
    String commonMatched();
    @DefaultMessage("May")
    String commonMay();
    @DefaultMessage("Create")
    String commonMayCreate();
    @DefaultMessage("You may create a new account here")
    String commonMayCreateNewAccountHere();
    @DefaultMessage("Standard Measures")
    String commonMeasure();
    @DefaultMessage("Medium")
    String commonMedium();
    @DefaultMessage("Message")
    String commonMessage();
    @DefaultMessage("Messages")
    String commonMessages();
    @DefaultMessage("Method")
    String commonMethod();
    @DefaultMessage("Minutely")
    String commonMinutely();
    @DefaultMessage("Model")
    String commonModel();
    @DefaultMessage("Modify")
    String commonModify();
    @DefaultMessage("Monday")
    String commonMonday();
    @DefaultMessage("Month")
    String commonMonth();
    @DefaultMessage("Monthly")
    String commonMonthly();
    @DefaultMessage("Months")
    String commonMonths();
    @DefaultMessage("More")
    String commonMore();
    @DefaultMessage("more than")
    String commonMoreThan();
    @DefaultMessage("Mon statut")
    String commonMyStatus();
    @DefaultMessage("N")
    String commonN();
    @DefaultMessage("N/A")
    String commonNA();
    @DefaultMessage("Name")
    String commonName();
    @DefaultMessage("New")
    String commonNew();
    @DefaultMessage("New List Subscription")
    String commonNewListSubscription();
    @DefaultMessage("New Selection")
    String commonNewSelection();
    @DefaultMessage("New User")
    String commonNewUser();
    @DefaultMessage("Next")
    String commonNext();
    @DefaultMessage("No")
    String commonNo();
    @DefaultMessage("No Address")
    String commonNoAddress();
    @DefaultMessage("No contact information on file")
    String commonNoContactInformationOnFile();
    @DefaultMessage("No Contains")
    String commonNoContains();
    @DefaultMessage("No element found")
    String commonNoElementFound();
    @DefaultMessage("No Parent")
    String commonNoParent();
    @DefaultMessage("No tasks currently require your attention.")
    String commonNoTaskAssigned();
    @DefaultMessage("None")
    String commonNone();
    @DefaultMessage("Not")
    String commonNot();
    @DefaultMessage("cannot change without re-creating")
    String commonNotModifRecreat();
    @DefaultMessage("Not Set")
    String commonNotSet();
    @DefaultMessage("Not Shown")
    String commonNotShown();
    @DefaultMessage("Not yet implemented")
    String commonNotYetImplemented();
    @DefaultMessage("Not You")
    String commonNotYou();
    @DefaultMessage("Note")
    String commonNote();
    @DefaultMessage("Notes")
    String commonNotes();
    @DefaultMessage("November")
    String commonNovember();
    @DefaultMessage("Now")
    String commonNow();
    @DefaultMessage("October")
    String commonOctober();
    @DefaultMessage("of")
    String commonOf();
    @DefaultMessage("On")
    String commonOn();
    @DefaultMessage("Only")
    String commonOnly();
    @DefaultMessage("Open in New Window")
    String commonOpenNewWindow();
    @DefaultMessage("open the page in new window")
    String commonOpenPageNewW();
    @DefaultMessage("open page in new window")
    String commonOpenPageNewWindow();
    @DefaultMessage("+")
    String commonOpenTab();
    @DefaultMessage("Options")
    String commonOptions();
    @DefaultMessage("OR")
    String commonOr();
    @DefaultMessage("Order")
    String commonOrder();
    @DefaultMessage("Order By")
    String commonOrderBy();
    @DefaultMessage("Orders")
    String commonOrders();
    @DefaultMessage("Other")
    String commonOther();
    @DefaultMessage("(overrides either of the above selections.)")
    String commonOverridesSelection();
    @DefaultMessage("Page")
    String commonPage();
    @DefaultMessage("Paging Off")
    String commonPagingOff();
    @DefaultMessage("Paging On")
    String commonPagingOn();
    @DefaultMessage("Party Id")
    String commonPartyID();
    @DefaultMessage("Password")
    String commonPassword();
    @DefaultMessage("Perform")
    String commonPerform();
    @DefaultMessage("Permission Error")
    String commonPermissionError();
    @DefaultMessage("Security Error: to run {0} you must have the EXAMPLE_{1} or EXAMPLE_ADMIN permission")
    String commonPermissionErrorMessage(String resourceDescription, String mainAction);
    @DefaultMessage("Permission main-action parameter missing!")
    String commonPermissionMainActionAttributeMissing();
    @DefaultMessage("Permission primaryPermission parameter missing!")
    String commonPermissionPrimaryPermissionMissing();
    @DefaultMessage("Person")
    String commonPerson();
    @DefaultMessage("Posted By")
    String commonPostedBy();
    @DefaultMessage("Posted Date")
    String commonPostedDate();
    @DefaultMessage("Prepared")
    String commonPrepared();
    @DefaultMessage("Previous")
    String commonPrevious();
    @DefaultMessage("Print")
    String commonPrint();
    @DefaultMessage("Printout Date")
    String commonPrintoutDate();
    @DefaultMessage("Priority")
    String commonPriority();
    @DefaultMessage("Processing")
    String commonProcessing();
    @DefaultMessage("Profile")
    String commonProfile();
    @DefaultMessage("Picking in progress")
    String commonProsPrep();
    @DefaultMessage("Receipt in progress")
    String commonProsReci();
    @DefaultMessage("Province")
    String commonProvince();
    @DefaultMessage("Publish")
    String commonPublish();
    @DefaultMessage("Purpose")
    String commonPurpose();
    @DefaultMessage("Qty")
    String commonQty();
    @DefaultMessage("Square meters")
    String commonQtyM2();
    @DefaultMessage("Qualifier")
    String commonQualifier();
    @DefaultMessage("Quantity")
    String commonQuantity();
    @DefaultMessage("Quarter")
    String commonQuarter();
    @DefaultMessage("Query")
    String commonQuery();
    @DefaultMessage("Quick Add")
    String commonQuickAdd();
    @DefaultMessage("Quick Add To Shopping List")
    String commonQuickAddList();
    @DefaultMessage("Rate")
    String commonRate();
    @DefaultMessage("Rates")
    String commonRates();
    @DefaultMessage("Ready")
    String commonReady();
    @DefaultMessage("Receive")
    String commonReceive();
    @DefaultMessage("Received")
    String commonReceived();
    @DefaultMessage("Red")
    String commonRed();
    @DefaultMessage("Reference")
    String commonReference();
    @DefaultMessage("Refine")
    String commonRefine();
    @DefaultMessage("Refresh")
    String commonRefresh();
    @DefaultMessage("Registered User")
    String commonRegistered();
    @DefaultMessage("Rejected")
    String commonRejected();
    @DefaultMessage("1.4-Preview")
    String commonReleaseVersion();
    @DefaultMessage("Released")
    String commonReleased();
    @DefaultMessage("Released/Note")
    String commonReleasedNote();
    @DefaultMessage("Remove")
    String commonRemove();
    @DefaultMessage("Remove Expired")
    String commonRemoveExpired();
    @DefaultMessage("Reports")
    String commonReports();
    @DefaultMessage("Requester")
    String commonRequester();
    @DefaultMessage("Required")
    String commonRequired();
    @DefaultMessage("The Following Required Fields Where Found Empty")
    String commonRequiredFieldsFoundEmpty();
    @DefaultMessage("Reset")
    String commonReset();
    @DefaultMessage("Result of lookup")
    String commonResultLookup();
    @DefaultMessage("Return")
    String commonReturn();
    @DefaultMessage("Return Status")
    String commonReturnStatus();
    @DefaultMessage("Review")
    String commonReview();
    @DefaultMessage("Routing")
    String commonRouting();
    @DefaultMessage("Run")
    String commonRun();
    @DefaultMessage("Saturday")
    String commonSaturday();
    @DefaultMessage("Save")
    String commonSave();
    @DefaultMessage("Savings")
    String commonSavings();
    @DefaultMessage("Search")
    String commonSearch();
    @DefaultMessage("Search Results for")
    String commonSearchResultfor();
    @DefaultMessage("Secondly")
    String commonSecondly();
    @DefaultMessage("Security")
    String commonSecurity();
    @DefaultMessage("Select")
    String commonSelect();
    @DefaultMessage("Select All")
    String commonSelectAll();
    @DefaultMessage("Any")
    String commonSelectAny();
    @DefaultMessage("Select One")
    String commonSelectOne();
    @DefaultMessage("selected")
    String commonSelected();
    @DefaultMessage("Selection")
    String commonSelection();
    @DefaultMessage("Send")
    String commonSend();
    @DefaultMessage("Send Date")
    String commonSendDate();
    @DefaultMessage("send email")
    String commonSendEmail();
    @DefaultMessage("Send per Email")
    String commonSendPerEmail();
    @DefaultMessage("Send Report By Mail")
    String commonSendReportByMail();
    @DefaultMessage("Sent")
    String commonSent();
    @DefaultMessage("September")
    String commonSeptember();
    @DefaultMessage("Sequence")
    String commonSequence();
    @DefaultMessage("Sequence Num")
    String commonSequenceNum();
    @DefaultMessage("Set")
    String commonSet();
    @DefaultMessage("(Will be set to now if empty)")
    String commonSetNowEmpty();
    @DefaultMessage("Show")
    String commonShow();
    @DefaultMessage("Show All")
    String commonShowAll();
    @DefaultMessage("Show all records")
    String commonShowAllRecords();
    @DefaultMessage("Show Lookup Fields")
    String commonShowLookupFields();
    @DefaultMessage("Since")
    String commonSince();
    @DefaultMessage("Small")
    String commonSmall();
    @DefaultMessage("Sorry, you cannot send this page to a friend.  Select rather from a category or an item")
    String commonSorryYouCannotSend();
    @DefaultMessage("Sort Order")
    String commonSortOrder();
    @DefaultMessage("Sorted By")
    String commonSortedBy();
    @DefaultMessage("Specified")
    String commonSpecified();
    @DefaultMessage("Start Date")
    String commonStartDate();
    @DefaultMessage("Start Date/Time")
    String commonStartDateTime();
    @DefaultMessage("State")
    String commonState();
    @DefaultMessage("State/Province")
    String commonStateProvince();
    @DefaultMessage("Stats")
    String commonStats();
    @DefaultMessage("Status")
    String commonStatus();
    @DefaultMessage("Status History")
    String commonStatusHistory();
    @DefaultMessage("Sub Title")
    String commonSubTitle();
    @DefaultMessage("Sub Total")
    String commonSubTotal();
    @DefaultMessage("Submit")
    String commonSubmit();
    @DefaultMessage("Submitted")
    String commonSubmitted();
    @DefaultMessage("Subscribe")
    String commonSubscribe();
    @DefaultMessage("Subtotal")
    String commonSubtotal();
    @DefaultMessage("Sunday")
    String commonSunday();
    @DefaultMessage("Surveys")
    String commonSurveys();
    @DefaultMessage("Simple vue")
    String commonSwitchAllTableViewOff();
    @DefaultMessage("Large vue")
    String commonSwitchAllTableViewOn();
    @DefaultMessage("Tally")
    String commonTally();
    @DefaultMessage("Tel")
    String commonTelephoneAbbr();
    @DefaultMessage("Tell-A-Friend")
    String commonTellAFriend();
    @DefaultMessage("Test")
    String commonTest();
    @DefaultMessage("Text")
    String commonText();
    @DefaultMessage("The following errors occurred")
    String commonTheFollowingErrorsOccurred();
    @DefaultMessage("The following occurred")
    String commonTheFollowingOccurred();
    @DefaultMessage("The Open For Business Project")
    String commonTheOpenForBusinessProject();
    @DefaultMessage("This")
    String commonThis();
    @DefaultMessage("Thru")
    String commonThru();
    @DefaultMessage("Thru Date")
    String commonThruDate();
    @DefaultMessage("Thru Date &amp; Time")
    String commonThruDateTime();
    @DefaultMessage("Thursday")
    String commonThursday();
    @DefaultMessage("Time")
    String commonTime();
    @DefaultMessage("Title")
    String commonTitle();
    @DefaultMessage("Dr.")
    String commonTitleDr();
    @DefaultMessage("Mr.")
    String commonTitleMr();
    @DefaultMessage("Mrs.")
    String commonTitleMrs();
    @DefaultMessage("Ms.")
    String commonTitleMs();
    @DefaultMessage("To")
    String commonTo();
    @DefaultMessage("To Name")
    String commonToName();
    @DefaultMessage("Today")
    String commonToday();
    @DefaultMessage("Toggle")
    String commonToggle();
    @DefaultMessage("Total")
    String commonTotal();
    @DefaultMessage("Total Amount")
    String commonTotalAmount();
    @DefaultMessage("Total Cost")
    String commonTotalCost();
    @DefaultMessage("Total Cost Mult")
    String commonTotalCostMult();
    @DefaultMessage("Cost To Price Mult")
    String commonTotalCostToPriceMult();
    @DefaultMessage("Total Perc Profit")
    String commonTotalPercProfit();
    @DefaultMessage("Total Price")
    String commonTotalPrice();
    @DefaultMessage("Total Profit")
    String commonTotalProfit();
    @DefaultMessage("Total Value")
    String commonTotalValue();
    @DefaultMessage("True")
    String commonTrue();
    @DefaultMessage("Tuesday")
    String commonTuesday();
    @DefaultMessage("Type")
    String commonType();
    @DefaultMessage("Unit Price")
    String commonUnitPrice();
    @DefaultMessage("Unsubscribe")
    String commonUnsubscribe();
    @DefaultMessage("Until")
    String commonUntil();
    @DefaultMessage("UOM")
    String commonUom();
    @DefaultMessage("Abbreviation")
    String commonUomAbbreviation();
    @DefaultMessage("Description")
    String commonUomDescription();
    @DefaultMessage("UOM ID")
    String commonUomUomId();
    @DefaultMessage("Update")
    String commonUpdate();
    @DefaultMessage("Update link")
    String commonUpdateLink();
    @DefaultMessage("Updated")
    String commonUpdated();
    @DefaultMessage("Updated Effective Thru")
    String commonUpdatedEffectiveThru();
    @DefaultMessage("Upload")
    String commonUpload();
    @DefaultMessage("Used")
    String commonUsed();
    @DefaultMessage("Used as")
    String commonUsedAs();
    @DefaultMessage("User/Auto Entered")
    String commonUserAutoEntered();
    @DefaultMessage("User Entered Only")
    String commonUserEnteredOnly();
    @DefaultMessage("Username")
    String commonUsername();
    @DefaultMessage("Valid From Date")
    String commonValidFromDate();
    @DefaultMessage("Valid Thru Date")
    String commonValidThruDate();
    @DefaultMessage("Validate")
    String commonValidate();
    @DefaultMessage("Validity problem")
    String commonValidityProblem();
    @DefaultMessage("Value")
    String commonValue();
    @DefaultMessage("Verify Subscription")
    String commonVerifySubscription();
    @DefaultMessage("View")
    String commonView();
    @DefaultMessage("View Calendar")
    String commonViewCalendar();
    @DefaultMessage("View Request")
    String commonViewRequest();
    @DefaultMessage("Volum")
    String commonVolume();
    @DefaultMessage("Website")
    String commonWebsite();
    @DefaultMessage("Wednesday")
    String commonWednesday();
    @DefaultMessage("Week")
    String commonWeek();
    @DefaultMessage("Weekly")
    String commonWeekly();
    @DefaultMessage("Weight")
    String commonWeight();
    @DefaultMessage("Welcome")
    String commonWelcome();
    @DefaultMessage("Where")
    String commonWhere();
    @DefaultMessage("Width")
    String commonWidth();
    @DefaultMessage("Workflow Activities Assigned to User")
    String commonWorkflowActivityUser();
    @DefaultMessage("Workflow Activities Assigned to User Role")
    String commonWorkflowActivityUserRole();
    @DefaultMessage("Y")
    String commonY();
    @DefaultMessage("Year")
    String commonYear();
    @DefaultMessage("Yearly")
    String commonYearly();
    @DefaultMessage("Yes")
    String commonYes();
    @DefaultMessage("Your email")
    String commonYouremail();
    @DefaultMessage("Zip/Postal Code")
    String commonZipPostalCode();
    @DefaultMessage("Company Name")
    String companyName();
    @DefaultMessage("Contact Id")
    String contactId();
    @DefaultMessage("Contact List")
    String contactList();
    @DefaultMessage("ERROR: Cannot update specified contact info because it does not correspond to the specified party.")
    String contactmechservices_cannot_update_specified_contact_info_not_corresponds();
    @DefaultMessage("ERROR: Could not add purpose to contact mechanism (write failure): {0}.")
    String contactmechservices_could_not_add_purpose_write(String errMessage);
    @DefaultMessage("ERROR: Could not change contact info (id generation failure).")
    String contactmechservices_could_not_change_contact_info_id_generation_failure();
    @DefaultMessage("ERROR: Could not change contact info (read purpose failure): {0}.")
    String contactmechservices_could_not_change_contact_info_read(String errMessage);
    @DefaultMessage("ERROR: Could not change contact info (write failure): {0}.")
    String contactmechservices_could_not_change_contact_info_write(String errMessage);
    @DefaultMessage("ERROR: Could not create contact info (id generation failure).")
    String contactmechservices_could_not_create_contact_info_id_generation_failure();
    @DefaultMessage("Could not create contact info (write failure): {0}.")
    String contactmechservices_could_not_create_contact_info_write(String errMessage);
    @DefaultMessage("Could not create new purpose, a purpose with that type already exists.")
    String contactmechservices_could_not_create_new_purpose_already_exists();
    @DefaultMessage("Could not delete contact info (party contact mech not found).")
    String contactmechservices_could_not_delete_contact_info_no_contact_found();
    @DefaultMessage("Could not delete contact info (read failure): {0}.")
    String contactmechservices_could_not_delete_contact_info_read(String errMessage);
    @DefaultMessage("Could not delete contact info (write failure).")
    String contactmechservices_could_not_delete_contact_info_write();
    @DefaultMessage("Could not delete purpose from contact mechanism (record not found).")
    String contactmechservices_could_not_delete_purpose_from_contact_mechanism_not_found();
    @DefaultMessage("Could not delete purpose from contact mechanism (read failure): {0}.")
    String contactmechservices_could_not_delete_purpose_from_contact_mechanism_read(String errMessage);
    @DefaultMessage("Could not delete purpose from contact mechanism (write failure): {0}.")
    String contactmechservices_could_not_delete_purpose_from_contact_mechanism_write(String errMessage);
    @DefaultMessage("ERROR: Could not find specified contact info (read error).")
    String contactmechservices_could_not_find_specified_contact_info_read();
    @DefaultMessage("Could not update this contact mech as a POSTAL_ADDRESS the specified contact mech is a {0}.")
    String contactmechservices_could_not_update_contact_as_POSTAL_ADDRESS_specified(String contactMechTypeId);
    @DefaultMessage("Could not update this contact mech as a TELECOM_NUMBER the specified contact mech is a {0}.")
    String contactmechservices_could_not_update_contact_as_TELECOM_NUMBER_specified(String contactMechTypeId);
    @DefaultMessage("No changes made, not updating contact mechanism.")
    String contactmechservices_no_changes_made_not_updating();
    @DefaultMessage("This service (createContactMech) should not be used for POSTAL_ADDRESS type ContactMechs, use the createPostalAddress service.")
    String contactmechservices_service_createContactMech_not_be_used_for_POSTAL_ADDRESS();
    @DefaultMessage("This service (createContactMech) should not be used for TELECOM_NUMBER type ContactMechs, use the createTelecomNumber service.")
    String contactmechservices_service_createContactMech_not_be_used_for_TELECOM_NUMBER();
    @DefaultMessage("This service (updateContactMech) should not be used for POSTAL_ADDRESS type ContactMechs, use the updatePostalAddress service.")
    String contactmechservices_service_updateContactMech_not_be_used_for_POSTAL_ADDRESS();
    @DefaultMessage("This service (updateContactMech) should not be used for TELECOM_NUMBER type ContactMechs, use the updateTelecomNumber service.")
    String contactmechservices_service_updateContactMech_not_be_used_for_TELECOM_NUMBER();
    @DefaultMessage("Content")
    String content();
    @DefaultMessage("Html Body")
    String contentHtmlBody();
    @DefaultMessage("Plain Body")
    String contentPlainBody();
    @DefaultMessage("Actual Labor Cost")
    String costComponentType_description_ACTUAL_LABOR_COST();
    @DefaultMessage("Actual Materials Cost")
    String costComponentType_description_ACTUAL_MAT_COST();
    @DefaultMessage("Actual Other Cost")
    String costComponentType_description_ACTUAL_OTHER_COST();
    @DefaultMessage("Actual Route (fixed asset usage) Cost")
    String costComponentType_description_ACTUAL_ROUTE_COST();
    @DefaultMessage("Estimated Standard Labor Cost")
    String costComponentType_description_EST_STD_LABOR_COST();
    @DefaultMessage("Estimated Standard Materials Cost")
    String costComponentType_description_EST_STD_MAT_COST();
    @DefaultMessage("Estimated Standard Other Cost")
    String costComponentType_description_EST_STD_OTHER_COST();
    @DefaultMessage("Estimated Standard Route (fixed asset usage) Cost")
    String costComponentType_description_EST_STD_ROUTE_COST();
    @DefaultMessage("Labor Cost")
    String costComponentType_description_LABOR_COST();
    @DefaultMessage("Materials Cost")
    String costComponentType_description_MAT_COST();
    @DefaultMessage("Other Cost")
    String costComponentType_description_OTHER_COST();
    @DefaultMessage("Route (fixed asset usage) Cost")
    String costComponentType_description_ROUTE_COST();
    @DefaultMessage("Country")
    String country();
    @DefaultMessage("Create Account")
    String createAccount();
    @DefaultMessage("Create Contact")
    String createContact();
    @DefaultMessage("Create Lead")
    String createLead();
    @DefaultMessage("Account")
    String crmAccount();
    @DefaultMessage("This account was deactivated as of")
    String crmAccountDeactivated();
    @DefaultMessage("Account ID")
    String crmAccountId();
    @DefaultMessage("Account Name")
    String crmAccountName();
    @DefaultMessage("Account or Lead Name")
    String crmAccountOrLead();
    @DefaultMessage("Account Shortcuts")
    String crmAccountShortcuts();
    @DefaultMessage("Accounts")
    String crmAccounts();
    @DefaultMessage("Activities")
    String crmActivities();
    @DefaultMessage("All Assigned to Me")
    String crmActivitiesAllAssigned();
    @DefaultMessage("Activities by Team Member")
    String crmActivitiesByTeamMember();
    @DefaultMessage("Owned by Me Only")
    String crmActivitiesOwnedByMe();
    @DefaultMessage("Pending Emails")
    String crmActivitiesPendingEmails();
    @DefaultMessage("Pending Inbound Emails")
    String crmActivitiesPendingInboundEmails();
    @DefaultMessage("Pending Outbound Emails")
    String crmActivitiesPendingOutboundEmails();
    @DefaultMessage("Activity")
    String crmActivity();
    @DefaultMessage("Completion Date")
    String crmActivityActualCompletionDate();
    @DefaultMessage("Started Date")
    String crmActivityActualStartDate();
    @DefaultMessage("Cancelled")
    String crmActivityCancelled();
    @DefaultMessage("Completed")
    String crmActivityCompleted();
    @DefaultMessage("Due Date")
    String crmActivityDueDate();
    @DefaultMessage("Activity Links")
    String crmActivityLinks();
    @DefaultMessage("Activity Name")
    String crmActivityName();
    @DefaultMessage("On Hold")
    String crmActivityOnHold();
    @DefaultMessage("Participants")
    String crmActivityParticipants();
    @DefaultMessage("Scheduled")
    String crmActivityScheduled();
    @DefaultMessage("Scheduled Date")
    String crmActivityScheduledDate();
    @DefaultMessage("Security")
    String crmActivitySecurityScope();
    @DefaultMessage("Start Date")
    String crmActivityStartDate();
    @DefaultMessage("Started")
    String crmActivityStarted();
    @DefaultMessage("Add List")
    String crmAddContactList();
    @DefaultMessage("Add List Members")
    String crmAddContactListParties();
    @DefaultMessage("Add Items")
    String crmAddItems();
    @DefaultMessage("Add Quote")
    String crmAddQuote();
    @DefaultMessage("Add Selected")
    String crmAddSelected();
    @DefaultMessage("Bookmark URL")
    String crmAddUrl();
    @DefaultMessage("Address")
    String crmAddress();
    @DefaultMessage("Address Not Known Yet")
    String crmAddressUnknown();
    @DefaultMessage("Amount already credited")
    String crmAmountAlreadyCredited();
    @DefaultMessage("Amount already refunded")
    String crmAmountAlreadyRefunded();
    @DefaultMessage("Annual Revenue")
    String crmAnnualRevenue();
    @DefaultMessage("Approved orders only")
    String crmApprovedOrdersOnly();
    @DefaultMessage("Assign")
    String crmAssign();
    @DefaultMessage("Assign Team")
    String crmAssignTeam();
    @DefaultMessage("Availability")
    String crmAvailability();
    @DefaultMessage("Available to Add")
    String crmAvailableToAdd();
    @DefaultMessage("Billable Lifetime")
    String crmBillableLifetime();
    @DefaultMessage("Used to set the lifetime of a cookie by the ecommerce application, in seconds")
    String crmBillableLifetimeTip();
    @DefaultMessage("Calculate 3605-R Postage")
    String crmCalculate3605Postage();
    @DefaultMessage("Case")
    String crmCase();
    @DefaultMessage("Case Closed")
    String crmCaseClosed();
    @DefaultMessage("Case History")
    String crmCaseHistory();
    @DefaultMessage("Cases")
    String crmCases();
    @DefaultMessage("Add all Domestic Catalog Requests")
    String crmCatalogRequestAddDomestic();
    @DefaultMessage("Add all Foreign Catalog Requests")
    String crmCatalogRequestAddForeign();
    @DefaultMessage("Catalog Requests")
    String crmCatalogRequests();
    @DefaultMessage("Change Availability")
    String crmChangeAvailability();
    @DefaultMessage("Change Note")
    String crmChangeNote();
    @DefaultMessage("Change Password")
    String crmChangePassword();
    @DefaultMessage("Choose a Variant")
    String crmChooseVariantProduct();
    @DefaultMessage("Clients")
    String crmClients();
    @DefaultMessage("Close Case")
    String crmCloseCase();
    @DefaultMessage("Company Name")
    String crmCompanyName();
    @DefaultMessage("Activities History")
    String crmCompletedActivities();
    @DefaultMessage("Completed Activities")
    String crmCompletedActivitiesList();
    @DefaultMessage("Configure Product")
    String crmConfigureProduct();
    @DefaultMessage("Confirm Merge")
    String crmConfirmMerge();
    @DefaultMessage("Confirm Merge Accounts")
    String crmConfirmMergeAccounts();
    @DefaultMessage("Confirm Merge Contacts")
    String crmConfirmMergeContacts();
    @DefaultMessage("Confirm Merge Leads")
    String crmConfirmMergeLeads();
    @DefaultMessage("Contact")
    String crmContact();
    @DefaultMessage("This contact was deactivated as of")
    String crmContactDeactivated();
    @DefaultMessage("Contact Form")
    String crmContactForm();
    @DefaultMessage("Contact Forms")
    String crmContactForms();
    @DefaultMessage("Contact ID")
    String crmContactId();
    @DefaultMessage("Contact List")
    String crmContactList();
    @DefaultMessage("List Members")
    String crmContactListParties();
    @DefaultMessage("Contact Lists")
    String crmContactLists();
    @DefaultMessage("Contact Name")
    String crmContactName();
    @DefaultMessage("Contact Shortcuts")
    String crmContactShortcuts();
    @DefaultMessage("Contact Type")
    String crmContactType();
    @DefaultMessage("Contacts")
    String crmContacts();
    @DefaultMessage("Contains product ID")
    String crmContainsProductId();
    @DefaultMessage("Bookmarks and Files")
    String crmContentList();
    @DefaultMessage("Convert Lead")
    String crmConvertLead();
    @DefaultMessage("Create Account")
    String crmCreateAccount();
    @DefaultMessage("Create Case")
    String crmCreateCase();
    @DefaultMessage("Request Catalog")
    String crmCreateCatalogRequest();
    @DefaultMessage("Create Contact")
    String crmCreateContact();
    @DefaultMessage("Create Contact List")
    String crmCreateContactList();
    @DefaultMessage("Create Customer for Order")
    String crmCreateCustomerForOrder();
    @DefaultMessage("Create Event")
    String crmCreateEvent();
    @DefaultMessage("Create Forecast")
    String crmCreateForecast();
    @DefaultMessage("Create Lead")
    String crmCreateLead();
    @DefaultMessage("Create Campaign")
    String crmCreateMarketingCampaign();
    @DefaultMessage("Create New")
    String crmCreateNew();
    @DefaultMessage("Create New Customer")
    String crmCreateNewCustomer();
    @DefaultMessage("New Event")
    String crmCreateNewEvent();
    @DefaultMessage("New Task")
    String crmCreateNewTask();
    @DefaultMessage("New Template")
    String crmCreateNewTemplate();
    @DefaultMessage("New Category")
    String crmCreateNewTemplateCategory();
    @DefaultMessage("Create Note")
    String crmCreateNote();
    @DefaultMessage("Create Opportunity")
    String crmCreateOpportunity();
    @DefaultMessage("Create Quote")
    String crmCreateQuote();
    @DefaultMessage("Create Return")
    String crmCreateReturn();
    @DefaultMessage("Create Task")
    String crmCreateTask();
    @DefaultMessage("Create Team")
    String crmCreateTeam();
    @DefaultMessage("Create Tracking Code")
    String crmCreateTrackingCode();
    @DefaultMessage("Customer")
    String crmCustomer();
    @DefaultMessage("Customer Details")
    String crmCustomerDetails();
    @DefaultMessage("Dashboard")
    String crmDashboard();
    @DefaultMessage("Source")
    String crmDataSource();
    @DefaultMessage("Sources")
    String crmDataSources();
    @DefaultMessage("After")
    String crmDateAfter();
    @DefaultMessage("Before")
    String crmDateBefore();
    @DefaultMessage("Deactivate Account")
    String crmDeactivateAccount();
    @DefaultMessage("Deactivate Contact")
    String crmDeactivateContact();
    @DefaultMessage("Deactivate Team")
    String crmDeactivateTeam();
    @DefaultMessage("Delete Email")
    String crmDeleteEmail();
    @DefaultMessage("Department")
    String crmDepartment();
    @DefaultMessage("Destination")
    String crmDestination();
    @DefaultMessage("Drop-Shipped From")
    String crmDropShippedFrom();
    @DefaultMessage("Duplicate Lead")
    String crmDuplicateLead();
    @DefaultMessage("Duration")
    String crmDuration();
    @DefaultMessage("Edit {0}")
    String crmEditContactMechWithPurpose(String contactMechPurposeTypeDescription);
    @DefaultMessage("Edit Order")
    String crmEditOrder();
    @DefaultMessage("Edit Selected Address")
    String crmEditSelectedAddress();
    @DefaultMessage("Add Another Attachment")
    String crmEmailAttachmentAdd();
    @DefaultMessage("Remove Attachment")
    String crmEmailAttachmentRemove();
    @DefaultMessage("Attachments")
    String crmEmailAttachments();
    @DefaultMessage("BCC")
    String crmEmailBCC();
    @DefaultMessage("CC")
    String crmEmailCC();
    @DefaultMessage("This email has been deleted")
    String crmEmailDeleted();
    @DefaultMessage("Fwd:")
    String crmEmailFwd();
    @DefaultMessage("Email for")
    String crmEmailParty();
    @DefaultMessage("{0}{0}{0}------- {1} {2}:{0}")
    String crmEmailQuotedHeader(String lineSeparator, String fromEmail, String wroteLabel);
    @DefaultMessage("&gt;&nbsp;")
    String crmEmailQuotedLinePrefix();
    @DefaultMessage("Re:")
    String crmEmailRe();
    @DefaultMessage("End Date and Time")
    String crmEndDateAndTime();
    @DefaultMessage("Error")
    String crmError();
    @DefaultMessage("Activity with ID [{0}] not found")
    String crmErrorActivityNotFound(String workEffortId);
    @DefaultMessage("An activity must have either an estimated completion date or duration")
    String crmErrorActivityRequiresEstCompletionOrDuration();
    @DefaultMessage("Could not add contact to opportunity:")
    String crmErrorAddContactToOpportunity();
    @DefaultMessage("Failed to add marketing campaign:")
    String crmErrorAddMarketingCampaign();
    @DefaultMessage("Failed to add catalog requests to contact list:")
    String crmErrorAddNewCatalogRequests();
    @DefaultMessage("Failed to add quote:")
    String crmErrorAddQuoteFail();
    @DefaultMessage("That person is already a member of the team.")
    String crmErrorAlreadyMember();
    @DefaultMessage("Failed to assign contact to account:")
    String crmErrorAssignContactToAccountFail();
    @DefaultMessage("Failed to assign relationship:")
    String crmErrorAssignFail();
    @DefaultMessage("Failed automatic merge of party merge candidates:")
    String crmErrorAutoMergePartiesFail();
    @DefaultMessage("Cannot process request.  Auto Request Taker party not defined.")
    String crmErrorAutoReqTakerMissing();
    @DefaultMessage("Case with ID [{0}] not found")
    String crmErrorCaseNotFound(String custRequestId);
    @DefaultMessage("Error completing catalog mailing")
    String crmErrorCompleteCatalogMailing();
    @DefaultMessage("Failed to compute forecast:")
    String crmErrorComputeForecastFail();
    @DefaultMessage("This contact is already associated with the account")
    String crmErrorContactAlreadyAssociatedToAccount();
    @DefaultMessage("Contact list {0} is already associated to this marketing campaign.")
    String crmErrorContactListAlreadyAssociatedToMarketingCampaign(String contactListId);
    @DefaultMessage("Contact list {0} ({1}) is not a postal address list.")
    String crmErrorContactListNotAddress(String contactListName, String contactListId);
    @DefaultMessage("No contact list with ID {0} found")
    String crmErrorContactListNotFound(String contactListId);
    @DefaultMessage("Contact list {0} ({1}) is not a marketing list.")
    String crmErrorContactListNotMarketing(String contactListName, String contactListId);
    @DefaultMessage("Could not find the requested file with contentId [{0}].  Please contact a System Administrator for assistance.")
    String crmErrorContentNotFound(String contentId);
    @DefaultMessage("Failed to convert lead:")
    String crmErrorConvertLeadFail();
    @DefaultMessage("Failed to create account:")
    String crmErrorCreateAccountFail();
    @DefaultMessage("Failed to create activity:")
    String crmErrorCreateActivityFail();
    @DefaultMessage("Unable to create basic contact info:")
    String crmErrorCreateBasicContactInfoFail();
    @DefaultMessage("Failed to create case:")
    String crmErrorCreateCaseFail();
    @DefaultMessage("Must specify an account or contact for the case.")
    String crmErrorCreateCaseFailNoAcctCont();
    @DefaultMessage("Failed to create contact:")
    String crmErrorCreateContactFail();
    @DefaultMessage("Failed to create content:")
    String crmErrorCreateContentFail();
    @DefaultMessage("Failed to create lead:")
    String crmErrorCreateLeadFail();
    @DefaultMessage("Failed to create request:")
    String crmErrorCreateLeadSurveyResponseFail();
    @DefaultMessage("Failed to create opportunity:")
    String crmErrorCreateOpportunityFail();
    @DefaultMessage("Failed to create customer:  Please enter the customer name or company name.")
    String crmErrorCreateOrderPartyRequiredFields();
    @DefaultMessage("Failed to delete lead:")
    String crmErrorDeleteLeadFail();
    @DefaultMessage("Please enter a product ID")
    String crmErrorEnterProductId();
    @DefaultMessage("Failed to find activities:")
    String crmErrorFindActivitiesFail();
    @DefaultMessage("Failed to find party merge candidates:")
    String crmErrorFindPartiesForMergeFail();
    @DefaultMessage("There was an internal error while processing your request.  Please contact a System Administrator for assistance.")
    String crmErrorInternal();
    @DefaultMessage("Invalid forecast or missing internalPartyId for forecast [{0}]")
    String crmErrorInvalidForecast(String salesForecastId);
    @DefaultMessage("Lead {0} not found")
    String crmErrorLeadNotFound(String leadPartyId);
    @DefaultMessage("Lead {0} has not been qualified")
    String crmErrorLeadNotQualified(String leadPartyId);
    @DefaultMessage("Failed to log task:")
    String crmErrorLogTaskFail();
    @DefaultMessage("No association between marketing campaign and contact list with ID {0} found")
    String crmErrorMarketingCampaignContactListNotFound(String campaignListId);
    @DefaultMessage("No marketing campaign with ID {0} found")
    String crmErrorMarketingCampaignNotFound(String marketingCampaignId);
    @DefaultMessage("Failed to merge parties:")
    String crmErrorMergePartiesFail();
    @DefaultMessage("Failed to add product [{0}] to order: {1}")
    String crmErrorModifyCart(String productId, String message);
    @DefaultMessage("New Password is required")
    String crmErrorNewPasswordRequired();
    @DefaultMessage("No parameters for finding activities specified")
    String crmErrorNoParameterForFindActivities();
    @DefaultMessage("Order with orderId {0} was not found")
    String crmErrorOrderNotFound(String orderId);
    @DefaultMessage("This customer is currently not allowed to place additional orders in this store.")
    String crmErrorPartyCannotOrder();
    @DefaultMessage("{0} is not an account or team")
    String crmErrorPartyNotAccountOrTeam(String partyId);
    @DefaultMessage("{0} is not set up as a CRM user.")
    String crmErrorPartyNotCrmUser(String partyId);
    @DefaultMessage("Party with partyId {0} was not found")
    String crmErrorPartyNotFound(String partyId);
    @DefaultMessage("This Party doesn''t exist or is not an Account.")
    String crmErrorPartyNotFoundOrNotAccount();
    @DefaultMessage("You do not have permission to update the password for this user login")
    String crmErrorPasswordUpdatePermission();
    @DefaultMessage("Sorry, you do not have permission to change the activity [{0}] security scope to {1}")
    String crmErrorPermissionActivitySecurityScopeChangeDenied(String workEffortId, String scopeEnumId);
    @DefaultMessage("Sorry, you do not have permission to perform this action.")
    String crmErrorPermissionDenied();
    @DefaultMessage("Sorry, you do not have permission to add party [{0}] to activity [{1}]")
    String crmErrorPermissionNotAllowedToAddPartyToActivity(String partyId, String workEffortId);
    @DefaultMessage("Sorry, you do not have permission to remove party [{0}] from activity [{1}]")
    String crmErrorPermissionNotAllowedToRemovePartyFromActivity(String partyId, String workEffortId);
    @DefaultMessage("Sorry, you do not have permission to update party [{0}] assigned to activity [{1}]")
    String crmErrorPermissionNotAllowedToUpdatePartyAssignedToActivity(String partyId, String workEffortId);
    @DefaultMessage("Sorry, you do not have permission to get invoice PDF.")
    String crmErrorPermissionPrintInvoice();
    @DefaultMessage("Sorry, you do not have permission to create an activity with {0} security scope")
    String crmErrorPermissionToCreateActivityWithThisSecurityScopeDenied(String scopeEnumId);
    @DefaultMessage("Failed to process incoming email:")
    String crmErrorProcessIncomingEmailFail();
    @DefaultMessage("Failed to process incoming email: No valid FROM/TO/CC email addresses found")
    String crmErrorProcessIncomingEmailFailNoAddresses();
    @DefaultMessage("Product Not Found")
    String crmErrorProductNotFound();
    @DefaultMessage("{0} is not configured in {1}")
    String crmErrorPropertyNotConfigured(String propertyName, String fileName);
    @DefaultMessage("Could not find account [{0}].")
    String crmErrorQuickCreateOrderIllegalAccount(String accountPartyId);
    @DefaultMessage("Bad delivery date [{0}].")
    String crmErrorQuickCreateOrderIllegalDate(String shipBeforeDate);
    @DefaultMessage("Order Name is required.")
    String crmErrorQuickCreateOrderMissingName();
    @DefaultMessage("Quote {0} not found")
    String crmErrorQuoteNotFound(String quoteId);
    @DefaultMessage("Failed to reassign relationship:")
    String crmErrorReassignFail();
    @DefaultMessage("Could not remove contact from opportunity:")
    String crmErrorRemoveContactFromOpportunity();
    @DefaultMessage("Failed to remove marketing campaign:")
    String crmErrorRemoveMarketingCampaign();
    @DefaultMessage("Failed to remove quote:")
    String crmErrorRemoveQuoteFail();
    @DefaultMessage("Failed to save email:")
    String crmErrorSaveEmailFail();
    @DefaultMessage("Service crmsfa.sendCrmNotificationEmails failed")
    String crmErrorSendCrmNotificationEmailsFail();
    @DefaultMessage("Failed to save or send email due to missing attachment contentType or fileName")
    String crmErrorSendEmailMissingFileUploadData();
    @DefaultMessage("Failed to send email:")
    String crmErrorSendEmailToFail();
    @DefaultMessage("Failed to send email to marketing campaign:")
    String crmErrorSendEmailToMarketingCampaignFail();
    @DefaultMessage("Failed to send email: unable to retrieve data from DataResource {0}")
    String crmErrorSendEmailUnableToGetDataResource(String dataResourceId);
    @DefaultMessage("The tracking code {0} already exists.")
    String crmErrorTrackingCodeAlreadyUsed(String trackingCode);
    @DefaultMessage("Cannot sort USPS Business Mail. Contact list {0} ({1}) must have at least 300 members.")
    String crmErrorUSPSNotEnoughMembers(String contactListName, String contactListId);
    @DefaultMessage("Failed to update account:")
    String crmErrorUpdateAccountFail();
    @DefaultMessage("Failed to update Communication Event of this Activity")
    String crmErrorUpdateActivityCommEventFail();
    @DefaultMessage("Failed to update activity:")
    String crmErrorUpdateActivityFail();
    @DefaultMessage("Failed to update contact:")
    String crmErrorUpdateContactFail();
    @DefaultMessage("Failed to update content:")
    String crmErrorUpdateContentFail();
    @DefaultMessage("Failed to update lead:")
    String crmErrorUpdateLeadFail();
    @DefaultMessage("Failed to update opportunity:")
    String crmErrorUpdateOpportunityFail();
    @DefaultMessage("Error retrieving DNIS in retrieveTrackingCodeFromFacetPhoneServer service - latestCallData was: {0}")
    String crmErrorVoIPErrorDNISFromFacetPhone(String latestCallData);
    @DefaultMessage("Error retrieving latest call data from FacetPhone server in retrieveLatestCallFromFacetPhoneServer service")
    String crmErrorVoIPErrorLatestCallFromFacetPhone();
    @DefaultMessage("User {0} is not currently on a call - not populating phone number fields")
    String crmErrorVoIPErrorNoCurrentCall(String userLoginId);
    @DefaultMessage("Can''t match DNIS {0} to a tracking code in retrieveTrackingCodeFromFacetPhoneServer service - latestCallData was: {1}")
    String crmErrorVoIPErrorNoDNISMatchTrackingCode(String dnis, String latestCallData);
    @DefaultMessage("Current call for user {0} has no incoming number - not populating phone number fields")
    String crmErrorVoIPErrorNoNumberForCurrentCall(String userLoginId);
    @DefaultMessage("Error retrieving phone number in getCurrentIncomingNumberFromFacetPhoneServer service - latestCallData was: {0}")
    String crmErrorVoIPErrorNumberFromFacetPhone(String latestCallData);
    @DefaultMessage("Error retrieving response from FacetPhone server in retrieveLatestCallFromFacetPhoneServer service")
    String crmErrorVoIPErrorResponseFromFacetPhone();
    @DefaultMessage("Unable to connect to FacetPhone server")
    String crmErrorVoIPUnableToConnectToFacetPhone();
    @DefaultMessage("Unable to find Order while sending confirmation email")
    String crmError_ConfirmationEmailWithoutOrder();
    @DefaultMessage("Unable to find productStore for Order while sending confirmation email")
    String crmError_ConfirmationOrderWithoutProductStore();
    @DefaultMessage("CVV must be 3 or 4 digits.")
    String crmError_InvalidCVV();
    @DefaultMessage("Please enter information in all the required address fields")
    String crmError_MissingAddressFields();
    @DefaultMessage("Billing address line 1 is required.")
    String crmError_MissingBillingAddress1();
    @DefaultMessage("Billing address city is required.")
    String crmError_MissingBillingCity();
    @DefaultMessage("Billing address country is required.")
    String crmError_MissingBillingCountry();
    @DefaultMessage("Billing address zip code is required.")
    String crmError_MissingBillingPostalCode();
    @DefaultMessage("Billing address state is required.")
    String crmError_MissingBillingState();
    @DefaultMessage("Billing address To Name is required.")
    String crmError_MissingBillingToName();
    @DefaultMessage("First name required for new Credit Card.")
    String crmError_MissingCCFirstName();
    @DefaultMessage("Last name required for new Credit Card.")
    String crmError_MissingCCLastName();
    @DefaultMessage("Card type is required.")
    String crmError_MissingCardType();
    @DefaultMessage("Party [{0}] must be an Account, Contact, Lead or Partner.")
    String crmError_MissingClientRole(String partyId);
    @DefaultMessage("Credit card expiration month is required.")
    String crmError_MissingExpMonth();
    @DefaultMessage("Crdit card expiration year is required.")
    String crmError_MissingExpYear();
    @DefaultMessage("First name is required.")
    String crmError_MissingFirstName();
    @DefaultMessage("Last name is required.")
    String crmError_MissingLastName();
    @DefaultMessage("Either a company name or a first and last name are required.")
    String crmError_MissingNames();
    @DefaultMessage("Order [{0}] has no payment preferences.  Not invoicing and capturing it.")
    String crmError_MissingOrderPaymentPreference(String orderId);
    @DefaultMessage("Shipping address line 1 is required.")
    String crmError_MissingShippingAddress1();
    @DefaultMessage("Shipping address city is required.")
    String crmError_MissingShippingCity();
    @DefaultMessage("Shipping address country is required.")
    String crmError_MissingShippingCountry();
    @DefaultMessage("Shipping address zip code is required.")
    String crmError_MissingShippingPostalCode();
    @DefaultMessage("Shipping address state is required.")
    String crmError_MissingShippingState();
    @DefaultMessage("Shipping address To Name is required.")
    String crmError_MissingShippingToName();
    @DefaultMessage("{0} does not have a role defined to create accounts, leads, or contacts.  Please set up one of roles {1} for this user in Party Admin application.")
    String crmError_NoRoleForCreateParty(String userPartyName, String requiredRoleTypes);
    @DefaultMessage("Order [{0}] has no value.  Cannot invoice and capture it.")
    String crmError_OrderHasNoValue(String orderId);
    @DefaultMessage("Skipped product [{0}], because it would require a survey and need to be added separately.")
    String crmError_OrderItemRequiresSurveyInBulkAdd(String productId);
    @DefaultMessage("Esitmated Amount")
    String crmEstimatedAmount();
    @DefaultMessage("Estimated Close Date")
    String crmEstimatedCloseDate();
    @DefaultMessage("Estimated Probability")
    String crmEstimatedProbability();
    @DefaultMessage("Event")
    String crmEvent();
    @DefaultMessage("Exempt")
    String crmExempt();
    @DefaultMessage("External Party")
    String crmExternalParty();
    @DefaultMessage("Find Accounts")
    String crmFindAccounts();
    @DefaultMessage("Find Activities")
    String crmFindActivities();
    @DefaultMessage("Find Cases")
    String crmFindCases();
    @DefaultMessage("Find Clients")
    String crmFindClients();
    @DefaultMessage("Find List Members")
    String crmFindContactListParties();
    @DefaultMessage("Find Contact Lists")
    String crmFindContactLists();
    @DefaultMessage("Find Contacts")
    String crmFindContacts();
    @DefaultMessage("Find Forecasts")
    String crmFindForecasts();
    @DefaultMessage("Find Internal Parties")
    String crmFindInternalParties();
    @DefaultMessage("Find Leads")
    String crmFindLeads();
    @DefaultMessage("Find Campaigns")
    String crmFindMarketingCampaigns();
    @DefaultMessage("Find Opportunities")
    String crmFindOpportunities();
    @DefaultMessage("Find Pink Cards")
    String crmFindPinkCards();
    @DefaultMessage("Find Orders")
    String crmFindOrders();
    @DefaultMessage("Find Available")
    String crmFindPartyContactInfo();
    @DefaultMessage("Find Product")
    String crmFindProduct();
    @DefaultMessage("Find Quotes")
    String crmFindQuotes();
    @DefaultMessage("Find Returns")
    String crmFindReturns();
    @DefaultMessage("Find Shopping List")
    String crmFindShoppingList();
    @DefaultMessage("Find Team Members")
    String crmFindTeamMembers();
    @DefaultMessage("Find Teams")
    String crmFindTeams();
    @DefaultMessage("Finish")
    String crmFinish();
    @DefaultMessage("Finish Time")
    String crmFinishTime();
    @DefaultMessage("First Name (Local)")
    String crmFirstNameLocal();
    @DefaultMessage("Ignore Scheduling Conflicts")
    String crmForceIfConflicts();
    @DefaultMessage("Forecast")
    String crmForecast();
    @DefaultMessage("Best Case Amount")
    String crmForecastBestCaseAmount();
    @DefaultMessage("Forecast Change History")
    String crmForecastChangeHistory();
    @DefaultMessage("Automatically changed with change to opportunity")
    String crmForecastChangeNotePrefix();
    @DefaultMessage("Forecast Time Period is now Past or Closed")
    String crmForecastClosed();
    @DefaultMessage("Closed Amount")
    String crmForecastClosedAmount();
    @DefaultMessage("Enter Quotas")
    String crmForecastEnterQuotas();
    @DefaultMessage("Enter Quotas For")
    String crmForecastEnterQuotasFor();
    @DefaultMessage("Forecast Amount")
    String crmForecastForecastAmount();
    @DefaultMessage("% Quota Closed")
    String crmForecastPercentOfQuotaClosed();
    @DefaultMessage("% Quota Forecast")
    String crmForecastPercentOfQuotaForecast();
    @DefaultMessage("My Forecasts by Quarter")
    String crmForecastQuarters();
    @DefaultMessage("Quota Amount")
    String crmForecastQuotaAmount();
    @DefaultMessage("Sub-Periods")
    String crmForecastSubPeriods();
    @DefaultMessage("Forecast Totals")
    String crmForecastTotals();
    @DefaultMessage("Update Quota")
    String crmForecastUpdateQuota();
    @DefaultMessage("Forecasts")
    String crmForecasts();
    @DefaultMessage("Form Letter Template")
    String crmFormLetterTemplate();
    @DefaultMessage("Form Letter Template Category")
    String crmFormLetterTemplateCategorie();
    @DefaultMessage("Form Letter Template Categories")
    String crmFormLetterTemplateCategories();
    @DefaultMessage("Private Form")
    String crmFormLetterTemplatePrivate();
    @DefaultMessage("Form Letter Templates")
    String crmFormLetterTemplates();
    @DefaultMessage("Form Letters")
    String crmFormLetters();
    @DefaultMessage("Primary Address Attention Name")
    String crmFormTagAttnTo();
    @DefaultMessage("Primary Address City")
    String crmFormTagCity();
    @DefaultMessage("Primary Address Country")
    String crmFormTagCountry();
    @DefaultMessage("Current Date (mm/dd/yyyy)")
    String crmFormTagDate1();
    @DefaultMessage("Current Date (mm-dd-yyyy)")
    String crmFormTagDate2();
    @DefaultMessage("Current Date (yyyy/mm/dd)")
    String crmFormTagDate3();
    @DefaultMessage("Current Date (yyyy-mm-dd)")
    String crmFormTagDate4();
    @DefaultMessage("Current day (Number)")
    String crmFormTagDayNum();
    @DefaultMessage("External Order ID")
    String crmFormTagExternalOrderId();
    @DefaultMessage("Primary Address Line 1")
    String crmFormTagLine1();
    @DefaultMessage("Primary Address Line 2")
    String crmFormTagLine2();
    @DefaultMessage("Current Month (Name)")
    String crmFormTagMonthName();
    @DefaultMessage("Current Month (Number)")
    String crmFormTagMonthNum();
    @DefaultMessage("Order Billing First Name")
    String crmFormTagOrderBillFirstName();
    @DefaultMessage("Order Billing Full Name")
    String crmFormTagOrderBillFullName();
    @DefaultMessage("Order Billing Last Name")
    String crmFormTagOrderBillLastName();
    @DefaultMessage("Order Date")
    String crmFormTagOrderDate();
    @DefaultMessage("Order Grand Total")
    String crmFormTagOrderGrandTotal();
    @DefaultMessage("Order ID")
    String crmFormTagOrderId();
    @DefaultMessage("Order Item: Internal Name")
    String crmFormTagOrderItemIntName();
    @DefaultMessage("Order Item: Name")
    String crmFormTagOrderItemName();
    @DefaultMessage("Order Item: Product ID")
    String crmFormTagOrderItemProdId();
    @DefaultMessage("Order Item: Quantity")
    String crmFormTagOrderItemQty();
    @DefaultMessage("Order Items List")
    String crmFormTagOrderItemsList();
    @DefaultMessage("Order Party ID")
    String crmFormTagOrderPartyId();
    @DefaultMessage("Order Payment Total")
    String crmFormTagOrderPaymentTotal();
    @DefaultMessage("Order Shipping Address Line 1")
    String crmFormTagOrderShipAddress1();
    @DefaultMessage("Order Shipping Address Line 2")
    String crmFormTagOrderShipAddress2();
    @DefaultMessage("Order Shipping City")
    String crmFormTagOrderShipCity();
    @DefaultMessage("Order Shiping Company Name")
    String crmFormTagOrderShipCompanyName();
    @DefaultMessage("Order Shipping Country")
    String crmFormTagOrderShipCountry();
    @DefaultMessage("Order Shipping First Name")
    String crmFormTagOrderShipFirstName();
    @DefaultMessage("Order Shipping Full Name")
    String crmFormTagOrderShipFullName();
    @DefaultMessage("Order Shipping Last Name")
    String crmFormTagOrderShipLastName();
    @DefaultMessage("Order Shipping Phone")
    String crmFormTagOrderShipPhone();
    @DefaultMessage("Order Shipping Postal Code")
    String crmFormTagOrderShipPostalCode();
    @DefaultMessage("Order Shipping State/Province")
    String crmFormTagOrderShipStateProv();
    @DefaultMessage("Order Shipping Total")
    String crmFormTagOrderShipTotal();
    @DefaultMessage("Order Subtotal")
    String crmFormTagOrderSubtotal();
    @DefaultMessage("Order Tax Total")
    String crmFormTagOrderTaxTotal();
    @DefaultMessage("Primary Address Postal Code")
    String crmFormTagPostalCode();
    @DefaultMessage("Shipment Status")
    String crmFormTagShipmentStatus();
    @DefaultMessage("Primary Address State")
    String crmFormTagState();
    @DefaultMessage("Primary Address To Name")
    String crmFormTagTo();
    @DefaultMessage("Current Year (Number)")
    String crmFormTagYearNum();
    @DefaultMessage("From Account")
    String crmFromAccount();
    @DefaultMessage("From Contact")
    String crmFromContact();
    @DefaultMessage("From Lead")
    String crmFromLead();
    @DefaultMessage("Fulfilled")
    String crmFulfilled();
    @DefaultMessage("HTML")
    String crmHTML();
    @DefaultMessage("Important Note")
    String crmImportantNote();
    @DefaultMessage("Inbound")
    String crmInbound();
    @DefaultMessage("Inbound/Outbound")
    String crmInboundOutbound();
    @DefaultMessage("Industry")
    String crmIndustry();
    @DefaultMessage("Initial Account")
    String crmInitialAccount();
    @DefaultMessage("Initial Contact")
    String crmInitialContact();
    @DefaultMessage("Initial Lead")
    String crmInitialLead();
    @DefaultMessage("Initial Stage")
    String crmInitialStage();
    @DefaultMessage("Initial Team")
    String crmInitialTeam();
    @DefaultMessage("Internal Note")
    String crmInternalNote();
    @DefaultMessage("Internal Parties")
    String crmInternalParties();
    @DefaultMessage("Internal Party")
    String crmInternalParty();
    @DefaultMessage("Last Name (Local)")
    String crmLastNameLocal();
    @DefaultMessage("Lead")
    String crmLead();
    @DefaultMessage("Assign Lead")
    String crmLeadAssign();
    @DefaultMessage("Created Lead")
    String crmLeadCreated();
    @DefaultMessage("Lead Has Been Converted")
    String crmLeadHasBeenConverted();
    @DefaultMessage("Lead ID")
    String crmLeadId();
    @DefaultMessage("Leave above blank to create new account")
    String crmLeadLeaveBlankToCreateNewAccount();
    @DefaultMessage("Lead Name")
    String crmLeadName();
    @DefaultMessage("Lead Pipeline")
    String crmLeadPipeline();
    @DefaultMessage("Qualified Lead")
    String crmLeadQualified();
    @DefaultMessage("Converted Lead")
    String crmLeadConverted();
    @DefaultMessage("Dead Lead")
    String crmLeadDead();
    @DefaultMessage("In Progress Lead")
    String crmLeadInProgress();
    @DefaultMessage("New Lead")
    String crmLeadNew();
    @DefaultMessage("Recycled Lead")
    String crmLeadRecycled();
    @DefaultMessage("Leads")
    String crmLeads();
    @DefaultMessage("Local Name")
    String crmLocalName();
    @DefaultMessage("Location")
    String crmLocation();
    @DefaultMessage("Log Call")
    String crmLogCall();
    @DefaultMessage("Log Email")
    String crmLogEmail();
    @DefaultMessage("Log Task")
    String crmLogTask();
    @DefaultMessage("Lookup Cases")
    String crmLookupCases();
    @DefaultMessage("Lookup Accounts, Contacts or Leads")
    String crmLookupInternalParties();
    @DefaultMessage("Lookup Opportunities")
    String crmLookupOpportunities();
    @DefaultMessage("Map It")
    String crmMapIt();
    @DefaultMessage("Mark As Performed")
    String crmMarkAsPerformed();
    @DefaultMessage("Mark Available")
    String crmMarkAvailable();
    @DefaultMessage("Mark Mailing Sent")
    String crmMarkMailingSent();
    @DefaultMessage("Mark Unavailable")
    String crmMarkUnavailable();
    @DefaultMessage("Marketing")
    String crmMarketing();
    @DefaultMessage("Actual Cost")
    String crmMarketingActualCost();
    @DefaultMessage("Budgeted Cost")
    String crmMarketingBudgetedCost();
    @DefaultMessage("Marketing Campaign")
    String crmMarketingCampaign();
    @DefaultMessage("Marketing Campaign Report")
    String crmMarketingCampaignReport();
    @DefaultMessage("Marketing Campaigns")
    String crmMarketingCampaigns();
    @DefaultMessage("Estimated Cost")
    String crmMarketingEstimatedCost();
    @DefaultMessage("Marketing Reports")
    String crmMarketingReports();
    @DefaultMessage("Survey Results")
    String crmMarketingSurveyResults();
    @DefaultMessage("Surveys")
    String crmMarketingSurveys();
    @DefaultMessage("Merge")
    String crmMerge();
    @DefaultMessage("Merge Accounts")
    String crmMergeAccounts();
    @DefaultMessage("Merge Contacts")
    String crmMergeContacts();
    @DefaultMessage("Merge Leads")
    String crmMergeLeads();
    @DefaultMessage("Warning! You are merging the following two parties. Please confirm that this is correct. After the merge, the From party will be deleted.")
    String crmMergePartiesConfirmMessage();
    @DefaultMessage("Modified By")
    String crmModifiedBy();
    @DefaultMessage("My Accounts")
    String crmMyAccounts();
    @DefaultMessage("My Calendar")
    String crmMyCalendar();
    @DefaultMessage("My Cases")
    String crmMyCases();
    @DefaultMessage("My Contacts")
    String crmMyContacts();
    @DefaultMessage("My Home")
    String crmMyHome();
    @DefaultMessage("My Leads")
    String crmMyLeads();
    @DefaultMessage("My Opportunities")
    String crmMyOpportunities();
    @DefaultMessage("My Pink Cards")
    String crmMyPinkCards();
    @DefaultMessage("My Orders")
    String crmMyOrders();
    @DefaultMessage("My Quotes")
    String crmMyQuotes();
    @DefaultMessage("Order {0} {1}")
    String crmNavHistoryOrder(String orderId, String orderName);
    @DefaultMessage("Return {0} from \"{1}\"")
    String crmNavHistoryReturn(String returnId, String customerName);
    @DefaultMessage("New Account")
    String crmNewAccount();
    @DefaultMessage("New Attendee")
    String crmNewAttendee();
    @DefaultMessage("Store Credit for return #{0}")
    String crmNewBillingAccountDescription(String returnId);
    @DefaultMessage("New Case")
    String crmNewCase();
    @DefaultMessage("New Contact")
    String crmNewContact();
    @DefaultMessage("Create New {0}")
    String crmNewContactMechWithPurpose(String contactMechPurposeTypeDescription);
    @DefaultMessage("New Credit Card")
    String crmNewCreditCard();
    @DefaultMessage("New Data Source")
    String crmNewDataSource();
    @DefaultMessage("New Forecast")
    String crmNewForecast();
    @DefaultMessage("New Lead")
    String crmNewLead();
    @DefaultMessage("New Marketing Campaign")
    String crmNewMarketingCampaign();
    @DefaultMessage("New Opportunity")
    String crmNewOpportunity();
    @DefaultMessage("New Team")
    String crmNewTeam();
    @DefaultMessage("New Team Member")
    String crmNewTeamMember();
    @DefaultMessage("Next Step")
    String crmNextStep();
    @DefaultMessage("No templates found")
    String crmNoTemplates();
    @DefaultMessage("Not Exempt")
    String crmNotExempt();
    @DefaultMessage("Notes")
    String crmNotes();
    @DefaultMessage("was added to account")
    String crmNotificationEmail_Account_AddedTo();
    @DefaultMessage("was removed from account")
    String crmNotificationEmail_Account_RemovedFrom();
    @DefaultMessage("is now responsible for account")
    String crmNotificationEmail_Account_ResponsibleFor();
    @DefaultMessage("was added to event")
    String crmNotificationEmail_Event_AddedTo();
    @DefaultMessage("was removed from event")
    String crmNotificationEmail_Event_RemovedFrom();
    @DefaultMessage("is now responsible for lead")
    String crmNotificationEmail_Lead_ResponsibleFor();
    @DefaultMessage("was added to task")
    String crmNotificationEmail_Task_AddedTo();
    @DefaultMessage("was removed from task")
    String crmNotificationEmail_Task_RemovedFrom();
    @DefaultMessage("Number Of Employees")
    String crmNumberOfEmployees();
    @DefaultMessage("Number Of Members")
    String crmNumberOfMembers();
    @DefaultMessage("Number Sorted")
    String crmNumberSorted();
    @DefaultMessage("Open Cases")
    String crmOpenCases();
    @DefaultMessage("Open Orders")
    String crmOpenOrders();
    @DefaultMessage("Opportunities")
    String crmOpportunities();
    @DefaultMessage("Opportunities Proposal")
    String crmOpportunitiesProposal();
    @DefaultMessage("Opportunities Prospect")
    String crmOpportunitiesProspect();
    @DefaultMessage("Opportunities Quoted")
    String crmOpportunitiesQuoted();
    @DefaultMessage("Opportunities by Stage ({0})")
    String crmOpportunitiesbyStage(String currency);
    @DefaultMessage("Opportunity")
    String crmOpportunity();
    @DefaultMessage("Pink Card")
    String crmPinkCard();
    @DefaultMessage("Opportunity Amount")
    String crmOpportunityAmount();
    @DefaultMessage("Opportunity For")
    String crmOpportunityFor();
    @DefaultMessage("Opportunity History")
    String crmOpportunityHistory();
    @DefaultMessage("Opportunity Name")
    String crmOpportunityName();
    @DefaultMessage("Pink Card Name")
    String crmPinkCardName();
    @DefaultMessage("Pink Card Number")
    String crmPinkCardNumber();
    @DefaultMessage("Created Date From")
    String crmPinkCardCreatedDateFrom();
    @DefaultMessage("Created Date To")
    String crmPinkCardCreatedDateTo();
    @DefaultMessage("Created Date")
    String crmPinkCardCreatedDate();
    @DefaultMessage("Exchange Old Car")
    String crmPinkCardExchangeOldCar();
    @DefaultMessage("Back-Ordered")
    String crmOrderBackOrdered();
    @DefaultMessage("Some ship groups do not have a shipping address yet and cannot be shipped.")
    String crmOrderCannotShipUntilShippingAddressSet();
    @DefaultMessage("Carrier")
    String crmOrderCarrier();
    @DefaultMessage("Carrier/Shipment Method")
    String crmOrderCarrierAndShipmentMethod();
    @DefaultMessage("Change Catalog")
    String crmOrderChangeCatalog();
    @DefaultMessage("Are you sure?  Customer information will not be saved.")
    String crmOrderConfirmCustomerNotSaved();
    @DefaultMessage("Related Emails")
    String crmOrderEmails();
    @DefaultMessage("Date Entered")
    String crmOrderEnteredDate();
    @DefaultMessage("Estimated Ship Date")
    String crmOrderEstimatedShipDate();
    @DefaultMessage("Est. Ship Date")
    String crmOrderEstimatedShipDateAbbr();
    @DefaultMessage("Gift")
    String crmOrderIsGift();
    @DefaultMessage("Order Item")
    String crmOrderItem();
    @DefaultMessage("Qty")
    String crmOrderItemQty();
    @DefaultMessage("Manual Refund")
    String crmOrderManualRefund();
    @DefaultMessage("May Split")
    String crmOrderMaySplit();
    @DefaultMessage("Order Name and ID")
    String crmOrderNameID();
    @DefaultMessage("Create New Ship Group")
    String crmOrderNewShipGroup();
    @DefaultMessage("Create New Ship Group from Order {0} Ship Group {1}")
    String crmOrderNewShipGroupForOrder(String orderId, String shipGroupSeqId);
    @DefaultMessage("New Ship Group Quantity")
    String crmOrderNewShipGroupQuantity();
    @DefaultMessage("No related emails")
    String crmOrderNoEmails();
    @DefaultMessage("There are currently no order items.")
    String crmOrderNoItems();
    @DefaultMessage("No shipping account for the selected shipping method.")
    String crmOrderNoShippingAccountForSelectedMethod();
    @DefaultMessage("No Order was found for the given ID.")
    String crmOrderNotFound();
    @DefaultMessage("Order/ShipGroup")
    String crmOrderOrderShipGroup();
    @DefaultMessage("Other Payment Methods")
    String crmOrderOtherPaymentMethods();
    @DefaultMessage("Order Payment Reference Id")
    String crmOrderPaymentPreferenceId();
    @DefaultMessage("Select Payment Method")
    String crmOrderPaymentSettings();
    @DefaultMessage("Please set a customer")
    String crmOrderPleaseSetCustomer();
    @DefaultMessage("Order Promotions")
    String crmOrderPromotions();
    @DefaultMessage("Order Queue")
    String crmOrderQueue();
    @DefaultMessage("Manage Open Orders")
    String crmOrderQueueManageOrders();
    @DefaultMessage("Priority")
    String crmOrderQueuePriority();
    @DefaultMessage("Decrease Priority")
    String crmOrderQueuePriorityDecrease();
    @DefaultMessage("Increase Priority")
    String crmOrderQueuePriorityIncrease();
    @DefaultMessage("Save and Refresh")
    String crmOrderQueueSaveRefresh();
    @DefaultMessage("Remaining Total")
    String crmOrderRemainingTotal();
    @DefaultMessage("Review Order")
    String crmOrderReviewOrder();
    @DefaultMessage("Save Customer and Continue")
    String crmOrderSaveCustomerAndContinue();
    @DefaultMessage("Send New")
    String crmOrderSendNewEmail();
    @DefaultMessage("Set Shipping")
    String crmOrderSetShipping();
    @DefaultMessage("Ship Before Date")
    String crmOrderShipBeforeDate();
    @DefaultMessage("Ship By Date")
    String crmOrderShipByDate();
    @DefaultMessage("Ship Group {0}")
    String crmOrderShipGroupNumber(String shipGroupNumber);
    @DefaultMessage("Ship Group {0} Quantity")
    String crmOrderShipGroupQuantity(String shipGroupSeqId);
    @DefaultMessage("Ship Group {0} to")
    String crmOrderShipGroupTo(String shipGroupSeqId);
    @DefaultMessage("Select Shipping Addresses and Methods")
    String crmOrderShipToSettings();
    @DefaultMessage("Shipping Address and Method")
    String crmOrderShippingAddressAndMethod();
    @DefaultMessage("Shipping Instructions")
    String crmOrderShippingInstructions();
    @DefaultMessage("Shipping Method")
    String crmOrderShippingMethod();
    @DefaultMessage("Split")
    String crmOrderSplit();
    @DefaultMessage("New Ship Group")
    String crmOrderSplitShipGroup();
    @DefaultMessage("Order Summary")
    String crmOrderSummary();
    @DefaultMessage("Billed To Account #")
    String crmOrderThirdPartyAccountNo();
    @DefaultMessage("Billed to Zip Code")
    String crmOrderThirdPartyAccountZip();
    @DefaultMessage("Country")
    String crmOrderThirdPartyCountryCode();
    @DefaultMessage("Postal Code")
    String crmOrderThirdPartyPostalCode();
    @DefaultMessage("Total Payments")
    String crmOrderTotalPayments();
    @DefaultMessage("Update Prices for New Customer?")
    String crmOrderUpdatePricesForNewCustomer();
    @DefaultMessage("Outbound")
    String crmOutbound();
    @DefaultMessage("Ownership")
    String crmOwnership();
    @DefaultMessage("Parent Account")
    String crmParentParty();
    @DefaultMessage("Classification")
    String crmPartyClassification();
    @DefaultMessage("ID")
    String crmPartyId();
    @DefaultMessage("User Login {0} not found for Party {1}")
    String crmParyUserLoginNotFound(String userLoginId, String partyId);
    @DefaultMessage("Password successfully updated")
    String crmPasswordChangeSuccess();
    @DefaultMessage("Passwords are encrypted and cannot be displayed")
    String crmPasswordEncryptedCannotDisplay();
    @DefaultMessage("Payment and Shipping Accounts")
    String crmPaymentAndShippingAccounts();
    @DefaultMessage("Payments received")
    String crmPaymentsReceivedYear();
    @DefaultMessage("Pending")
    String crmPending();
    @DefaultMessage("Pending Activities")
    String crmPendingActivities();
    @DefaultMessage("Pending Returns")
    String crmPendingReturns();
    @DefaultMessage("Period")
    String crmPeriod();
    @DefaultMessage("Person Responsible For")
    String crmPersonResponsibleFor();
    @DefaultMessage("Person to Ask For")
    String crmPhoneAskForName();
    @DefaultMessage("Pickup Phone Number")
    String crmPickupPhoneNumber();
    @DefaultMessage("Please set a shipping address")
    String crmPleaseSetShippingAddress();
    @DefaultMessage("Zip/Postal Code Extension")
    String crmPostalCodeExt();
    @DefaultMessage("Preferred Currency")
    String crmPreferredCurrency();
    @DefaultMessage("Primary Address")
    String crmPrimaryAddress();
    @DefaultMessage("Primary Email")
    String crmPrimaryEmail();
    @DefaultMessage("Primary Phone")
    String crmPrimaryPhone();
    @DefaultMessage("Print Labels")
    String crmPrintLabels();
    @DefaultMessage("Warning")
    String crmProductWarning();
    @DefaultMessage("WARNING!")
    String crmProductWarningConfirmMessage();
    @DefaultMessage("Purpose")
    String crmPurpose();
    @DefaultMessage("Qualify Lead")
    String crmQualifyLead();
    @DefaultMessage("Quota")
    String crmQuota();
    @DefaultMessage("Quotes")
    String crmQuotes();
    @DefaultMessage("Reason")
    String crmReason();
    @DefaultMessage("Reassign")
    String crmReassign();
    @DefaultMessage("Reassign To")
    String crmReassignTo();
    @DefaultMessage("Recalculate")
    String crmRecalculateOrder();
    @DefaultMessage("Recipient Party")
    String crmRecepientParty();
    @DefaultMessage("Related Party")
    String crmRelatedParty();
    @DefaultMessage("1.4-Preview")
    String crmReleaseVersion();
    @DefaultMessage("Remove Selected")
    String crmRemoveSelected();
    @DefaultMessage("Breakdown by BMC zone")
    String crmReportUSPSBMC();
    @DefaultMessage("USPS Business Mail Sorting Details")
    String crmReportUSPSHeader();
    @DefaultMessage("International Mail")
    String crmReportUSPSOther();
    @DefaultMessage("Bulk Mail Sorted by Destination")
    String crmReportUSPSSortResults();
    @DefaultMessage("Breakdown by 3-digit ZIP")
    String crmReportUSPSZip3();
    @DefaultMessage("Breakdown by 5-digit ZIP")
    String crmReportUSPSZip5();
    @DefaultMessage("reserved to")
    String crmReservedTo();
    @DefaultMessage("Carrier/Shipment Method")
    String crmReturnCarrierShipmentMethod();
    @DefaultMessage("Customer will Return Package")
    String crmReturnCustomerWillReturn();
    @DefaultMessage("Estimated Weight")
    String crmReturnEstimatedWeight();
    @DefaultMessage("Return From Customer")
    String crmReturnFromCustomer();
    @DefaultMessage("Schedule Pickup")
    String crmReturnSchedulePickup();
    @DefaultMessage("Return Service")
    String crmReturnService();
    @DefaultMessage("Return Shipment")
    String crmReturnShipment();
    @DefaultMessage("Return Shipment Tracking Code")
    String crmReturnShipmentTrackingCode();
    @DefaultMessage("Returned From")
    String crmReturnedFrom();
    @DefaultMessage("Returned To")
    String crmReturnedTo();
    @DefaultMessage("Returns")
    String crmReturns();
    @DefaultMessage("SIC Code")
    String crmSICCode();
    @DefaultMessage("Sales")
    String crmSales();
    @DefaultMessage("Channel")
    String crmSalesChannel();
    @DefaultMessage("Total of Sales per Year")
    String crmSalesPerYear();
    @DefaultMessage("Sales Rep")
    String crmSalesRep();
    @DefaultMessage("Salutation")
    String crmSalutation();
    @DefaultMessage("Save as Quote")
    String crmSaveAsQuote();
    @DefaultMessage("Save For Later")
    String crmSaveForLater();
    @DefaultMessage("Scheduled Start")
    String crmScheduledDateAndTime();
    @DefaultMessage("Select Items to Return")
    String crmSelectItemsToReturn();
    @DefaultMessage("Select Quarter")
    String crmSelectQuarter();
    @DefaultMessage("Select shipping address")
    String crmSelectShippingAddress();
    @DefaultMessage("Send Email")
    String crmSendEmail();
    @DefaultMessage("Shipping Account")
    String crmShippingAccount();
    @DefaultMessage("Shopping List Details")
    String crmShoppingListDetails();
    @DefaultMessage("Shopping Lists of Client")
    String crmShoppingListOriginator();
    @DefaultMessage("Shopping Lists")
    String crmShoppingLists();
    @DefaultMessage("Shortcuts")
    String crmShortcuts();
    @DefaultMessage("Site Name")
    String crmSiteName();
    @DefaultMessage("Skype Contact")
    String crmSkypeContact();
    @DefaultMessage("Sort USPS Business Mail")
    String crmSortUSPSBusinessMail();
    @DefaultMessage("Stage")
    String crmStage();
    @DefaultMessage("Start")
    String crmStart();
    @DefaultMessage("Start Date and Time")
    String crmStartDateAndTime();
    @DefaultMessage("Start Time")
    String crmStartTime();
    @DefaultMessage("Statements")
    String crmStatements();
    @DefaultMessage("Store")
    String crmStore();
    @DefaultMessage("Store Credit Account")
    String crmStoreCreditAccount();
    @DefaultMessage("This survey does not exist or cannot be found.")
    String crmSurveyDoesNotExist();
    @DefaultMessage("This survey has no questions.")
    String crmSurveyHasNoQuestions();
    @DefaultMessage("Taken By")
    String crmTakenBy();
    @DefaultMessage("Task")
    String crmTask();
    @DefaultMessage("Team")
    String crmTeam();
    @DefaultMessage("My Teams'' Accounts")
    String crmTeamAccounts();
    @DefaultMessage("My Teams'' Calendar")
    String crmTeamCalendar();
    @DefaultMessage("My Teams'' Cases")
    String crmTeamCases();
    @DefaultMessage("My Teams'' Contacts")
    String crmTeamContacts();
    @DefaultMessage("Team Deactivated")
    String crmTeamDeactivated();
    @DefaultMessage("Forecasts for Team Members")
    String crmTeamForecastQuarters();
    @DefaultMessage("Team Member")
    String crmTeamMember();
    @DefaultMessage("Team Members")
    String crmTeamMembers();
    @DefaultMessage("Team Members Assigned To This Account")
    String crmTeamMembersAssignedToAccount();
    @DefaultMessage("My Teams'' Opportunities")
    String crmTeamOpportunities();
    @DefaultMessage("Teams")
    String crmTeams();
    @DefaultMessage("Template")
    String crmTemplate();
    @DefaultMessage("Text")
    String crmText();
    @DefaultMessage("Ticker Symbol")
    String crmTickerSymbol();
    @DefaultMessage("Title")
    String crmTitle();
    @DefaultMessage("To Account")
    String crmToAccount();
    @DefaultMessage("To Contact")
    String crmToContact();
    @DefaultMessage("To Lead")
    String crmToLead();
    @DefaultMessage("Trackable Lifetime")
    String crmTrackableLifetime();
    @DefaultMessage("Used to set the lifetime of a cookie by the ecommerce application, in seconds")
    String crmTrackableLifetimeTip();
    @DefaultMessage("Tracking Code")
    String crmTrackingCode();
    @DefaultMessage("Tracking Code Report")
    String crmTrackingCodeReport();
    @DefaultMessage("Tracking Codes")
    String crmTrackingCodes();
    @DefaultMessage("Transactions Shortcuts")
    String crmTransactionsShortcuts();
    @DefaultMessage("Edit Account")
    String crmUpdateAccount();
    @DefaultMessage("Edit Case")
    String crmUpdateCase();
    @DefaultMessage("Edit Contact")
    String crmUpdateContact();
    @DefaultMessage("Edit Contact List")
    String crmUpdateContactList();
    @DefaultMessage("Edit Content")
    String crmUpdateContent();
    @DefaultMessage("Edit Event")
    String crmUpdateEvent();
    @DefaultMessage("Edit Forecast")
    String crmUpdateForecast();
    @DefaultMessage("Edit Lead")
    String crmUpdateLead();
    @DefaultMessage("Edit Campaign")
    String crmUpdateMarketingCampaign();
    @DefaultMessage("Edit Opportunity")
    String crmUpdateOpportunity();
    @DefaultMessage("Edit Profile")
    String crmUpdateProfile();
    @DefaultMessage("Edit Task")
    String crmUpdateTask();
    @DefaultMessage("Edit Team")
    String crmUpdateTeam();
    @DefaultMessage("Upload File")
    String crmUploadFile();
    @DefaultMessage("URL Address")
    String crmUrlAddress();
    @DefaultMessage("User Login")
    String crmUserLogin();
    @DefaultMessage("User Login Id")
    String crmUserLoginId();
    @DefaultMessage("User Login Information")
    String crmUserLoginInformation();
    @DefaultMessage("Account Details")
    String crmViewAccount();
    @DefaultMessage("Activity Details")
    String crmViewActivity();
    @DefaultMessage("View As Contact")
    String crmViewAsContact();
    @DefaultMessage("View Case")
    String crmViewCase();
    @DefaultMessage("View Contact")
    String crmViewContact();
    @DefaultMessage("View Contact List")
    String crmViewContactList();
    @DefaultMessage("Event Details")
    String crmViewEvent();
    @DefaultMessage("Forecast Details")
    String crmViewForecast();
    @DefaultMessage("View Forecasts")
    String crmViewForecasts();
    @DefaultMessage("View Lead")
    String crmViewLead();
    @DefaultMessage("View Campaign")
    String crmViewMarketingCampaign();
    @DefaultMessage("View Opportunity")
    String crmViewOpportunity();
    @DefaultMessage("View Order")
    String crmViewOrder();
    @DefaultMessage("Return Details")
    String crmViewReturn();
    @DefaultMessage("View Shopping List")
    String crmViewShoppingList();
    @DefaultMessage("Task Details")
    String crmViewTask();
    @DefaultMessage("View Team")
    String crmViewTeam();
    @DefaultMessage("Web Url")
    String crmWebUrl();
    @DefaultMessage("Weight per piece")
    String crmWeightPerPiece();
    @DefaultMessage("Write Email")
    String crmWriteEmail();
    @DefaultMessage("wrote")
    String crmWroteEmail();
    @DefaultMessage("Zip Code")
    String crmZipCode();
    @DefaultMessage("IntelliCRM Login")
    String crmsfaLoginGreeting();
    @DefaultMessage("Party with partyId {0} already has CRM client role {1}, not assigning CRM client role or responsibility")
    String crmsfa_autoAssignParty_CrmRoleExists(String partyId, String crmRoleTypeId);
    @DefaultMessage("Failed to merge party {0} with party {1}:")
    String crmsfa_autoMergePartiesError(String partyIdFrom, String partyIdTo);
    @DefaultMessage("Successfully merged party {0} with party {1}.")
    String crmsfa_autoMergePartiesSuccess(String partyIdFrom, String partyIdTo);
    @DefaultMessage("{0} at {1} and {2} at {3} should be merged because they have the same email addresses")
    String crmsfa_findCrmPartiesForMerge_mergeRationaleEmail(String toPartyName, String toContactMechString, String fromPartyName, String fromContactMechString);
    @DefaultMessage("{0} at {1} and {2} at {3} should be merged because they have similar postal addresses")
    String crmsfa_findCrmPartiesForMerge_mergeRationalePostal(String toPartyName, String toContactMechString, String fromPartyName, String fromContactMechString);
    @DefaultMessage("crmsfa.findCrmPartiesForMerge: Skipping parties {0} and {1} - parties have different names")
    String crmsfa_findCrmPartiesForMerge_skipDueToName(String toPartyName, String fromPartyName);
    @DefaultMessage("crmsfa.findCrmPartiesForMerge: Skipping parties {0} and {1} - parties are not the same type")
    String crmsfa_findCrmPartiesForMerge_skipDueToType(String toPartyName, String fromPartyName);
    @DefaultMessage("Catalog Request fulfillment emails are turned off - not sending fulfillment email for custRequestId {0}")
    String crmsfa_sendCrmNotificationEmailsCatRqTurnedOff(String custRequestId);
    @DefaultMessage("Problem sending notification email to partyId {0} with subject: {1}")
    String crmsfa_sendCrmNotificationEmailsError(String partyId, String subject);
    @DefaultMessage("No primary email address found for partyId {0}")
    String crmsfa_sendCrmNotificationEmailsErrorNoAddress(String partyId);
    @DefaultMessage("Customer Order")
    String customerOrderId();
    @DefaultMessage("Czeck")
    String cz();
    @DefaultMessage("Import Customers")
    String dataImportCustomers();
    @DefaultMessage("Import Inventory")
    String dataImportInventory();
    @DefaultMessage("# Not Processed")
    String dataImportNumberNotProcessed();
    @DefaultMessage("# Processed")
    String dataImportNumberProcessed();
    @DefaultMessage("Order Item Lines")
    String dataImportOrderItemLines();
    @DefaultMessage("Order Header Lines")
    String dataImportOrderLines();
    @DefaultMessage("Import Orders")
    String dataImportOrders();
    @DefaultMessage("Import Products")
    String dataImportProducts();
    @DefaultMessage("Data Source")
    String dataSource();
    @DefaultMessage("Create Data Source")
    String dataSourceCreate();
    @DefaultMessage("Description")
    String dataSourceDataSourceDescription();
    @DefaultMessage("Data Source Id")
    String dataSourceDataSourceId();
    @DefaultMessage("Data Source Type Id")
    String dataSourceDataSourceTypeId();
    @DefaultMessage("No Data Source Found with ID")
    String dataSourceNoDataSourceFoundWithId();
    @DefaultMessage("Data Source Type")
    String dataSourceType();
    @DefaultMessage("Create Data Source Type")
    String dataSourceTypeCreate();
    @DefaultMessage("Description")
    String dataSourceTypeDescription();
    @DefaultMessage("Job Name")
    String dataimportJobName();
    @DefaultMessage("Opentaps DataImport Login")
    String dataimportLoginGreeting();
    @DefaultMessage("Run Import")
    String dataimportRunImport();
    @DefaultMessage("Start Date/Time")
    String dataimportServiceTime();
    @DefaultMessage("Synchronously")
    String dataimportSync();
    @DefaultMessage("German")
    String de();
    @DefaultMessage("Description")
    String description();
    @DefaultMessage("Distinguishing Features")
    String distinguishingFeatures();
    @DefaultMessage("Your account login is:")
    String ecommerceAccountLogin();
    @DefaultMessage("Active")
    String ecommerceActive();
    @DefaultMessage("Add All to Cart")
    String ecommerceAddAlltoCart();
    @DefaultMessage("Add Checked to Cart")
    String ecommerceAddCheckedToCart();
    @DefaultMessage("Add This List And Child List(s) To Cart")
    String ecommerceAddChildListsToCart();
    @DefaultMessage("Add List To Cart")
    String ecommerceAddListToCart();
    @DefaultMessage("Add New Digital Product")
    String ecommerceAddNewDigitalProduct();
    @DefaultMessage("Add response for")
    String ecommerceAddResponseFor();
    @DefaultMessage("Add Selected To List")
    String ecommerceAddSelectedtoList();
    @DefaultMessage("Add to Cart")
    String ecommerceAddtoCart();
    @DefaultMessage("Add To Shopping List")
    String ecommerceAddtoShoppingList();
    @DefaultMessage("Adjustment")
    String ecommerceAdjustment();
    @DefaultMessage("Adjustments")
    String ecommerceAdjustments();
    @DefaultMessage("but will still be included if they are in these categories:")
    String ecommerceAlwaysList();
    @DefaultMessage("Always view cart after adding an item")
    String ecommerceAlwaysViewCartAfterAddingAnItem();
    @DefaultMessage("Anonymous")
    String ecommerceAnonymous();
    @DefaultMessage("Article Information")
    String ecommerceArticleInformation();
    @DefaultMessage("Average Rating")
    String ecommerceAverageRating();
    @DefaultMessage("Bronze")
    String ecommerceBronze();
    @DefaultMessage("Cart has")
    String ecommerceCartHas();
    @DefaultMessage("Cart Item Use in Promotions")
    String ecommerceCartItemUseinPromotions();
    @DefaultMessage("Cart Summary")
    String ecommerceCartSummary();
    @DefaultMessage("Cart Total")
    String ecommerceCartTotal();
    @DefaultMessage("Check Balance")
    String ecommerceCheckBalance();
    @DefaultMessage("Checkout")
    String ecommerceCheckout();
    @DefaultMessage("Quick Checkout")
    String ecommerceCheckoutQuick();
    @DefaultMessage("Child Lists Total Price")
    String ecommerceChildListTotalPrice();
    @DefaultMessage("Child Shopping Lists")
    String ecommerceChildShoppingList();
    @DefaultMessage("Choose Amount")
    String ecommerceChooseAmount();
    @DefaultMessage("Choose Variation")
    String ecommerceChooseVariations();
    @DefaultMessage("Clear Search History")
    String ecommerceClearSearchHistory();
    @DefaultMessage("(Note that your history will automatically be cleared after you leave the site)")
    String ecommerceClearSearchHistoryNote();
    @DefaultMessage("Completed - Thank-you!")
    String ecommerceCompleted();
    @DefaultMessage("Configure")
    String ecommerceConfigure();
    @DefaultMessage("Content for")
    String ecommerceContentFor();
    @DefaultMessage("Content Information")
    String ecommerceContentInformation();
    @DefaultMessage("Content Name")
    String ecommerceContentName();
    @DefaultMessage("Continue Shopping")
    String ecommerceContinueShopping();
    @DefaultMessage("Customer Reviews")
    String ecommerceCustomerReviews();
    @DefaultMessage("Customer Tax ID")
    String ecommerceCustomerTaxID();
    @DefaultMessage("Data Resource Id")
    String ecommerceDataResourceId();
    @DefaultMessage("Details")
    String ecommerceDetailsButton();
    @DefaultMessage("Add From My Files")
    String ecommerceDigitalAddFromMyFiles();
    @DefaultMessage("New Digital Product")
    String ecommerceDigitalNewProduct();
    @DefaultMessage("Digital Product Files")
    String ecommerceDigitalProductFiles();
    @DefaultMessage("Digital Product Purchase History and Commission")
    String ecommerceDigitalProductPurchaseHistoryCommission();
    @DefaultMessage("Download Files for this Product")
    String ecommerceDownloadFilesTitle();
    @DefaultMessage("No Download Files Found")
    String ecommerceDownloadNotFound();
    @DefaultMessage("Download Files Available")
    String ecommerceDownloadsAvailableTitle();
    @DefaultMessage("unless they are in these categories:")
    String ecommerceEcludeCategories();
    @DefaultMessage("Ecommerce")
    String ecommerceEcommerce();
    @DefaultMessage("Empty Body")
    String ecommerceEmptyBody();
    @DefaultMessage("Empty Cart")
    String ecommerceEmptyCart();
    @DefaultMessage("Enter query parameters")
    String ecommerceEnterQueryParameters();
    @DefaultMessage("ERROR: No promotion found with ID")
    String ecommerceErrorNoPromotionFoundWithID();
    @DefaultMessage("Every 3rd")
    String ecommerceEvery3rd();
    @DefaultMessage("Every 6th")
    String ecommerceEvery6th();
    @DefaultMessage("Every 9th")
    String ecommerceEvery9th();
    @DefaultMessage("Every")
    String ecommerceEveryDay();
    @DefaultMessage("Every Other")
    String ecommerceEveryOther();
    @DefaultMessage("Exempt Amount")
    String ecommerceExemptAmount();
    @DefaultMessage("File Manager")
    String ecommerceFileManager();
    @DefaultMessage("has requested we send you this link with the following message:")
    String ecommerceFollowingMessage();
    @DefaultMessage("From Parent Article")
    String ecommerceFromParentArticle();
    @DefaultMessage("From Site:")
    String ecommerceFromSite();
    @DefaultMessage("Gift Amount     :")
    String ecommerceGiftAmount();
    @DefaultMessage("Gift Card from")
    String ecommerceGiftCardFrom();
    @DefaultMessage("The new balance is :")
    String ecommerceGiftCardNewBalance();
    @DefaultMessage("Your order has been flagged to be refunded.")
    String ecommerceGiftCardRefunded();
    @DefaultMessage("Gift Card Reload Process Failed with response code:")
    String ecommerceGiftCardReloadFailed();
    @DefaultMessage("has been reloaded.")
    String ecommerceGiftCardReloaded();
    @DefaultMessage("Gift Wrap All Items")
    String ecommerceGiftWrapAllItems();
    @DefaultMessage("Go To List")
    String ecommerceGoToList();
    @DefaultMessage("Gold")
    String ecommerceGold();
    @DefaultMessage("High to Low")
    String ecommerceHighToLow();
    @DefaultMessage("Image")
    String ecommerceImage();
    @DefaultMessage("Image centered above")
    String ecommerceImageCenteredAbove();
    @DefaultMessage("Image centered above from file")
    String ecommerceImageCenteredAboveFile();
    @DefaultMessage("Image File Name")
    String ecommerceImageFileName();
    @DefaultMessage("Image Information")
    String ecommerceImageInformation();
    @DefaultMessage("Image left, text flows around.")
    String ecommerceImageLeft();
    @DefaultMessage("In response to:")
    String ecommerceInResponseTo();
    @DefaultMessage("or any sub-category")
    String ecommerceIncludeSubCategories();
    @DefaultMessage("Includes")
    String ecommerceIncludes();
    @DefaultMessage("Is a Promotional Item")
    String ecommerceIsAPromotionalItem();
    @DefaultMessage("Is Default")
    String ecommerceIsDefault();
    @DefaultMessage("Item")
    String ecommerceItem();
    @DefaultMessage("Item #")
    String ecommerceItemN();
    @DefaultMessage("Item Total")
    String ecommerceItemTotal();
    @DefaultMessage("Items")
    String ecommerceItems();
    @DefaultMessage("Items from a shopping list; update quantities from list page")
    String ecommerceItemsfromShopingList();
    @DefaultMessage("Last Categories")
    String ecommerceLastCategories();
    @DefaultMessage("Last Content")
    String ecommerceLastContent();
    @DefaultMessage("Last Products")
    String ecommerceLastProducts();
    @DefaultMessage("Last Searches")
    String ecommerceLastSearches();
    @DefaultMessage("Last Viewed")
    String ecommerceLastViewed();
    @DefaultMessage("Length")
    String ecommerceLength();
    @DefaultMessage("Link Cards")
    String ecommerceLinkCards();
    @DefaultMessage("does not belong to you, please try again")
    String ecommerceListDoesNotBelong();
    @DefaultMessage("Shopping List Items")
    String ecommerceListItems();
    @DefaultMessage("This List Items Total Price")
    String ecommerceListItemsTotalPrice();
    @DefaultMessage("List Name")
    String ecommerceListName();
    @DefaultMessage("New List Subscription:")
    String ecommerceListNewSubscription();
    @DefaultMessage("NOTE: When you subscribe to an email contact list you will receive an email with an opt-in verification code and a link to verify your subscription. As an alternative to the link you can enter your opt-in verify code here.")
    String ecommerceListNote();
    @DefaultMessage("List Type")
    String ecommerceListType();
    @DefaultMessage("List View")
    String ecommerceListView();
    @DefaultMessage("(You must be logged in to post)")
    String ecommerceLoggedToPost();
    @DefaultMessage("Long Subject")
    String ecommerceLongSubject();
    @DefaultMessage("lookup:whitepages.com")
    String ecommerceLookupWhitepages();
    @DefaultMessage("http://www.whitepages.com/find_person_results.pl?fid=a&s_n={0}&s_a={1}&c={2}&s={3}&x=29&y=18")
    String ecommerceLookupWhitepagesLink(String addressNum, String addressOther, String postalAddress_city, String postalAddress_stateProvinceGeoId);
    @DefaultMessage("If you ever lose your password, you can request a new one at any time.")
    String ecommerceLosePassword();
    @DefaultMessage("Low to High")
    String ecommerceLowToHigh();
    @DefaultMessage("Loyalty Points")
    String ecommerceLoyaltyPoints();
    @DefaultMessage("Make a booking")
    String ecommerceMakeBooking();
    @DefaultMessage("Sorry, it appears that the specified product ID")
    String ecommerceMessage1();
    @DefaultMessage("does not belong to you.")
    String ecommerceMessage2();
    @DefaultMessage("Select a New Billing Address:")
    String ecommerceMessage3();
    @DefaultMessage("Message list for forum:")
    String ecommerceMessageListForForum();
    @DefaultMessage("Please Select Payment Method")
    String ecommerceMessagePleaseSelectPaymentMethod();
    @DefaultMessage("Please Select Shipping Method")
    String ecommerceMessagePleaseSelectShippingMethod();
    @DefaultMessage("Messages")
    String ecommerceMessages();
    @DefaultMessage("months")
    String ecommerceMonths();
    @DefaultMessage("#")
    String ecommerceNbr();
    @DefaultMessage("Nbr of days")
    String ecommerceNbrOfDays();
    @DefaultMessage("Nbr of persons")
    String ecommerceNbrOfPersons();
    @DefaultMessage("Nbr of Persons")
    String ecommerceNbrPersons();
    @DefaultMessage("Nested content.")
    String ecommerceNestedContent();
    @DefaultMessage("New Credit Card")
    String ecommerceNewCreditCard();
    @DefaultMessage("New EFT Account")
    String ecommerceNewEFTAccount();
    @DefaultMessage("New Shopping List")
    String ecommerceNewShoppingList();
    @DefaultMessage("No Digital Products Found")
    String ecommerceNoDigitalProductsFound();
    @DefaultMessage("You have no files.")
    String ecommerceNoFiles();
    @DefaultMessage("No Gift Wrap")
    String ecommerceNoGiftWrap();
    @DefaultMessage("You have no messages")
    String ecommerceNoMessages();
    @DefaultMessage("No PROMOTION Category found for CATALOG")
    String ecommerceNoPROMOTIONCategory();
    @DefaultMessage("No Parent")
    String ecommerceNoParent();
    @DefaultMessage("There is no ProductStore for this WebSite; Check Settings.")
    String ecommerceNoProductStore();
    @DefaultMessage("No records found")
    String ecommerceNoRecordsFound();
    @DefaultMessage("No shopping lists to select, create a new one")
    String ecommerceNoShoppingListsCreate();
    @DefaultMessage("No subject")
    String ecommerceNoSubject();
    @DefaultMessage("Not Active")
    String ecommerceNotActive();
    @DefaultMessage("Not Completed")
    String ecommerceNotCompleted();
    @DefaultMessage("Not Yet Known")
    String ecommerceNotYetKnown();
    @DefaultMessage("Nothing to choose")
    String ecommerceNothingToChoose();
    @DefaultMessage("Nothing to do here. This must have been a mistake, sorry.")
    String ecommerceNothingToDoHere();
    @DefaultMessage("of Promotion")
    String ecommerceOfPromotion();
    @DefaultMessage("On Sale")
    String ecommerceOnSale();
    @DefaultMessage("order(s) in the last")
    String ecommerceOrderInLast();
    @DefaultMessage("Owning Department")
    String ecommerceOwningDepartment();
    @DefaultMessage("Parent List")
    String ecommerceParentList();
    @DefaultMessage("With the password you set during registration.")
    String ecommercePassword();
    @DefaultMessage("Pieces")
    String ecommercePieces();
    @DefaultMessage("points from")
    String ecommercePointsFrom();
    @DefaultMessage("Post Anonymous")
    String ecommercePostAnonymous();
    @DefaultMessage("Price")
    String ecommercePrice();
    @DefaultMessage("Product")
    String ecommerceProduct();
    @DefaultMessage("Product ID:")
    String ecommerceProductNumber();
    @DefaultMessage("Products For Promotion")
    String ecommerceProductsForPromotion();
    @DefaultMessage("Promotion")
    String ecommercePromotion();
    @DefaultMessage("Categories For Promotion")
    String ecommercePromotionCategories();
    @DefaultMessage("Promotion Details")
    String ecommercePromotionDetails();
    @DefaultMessage("Promotion Information")
    String ecommercePromotionInformation();
    @DefaultMessage("This promotion includes all products in these categories")
    String ecommercePromotionProductsInCategories();
    @DefaultMessage("Promotional items; quantities cannot be modified")
    String ecommercePromotionalItems();
    @DefaultMessage("Promotions Applied")
    String ecommercePromotionsApplied();
    @DefaultMessage("Public")
    String ecommercePublic();
    @DefaultMessage("Quick Add")
    String ecommerceQuickAdd();
    @DefaultMessage("Ranking")
    String ecommerceRanking();
    @DefaultMessage("Rate")
    String ecommerceRate();
    @DefaultMessage("Rating (1-5; 5 being best)")
    String ecommerceRating();
    @DefaultMessage("Ratings")
    String ecommerceRatings();
    @DefaultMessage("Read")
    String ecommerceRead();
    @DefaultMessage("Read Message")
    String ecommerceReadMessage();
    @DefaultMessage("Recalculate Cart")
    String ecommerceRecalculateCart();
    @DefaultMessage("Recurrence")
    String ecommerceRecurrence();
    @DefaultMessage("Refine")
    String ecommerceRefineButton();
    @DefaultMessage("Remove Selected")
    String ecommerceRemoveSelected();
    @DefaultMessage("Replace With Variation")
    String ecommerceReplaceWithVariation();
    @DefaultMessage("Respond")
    String ecommerceRespond();
    @DefaultMessage("Responses:")
    String ecommerceResponses();
    @DefaultMessage("Your return request for the following items:")
    String ecommerceReturnRequest();
    @DefaultMessage("Has been accepted. Your return authorization is #")
    String ecommerceReturnRequestAccepted();
    @DefaultMessage("has been cancelled.")
    String ecommerceReturnRequestCancelled();
    @DefaultMessage("has been received and completed.")
    String ecommerceReturnRequestCompleted();
    @DefaultMessage("Your return request #")
    String ecommerceReturnRequestNb();
    @DefaultMessage("Save")
    String ecommerceSave();
    @DefaultMessage("Search #")
    String ecommerceSearchNumber();
    @DefaultMessage("Select Frequency")
    String ecommerceSelectFrequency();
    @DefaultMessage("Select Interval")
    String ecommerceSelectInterval();
    @DefaultMessage("\"Selected Gift Wrap is not available for all items. The items which are available have been selected, the others remain unchanged.\"")
    String ecommerceSelectedGiftWrap();
    @DefaultMessage("Sent Date")
    String ecommerceSentDate();
    @DefaultMessage("Set Default")
    String ecommerceSetDefault();
    @DefaultMessage("Shopping Cart")
    String ecommerceShoppingCart();
    @DefaultMessage("Shopping Cart is empty")
    String ecommerceShoppingCartEmpty();
    @DefaultMessage("Shopping List Detail")
    String ecommerceShoppingListDetail();
    @DefaultMessage("Your shopping list is empty")
    String ecommerceShoppingListEmpty();
    @DefaultMessage("ERROR: The specified shopping list (with")
    String ecommerceShoppingListError();
    @DefaultMessage("Shopping List Price Totals")
    String ecommerceShoppingListPriceTotals();
    @DefaultMessage("Shopping List Re-Order Info")
    String ecommerceShoppingListReorder();
    @DefaultMessage("Shopping&nbsp;Lists")
    String ecommerceShoppingLists();
    @DefaultMessage("Short Subject")
    String ecommerceShortSubject();
    @DefaultMessage("Newsletter")
    String ecommerceSignUpForContactList();
    @DefaultMessage("If you''re interested in a newsletter enter your email address below and sign up:")
    String ecommerceSignUpForContactListComments();
    @DefaultMessage("If you''re interested in a newsletter then please log in and sign up:")
    String ecommerceSignUpForContactListLogIn();
    @DefaultMessage("Silver")
    String ecommerceSilver();
    @DefaultMessage("Special Offers")
    String ecommerceSpecialOffers();
    @DefaultMessage("Start</br>Date")
    String ecommerceStartDate();
    @DefaultMessage("Startdate")
    String ecommerceStartdate();
    @DefaultMessage("Subject")
    String ecommerceSubject();
    @DefaultMessage("Summary")
    String ecommerceSummary();
    @DefaultMessage("Summary Information")
    String ecommerceSummaryInformation();
    @DefaultMessage("Surveys")
    String ecommerceSurveys();
    @DefaultMessage("Take Survey")
    String ecommerceTakeSurvey();
    @DefaultMessage("Tell-A-Friend")
    String ecommerceTellAFriend();
    @DefaultMessage("Sorry, you cannot send this page to a friend. Please select from either a category or product.")
    String ecommerceTellAFriendSorry();
    @DefaultMessage("Text only")
    String ecommerceTextOnly();
    @DefaultMessage("Thank you for registering with")
    String ecommerceThankForRegistering();
    @DefaultMessage("Thank you")
    String ecommerceThankYou();
    @DefaultMessage("Thread View")
    String ecommerceThreadView();
    @DefaultMessage("to add selected items to a shopping list")
    String ecommerceToAddSelectedItemsToShoppingList();
    @DefaultMessage("to Cart")
    String ecommerceToCart();
    @DefaultMessage("to create a request for quote")
    String ecommerceToOrderCreateCustRequestFromCart();
    @DefaultMessage("Total")
    String ecommerceTotal();
    @DefaultMessage("Total Price")
    String ecommerceTotalPrice();
    @DefaultMessage("Unit Price")
    String ecommerceUnitPrice();
    @DefaultMessage("Unsupported question type")
    String ecommerceUnsupportedQuestionType();
    @DefaultMessage("Update Digital Product")
    String ecommerceUpdateDigitalProduct();
    @DefaultMessage("Update Survey")
    String ecommerceUpdateSurvey();
    @DefaultMessage("Upload New File")
    String ecommerceUploadNewFile();
    @DefaultMessage("Use Email Address")
    String ecommerceUseEmailAddress();
    @DefaultMessage("of Variation To Cart")
    String ecommerceVariationToCart();
    @DefaultMessage("View All")
    String ecommerceViewAll();
    @DefaultMessage("View All Promotions")
    String ecommerceViewAllPromotions();
    @DefaultMessage("View Cart")
    String ecommerceViewCart();
    @DefaultMessage("View List")
    String ecommerceViewList();
    @DefaultMessage("View Received Messages")
    String ecommerceViewReceivedOnly();
    @DefaultMessage("View Sent and Received")
    String ecommerceViewSent();
    @DefaultMessage("You have")
    String ecommerceYouHave();
    @DefaultMessage("You have been sent a")
    String ecommerceYouHaveBeenSent();
    @DefaultMessage("You might also be interested in")
    String ecommerceYouMightAlsoIntrested();
    @DefaultMessage("You Might Like")
    String ecommerceYouMightLike();
    @DefaultMessage("You Must&nbsp;")
    String ecommerceYouMust();
    @DefaultMessage("Your Card Number:")
    String ecommerceYourCardNumber();
    @DefaultMessage("Your gift card :")
    String ecommerceYourGiftCard();
    @DefaultMessage("Your Pin Number :")
    String ecommerceYourPinNumber();
    @DefaultMessage("Your Price")
    String ecommerceYourPrice();
    @DefaultMessage("Your shopping cart is empty")
    String ecommerceYourShoppingCartEmpty();
    @DefaultMessage("Email Address")
    String emailAddress();
    @DefaultMessage("English")
    String en();
    @DefaultMessage("British English")
    String en_GB();
    @DefaultMessage("Commission Timing")
    String enumerationType_description_COMM_TIMING_TERM();
    @DefaultMessage("Warranty Options")
    String enumerationType_description_WARRANTY();
    @DefaultMessage("When customer sales invoice is ready")
    String enumeration_description_COMM_AT_INVOICE();
    @DefaultMessage("When customer payment is confirmed")
    String enumeration_description_COMM_AT_PAYMENT();
    @DefaultMessage("Full Warranty")
    String enumeration_description_WARRANTY_FULL();
    @DefaultMessage("Limited Warranty")
    String enumeration_description_WARRANTY_LIMITED();
    @DefaultMessage("Parts Only")
    String enumeration_description_WARRANTY_PARTS();
    @DefaultMessage("Private")
    String enumeration_description_WES_CONFIDENTIAL();
    @DefaultMessage("Public")
    String enumeration_description_WES_PUBLIC();
    @DefaultMessage("Spanish")
    String es();
    @DefaultMessage("Completion Date")
    String estimatedCompletionDate();
    @DefaultMessage("Example")
    String example();
    @DefaultMessage("Export to Excel")
    String exportToExcel();
    @DefaultMessage("Facility")
    String facility();
    @DefaultMessage("Billing address is the same as the shipping address")
    String facilityBillingAddressSameShipping();
    @DefaultMessage("OFBiz: Facility Manager")
    String facilityCompanyName();
    @DefaultMessage("Delivery order")
    String facilityDeliveryOrder();
    @DefaultMessage("Completion Date")
    String facilityEstimatedShipDate();
    @DefaultMessage("Facility")
    String facilityFacility();
    @DefaultMessage("Management Structure")
    String facilityGroupType_description_MGMT_STRUCTURE();
    @DefaultMessage("Pricing Group")
    String facilityGroupType_description_PRICING_GROUP();
    @DefaultMessage("Inventory")
    String facilityInventory();
    @DefaultMessage("No Facility")
    String facilityNoFacility();
    @DefaultMessage("Use Default: No other shipping methods available.")
    String facilityNoOtherShippingMethods();
    @DefaultMessage("Please ship items I ordered as they become available (you may incur additional shipping charges).")
    String facilityShipAvailable();
    @DefaultMessage("Ship all at once, or ''as available''?")
    String facilityShipOnceOrAvailable();
    @DefaultMessage("Shipment Data")
    String facilityShipmentDatas();
    @DefaultMessage("Shipments")
    String facilityShipments();
    @DefaultMessage("Shipping")
    String facilityShipping();
    @DefaultMessage("Shipping and Handling")
    String facilityShippingAndHandling();
    @DefaultMessage("Special Instructions")
    String facilitySpecialInstructions();
    @DefaultMessage("Building")
    String facilityType_description_BUILDING();
    @DefaultMessage("Call Center")
    String facilityType_description_CALL_CENTER();
    @DefaultMessage("Floor")
    String facilityType_description_FLOOR();
    @DefaultMessage("Office")
    String facilityType_description_OFFICE();
    @DefaultMessage("Plant")
    String facilityType_description_PLANT();
    @DefaultMessage("Retail Store")
    String facilityType_description_RETAIL_STORE();
    @DefaultMessage("Room")
    String facilityType_description_ROOM();
    @DefaultMessage("Warehouse")
    String facilityType_description_WAREHOUSE();
    @DefaultMessage("Please wait until the entire order is ready before shipping.")
    String facilityWaitEntireOrderReady();
    @DefaultMessage("Factoids")
    String factoids();
    @DefaultMessage("Feature Types")
    String featureTypes();
    @DefaultMessage("Payment Term")
    String financialPaymentTerm();
    @DefaultMessage("Select a Payment Method")
    String financialSelectPaymentMethod();
    @DefaultMessage("Financials")
    String financials();
    @DefaultMessage("Account Activities Detail")
    String financialsAccountActivitiesDetail();
    @DefaultMessage("Acctg Trans Id")
    String financialsAcctgTransactionId();
    @DefaultMessage("Activities")
    String financialsActivities();
    @DefaultMessage("Add Existing Account")
    String financialsAddExistingAccount();
    @DefaultMessage("Add Existing Account for")
    String financialsAddExistingAccountFor();
    @DefaultMessage("Add Account Type for")
    String financialsAddGlAccountType();
    @DefaultMessage("Create New Account for")
    String financialsAddNewAccountFor();
    @DefaultMessage("Add Payment Methods for")
    String financialsAddPaymentMethodsFor();
    @DefaultMessage("Add Sub Account")
    String financialsAddSubAccount();
    @DefaultMessage("Add Sub Account for")
    String financialsAddSubAccountFor();
    @DefaultMessage("Adjust Inventory Values")
    String financialsAdjustInventoryValues();
    @DefaultMessage("Adjust Values")
    String financialsAdjustValues();
    @DefaultMessage("Adjustment Amount")
    String financialsAdjustmentAmount();
    @DefaultMessage("Adjustment Type")
    String financialsAdjustmentType();
    @DefaultMessage("Adjustments applied")
    String financialsAdjustmentsApplied();
    @DefaultMessage("Adjustments applied to this invoice")
    String financialsAdjustmentsAppliedToInvoice();
    @DefaultMessage("ADJUSTED")
    String financialsAmountAdjustedCapital();
    @DefaultMessage("Not Fully Applied")
    String financialsAmountNotFullyApplied();
    @DefaultMessage("Outstanding")
    String financialsAmountOutstanding();
    @DefaultMessage("OUTSTANDING")
    String financialsAmountOutstandingCapital();
    @DefaultMessage("PAID")
    String financialsAmountPaidCapital();
    @DefaultMessage("Amount to Apply")
    String financialsAmountToApply();
    @DefaultMessage("Amount to Pay")
    String financialsAmountToPay();
    @DefaultMessage("Analysis")
    String financialsAnalysis();
    @DefaultMessage("Annualized Turnover")
    String financialsAnnualizedInventoryTurnover();
    @DefaultMessage("Financials")
    String financialsApplication();
    @DefaultMessage("Apply payment to GL Account")
    String financialsApplyPaymentToGlAccount();
    @DefaultMessage("Apply payment to invoices")
    String financialsApplyPaymentToInvoice();
    @DefaultMessage("Apply payment for taxes")
    String financialsApplyPaymentToTaxAuth();
    @DefaultMessage("Apply to Customer Credit")
    String financialsApplyToBillingAccount();
    @DefaultMessage("Apply to Invoices")
    String financialsApplyToInvoices();
    @DefaultMessage("Assess Finance Charges")
    String financialsAssessFinanceCharges();
    @DefaultMessage("At a Glance")
    String financialsAtAGlance();
    @DefaultMessage("Payables Average DSO Report")
    String financialsAverageDSOReportPayables();
    @DefaultMessage("Receivables Average DSO Report")
    String financialsAverageDSOReportReceivables();
    @DefaultMessage("Average Inventory")
    String financialsAverageInventoryValue();
    @DefaultMessage("Balance Sheet")
    String financialsBalanceSheet();
    @DefaultMessage("with balances over 5% of total")
    String financialsBalancesByCustomerTitle();
    @DefaultMessage("Beginning Cash Balance")
    String financialsBeginningCashBalance();
    @DefaultMessage("Beginning On")
    String financialsBeginningOn();
    @DefaultMessage("Maximum which can be charged to the credit account in the currency of the organization")
    String financialsBillingAccountAccountLimitTip();
    @DefaultMessage("Paycheck ID is missing")
    String financialsBshErrorPaycheckIdIsMissing();
    @DefaultMessage("Paycheck {0} not found")
    String financialsBshErrorPaycheckNotFound(String paymentId);
    @DefaultMessage("This payment ({0}) is not a paycheck")
    String financialsBshErrorThisPaymentIsNotAPaycheck(String paymentId);
    @DefaultMessage("COD Commission")
    String financialsCODCommission();
    @DefaultMessage("COGS")
    String financialsCOGS();
    @DefaultMessage("Cash Equivalents")
    String financialsCashEquivalents();
    @DefaultMessage("Cash Flow Statement")
    String financialsCashFlowStatement();
    @DefaultMessage("Chart of Accounts for")
    String financialsChartOfAccountsFor();
    @DefaultMessage("Pay Multiple Vendors (Check Run)")
    String financialsCheckRun();
    @DefaultMessage("Checks to be Printed")
    String financialsChecksToPrint();
    @DefaultMessage("Derived from recurring invoice {0}")
    String financialsClonedInvoiceDescription(String invoiceId);
    @DefaultMessage("{0} commission on invoice {1} item {2}")
    String financialsCommissionAdjItemText(String commissionRate, String invoiceItem_invoiceId, String invoiceItem_invoiceItemSeqId);
    @DefaultMessage("Commission Balances")
    String financialsCommissionBalancesReport();
    @DefaultMessage("Commission Invoice")
    String financialsCommissionInvoice();
    @DefaultMessage("{0} commission for {1}")
    String financialsCommissionLineItemText(String commissionRate, String invoiceItem_description);
    @DefaultMessage("Commission Report")
    String financialsCommissionReport();
    @DefaultMessage("Commissions")
    String financialsCommissions();
    @DefaultMessage("Commissions Statement")
    String financialsCommissionsStatement();
    @DefaultMessage("Comparative Balance")
    String financialsComparativeBalance();
    @DefaultMessage("Comparative Balance Sheet")
    String financialsComparativeBalanceSheet();
    @DefaultMessage("Comparative Cash Flow Statement")
    String financialsComparativeCashFlowStatement();
    @DefaultMessage("Comparative Income Statement")
    String financialsComparativeIncomeStatement();
    @DefaultMessage("Compare Date")
    String financialsCompareDate();
    @DefaultMessage("to Date")
    String financialsCompareDateTo();
    @DefaultMessage("Compare Dates")
    String financialsCompareDates();
    @DefaultMessage("to Dates")
    String financialsCompareDatesTo();
    @DefaultMessage("Compare GL Fiscal Type")
    String financialsCompareGlFiscalType();
    @DefaultMessage("Compare Time Period")
    String financialsCompareTimePeriod();
    @DefaultMessage("to Time Period")
    String financialsCompareTimePeriodTo();
    @DefaultMessage("Configuration")
    String financialsConfiguration();
    @DefaultMessage("Configure")
    String financialsConfigure();
    @DefaultMessage("Configure Ledger")
    String financialsConfigureLedger();
    @DefaultMessage("Configure General Ledger Account for")
    String financialsConfigureLedgerAccountFor();
    @DefaultMessage("General Ledger Configuration for")
    String financialsConfigureLedgerConfigurationFor();
    @DefaultMessage("Configure a New Organization")
    String financialsConfigureNewOrganization();
    @DefaultMessage("Configure Organization")
    String financialsConfigureOrganization();
    @DefaultMessage("Warning: Invoice {0} has the same reference number.  Are you sure you want to use this reference number?")
    String financialsConfirmInvoiceRefNumber(String invoiceId);
    @DefaultMessage("Confirm Payments")
    String financialsConfirmPayments();
    @DefaultMessage("Confirm Sent Payments")
    String financialsConfirmSentPayments();
    @DefaultMessage("Costing Method")
    String financialsCostingMethod();
    @DefaultMessage("Create a new Time Period for")
    String financialsCreateANewTimePeriodFor();
    @DefaultMessage("Create Commission Agreement")
    String financialsCreateCommissionAgreement();
    @DefaultMessage("Create Commission Invoice")
    String financialsCreateCommissionInvoice();
    @DefaultMessage("Create Customer Agreement")
    String financialsCreateCustomerAgreement();
    @DefaultMessage("Create Credit Memo")
    String financialsCreateCustomerReturnInvoice();
    @DefaultMessage("Create New Account")
    String financialsCreateNewAccount();
    @DefaultMessage("Create Partner Agreement")
    String financialsCreatePartnerAgreement();
    @DefaultMessage("Create Partner Invoice")
    String financialsCreatePartnerInvoice();
    @DefaultMessage("Create Paycheck")
    String financialsCreatePaycheck();
    @DefaultMessage("Create Vendor Invoice")
    String financialsCreatePurchaseInvoice();
    @DefaultMessage("Quick Transaction")
    String financialsCreateQuickTransaction();
    @DefaultMessage("Create Sales Invoice")
    String financialsCreateSalesInvoice();
    @DefaultMessage("Create Transaction")
    String financialsCreateTransaction();
    @DefaultMessage("Create Transaction Entry")
    String financialsCreateTransactionEntry();
    @DefaultMessage("Credit Account")
    String financialsCreditAccount();
    @DefaultMessage("Credit applied to this invoice")
    String financialsCreditAppliedToInvoice();
    @DefaultMessage("Credit Card Settlements Report")
    String financialsCreditCardReport();
    @DefaultMessage("Credit for Invoice #{0}")
    String financialsCreditForInvoice(String invoiceId);
    @DefaultMessage("Net Credit")
    String financialsCreditNet();
    @DefaultMessage("Credit Total")
    String financialsCreditTotal();
    @DefaultMessage("Credits Issued against this Credit Memo")
    String financialsCreditsIssuedAgainstInvoice();
    @DefaultMessage("Cuml Value")
    String financialsCumulativeValue();
    @DefaultMessage("Customer")
    String financialsCustomer();
    @DefaultMessage("Customer Credit Account")
    String financialsCustomerBillingAccount();
    @DefaultMessage("Credit Account ID")
    String financialsCustomerBillingAccountID();
    @DefaultMessage("New Customer Credit Account")
    String financialsCustomerBillingAccountNew();
    @DefaultMessage("Credit Billing Account Open Orders")
    String financialsCustomerBillingAccountOpenOrders();
    @DefaultMessage("Open Orders Total")
    String financialsCustomerBillingAccountOpenOrdersTotal();
    @DefaultMessage("Credit Account Transactions")
    String financialsCustomerBillingAccountTransactions();
    @DefaultMessage("Customer Credit Accounts")
    String financialsCustomerBillingAccounts();
    @DefaultMessage("Customer Code")
    String financialsCustomerCode();
    @DefaultMessage("Customer Credit Account")
    String financialsCustomerCreditAccount();
    @DefaultMessage("Customer ID")
    String financialsCustomerId();
    @DefaultMessage("Customer Party")
    String financialsCustomerParty();
    @DefaultMessage("Customer Credit Memo")
    String financialsCustomerReturnInvoice();
    @DefaultMessage("Customer Statement")
    String financialsCustomerStatement();
    @DefaultMessage("Calculate Statement by")
    String financialsCustomerStatementDateBasis();
    @DefaultMessage("Customers")
    String financialsCustomers();
    @DefaultMessage("Average DSO")
    String financialsDSOAverage();
    @DefaultMessage("Value Weighted DSO")
    String financialsDSOWeighted();
    @DefaultMessage("Dashboard")
    String financialsDashboard();
    @DefaultMessage("Days Outstanding")
    String financialsDaysOutstanding();
    @DefaultMessage("Deactivate")
    String financialsDeactivate();
    @DefaultMessage("Debit Account")
    String financialsDebitAccount();
    @DefaultMessage("Debit/Credit")
    String financialsDebitCredit();
    @DefaultMessage("Net Debit")
    String financialsDebitNet();
    @DefaultMessage("Debit Total")
    String financialsDebitTotal();
    @DefaultMessage("For demo purposes, select \"Your Company Name Here (Company)\" from the above list")
    String financialsDefaultCompanyForDemo();
    @DefaultMessage("Default Cost")
    String financialsDefaultCost();
    @DefaultMessage("Due Date Before")
    String financialsDueDateBefore();
    @DefaultMessage("Edit Paycheck")
    String financialsEditPaycheck();
    @DefaultMessage("Employees")
    String financialsEmployees();
    @DefaultMessage("Ending Cash Balance")
    String financialsEndingCashBalance();
    @DefaultMessage("Ending On")
    String financialsEndingOn();
    @DefaultMessage("Enter New Rate")
    String financialsEnterNewRate();
    @DefaultMessage("Statement of Equity")
    String financialsEquityStatement();
    @DefaultMessage("Credit Account #{0} has currency {1} but invoice #{2} has currency {3}")
    String financialsErrorBillingAccountCurrencyDifferent(String billingAccountId, String billingAccountCurrency, String invoiceId, String invoiceCurrencyUomId);
    @DefaultMessage("Credit Account {0} not found.")
    String financialsErrorBillingAccountNotFound(String billingAccountId);
    @DefaultMessage("Unable to perform operation, invoice type [{0}] not supported.")
    String financialsErrorInvoiceTypeNotSupported(String invoiceTypeId);
    @DefaultMessage("Party [{0}] is not an internal organization.  No general ledger postings will take place.")
    String financialsErrorNoActiveLedgerForParty(String partyId);
    @DefaultMessage("Unable to perform operation, invoice [{0}] has no value.")
    String financialsErrorNoInvoiceValue(String invoiceId);
    @DefaultMessage("{0} is not configured in {1}")
    String financialsErrorPropertyNotConfigured(String propertyName, String resource);
    @DefaultMessage("Error saving PDF for invoice ID {0} to file {1}")
    String financialsErrorSavingInvoicePDF(String invoiceId, String path);
    @DefaultMessage("Cannot invoice partner.  Either an agreement must be specified or the organization and the partner.")
    String financialsError_AgreementOrPartiesMissing();
    @DefaultMessage("Bad debitCreditFlag [{0}] (was not D or C) in Accounting Transaction Entry with acctgTransId=[{1}] and acctgTransEntrySeqId=[{2}]")
    String financialsError_BadDebitCreditFlag(String debitCreditFlag, String acctgTransId, String acctgTransEntrySeqId);
    @DefaultMessage("Failed to create comparative balance sheet.")
    String financialsError_CannotCreateComparativeBalanceSheet();
    @DefaultMessage("Cannot create a comparative balance sheet for a from date that is after the thru date!")
    String financialsError_CannotCreateComparativeBalanceSheetFromDateAfterThruDate();
    @DefaultMessage("Failed to create comparative cash flow statement.")
    String financialsError_CannotCreateComparativeCashFlowStatement();
    @DefaultMessage("Cannot create a comparative cash flow statement for a from date that is after the thru date!")
    String financialsError_CannotCreateComparativeCashFlowStatementFromDateAfterThruDate();
    @DefaultMessage("Failed to create comparative income statement.")
    String financialsError_CannotCreateComparativeIncomeStatement();
    @DefaultMessage("Cannot create a comparative income statement for a from date that is after the thru date!")
    String financialsError_CannotCreateComparativeIncomeStatementFromDateAfterThruDate();
    @DefaultMessage("Cannot find Payment with Id [{0}]. Please check paymentId and try again.")
    String financialsError_CannotFindPaymentId(String paymentId);
    @DefaultMessage("Transaction with acctgTransId [{0}] is already posted.")
    String financialsError_CannotPostAlreadyPosted(String acctgTransId);
    @DefaultMessage("Transaction [{0}] will not be posted because trial balance fails.  Trial balance is [{1}].")
    String financialsError_CannotPostFailedTrialBalance(String acctgTransId, String trialBalance);
    @DefaultMessage("Not posting GL Accounting Transaction with ID [{0}] because it''s not scheduled to be posted yet.  The scheduled posting date is [{1}]")
    String financialsError_CannotPostScheduledTransaction(String acctgTransId, String scheduledPostingDate);
    @DefaultMessage("There no correct organization party id specified. Invoice [{0}] PDF can not be created.")
    String financialsError_CannotPrintInvoiceWoOrganizationPartyId(String invoiceId);
    @DefaultMessage("Invoice [{0}] cannot be voided because there are payments applied to it already. Please remove payment applications first.")
    String financialsError_CannotVoidInvoiceExistingPayments(String invoiceId);
    @DefaultMessage("Cannot void invoice [{0}].  Invoice must be in [INVOICE_READY] state, it is currently [{1}].")
    String financialsError_CannotVoidInvoiceInvalidStatus(String invoiceId, String statusId);
    @DefaultMessage("Cannot mark invoice as ready.  Customer credit limit exceeded.")
    String financialsError_CreditLimitExceeded();
    @DefaultMessage("No date range or time period was given.")
    String financialsError_DateRangeMissing();
    @DefaultMessage("Both from and thru dates are required.")
    String financialsError_FromOrThruDateMissing();
    @DefaultMessage("The GL Account Class [{0}] is not properly configured.  It is not part of the DEBIT or CREDIT account class trees.")
    String financialsError_GLAccountClassNotConfigured(String glAccountClassId);
    @DefaultMessage("Invalid date {0}")
    String financialsError_IllegalDateFieldFormat(String date);
    @DefaultMessage("Input error in field {0}")
    String financialsError_IllegalDateFormat(String fieldName);
    @DefaultMessage("Payment Id is invalid, Please check paymentId and try again.")
    String financialsError_IllegalPaymentId();
    @DefaultMessage("Required parameter paymentTypeId is invalid. It should be set to RECEIPT or DISBURSEMENT.")
    String financialsError_IllegalPaymentTypeId();
    @DefaultMessage("Invoice [{0}] not found.")
    String financialsError_InvoiceNotFound(String invoiceId);
    @DefaultMessage("Unable to perform operation on Invoice [{0}], status must be [{1}]")
    String financialsError_InvoiceStatusUnsupported(String invoiceId, String requiredStatus);
    @DefaultMessage("Unable to perform operation on Invoice [{0}], invoice type [{1}] not supported.")
    String financialsError_InvoiceTypeNotSupported(String invoiceId, String invoiceTypeId);
    @DefaultMessage("Cannot invoice the selected invoices because there was nothing in them to invoice.")
    String financialsError_NoPartnerSalesInvoiceCreated();
    @DefaultMessage("Could not find a CustomTimePeriod (fiscal period) for the Transaction Date [{0}] (is for Organization Party with ID [{1}])")
    String financialsError_NoTimePeriodsToPost(String transactionDate, String organizationPartyId);
    @DefaultMessage("Please select at least one partner invoice.")
    String financialsError_PartnerInvoicesMissing();
    @DefaultMessage("Tried to apply [{0}] which is greater than the outstanding amount [{1}] of invoice [{2}].")
    String financialsError_PaymentApplicationExceedInvoiceRemainingAmount(String amountApplied, String notAppliedInvoice, String invoiceId);
    @DefaultMessage("Tried to apply [{0}] which is greater than the outstanding amount [{1}] of payment [{2}].")
    String financialsError_PaymentApplicationExceedPaymentRemainingAmount(String amountApplied, String notAppliedPayment, String paymentId);
    @DefaultMessage("Tried to apply [{0}] which is greater than the amount [{1}] of payment [{2}].")
    String financialsError_PaymentApplicationExceedPaymentTotalAmount(String amountApplied, String paymentAmount, String paymentId);
    @DefaultMessage("The amount to apply must be greater than zero.")
    String financialsError_PaymentApplicationMustBePositive();
    @DefaultMessage("Can''t build {0} list. You aren''t able successfully run report.")
    String financialsError_ReportGlActivitySetupNoParameter(String parameter);
    @DefaultMessage("CustomTimePeriod (fiscal period) [{0}] is CLOSED, cannot post to it (is for the Transaction Date [{1}] and Organization Party with ID [{2}])")
    String financialsError_TimePeriodClosedForPosting(String customTimePeriodId, String transactionDate, String organizationPartyId);
    @DefaultMessage("Exchange Rate")
    String financialsExchangeRate();
    @DefaultMessage("Exchange Rates")
    String financialsExchangeRates();
    @DefaultMessage("Update Exchange Rates")
    String financialsExchangeRatesUpdate();
    @DefaultMessage("Finance Charge for Invoice")
    String financialsFinanceChargeForInvoice();
    @DefaultMessage("Finance Charges")
    String financialsFinanceCharges();
    @DefaultMessage("Financials Application")
    String financialsFinancialsApplication();
    @DefaultMessage("Financing Cash Flow")
    String financialsFinancingCashFlowAccounts();
    @DefaultMessage("Find Account Activities Detail")
    String financialsFindAccountActivitiesDetail();
    @DefaultMessage("Find Commission Agreements")
    String financialsFindCommissionAgreements();
    @DefaultMessage("Find Commission Invoices")
    String financialsFindCommissionInvoices();
    @DefaultMessage("Find Customer Agreements")
    String financialsFindCustomerAgreements();
    @DefaultMessage("Find Customer Credit Account")
    String financialsFindCustomerBillingAccount();
    @DefaultMessage("Find Credit Memos")
    String financialsFindCustomerReturnInvoices();
    @DefaultMessage("Find Finance Charges")
    String financialsFindFinanceCharges();
    @DefaultMessage("Find Lockbox Batches")
    String financialsFindLockboxBatches();
    @DefaultMessage("Find Partner Agreements")
    String financialsFindPartnerAgreements();
    @DefaultMessage("Find Partner Invoices")
    String financialsFindPartnerInvoices();
    @DefaultMessage("Find Paycheck")
    String financialsFindPaycheck();
    @DefaultMessage("Find Payment")
    String financialsFindPayment();
    @DefaultMessage("Find Vendor Invoices")
    String financialsFindPurchaseInvoices();
    @DefaultMessage("Find Sales Invoices")
    String financialsFindSalesInvoices();
    @DefaultMessage("Find Transactions")
    String financialsFindTransactions();
    @DefaultMessage("Account Code")
    String financialsGLAccountCode();
    @DefaultMessage("Account Name")
    String financialsGLAccountName();
    @DefaultMessage("Account Type")
    String financialsGlAccountType();
    @DefaultMessage("GL Account Activity Analysis")
    String financialsGlActivityReport();
    @DefaultMessage("GL Account Activity Analysis Report Parameters")
    String financialsGlActivitySetupTitle();
    @DefaultMessage("Grace Period")
    String financialsGracePeriod();
    @DefaultMessage("Gross Amount")
    String financialsGrossAmount();
    @DefaultMessage("Gross Pay")
    String financialsGrossPay();
    @DefaultMessage("Gross Profit")
    String financialsGrossProfit();
    @DefaultMessage("Hide Child Accounts Invoices")
    String financialsHideChildAccountsInvoices();
    @DefaultMessage("Initial Check Number")
    String financialsInitialCheckNumber();
    @DefaultMessage("Initial Posted Balance")
    String financialsInitialPostedBalance();
    @DefaultMessage("Finance Charge")
    String financialsInterestInvoice();
    @DefaultMessage("Interest Rate")
    String financialsInterestRate();
    @DefaultMessage("Ending Inventory")
    String financialsInventoryEnd();
    @DefaultMessage("Beginning Inventory")
    String financialsInventoryStart();
    @DefaultMessage("Turnover")
    String financialsInventoryTurnover();
    @DefaultMessage("Inventory Valuation Report")
    String financialsInventoryValuationReport();
    @DefaultMessage("Inventory Value By Product")
    String financialsInventoryValueByProduct();
    @DefaultMessage("Inventory Value Detail Report")
    String financialsInventoryValueDetail();
    @DefaultMessage("Investing Cash Flow")
    String financialsInvestingCashFlowAccounts();
    @DefaultMessage("Add Term")
    String financialsInvoiceAddTerm();
    @DefaultMessage("Invoice ID")
    String financialsInvoiceId();
    @DefaultMessage("Item No.")
    String financialsInvoiceItemSeqId();
    @DefaultMessage("No credits issued.")
    String financialsInvoiceNoCreditsIssued();
    @DefaultMessage("No adjustments applied to this invoice.")
    String financialsInvoiceNoInvoiceAdjustments();
    @DefaultMessage("No payments apply to this Invoice.")
    String financialsInvoiceNoPaymentApplications();
    @DefaultMessage("Invoice not found")
    String financialsInvoiceNotFound();
    @DefaultMessage("Invoice with ID [{0}] not found")
    String financialsInvoiceNotFoundWithId(String invoiceId);
    @DefaultMessage("Invoice Partners")
    String financialsInvoicePartners();
    @DefaultMessage("Invoice Performed Order Items for Order ID")
    String financialsInvoicePerformedOrderItemsForOrder();
    @DefaultMessage("Invoice Selected Invoices")
    String financialsInvoiceSelectedInvoices();
    @DefaultMessage("Invoice Terms")
    String financialsInvoiceTerms();
    @DefaultMessage("Invoices Total")
    String financialsInvoicesTotal();
    @DefaultMessage("Is Posted")
    String financialsIsPosted();
    @DefaultMessage("Is Taxable?")
    String financialsIsTaxable();
    @DefaultMessage("Issue Checks")
    String financialsIssueChecks();
    @DefaultMessage("Last")
    String financialsLastRecurrenceDate();
    @DefaultMessage("Ledger")
    String financialsLedger();
    @DefaultMessage("Liquidity Snapshot")
    String financialsLiquiditySnapshot();
    @DefaultMessage("Successfully set the amount to apply.")
    String financialsLockboxAmountApplied();
    @DefaultMessage("Successfully removed the amount to apply.")
    String financialsLockboxAmountRemoved();
    @DefaultMessage("Amount to Apply")
    String financialsLockboxAmountToApply();
    @DefaultMessage("Lockbox Batch Detail")
    String financialsLockboxBatchDetail();
    @DefaultMessage("Lockbox Batch Items")
    String financialsLockboxBatchItems();
    @DefaultMessage("Batch #")
    String financialsLockboxBatchNumber();
    @DefaultMessage("Cash Discount")
    String financialsLockboxCashDiscount();
    @DefaultMessage("Cash discount from Lockbox batch [{0}]")
    String financialsLockboxCommentCashDiscount(String batchId);
    @DefaultMessage("Payment generated from Lockbox batch [{0}]")
    String financialsLockboxCommentPayment(String batchId);
    @DefaultMessage("Lockbox File")
    String financialsLockboxFile();
    @DefaultMessage("Find Lockbox")
    String financialsLockboxFind();
    @DefaultMessage("Lockbox Identitifer")
    String financialsLockboxIdentifier();
    @DefaultMessage("ERP Invoice Amount")
    String financialsLockboxInvoiceAmount();
    @DefaultMessage("Original Amount")
    String financialsLockboxOriginalAmount();
    @DefaultMessage("Amount Pending")
    String financialsLockboxPendingAmount();
    @DefaultMessage("Successfully created the user entered application.")
    String financialsLockboxUserApplicationCreated();
    @DefaultMessage("Successfully removed the user entered application.")
    String financialsLockboxUserApplicationRemoved();
    @DefaultMessage("Opentaps Financials Login")
    String financialsLoginGreeting();
    @DefaultMessage("Make Payment")
    String financialsMakePayment();
    @DefaultMessage("Manage Lockbox Batches")
    String financialsManageLockboxBatches();
    @DefaultMessage("Transaction #{0}")
    String financialsNavHistoryAcctgTransaction(String acctgTransId);
    @DefaultMessage("Finance Charges")
    String financialsNavHistoryAssessFinanceCharge();
    @DefaultMessage("Credit Acct #{0} for {1}")
    String financialsNavHistoryBillingAccount(String billingAccountId, String partyName);
    @DefaultMessage("{0} #{1}")
    String financialsNavHistoryInvoice(String invoiceTypeName, String invoiceId);
    @DefaultMessage("Lockbox Batch #{0}")
    String financialsNavHistoryLockboxBatch(String lockboxBatchId);
    @DefaultMessage("{0} #{1}")
    String financialsNavHistoryPayment(String paymentTypeName, String paymentId);
    @DefaultMessage("Net Pay")
    String financialsNetPay();
    @DefaultMessage("Never")
    String financialsNever();
    @DefaultMessage("New Invoice Adjustment")
    String financialsNewInvoiceAdjustment();
    @DefaultMessage("New Invoice Item")
    String financialsNewInvoiceItem();
    @DefaultMessage("New Unit Cost")
    String financialsNewUnitCost();
    @DefaultMessage("Sorry, you do not have permission to perform this action.")
    String financialsNoConfigurationPermission();
    @DefaultMessage("There is no lockbox batch for this ID.")
    String financialsNoLockboxBatchFound();
    @DefaultMessage("There is no item for this batch.")
    String financialsNoLockboxBatchItem();
    @DefaultMessage("Sorry, you do not have permission to view Payables section.")
    String financialsNoPayablesPermission();
    @DefaultMessage("Sorry, you do not have permission to view Payment section.")
    String financialsNoPaymentPermission();
    @DefaultMessage("There is no pending lockbox batch.")
    String financialsNoPendingLockboxBatch();
    @DefaultMessage("Sorry, you do not have permission to view Receivable section.")
    String financialsNoReceivablesPermission();
    @DefaultMessage("Sorry, you do not have permission to view Reports section.")
    String financialsNoReportsPermission();
    @DefaultMessage("Sorry, you do not have permission to view Transaction section.")
    String financialsNoTransactionPermission();
    @DefaultMessage("Number of Invoices")
    String financialsNumberOfInvoices();
    @DefaultMessage("Operating Cash Flow")
    String financialsOperatingCashFlowAccounts();
    @DefaultMessage("Operating Income")
    String financialsOperatingIncome();
    @DefaultMessage("Original Balance")
    String financialsOriginalBalance();
    @DefaultMessage("Outstanding Checks")
    String financialsOutstandingChecks();
    @DefaultMessage("Outstanding Commissions")
    String financialsOutstandingCommissions();
    @DefaultMessage("Outstanding Invoices")
    String financialsOutstandingInvoices();
    @DefaultMessage("Outstanding Paychecks")
    String financialsOutstandingPaychecks();
    @DefaultMessage("Outstandings")
    String financialsOutstandings();
    @DefaultMessage("Override Account")
    String financialsOverrideGlAccount();
    @DefaultMessage("Parent Gl Account")
    String financialsParentGLAccount();
    @DefaultMessage("Adjustment at {0} of Partner Invoiced Amount")
    String financialsPartnerSalesInvoiceAdj(String commissionRate);
    @DefaultMessage("Invoiced at {0} of Partner Invoiced Amount")
    String financialsPartnerSalesInvoiceItem(String commissionRate);
    @DefaultMessage("Party Classification")
    String financialsPartyClassification();
    @DefaultMessage("Past Reconciliations")
    String financialsPastReconciliations();
    @DefaultMessage("Pay Invoice")
    String financialsPayInvoice();
    @DefaultMessage("Pay Tax")
    String financialsPayTax();
    @DefaultMessage("Pay to Party")
    String financialsPayToParty();
    @DefaultMessage("Payables")
    String financialsPayables();
    @DefaultMessage("Accounts Payables Aging")
    String financialsPayablesAgingReport();
    @DefaultMessage("Accounts Payable Balance")
    String financialsPayablesBalance();
    @DefaultMessage("Balances by Vendor")
    String financialsPayablesBalancesReport();
    @DefaultMessage("Make a Payment")
    String financialsPayablesPayment();
    @DefaultMessage("Make a Payment to Party ID")
    String financialsPayablesPaymentToPartyId();
    @DefaultMessage("Vendor Statement")
    String financialsPayablesStatementReport();
    @DefaultMessage("Paycheck")
    String financialsPaycheck();
    @DefaultMessage("Paycheck and Witholdings")
    String financialsPaycheckAndWitholdings();
    @DefaultMessage("Paycheck Expenses")
    String financialsPaycheckExpenses();
    @DefaultMessage("Paycheck Type")
    String financialsPaycheckType();
    @DefaultMessage("Paycheck Witholdings")
    String financialsPaycheckWitholdings();
    @DefaultMessage("Paychecks")
    String financialsPaychecks();
    @DefaultMessage("Paychecks to be Printed")
    String financialsPaychecksToPrint();
    @DefaultMessage("Payment Applications")
    String financialsPaymentApplications();
    @DefaultMessage("Payment Id")
    String financialsPaymentId();
    @DefaultMessage("Payment Method")
    String financialsPaymentMethod();
    @DefaultMessage("Expire")
    String financialsPaymentMethodExpire();
    @DefaultMessage("Payment Methods")
    String financialsPaymentMethods();
    @DefaultMessage("Payment Methods for")
    String financialsPaymentMethodsFor();
    @DefaultMessage("Payment is not from an account")
    String financialsPaymentNotFromAccount();
    @DefaultMessage("Payment Receipts Detail")
    String financialsPaymentReceiptsDetail();
    @DefaultMessage("Ref")
    String financialsPaymentRef();
    @DefaultMessage("Check/Ref Num")
    String financialsPaymentRefNum();
    @DefaultMessage("Cancel Payment")
    String financialsPaymentStatusToCanceled();
    @DefaultMessage("Mark as Confirmed")
    String financialsPaymentStatusToConfirmed();
    @DefaultMessage("Mark as Paid")
    String financialsPaymentStatusToPaid();
    @DefaultMessage("Mark as Printed")
    String financialsPaymentStatusToPrinted();
    @DefaultMessage("Mark as Ready")
    String financialsPaymentStatusToReady();
    @DefaultMessage("Mark as Received")
    String financialsPaymentStatusToReceived();
    @DefaultMessage("Mark as Sent")
    String financialsPaymentStatusToSent();
    @DefaultMessage("Void")
    String financialsPaymentVoidPayment();
    @DefaultMessage("Payments applied to this invoice")
    String financialsPaymentsAppliedToInvoice();
    @DefaultMessage("Payments sent")
    String financialsPaymentsSent();
    @DefaultMessage("Payments to be Confirmed")
    String financialsPaymentsToConfirm();
    @DefaultMessage("Pending Lockbox Batches")
    String financialsPendingLockboxBatches();
    @DefaultMessage("Post Transactions")
    String financialsPostTransactions();
    @DefaultMessage("Posted Balance")
    String financialsPostedBalance();
    @DefaultMessage("Posted Date")
    String financialsPostedDate();
    @DefaultMessage("Pretax Income")
    String financialsPretaxIncome();
    @DefaultMessage("Previous Finance Charges")
    String financialsPreviousFinanceCharges();
    @DefaultMessage("Print Checks")
    String financialsPrintChecks();
    @DefaultMessage("Print Checks for")
    String financialsPrintChecksFor();
    @DefaultMessage("Print Paychecks for")
    String financialsPrintPaychecksFor();
    @DefaultMessage("Print Statements")
    String financialsPrintStatements();
    @DefaultMessage("Process Items")
    String financialsProcessLockboxBatch();
    @DefaultMessage("Items processed successfully.")
    String financialsProcessLockboxBatchSuccess();
    @DefaultMessage("Processing Status")
    String financialsProcessingStatus();
    @DefaultMessage("Product")
    String financialsProduct();
    @DefaultMessage("Profitability Ratio")
    String financialsProfitabilityRatio();
    @DefaultMessage("Vendor Invoice")
    String financialsPurchaseInvoice();
    @DefaultMessage("Qty")
    String financialsQty();
    @DefaultMessage("Receivables")
    String financialsReceivables();
    @DefaultMessage("Accounts Receivables Aging")
    String financialsReceivablesAgingReport();
    @DefaultMessage("Balances by Customer")
    String financialsReceivablesBalancesReport();
    @DefaultMessage("Balance")
    String financialsReceivablesBalancesReportBalance();
    @DefaultMessage("Receive a Payment")
    String financialsReceivablesPayment();
    @DefaultMessage("Receive a Payment from Party ID")
    String financialsReceivablesPaymentFromPartyId();
    @DefaultMessage("Customer Statement")
    String financialsReceivablesStatementReport();
    @DefaultMessage("Receive COD Statement")
    String financialsReceiveCODStatement();
    @DefaultMessage("Receive from Party")
    String financialsReceiveFromParty();
    @DefaultMessage("Receive Payment")
    String financialsReceivePayment();
    @DefaultMessage("Receive Payment for")
    String financialsReceivePaymentFor();
    @DefaultMessage("Receive Statement")
    String financialsReceiveStatement();
    @DefaultMessage("Received Date between")
    String financialsReceivedDateBetween();
    @DefaultMessage("Reconcile")
    String financialsReconcile();
    @DefaultMessage("Reconcile Account")
    String financialsReconcileAccount();
    @DefaultMessage("Reconcile Status")
    String financialsReconcileStatus();
    @DefaultMessage("Reconciled as of")
    String financialsReconciledAsOf();
    @DefaultMessage("Reconciled By")
    String financialsReconciledBy();
    @DefaultMessage("Recurrence")
    String financialsRecurrence();
    @DefaultMessage("Recurring Invoices")
    String financialsRecurringInvoices();
    @DefaultMessage("Ref Num")
    String financialsReferenceNumber();
    @DefaultMessage("Related Order ID")
    String financialsRelatedOrderId();
    @DefaultMessage("Release 1.4-Preview")
    String financialsReleaseVersion();
    @DefaultMessage("Error")
    String financialsReport_Error();
    @DefaultMessage("Data source have no data to fill this report.")
    String financialsReport_NoData();
    @DefaultMessage("of")
    String financialsReport_Of();
    @DefaultMessage("Page")
    String financialsReport_Page();
    @DefaultMessage("Product Store")
    String financialsReport_SalesTax_ProductStore();
    @DefaultMessage("Sales Tax Detail Report")
    String financialsReport_SalesTax_Title();
    @DefaultMessage("Total Sales")
    String financialsReport_SalesTax_TotalSales();
    @DefaultMessage("Amount")
    String financialsReport_TotalSales_Amount();
    @DefaultMessage("Balance")
    String financialsReport_TotalSales_Balance();
    @DefaultMessage("Debit/Credit")
    String financialsReport_TotalSales_DebCred();
    @DefaultMessage("Balance")
    String financialsReport_TotalSales_Party();
    @DefaultMessage("Product")
    String financialsReport_TotalSales_Product();
    @DefaultMessage("Return to Payables")
    String financialsReturnToPayables();
    @DefaultMessage("Return to Receivables")
    String financialsReturnToReceivables();
    @DefaultMessage("Return to Reports")
    String financialsReturnToReports();
    @DefaultMessage("Return to Tax Summary")
    String financialsReturnToTaxSummary();
    @DefaultMessage("Reversal Of")
    String financialsReversalOf();
    @DefaultMessage("Reverse")
    String financialsReverseTransaction();
    @DefaultMessage("Sales, Inventory, Profitability Analysis")
    String financialsSalesAndInventory();
    @DefaultMessage("Sales by Store By Day Report")
    String financialsSalesByStoreByDayReport();
    @DefaultMessage("Sales by Store by Day")
    String financialsSalesByStoreByDayReportTitle();
    @DefaultMessage("Number of Orders")
    String financialsSalesByStoreByOrderReportNumberOfOrders();
    @DefaultMessage("Order Date")
    String financialsSalesByStoreByOrderReportOrderDate();
    @DefaultMessage("Product Store")
    String financialsSalesByStoreByOrderReportStore();
    @DefaultMessage("Total Amount")
    String financialsSalesByStoreByOrderReportTotalAmount();
    @DefaultMessage("Sales Invoice")
    String financialsSalesInvoice();
    @DefaultMessage("Refresh Data")
    String financialsSalesTaxReloadDatamarts();
    @DefaultMessage("Sales Tax Statement")
    String financialsSalesTaxStatement();
    @DefaultMessage("Sales Volume")
    String financialsSalesVolume();
    @DefaultMessage("Scheduled Posting Date")
    String financialsScheduledPostingDate();
    @DefaultMessage("Select an Account")
    String financialsSelectAccount();
    @DefaultMessage("Select Organization")
    String financialsSelectOrganization();
    @DefaultMessage("Select Default Refund Payment Method for")
    String financialsSelectRefundPaymentMethod();
    @DefaultMessage("Missing invoiceId or partyIdFrom for invoiceId {0}")
    String financialsServiceErrorCheckRunMissingInvoiceData(String invoiceId);
    @DefaultMessage("Cannot process invoices with different currencies")
    String financialsServiceErrorCheckRunMultipleCurrencies();
    @DefaultMessage("Cannot create check run with a non-numeric check number")
    String financialsServiceErrorCheckRunNonNumericInitialCheckNumber();
    @DefaultMessage("Unknown invoice type {0} for invoiceId {1}")
    String financialsServiceErrorCheckRunUnknownInvoiceType(String invoiceTypeId, String invoiceId);
    @DefaultMessage("Error creating invoice")
    String financialsServiceErrorCreatingFinanceCharge();
    @DefaultMessage("Error creating invoice item for finance charge invoice ID {0}")
    String financialsServiceErrorCreatingFinanceChargeItem(String invoiceId);
    @DefaultMessage("Failed to get the PaycheckItemTypes for this PaymentType")
    String financialsServiceErrorFailedToGetThePaycheckItemTypes();
    @DefaultMessage("Error setting finance charge invoice status to {0} for finance charge invoice ID {1}")
    String financialsServiceErrorFinanceChargeStatus(String statusId, String invoiceId);
    @DefaultMessage("Another invoice term of payment type (FIN_PAYMENT_TERM, FIN_PAYMENT_FIXDAY, etc.) already exists for invoice ID {0}, so {1} will not be created automatically.")
    String financialsServiceErrorInvoiceTermOfPaymentTypeExists(String invoiceId, String termTypeId);
    @DefaultMessage("Invoice term of type {0} already exists for invoice ID {1} and will not be copied over automatically from party agreements.")
    String financialsServiceErrorInvoiceTermOfTypeExists(String termTypeId, String invoiceId);
    @DefaultMessage("Check applications total: {0} greater than the check amount: {1}.")
    String financialsServiceErrorLockboxApplicationsExceedCheckAmount(String applicationsTotal, String checkAmount);
    @DefaultMessage("Cannot apply an amount different than 0 or the line amount.")
    String financialsServiceErrorLockboxCannotApplyDifferentAmount();
    @DefaultMessage("This line cannot be applied on.")
    String financialsServiceErrorLockboxCannotApplyThisLine();
    @DefaultMessage("Can only apply cash discount to an invoice.")
    String financialsServiceErrorLockboxCashDiscountOnlyForInvoices();
    @DefaultMessage("Content of the {0} are identical to a file that was imported earlier with another name.")
    String financialsServiceErrorLockboxEquivalentFile(String fileName);
    @DefaultMessage("The file {0} was already imported.")
    String financialsServiceErrorLockboxFileAlreadyImported(String fileName);
    @DefaultMessage("Cannot apply negative amounts.")
    String financialsServiceErrorLockboxNegativeAmount();
    @DefaultMessage("No line ready to process found.")
    String financialsServiceErrorLockboxNoReadyLine();
    @DefaultMessage("No data in uploaded file.")
    String financialsServiceErrorLockboxUploadNoData();
    @DefaultMessage("Error: No GlAccountTypeDefault entry found for organizationPartyId {0} and glAccountTypeId {1}")
    String financialsServiceErrorNoGlAccountTypeDefaultFound(String organizationPartyId, String glAccountTypeId);
    @DefaultMessage("Sorry, you do not have permission to perform this action.")
    String financialsServiceErrorNoPermission();
    @DefaultMessage("No PartyAcctgPreference found for partyId {0}")
    String financialsServiceErrorPartyAcctgPrefNotFound(String partyId);
    @DefaultMessage("Paycheck must be in NOT_PAID status to allow change to one of it''s PaycheckItems")
    String financialsServiceErrorPaycheckMustBeInNotPaidStatusToChangePaycheckItem();
    @DefaultMessage("No PaymentMethod found for paymentMethodId {0}")
    String financialsServiceErrorPaymentMethodNotFound(String paymentMethodId);
    @DefaultMessage("No PaymentMethodType found for paymentMethodId {0}")
    String financialsServiceErrorPaymentMethodTypeNotFound(String paymentMethodId);
    @DefaultMessage("Error: No AcctgTransEntries found for acctgTransId")
    String financialsServiceErrorReverseTransactionNoEntries();
    @DefaultMessage("Error: No AcctgTrans found for acctgTransId")
    String financialsServiceErrorReverseTransactionNotFound();
    @DefaultMessage("Error calling cloneInvoice service in runInvoiceRecurrence for invoiceId {0}")
    String financialsServiceErrorRunInvoiceRecurrence(String invoiceId);
    @DefaultMessage("Ignoring InvoiceRecurrence for invoiceId {0}: lastRecurrenceDate is in the future")
    String financialsServiceErrorRunInvoiceRecurrenceIgnoreFutureLastRecurrence(String invoiceId);
    @DefaultMessage("Ignoring InvoiceRecurrence for invoiceId {0}: next recurrence date is in the future")
    String financialsServiceErrorRunInvoiceRecurrenceIgnoreFutureNextRecurrence(String invoiceId);
    @DefaultMessage("Ignoring InvoiceRecurrence for invoiceId {0}: Invalid RecurrenceInfo")
    String financialsServiceErrorRunInvoiceRecurrenceInvalid(String invoiceId);
    @DefaultMessage("Not adding agreementTermId {0} ({1}) to invoice ID {2}")
    String financialsServiceErrorSkippingAgreementTerm(String agreementTermId, String termTypeId, String invoiceId);
    @DefaultMessage("Could not update PartyAcctgPreference for partyId {0}")
    String financialsServiceErrorUpdatingPartyAcctgPref(String partyId);
    @DefaultMessage("Error: Cannot void a payment of status other than PMNT_SENT or PMNT_RECEIVED")
    String financialsServiceErrorVoidPaymentIncorrectStatus();
    @DefaultMessage("Error: No Payment found for paymentId")
    String financialsServiceErrorVoidPaymentNotFound();
    @DefaultMessage("Witholdings amount sum exceeds paycheck gross amount")
    String financialsServiceErrorWitholdingsSumExceedsPaycheckGrossAmount();
    @DefaultMessage("Owner  {0} of InventoryItem {1} is not an internal organization - not posting InventoryItem value adjustment to GL")
    String financialsServiceError_InventoryItemValueAdj_OwnerNotInternal(String ownerPartyId, String inventoryItemId);
    @DefaultMessage("Ignoring zero or negative interest amount {0} in createInterestInvoice for invoice {1}")
    String financialsServiceWarningIgnoreNonPositiveAmount(String amount, String parentInvoiceId);
    @DefaultMessage("InventoryItem [{0}] has no record of a previous unit cost in InventoryItemValueHistory entity")
    String financialsServiceWarning_InventoryItemValueAdj_NoPreviousUnitCost(String inventoryItemId);
    @DefaultMessage("InventoryItem [{0}] is serialized and not Available - not posting a value adjustment to GL")
    String financialsServiceWarning_InventoryItemValueAdj_SerInvItemNotAvail(String inventoryItemId);
    @DefaultMessage("InventoryItem [{0}] has been updated but the unitCost has not changed - not posting a value adjustment to GL")
    String financialsServiceWarning_InventoryItemValueAdj_UnitCostNotChanged(String inventoryItemId);
    @DefaultMessage("InventoryItem [{0}] has zero QOH - not posting a value adjustment to GL")
    String financialsServiceWarning_InventoryItemValueAdj_ZeroOnHand(String inventoryItemId);
    @DefaultMessage("Settle")
    String financialsSettle();
    @DefaultMessage("Settle Payments")
    String financialsSettlePayments();
    @DefaultMessage("Settle Payments From")
    String financialsSettlePaymentsFrom();
    @DefaultMessage("Settle Refunds From")
    String financialsSettleRefundsFrom();
    @DefaultMessage("Settle Undeposited Receipts")
    String financialsSettleUndepositedReceipts();
    @DefaultMessage("Settlements")
    String financialsSettlements();
    @DefaultMessage("Shipped on {0} Via {1} {2}")
    String financialsShippedVia(String createdDate, String carrierPartyId, String shipmentMethodTypeId);
    @DefaultMessage("Show Child Accounts Invoices")
    String financialsShowChildAccountsInvoices();
    @DefaultMessage("Show Invoice Level Detail?")
    String financialsShowInvoiceLevelDetail();
    @DefaultMessage("Statement Date")
    String financialsStatementDate();
    @DefaultMessage("Statement For")
    String financialsStatementFor();
    @DefaultMessage("Balance")
    String financialsStatementsBalance();
    @DefaultMessage("Beginning Balance")
    String financialsStatementsBeginningBalance();
    @DefaultMessage("Ending Balance")
    String financialsStatementsEndingBalance();
    @DefaultMessage("Status")
    String financialsStatusId();
    @DefaultMessage("Tax Region")
    String financialsTaxForRegion();
    @DefaultMessage("Tax Payments")
    String financialsTaxPayments();
    @DefaultMessage("Tax Transactions")
    String financialsTaxTransactions();
    @DefaultMessage("Taxes for")
    String financialsTaxesFor();
    @DefaultMessage("Period Type")
    String financialsTimePeriodType();
    @DefaultMessage("Time Periods for")
    String financialsTimePeriodsFor();
    @DefaultMessage("To Classification Group")
    String financialsToClsGroup();
    @DefaultMessage("Total Amount")
    String financialsTotalAmount();
    @DefaultMessage("TOTAL")
    String financialsTotalCapital();
    @DefaultMessage("Total Financing Cash Flow")
    String financialsTotalFinancingCashFlow();
    @DefaultMessage("Total Investing Cash Flow")
    String financialsTotalInvestingCashFlow();
    @DefaultMessage("Total Net Cash Flow")
    String financialsTotalNetCashFlow();
    @DefaultMessage("Total Operating Cash Flow")
    String financialsTotalOperatingCashFlow();
    @DefaultMessage("Total Outstanding")
    String financialsTotalOutstanding();
    @DefaultMessage("Total Tax Liabilities")
    String financialsTotalTaxLiabilities();
    @DefaultMessage("Total Tax Payments")
    String financialsTotalTaxPayments();
    @DefaultMessage("Totals")
    String financialsTotals();
    @DefaultMessage("Transaction")
    String financialsTransaction();
    @DefaultMessage("Transaction Date")
    String financialsTransactionDate();
    @DefaultMessage("Transaction Entries")
    String financialsTransactionEntries();
    @DefaultMessage("Transaction Entry")
    String financialsTransactionEntry();
    @DefaultMessage("Transaction ID")
    String financialsTransactionId();
    @DefaultMessage("Transaction Summary")
    String financialsTransactionSummary();
    @DefaultMessage("Transaction Type")
    String financialsTransactionType();
    @DefaultMessage("Unapprov. Invoices")
    String financialsUnapprovedInvoices();
    @DefaultMessage("Unclassified Accounts")
    String financialsUnclassifiedAccounts();
    @DefaultMessage("Unit Cost")
    String financialsUnitCost();
    @DefaultMessage("Unit Cost Valuation")
    String financialsUnitCostValuation();
    @DefaultMessage("Unit")
    String financialsUnitPrice();
    @DefaultMessage("Unposted Transactions")
    String financialsUnpostedTransactions();
    @DefaultMessage("Update Gl Account for")
    String financialsUpdateGlAccountFor();
    @DefaultMessage("Update Account Type for")
    String financialsUpdateGlAccountType();
    @DefaultMessage("Update Invoice Item")
    String financialsUpdateInvoiceItem();
    @DefaultMessage("Update Paycheck")
    String financialsUpdatePaycheck();
    @DefaultMessage("Update Transaction")
    String financialsUpdateTransaction();
    @DefaultMessage("Update Transaction Entry")
    String financialsUpdateTransactionEntry();
    @DefaultMessage("Upload Lockbox File")
    String financialsUploadLockboxFile();
    @DefaultMessage("Successfully uploaded Lockbox file {0}")
    String financialsUploadLockboxFileSuccessful(String fileName);
    @DefaultMessage("Valuation Date")
    String financialsValuationDate();
    @DefaultMessage("Value")
    String financialsValue();
    @DefaultMessage("Vendor")
    String financialsVendor();
    @DefaultMessage("Vendor Statement")
    String financialsVendorStatement();
    @DefaultMessage("Vendors")
    String financialsVendors();
    @DefaultMessage("View Configuration")
    String financialsViewConfiguration();
    @DefaultMessage("View Paycheck")
    String financialsViewPaycheck();
    @DefaultMessage("Void")
    String financialsVoidInvoice();
    @DefaultMessage("Writeoff")
    String financialsWriteoff();
    @DefaultMessage("Writeoff Of")
    String financialsWriteoffOf();
    @DefaultMessage("Find")
    String find();
    @DefaultMessage("Find Accounts")
    String findAccounts();
    @DefaultMessage("Find by")
    String findBy();
    @DefaultMessage("Basic")
    String findByBasic();
    @DefaultMessage("Advanced")
    String findByAdvanced();
    @DefaultMessage("Id")
    String findById();
    @DefaultMessage("Name")
    String findByName();
    @DefaultMessage("Phone")
    String findByPhone();
    @DefaultMessage("Find Contacts")
    String findContacts();
    @DefaultMessage("Find Leads")
    String findLeads();
    @DefaultMessage("Find Activities")
    String findActivities();
    @DefaultMessage("Find Partners")
    String findPartners();
    @DefaultMessage("Find Suppliers")
    String findSuppliers();
    @DefaultMessage("First Name")
    String firstName();
    @DefaultMessage("Could not find a related rental fixed asset for the product with ID [{0}], cannot be rented.")
    String fixed_asset_product_not_found(String param_0);
    @DefaultMessage("Abbrev")
    String formFieldTitle_abbrev();
    @DefaultMessage("Account Code")
    String formFieldTitle_accountCode();
    @DefaultMessage("Account Currency Uom Id")
    String formFieldTitle_accountCurrencyUomId();
    @DefaultMessage("Account Limit")
    String formFieldTitle_accountLimit();
    @DefaultMessage("Account Name")
    String formFieldTitle_accountName();
    @DefaultMessage("Acctg Trans Entry Seq Id")
    String formFieldTitle_acctgTransEntrySeqId();
    @DefaultMessage("Acctg Trans Entry Type Id")
    String formFieldTitle_acctgTransEntryTypeId();
    @DefaultMessage("Acctg Trans Id")
    String formFieldTitle_acctgTransId();
    @DefaultMessage("Acctg Trans Type Id")
    String formFieldTitle_acctgTransTypeId();
    @DefaultMessage("Action Type")
    String formFieldTitle_actionType();
    @DefaultMessage("Active Gl Description")
    String formFieldTitle_activeGlDescription();
    @DefaultMessage("Actual Completion Date")
    String formFieldTitle_actualCompletionDate();
    @DefaultMessage("Actual End Date")
    String formFieldTitle_actualEndDate();
    @DefaultMessage("Actual End Of Life")
    String formFieldTitle_actualEndOfLife();
    @DefaultMessage("Actual Milli Seconds")
    String formFieldTitle_actualMilliSeconds();
    @DefaultMessage("Actual Setup Millis")
    String formFieldTitle_actualSetupMillis();
    @DefaultMessage("Actual Start Date")
    String formFieldTitle_actualStartDate();
    @DefaultMessage("Add")
    String formFieldTitle_addButton();
    @DefaultMessage("Agreement Date")
    String formFieldTitle_agreementDate();
    @DefaultMessage("Agreement Id")
    String formFieldTitle_agreementId();
    @DefaultMessage("Agreement Image")
    String formFieldTitle_agreementImage();
    @DefaultMessage("Agreement Text")
    String formFieldTitle_agreementText();
    @DefaultMessage("Allow Multiple")
    String formFieldTitle_allowMultiple();
    @DefaultMessage("Allow Password")
    String formFieldTitle_allowPassword();
    @DefaultMessage("Allow Product Store Change")
    String formFieldTitle_allowProductStoreChange();
    @DefaultMessage("Allow Update")
    String formFieldTitle_allowUpdate();
    @DefaultMessage("Alt Reference")
    String formFieldTitle_altReference();
    @DefaultMessage("Amount")
    String formFieldTitle_amount();
    @DefaultMessage("Amount Applied")
    String formFieldTitle_amountApplied();
    @DefaultMessage("Amount to Apply")
    String formFieldTitle_amountToApply();
    @DefaultMessage("Amount Uom Id")
    String formFieldTitle_amountUomId();
    @DefaultMessage("Applied")
    String formFieldTitle_applied();
    @DefaultMessage("Apply")
    String formFieldTitle_applyButton();
    @DefaultMessage("Attr Name")
    String formFieldTitle_attrName();
    @DefaultMessage("Attr Value")
    String formFieldTitle_attrValue();
    @DefaultMessage("Auth Declined Message")
    String formFieldTitle_authDeclinedMessage();
    @DefaultMessage("Auth Error Message")
    String formFieldTitle_authErrorMessage();
    @DefaultMessage("Auth Fraud Message")
    String formFieldTitle_authFraudMessage();
    @DefaultMessage("Auto Approve Reviews")
    String formFieldTitle_autoApproveReviews();
    @DefaultMessage("Auto Invoice Digital Items")
    String formFieldTitle_autoInvoiceDigitalItems();
    @DefaultMessage("Auto Order Cc Try Exp")
    String formFieldTitle_autoOrderCcTryExp();
    @DefaultMessage("Auto Order Cc Try Later Max")
    String formFieldTitle_autoOrderCcTryLaterMax();
    @DefaultMessage("Auto Order Cc Try Later Nsf")
    String formFieldTitle_autoOrderCcTryLaterNsf();
    @DefaultMessage("Auto Order Cc Try Other Cards")
    String formFieldTitle_autoOrderCcTryOtherCards();
    @DefaultMessage("Auto Save Cart")
    String formFieldTitle_autoSaveCart();
    @DefaultMessage("Available From Date")
    String formFieldTitle_availableFromDate();
    @DefaultMessage("Available Thru Date")
    String formFieldTitle_availableThruDate();
    @DefaultMessage("Available To Promise Var")
    String formFieldTitle_availableToPromiseVar();
    @DefaultMessage("Base Currency")
    String formFieldTitle_baseCurrencyUomId();
    @DefaultMessage("Bcc Address")
    String formFieldTitle_bccAddress();
    @DefaultMessage("Bill To Customer Party Id")
    String formFieldTitle_billToCustomerPartyId();
    @DefaultMessage("Billback Factor")
    String formFieldTitle_billbackFactor();
    @DefaultMessage("Billing Account ID")
    String formFieldTitle_billingAccountId();
    @DefaultMessage("Birth Date")
    String formFieldTitle_birthDate();
    @DefaultMessage("Email Body")
    String formFieldTitle_bodyText();
    @DefaultMessage("Calendar")
    String formFieldTitle_calendarId();
    @DefaultMessage("Carrier Party Id")
    String formFieldTitle_carrierPartyId();
    @DefaultMessage("Carrier Role Type Id")
    String formFieldTitle_carrierRoleTypeId();
    @DefaultMessage("Cartons")
    String formFieldTitle_cartons();
    @DefaultMessage("CatalogProductStore")
    String formFieldTitle_catalogProductStore();
    @DefaultMessage("Category Image Url")
    String formFieldTitle_categoryImageUrl();
    @DefaultMessage("Category Name")
    String formFieldTitle_categoryName();
    @DefaultMessage("Cc Address")
    String formFieldTitle_ccAddress();
    @DefaultMessage("Character Set Id")
    String formFieldTitle_characterSetId();
    @DefaultMessage("Check Gc Balance")
    String formFieldTitle_checkGcBalance();
    @DefaultMessage("Check Inventory")
    String formFieldTitle_checkInventory();
    @DefaultMessage("City")
    String formFieldTitle_city();
    @DefaultMessage("Class Enum Id")
    String formFieldTitle_classEnumId();
    @DefaultMessage("Client IP Address")
    String formFieldTitle_clientIpAddress();
    @DefaultMessage("Client Party Id")
    String formFieldTitle_clientPartyId();
    @DefaultMessage("Coeff. Value")
    String formFieldTitle_coeffValue();
    @DefaultMessage("Cost Of Goods Sold (COGS) Method")
    String formFieldTitle_cogsMethodId();
    @DefaultMessage("Comm. Perc")
    String formFieldTitle_commPerc();
    @DefaultMessage("Comments")
    String formFieldTitle_comments();
    @DefaultMessage("Communication Event Id")
    String formFieldTitle_communicationEventId();
    @DefaultMessage("Communication Event Purpose Type Id")
    String formFieldTitle_communicationEventPrpTypId();
    @DefaultMessage("Communication Event Type Id")
    String formFieldTitle_communicationEventTypeId();
    @DefaultMessage("Company Name")
    String formFieldTitle_companyName();
    @DefaultMessage("Config Item Name")
    String formFieldTitle_configItemName();
    @DefaultMessage("Config Option Name")
    String formFieldTitle_configOptionName();
    @DefaultMessage("Config Type Id")
    String formFieldTitle_configTypeId();
    @DefaultMessage("Contact List Id")
    String formFieldTitle_contactListId();
    @DefaultMessage("Contact List Name")
    String formFieldTitle_contactListName();
    @DefaultMessage("Contact List Type Id")
    String formFieldTitle_contactListTypeId();
    @DefaultMessage("Contact Mech Id")
    String formFieldTitle_contactMechId();
    @DefaultMessage("Contact Mech Type Id")
    String formFieldTitle_contactMechTypeId();
    @DefaultMessage("Content Id")
    String formFieldTitle_contentId();
    @DefaultMessage("Content Mime Type Id")
    String formFieldTitle_contentMimeTypeId();
    @DefaultMessage("Content Name")
    String formFieldTitle_contentName();
    @DefaultMessage("Content Purpose Type Id")
    String formFieldTitle_contentPurposeTypeId();
    @DefaultMessage("Content Type")
    String formFieldTitle_contentType();
    @DefaultMessage("Content Type Id")
    String formFieldTitle_contentTypeId();
    @DefaultMessage("Rate")
    String formFieldTitle_conversionFactor();
    @DefaultMessage("Cookie Domain")
    String formFieldTitle_cookieDomain();
    @DefaultMessage("Corresponding Product Id")
    String formFieldTitle_correspondingProductId();
    @DefaultMessage("Cost")
    String formFieldTitle_cost();
    @DefaultMessage("Cost Component Calc Id")
    String formFieldTitle_costComponentCalcId();
    @DefaultMessage("Cost Component Id")
    String formFieldTitle_costComponentId();
    @DefaultMessage("Cost Component Type Id")
    String formFieldTitle_costComponentTypeId();
    @DefaultMessage("Cost Component Type Prefix")
    String formFieldTitle_costComponentTypePrefix();
    @DefaultMessage("Cost Custom Method Id")
    String formFieldTitle_costCustomMethodId();
    @DefaultMessage("Cost Gl Account Type Id")
    String formFieldTitle_costGlAccountTypeId();
    @DefaultMessage("Cost Uom Id")
    String formFieldTitle_costUomId();
    @DefaultMessage("Country Geo Id")
    String formFieldTitle_countryGeoId();
    @DefaultMessage("Create")
    String formFieldTitle_createButton();
    @DefaultMessage("Created By")
    String formFieldTitle_createdBy();
    @DefaultMessage("Created By User Login")
    String formFieldTitle_createdByUserLogin();
    @DefaultMessage("Created Date")
    String formFieldTitle_createdDate();
    @DefaultMessage("Credit Gl Account Id")
    String formFieldTitle_creditGlAccountId();
    @DefaultMessage("Currency Uom")
    String formFieldTitle_currencyUom();
    @DefaultMessage("Currency")
    String formFieldTitle_currencyUomId();
    @DefaultMessage("Current Password")
    String formFieldTitle_currentPassword();
    @DefaultMessage("Current Password Verify")
    String formFieldTitle_currentPasswordVerify();
    @DefaultMessage("Cust Request Category Id")
    String formFieldTitle_custRequestCategoryId();
    @DefaultMessage("Cust Request Date")
    String formFieldTitle_custRequestDate();
    @DefaultMessage("Cust Request Id")
    String formFieldTitle_custRequestId();
    @DefaultMessage("Cust Request Item Seq Id")
    String formFieldTitle_custRequestItemSeqId();
    @DefaultMessage("Cust Request Name")
    String formFieldTitle_custRequestName();
    @DefaultMessage("Cust Request Resolution Id")
    String formFieldTitle_custRequestResolutionId();
    @DefaultMessage("Cust Request Type Description")
    String formFieldTitle_custRequestTypeDescription();
    @DefaultMessage("Cust Request Type Id")
    String formFieldTitle_custRequestTypeId();
    @DefaultMessage("Data Category Id")
    String formFieldTitle_dataCategoryId();
    @DefaultMessage("Data Resource Id")
    String formFieldTitle_dataResourceId();
    @DefaultMessage("Data Resource Name")
    String formFieldTitle_dataResourceName();
    @DefaultMessage("Data Resource Type Id")
    String formFieldTitle_dataResourceTypeId();
    @DefaultMessage("Data Source Id")
    String formFieldTitle_dataSourceId();
    @DefaultMessage("Data Template Type Id")
    String formFieldTitle_dataTemplateTypeId();
    @DefaultMessage("Date Acquired")
    String formFieldTitle_dateAcquired();
    @DefaultMessage("Date Last Serviced")
    String formFieldTitle_dateLastServiced();
    @DefaultMessage("Date Next Service")
    String formFieldTitle_dateNextService();
    @DefaultMessage("Date Thru")
    String formFieldTitle_dateThru();
    @DefaultMessage("Date From")
    String formFieldTitle_datefrom();
    @DefaultMessage("Date Time Performed")
    String formFieldTitle_datetimePerformed();
    @DefaultMessage("Days To Cancel Non Pay")
    String formFieldTitle_daysToCancelNonPay();
    @DefaultMessage("Debit Credit Flag")
    String formFieldTitle_debitCreditFlag();
    @DefaultMessage("Debit Gl Account Id")
    String formFieldTitle_debitGlAccountId();
    @DefaultMessage("Default Amount")
    String formFieldTitle_defaultAmount();
    @DefaultMessage("Default Currency Uom Id")
    String formFieldTitle_defaultCurrencyUomId();
    @DefaultMessage("Default Gl Account Id")
    String formFieldTitle_defaultGlAccountId();
    @DefaultMessage("Default Locale String")
    String formFieldTitle_defaultLocaleString();
    @DefaultMessage("Default Password")
    String formFieldTitle_defaultPassword();
    @DefaultMessage("Default Sales Channel Enum Id")
    String formFieldTitle_defaultSalesChannelEnumId();
    @DefaultMessage("Default Sequence Num")
    String formFieldTitle_defaultSequenceNum();
    @DefaultMessage("Delete")
    String formFieldTitle_deleteButton();
    @DefaultMessage("Delete Cost Component")
    String formFieldTitle_deleteCostComponent();
    @DefaultMessage("Delete Link")
    String formFieldTitle_deleteLink();
    @DefaultMessage("Delete Selected")
    String formFieldTitle_deleteSelectedButton();
    @DefaultMessage("Deliverable Id")
    String formFieldTitle_deliverableId();
    @DefaultMessage("Description")
    String formFieldTitle_description();
    @DefaultMessage("Detail Screen")
    String formFieldTitle_detailScreen();
    @DefaultMessage("Dig Prod Upload Category Id")
    String formFieldTitle_digProdUploadCategoryId();
    @DefaultMessage("Digital Item Approved Status")
    String formFieldTitle_digitalItemApprovedStatus();
    @DefaultMessage("Disabled Date Time")
    String formFieldTitle_disabledDateTime();
    @DefaultMessage("Document Type")
    String formFieldTitle_drMimeTypeId();
    @DefaultMessage("File Name")
    String formFieldTitle_drObjectInfo();
    @DefaultMessage("Due Date")
    String formFieldTitle_dueDate();
    @DefaultMessage("eBay Category")
    String formFieldTitle_ebayCategory();
    @DefaultMessage("Effective Date")
    String formFieldTitle_effectiveDate();
    @DefaultMessage("Copy Emailadress")
    String formFieldTitle_emailAddressCc();
    @DefaultMessage("From Emailadress")
    String formFieldTitle_emailAddressFrom();
    @DefaultMessage("To Emailadress")
    String formFieldTitle_emailAddressTo();
    @DefaultMessage("Employment Status Enum Id")
    String formFieldTitle_employmentStatusEnumId();
    @DefaultMessage("Enable Digital Product Upload")
    String formFieldTitle_enableDigProdUpload();
    @DefaultMessage("Enable Https")
    String formFieldTitle_enableHttps();
    @DefaultMessage("Enabled")
    String formFieldTitle_enabled();
    @DefaultMessage("Entry Date")
    String formFieldTitle_entryDate();
    @DefaultMessage("Estimate Calc Method")
    String formFieldTitle_estimateCalcMethod();
    @DefaultMessage("Estimated Budget")
    String formFieldTitle_estimatedBudget();
    @DefaultMessage("Estimated Completion Date")
    String formFieldTitle_estimatedCompletionDate();
    @DefaultMessage("Estimated Cost")
    String formFieldTitle_estimatedCost();
    @DefaultMessage("Est. Deliver Date")
    String formFieldTitle_estimatedDeliveryDate();
    @DefaultMessage("Estimated Milli Seconds")
    String formFieldTitle_estimatedMilliSeconds();
    @DefaultMessage("Estimated Quantity")
    String formFieldTitle_estimatedQuantity();
    @DefaultMessage("Estimated Ready Date")
    String formFieldTitle_estimatedReadyDate();
    @DefaultMessage("Estimated Setup Millis")
    String formFieldTitle_estimatedSetupMillis();
    @DefaultMessage("Est. Ship Date")
    String formFieldTitle_estimatedShipDate();
    @DefaultMessage("Estimated Start Date")
    String formFieldTitle_estimatedStartDate();
    @DefaultMessage("Exempt Amount")
    String formFieldTitle_exemptAmount();
    @DefaultMessage("Expected End Of Life")
    String formFieldTitle_expectedEndOfLife();
    @DefaultMessage("Explode Order Items")
    String formFieldTitle_explodeOrderItems();
    @DefaultMessage("External Id")
    String formFieldTitle_externalId();
    @DefaultMessage("External Subscription Id")
    String formFieldTitle_externalSubscriptionId();
    @DefaultMessage("Facility Id")
    String formFieldTitle_facilityId();
    @DefaultMessage("Facility Name")
    String formFieldTitle_facilityName();
    @DefaultMessage("Facility Type Id")
    String formFieldTitle_facilityTypeId();
    @DefaultMessage("Fin Account Trans Id")
    String formFieldTitle_finAccountTransId();
    @DefaultMessage("First Attempt Order Id")
    String formFieldTitle_firstAttemptOrderId();
    @DefaultMessage("First Name")
    String formFieldTitle_firstName();
    @DefaultMessage("First Name Local")
    String formFieldTitle_firstNameLocal();
    @DefaultMessage("Fiscal Year Start Day")
    String formFieldTitle_fiscalYearStartDay();
    @DefaultMessage("Fiscal Year Start Month")
    String formFieldTitle_fiscalYearStartMonth();
    @DefaultMessage("Fixed Asset Id")
    String formFieldTitle_fixedAssetId();
    @DefaultMessage("Fixed Asset Name")
    String formFieldTitle_fixedAssetName();
    @DefaultMessage("Fixed Type Id")
    String formFieldTitle_fixedAssetTypeId();
    @DefaultMessage("Fixed Cost")
    String formFieldTitle_fixedCost();
    @DefaultMessage("From Date")
    String formFieldTitle_fromDate();
    @DefaultMessage("From Party Id")
    String formFieldTitle_fromPartyId();
    @DefaultMessage("Gateway Avs Result")
    String formFieldTitle_gatewayAvsResult();
    @DefaultMessage("Gateway Code")
    String formFieldTitle_gatewayCode();
    @DefaultMessage("Gateway Flag")
    String formFieldTitle_gatewayFlag();
    @DefaultMessage("Gateway Message")
    String formFieldTitle_gatewayMessage();
    @DefaultMessage("Gateway Score Result")
    String formFieldTitle_gatewayScoreResult();
    @DefaultMessage("Gender")
    String formFieldTitle_gender();
    @DefaultMessage("General Comments")
    String formFieldTitle_generalComments();
    @DefaultMessage("Country")
    String formFieldTitle_geoCode();
    @DefaultMessage("Geo Id")
    String formFieldTitle_geoId();
    @DefaultMessage("Gl Account Class Id")
    String formFieldTitle_glAccountClassId();
    @DefaultMessage("Gl Account Id")
    String formFieldTitle_glAccountId();
    @DefaultMessage("Gl Account Type Id")
    String formFieldTitle_glAccountTypeId();
    @DefaultMessage("Fiscal Gl Type Id")
    String formFieldTitle_glFiscalTypeId();
    @DefaultMessage("Gl Resource Type Id")
    String formFieldTitle_glResourceTypeId();
    @DefaultMessage("Gl Xbrl Class Id")
    String formFieldTitle_glXbrlClassId();
    @DefaultMessage("Grand Total")
    String formFieldTitle_grandTotal();
    @DefaultMessage("Group Name")
    String formFieldTitle_groupName();
    @DefaultMessage("Group Name Local")
    String formFieldTitle_groupNameLocal();
    @DefaultMessage("Has Table")
    String formFieldTitle_hasTable();
    @DefaultMessage("Header Approved Status")
    String formFieldTitle_headerApprovedStatus();
    @DefaultMessage("Header Cancel Status")
    String formFieldTitle_headerCancelStatus();
    @DefaultMessage("Header Declined Status")
    String formFieldTitle_headerDeclinedStatus();
    @DefaultMessage("Header Logo")
    String formFieldTitle_headerLogo();
    @DefaultMessage("Header Middle Background")
    String formFieldTitle_headerMiddleBackground();
    @DefaultMessage("Header Right Background")
    String formFieldTitle_headerRightBackground();
    @DefaultMessage("Height")
    String formFieldTitle_height();
    @DefaultMessage("Hours")
    String formFieldTitle_hours();
    @DefaultMessage("Http Host")
    String formFieldTitle_httpHost();
    @DefaultMessage("Http Port")
    String formFieldTitle_httpPort();
    @DefaultMessage("Https Host")
    String formFieldTitle_httpsHost();
    @DefaultMessage("Https Port")
    String formFieldTitle_httpsPort();
    @DefaultMessage("Id Code")
    String formFieldTitle_idCode();
    @DefaultMessage("File")
    String formFieldTitle_imageData();
    @DefaultMessage("Include In Shipping")
    String formFieldTitle_includeInShipping();
    @DefaultMessage("Include In Tax")
    String formFieldTitle_includeInTax();
    @DefaultMessage("Include Tax In Price")
    String formFieldTitle_includeTaxInPrice();
    @DefaultMessage("Info Url")
    String formFieldTitle_infoUrl();
    @DefaultMessage("Instance Of Content Id")
    String formFieldTitle_instanceOfContentId();
    @DefaultMessage("Instance Of Product Id")
    String formFieldTitle_instanceOfProductId();
    @DefaultMessage("Internal Code")
    String formFieldTitle_internalCode();
    @DefaultMessage("Internal Name")
    String formFieldTitle_internalName();
    @DefaultMessage("Interval Meter Type Id")
    String formFieldTitle_intervalMeterTypeId();
    @DefaultMessage("Interval Quantity")
    String formFieldTitle_intervalQuantity();
    @DefaultMessage("Interval Uom Id")
    String formFieldTitle_intervalUomId();
    @DefaultMessage("Inventory Facility Id")
    String formFieldTitle_inventoryFacilityId();
    @DefaultMessage("Inventory Item Id")
    String formFieldTitle_inventoryItemId();
    @DefaultMessage("Invoice Date")
    String formFieldTitle_invoiceDate();
    @DefaultMessage("Invoice ID")
    String formFieldTitle_invoiceId();
    @DefaultMessage("Invoice Id Prefix")
    String formFieldTitle_invoiceIdPrefix();
    @DefaultMessage("Invoice Info")
    String formFieldTitle_invoiceInfo();
    @DefaultMessage("Item No")
    String formFieldTitle_invoiceItemSeqId();
    @DefaultMessage("Sales Invoice Item Type")
    String formFieldTitle_invoiceItemTypeId();
    @DefaultMessage("Invoice Message")
    String formFieldTitle_invoiceMessage();
    @DefaultMessage("Assign to Whole invoice")
    String formFieldTitle_invoiceProcessing();
    @DefaultMessage("Invoice Sequence")
    String formFieldTitle_invoiceSequenceEnumId();
    @DefaultMessage("Invoice Type")
    String formFieldTitle_invoiceTypeId();
    @DefaultMessage("Is Active")
    String formFieldTitle_isActive();
    @DefaultMessage("Is Anonymous")
    String formFieldTitle_isAnonymous();
    @DefaultMessage("Is Demo Store")
    String formFieldTitle_isDemoStore();
    @DefaultMessage("Is Exempt")
    String formFieldTitle_isExempt();
    @DefaultMessage("Is Immediately Fulfilled")
    String formFieldTitle_isImmediatelyFulfilled();
    @DefaultMessage("Is Mandatory")
    String formFieldTitle_isMandatory();
    @DefaultMessage("Is Nexus")
    String formFieldTitle_isNexus();
    @DefaultMessage("Is Posted")
    String formFieldTitle_isPosted();
    @DefaultMessage("Is Promo")
    String formFieldTitle_isPromo();
    @DefaultMessage("Is Public")
    String formFieldTitle_isPublic();
    @DefaultMessage("Is Rush Order")
    String formFieldTitle_isRushOrder();
    @DefaultMessage("Summary ?")
    String formFieldTitle_isSummary();
    @DefaultMessage("Issue Date")
    String formFieldTitle_issueDate();
    @DefaultMessage("Issued Quantity")
    String formFieldTitle_issuedQuantity();
    @DefaultMessage("Item Approved Status")
    String formFieldTitle_itemApprovedStatus();
    @DefaultMessage("Item Cancel Status")
    String formFieldTitle_itemCancelStatus();
    @DefaultMessage("Item Comments")
    String formFieldTitle_itemComments();
    @DefaultMessage("Item Declined Status")
    String formFieldTitle_itemDeclinedStatus();
    @DefaultMessage("Item Status Id")
    String formFieldTitle_itemStatusId();
    @DefaultMessage("Keyword")
    String formFieldTitle_keyword();
    @DefaultMessage("Last Admin Modified")
    String formFieldTitle_lastAdminModified();
    @DefaultMessage("Last Invoice Number")
    String formFieldTitle_lastInvoiceNumber();
    @DefaultMessage("Last Invoice Restart Date")
    String formFieldTitle_lastInvoiceRestartDate();
    @DefaultMessage("Last Modified By User Login")
    String formFieldTitle_lastModifiedByUserLogin();
    @DefaultMessage("Last Modified Date")
    String formFieldTitle_lastModifiedDate();
    @DefaultMessage("Last Name")
    String formFieldTitle_lastName();
    @DefaultMessage("Last Name Local")
    String formFieldTitle_lastNameLocal();
    @DefaultMessage("Last Order Number")
    String formFieldTitle_lastOrderNumber();
    @DefaultMessage("Last Ordered Date")
    String formFieldTitle_lastOrderedDate();
    @DefaultMessage("Last Price")
    String formFieldTitle_lastPrice();
    @DefaultMessage("Last Quote Number")
    String formFieldTitle_lastQuoteNumber();
    @DefaultMessage("Last Status Update")
    String formFieldTitle_lastStatusUpdate();
    @DefaultMessage("Line Total")
    String formFieldTitle_lineTotal();
    @DefaultMessage("Link One Image Url")
    String formFieldTitle_linkOneImageUrl();
    @DefaultMessage("Link Two Image Url")
    String formFieldTitle_linkTwoImageUrl();
    @DefaultMessage("List Name")
    String formFieldTitle_listName();
    @DefaultMessage("Listing Duration")
    String formFieldTitle_listingDuration();
    @DefaultMessage("Locale String")
    String formFieldTitle_localeString();
    @DefaultMessage("Located At Facility Id")
    String formFieldTitle_locatedAtFacilityId();
    @DefaultMessage("Located At Location Seq Id")
    String formFieldTitle_locatedAtLocationSeqId();
    @DefaultMessage("Location")
    String formFieldTitle_location();
    @DefaultMessage("Location Desc")
    String formFieldTitle_locationDesc();
    @DefaultMessage("Logo Image Url")
    String formFieldTitle_logoImageUrl();
    @DefaultMessage("Long Description")
    String formFieldTitle_longDescription();
    @DefaultMessage("Maint Hist Seq Id")
    String formFieldTitle_maintHistSeqId();
    @DefaultMessage("Maint Name")
    String formFieldTitle_maintName();
    @DefaultMessage("Manual Auth Is Capture")
    String formFieldTitle_manualAuthIsCapture();
    @DefaultMessage("Manufacturer Party Id")
    String formFieldTitle_manufacturerPartyId();
    @DefaultMessage("Marital Status")
    String formFieldTitle_maritalStatus();
    @DefaultMessage("Marketing Campaign Id")
    String formFieldTitle_marketingCampaignId();
    @DefaultMessage("Maximum Amount")
    String formFieldTitle_maximumAmount();
    @DefaultMessage("Maximum Amount Uom Id")
    String formFieldTitle_maximumAmountUomId();
    @DefaultMessage("Member Id")
    String formFieldTitle_memberId();
    @DefaultMessage("Meter Name")
    String formFieldTitle_meterName();
    @DefaultMessage("Meter Uom Id")
    String formFieldTitle_meterUomId();
    @DefaultMessage("Middle Name")
    String formFieldTitle_middleName();
    @DefaultMessage("Mime Type Id")
    String formFieldTitle_mimeTypeId();
    @DefaultMessage("Min Item Price")
    String formFieldTitle_minItemPrice();
    @DefaultMessage("Min Purchase")
    String formFieldTitle_minPurchase();
    @DefaultMessage("Min Order Qty")
    String formFieldTitle_minimumOrderQuantity();
    @DefaultMessage("Months With Employer")
    String formFieldTitle_monthsWithEmployer();
    @DefaultMessage("Mothers Maiden Name")
    String formFieldTitle_mothersMaidenName();
    @DefaultMessage("Must Rsvp")
    String formFieldTitle_mustRsvp();
    @DefaultMessage("Name")
    String formFieldTitle_name();
    @DefaultMessage("Needs Inventory Issuance")
    String formFieldTitle_needsInventoryIssuance();
    @DefaultMessage("New Password")
    String formFieldTitle_newPassword();
    @DefaultMessage("New Password Verify")
    String formFieldTitle_newPasswordVerify();
    @DefaultMessage("Nickname")
    String formFieldTitle_nickname();
    @DefaultMessage("Note")
    String formFieldTitle_note();
    @DefaultMessage("Note Date Time")
    String formFieldTitle_noteDateTime();
    @DefaultMessage("Note Id")
    String formFieldTitle_noteId();
    @DefaultMessage("Note Info")
    String formFieldTitle_noteInfo();
    @DefaultMessage("Number Specified")
    String formFieldTitle_numberSpecified();
    @DefaultMessage("Object Info")
    String formFieldTitle_objectInfo();
    @DefaultMessage("Occupation")
    String formFieldTitle_occupation();
    @DefaultMessage("Office Site Name")
    String formFieldTitle_officeSiteName();
    @DefaultMessage("Offsetting Gl Account Type Id")
    String formFieldTitle_offsettingGlAccountTypeId();
    @DefaultMessage("One Inventory Facility")
    String formFieldTitle_oneInventoryFacility();
    @DefaultMessage("Opt-in Code")
    String formFieldTitle_optInVerifyCode();
    @DefaultMessage("Order Date")
    String formFieldTitle_orderDate();
    @DefaultMessage("Order Header Id")
    String formFieldTitle_orderHeaderId();
    @DefaultMessage("Order Id")
    String formFieldTitle_orderId();
    @DefaultMessage("Order Id Prefix")
    String formFieldTitle_orderIdPrefix();
    @DefaultMessage("Order Item Seq Id")
    String formFieldTitle_orderItemSeqId();
    @DefaultMessage("Order Number Prefix")
    String formFieldTitle_orderNumberPrefix();
    @DefaultMessage("Order Payment Preference Id")
    String formFieldTitle_orderPaymentPreferenceId();
    @DefaultMessage("Order Qty Increments")
    String formFieldTitle_orderQtyIncrements();
    @DefaultMessage("Order Sequence")
    String formFieldTitle_orderSequenceEnumId();
    @DefaultMessage("Order Status Id")
    String formFieldTitle_orderStatusId();
    @DefaultMessage("Order Type Description")
    String formFieldTitle_orderTypeDescription();
    @DefaultMessage("Order Type Id")
    String formFieldTitle_orderTypeId();
    @DefaultMessage("Orders Link")
    String formFieldTitle_ordersLink();
    @DefaultMessage("Organization Party Id")
    String formFieldTitle_organizationPartyId();
    @DefaultMessage("Origin Facility Id")
    String formFieldTitle_originFacilityId();
    @DefaultMessage("Originated From Party Id")
    String formFieldTitle_originatedFromPartyId();
    @DefaultMessage("Originated From Role Type Id")
    String formFieldTitle_originatedFromRoleTypeId();
    @DefaultMessage("Override Gl Account Id")
    String formFieldTitle_overrideGlAccountId();
    @DefaultMessage("Owner Content Id")
    String formFieldTitle_ownerContentId();
    @DefaultMessage("Date Paid")
    String formFieldTitle_paidDate();
    @DefaultMessage("Fixed Asset Parent Id")
    String formFieldTitle_parentFixedAssetId();
    @DefaultMessage("Parent Gl Account Id")
    String formFieldTitle_parentGlAccountId();
    @DefaultMessage("Parent Group Id")
    String formFieldTitle_parentGroupId();
    @DefaultMessage("Parent Invoice Id")
    String formFieldTitle_parentInvoiceId();
    @DefaultMessage("Parent Invoice Item Seq Id")
    String formFieldTitle_parentInvoiceItemSeqId();
    @DefaultMessage("Parent Shopping List Id")
    String formFieldTitle_parentShoppingListId();
    @DefaultMessage("Parent Type Id")
    String formFieldTitle_parentTypeId();
    @DefaultMessage("Party Classification Group Id")
    String formFieldTitle_partyClassificationGroupId();
    @DefaultMessage("Party Classification Type Id")
    String formFieldTitle_partyClassificationTypeId();
    @DefaultMessage("Party Id")
    String formFieldTitle_partyId();
    @DefaultMessage("From Party ID")
    String formFieldTitle_partyIdFrom();
    @DefaultMessage("To Party ID")
    String formFieldTitle_partyIdTo();
    @DefaultMessage("Party Relationship Name")
    String formFieldTitle_partyRelationshipName();
    @DefaultMessage("Party Relationship Type Id")
    String formFieldTitle_partyRelationshipTypeId();
    @DefaultMessage("Party Tax Id")
    String formFieldTitle_partyTaxId();
    @DefaultMessage("Passport Expire Date")
    String formFieldTitle_passportExpireDate();
    @DefaultMessage("Passport Number")
    String formFieldTitle_passportNumber();
    @DefaultMessage("Password Hint")
    String formFieldTitle_passwordHint();
    @DefaultMessage("Pay To Party Id")
    String formFieldTitle_payToPartyId();
    @DefaultMessage("American Express")
    String formFieldTitle_paymentAmEx();
    @DefaultMessage("Already Applied")
    String formFieldTitle_paymentApplied();
    @DefaultMessage("Amount to Apply")
    String formFieldTitle_paymentApplyNow();
    @DefaultMessage("Credit card")
    String formFieldTitle_paymentCCAccepted();
    @DefaultMessage("Cash on delivery")
    String formFieldTitle_paymentCOD();
    @DefaultMessage("Cash On Delivery After Paid")
    String formFieldTitle_paymentCODPrePayDelivery();
    @DefaultMessage("Cash-in-person")
    String formFieldTitle_paymentCashInPerson();
    @DefaultMessage("Payment on delivery")
    String formFieldTitle_paymentCashOnPickup();
    @DefaultMessage("Discover card")
    String formFieldTitle_paymentDiscover();
    @DefaultMessage("Payment Gateway Response Id")
    String formFieldTitle_paymentGatewayResponseId();
    @DefaultMessage("Payment Id")
    String formFieldTitle_paymentId();
    @DefaultMessage("Money order/cashiers check")
    String formFieldTitle_paymentMOCC();
    @DefaultMessage("Payment Method Id")
    String formFieldTitle_paymentMethodId();
    @DefaultMessage("Payment Method Type")
    String formFieldTitle_paymentMethodTypeId();
    @DefaultMessage("Payment Methods Accepted")
    String formFieldTitle_paymentMethodsAccepted();
    @DefaultMessage("Direct transfer of money")
    String formFieldTitle_paymentMoneyXferAccepted();
    @DefaultMessage("PayPal")
    String formFieldTitle_paymentPayPal();
    @DefaultMessage("Personal check")
    String formFieldTitle_paymentPersonalCheck();
    @DefaultMessage("Payment Preference ID")
    String formFieldTitle_paymentPreferenceId();
    @DefaultMessage("Reference No")
    String formFieldTitle_paymentRefNum();
    @DefaultMessage("Payment Service Type Enum Id")
    String formFieldTitle_paymentServiceTypeEnumId();
    @DefaultMessage("Payment Type ID")
    String formFieldTitle_paymentTypeId();
    @DefaultMessage("Payment Types")
    String formFieldTitle_paymentTypes();
    @DefaultMessage("Visa/Mastercard")
    String formFieldTitle_paymentVisaMC();
    @DefaultMessage("Per Milli Second")
    String formFieldTitle_perMilliSecond();
    @DefaultMessage("Percent Complete")
    String formFieldTitle_percentComplete();
    @DefaultMessage("Percentage")
    String formFieldTitle_percentage();
    @DefaultMessage("Personal Title")
    String formFieldTitle_personalTitle();
    @DefaultMessage("Physical Inventory Date")
    String formFieldTitle_physicalInventoryDate();
    @DefaultMessage("Physical Inventory Id")
    String formFieldTitle_physicalInventoryId();
    @DefaultMessage("Postal Code")
    String formFieldTitle_postalCode();
    @DefaultMessage("Posted Balance")
    String formFieldTitle_postedBalance();
    @DefaultMessage("Preferred Contact Mech Id")
    String formFieldTitle_preferredContactMechId();
    @DefaultMessage("Preferred Currency Uom Id")
    String formFieldTitle_preferredCurrencyUomId();
    @DefaultMessage("Price")
    String formFieldTitle_price();
    @DefaultMessage("Primary Parent Category Id")
    String formFieldTitle_primaryParentCategoryId();
    @DefaultMessage("Primary Product Category Id")
    String formFieldTitle_primaryProductCategoryId();
    @DefaultMessage("Primary Store Group Id")
    String formFieldTitle_primaryStoreGroupId();
    @DefaultMessage("Priority")
    String formFieldTitle_priority();
    @DefaultMessage("Privilege Enum Id")
    String formFieldTitle_privilegeEnumId();
    @DefaultMessage("Prod Cat Content Type Id")
    String formFieldTitle_prodCatContentTypeId();
    @DefaultMessage("Product Catalog Category Type Id")
    String formFieldTitle_prodCatalogCategoryTypeId();
    @DefaultMessage("Product Category Id")
    String formFieldTitle_productCategoryId();
    @DefaultMessage("Product Category Type Id")
    String formFieldTitle_productCategoryTypeId();
    @DefaultMessage("ProductConfigItemType")
    String formFieldTitle_productConfigItemType();
    @DefaultMessage("Product Content Type Id")
    String formFieldTitle_productContentTypeId();
    @DefaultMessage("Product Feature")
    String formFieldTitle_productFeature();
    @DefaultMessage("Product Feature Category Id")
    String formFieldTitle_productFeatureCategoryId();
    @DefaultMessage("Product Feature Id")
    String formFieldTitle_productFeatureId();
    @DefaultMessage("Product Feature Type Id")
    String formFieldTitle_productFeatureTypeId();
    @DefaultMessage("Product Id")
    String formFieldTitle_productId();
    @DefaultMessage("Product Id For")
    String formFieldTitle_productIdFor();
    @DefaultMessage("Product Id In")
    String formFieldTitle_productIdIn();
    @DefaultMessage("Product Id In Subst")
    String formFieldTitle_productIdInSubst();
    @DefaultMessage("Product Maintenance")
    String formFieldTitle_productMaintSeqId();
    @DefaultMessage("Product Maint Type Id")
    String formFieldTitle_productMaintTypeId();
    @DefaultMessage("Product Meter Type Id")
    String formFieldTitle_productMeterTypeId();
    @DefaultMessage("Product Price Purpose Id")
    String formFieldTitle_productPricePurposeId();
    @DefaultMessage("Product Id")
    String formFieldTitle_productProductId();
    @DefaultMessage("Product Promo Action Seq Id")
    String formFieldTitle_productPromoActionSeqId();
    @DefaultMessage("Product Promo Code Id")
    String formFieldTitle_productPromoCodeId();
    @DefaultMessage("Product Promo Id")
    String formFieldTitle_productPromoId();
    @DefaultMessage("Product Promo Name")
    String formFieldTitle_productPromoName();
    @DefaultMessage("Product Promo Rule Id")
    String formFieldTitle_productPromoRuleId();
    @DefaultMessage("Product Store Id")
    String formFieldTitle_productStoreId();
    @DefaultMessage("Production Capacity")
    String formFieldTitle_productionCapacity();
    @DefaultMessage("production Runs")
    String formFieldTitle_productionRuns();
    @DefaultMessage("Produt Id")
    String formFieldTitle_produtId();
    @DefaultMessage("Promo Name")
    String formFieldTitle_promoName();
    @DefaultMessage("Prorate Shipping")
    String formFieldTitle_prorateShipping();
    @DefaultMessage("Purchase From Date")
    String formFieldTitle_purchaseFromDate();
    @DefaultMessage("Purchase Order Id")
    String formFieldTitle_purchaseOrderId();
    @DefaultMessage("Purchase Thru Date")
    String formFieldTitle_purchaseThruDate();
    @DefaultMessage("Quantity")
    String formFieldTitle_quantity();
    @DefaultMessage("Quantity On Hand Var")
    String formFieldTitle_quantityOnHandVar();
    @DefaultMessage("Quantity Produced")
    String formFieldTitle_quantityProduced();
    @DefaultMessage("Quantity Rejected")
    String formFieldTitle_quantityRejected();
    @DefaultMessage("Quantity To Produce")
    String formFieldTitle_quantityToProduce();
    @DefaultMessage("Quantity Uom Id")
    String formFieldTitle_quantityUomId();
    @DefaultMessage("Quick Assign Party Id")
    String formFieldTitle_quickAssignPartyId();
    @DefaultMessage("Quote Adjustment Id")
    String formFieldTitle_quoteAdjustmentId();
    @DefaultMessage("Quote Id")
    String formFieldTitle_quoteId();
    @DefaultMessage("Quote Id Prefix")
    String formFieldTitle_quoteIdPrefix();
    @DefaultMessage("Quote Item Seq Id")
    String formFieldTitle_quoteItemSeqId();
    @DefaultMessage("Quote Name")
    String formFieldTitle_quoteName();
    @DefaultMessage("Quote Sequence")
    String formFieldTitle_quoteSequenceEnumId();
    @DefaultMessage("Rate")
    String formFieldTitle_rate();
    @DefaultMessage("Reason")
    String formFieldTitle_reason();
    @DefaultMessage("Receipt Id")
    String formFieldTitle_receiptId();
    @DefaultMessage("Reconcile Status Id")
    String formFieldTitle_reconcileStatusId();
    @DefaultMessage("Recurrence Info Id")
    String formFieldTitle_recurrenceInfoId();
    @DefaultMessage("Reference Num")
    String formFieldTitle_referenceNum();
    @DefaultMessage("Registration Date")
    String formFieldTitle_registrationDate();
    @DefaultMessage("Remaining Sub Total")
    String formFieldTitle_remainingSubTotal();
    @DefaultMessage("remove")
    String formFieldTitle_remove();
    @DefaultMessage("Remove")
    String formFieldTitle_removeButton();
    @DefaultMessage("Repeat Count")
    String formFieldTitle_repeatCount();
    @DefaultMessage("Requests Link")
    String formFieldTitle_requestsLink();
    @DefaultMessage("Require Customer Role")
    String formFieldTitle_requireCustomerRole();
    @DefaultMessage("Require Email Or Party")
    String formFieldTitle_requireEmailOrParty();
    @DefaultMessage("Require Inventory")
    String formFieldTitle_requireInventory();
    @DefaultMessage("Require Tax Id For Exemption")
    String formFieldTitle_requireTaxIdForExemption();
    @DefaultMessage("Required By Date")
    String formFieldTitle_requiredByDate();
    @DefaultMessage("requirement By Date")
    String formFieldTitle_requirementByDate();
    @DefaultMessage("Requirement Description")
    String formFieldTitle_requirementDescription();
    @DefaultMessage("Requirement Id")
    String formFieldTitle_requirementId();
    @DefaultMessage("Requirement Method Enum Id")
    String formFieldTitle_requirementMethodEnumId();
    @DefaultMessage("Requirement Start Date")
    String formFieldTitle_requirementStartDate();
    @DefaultMessage("Requirement Type Id")
    String formFieldTitle_requirementTypeId();
    @DefaultMessage("Reserv2nd P P Perc")
    String formFieldTitle_reserv2ndPPPerc();
    @DefaultMessage("Reserv Nth P P Perc")
    String formFieldTitle_reservNthPPPerc();
    @DefaultMessage("Reserv Persons")
    String formFieldTitle_reservPersons();
    @DefaultMessage("Reserve Inventory")
    String formFieldTitle_reserveInventory();
    @DefaultMessage("Reserve Order Enum Id")
    String formFieldTitle_reserveOrderEnumId();
    @DefaultMessage("Residence Status Enum Id")
    String formFieldTitle_residenceStatusEnumId();
    @DefaultMessage("Response Required Date")
    String formFieldTitle_responseRequiredDate();
    @DefaultMessage("Response Service")
    String formFieldTitle_responseService();
    @DefaultMessage("Retry Failed Auths")
    String formFieldTitle_retryFailedAuths();
    @DefaultMessage("Revision Number")
    String formFieldTitle_revisionNumber();
    @DefaultMessage("Role Type Id")
    String formFieldTitle_roleTypeId();
    @DefaultMessage("Role Type Id From")
    String formFieldTitle_roleTypeIdFrom();
    @DefaultMessage("Roletype ID to")
    String formFieldTitle_roleTypeIdTo();
    @DefaultMessage("routingId")
    String formFieldTitle_routingId();
    @DefaultMessage("Rule Id")
    String formFieldTitle_ruleId();
    @DefaultMessage("Rule Operator")
    String formFieldTitle_ruleOperator();
    @DefaultMessage("Rule Seq Id")
    String formFieldTitle_ruleSeqId();
    @DefaultMessage("Sales Channel Enum Id")
    String formFieldTitle_salesChannelEnumId();
    @DefaultMessage("Sales Tax Amount")
    String formFieldTitle_salesTaxAmount();
    @DefaultMessage("Salutation")
    String formFieldTitle_salutation();
    @DefaultMessage("Schedule Work Effort Id")
    String formFieldTitle_scheduleWorkEffortId();
    @DefaultMessage("Scope")
    String formFieldTitle_scopeEnumId();
    @DefaultMessage("Scrap Factor")
    String formFieldTitle_scrapFactor();
    @DefaultMessage("Search")
    String formFieldTitle_searchButton();
    @DefaultMessage("Search Variants")
    String formFieldTitle_searchVariants();
    @DefaultMessage("Secure Content Prefix")
    String formFieldTitle_secureContentPrefix();
    @DefaultMessage("Select Payment Type Per Item")
    String formFieldTitle_selectPaymentTypePerItem();
    @DefaultMessage("Selected Amount")
    String formFieldTitle_selectedAmount();
    @DefaultMessage("Send Cc")
    String formFieldTitle_sendCc();
    @DefaultMessage("Send To")
    String formFieldTitle_sendTo();
    @DefaultMessage("Sequence Num")
    String formFieldTitle_sequenceNum();
    @DefaultMessage("Serial Number")
    String formFieldTitle_serialNumber();
    @DefaultMessage("Service Loader Name")
    String formFieldTitle_serviceLoaderName();
    @DefaultMessage("Service Name")
    String formFieldTitle_serviceName();
    @DefaultMessage("Settlement")
    String formFieldTitle_settlementTermId();
    @DefaultMessage("Ship After Date")
    String formFieldTitle_shipAfterDate();
    @DefaultMessage("Ship By Date")
    String formFieldTitle_shipByDate();
    @DefaultMessage("Shipment Id")
    String formFieldTitle_shipmentId();
    @DefaultMessage("Shipment Method Type Id")
    String formFieldTitle_shipmentMethodTypeId();
    @DefaultMessage("Shipment Package Seq Id")
    String formFieldTitle_shipmentPackageSeqId();
    @DefaultMessage("Shipment Route Segment Id")
    String formFieldTitle_shipmentRouteSegmentId();
    @DefaultMessage("Shopping List Id")
    String formFieldTitle_shoppingListId();
    @DefaultMessage("Shopping List Type Id")
    String formFieldTitle_shoppingListTypeId();
    @DefaultMessage("Show Checkout Gift Options")
    String formFieldTitle_showCheckoutGiftOptions();
    @DefaultMessage("Show In Select")
    String formFieldTitle_showInSelect();
    @DefaultMessage("Show Prices With Vat Tax")
    String formFieldTitle_showPricesWithVatTax();
    @DefaultMessage("Show Tax Is Exempt")
    String formFieldTitle_showTaxIsExempt();
    @DefaultMessage("Site Name")
    String formFieldTitle_siteName();
    @DefaultMessage("Skids Pallets")
    String formFieldTitle_skidsPallets();
    @DefaultMessage("Social Security Number")
    String formFieldTitle_socialSecurityNumber();
    @DefaultMessage("Source Percentage")
    String formFieldTitle_sourcePercentage();
    @DefaultMessage("Source Reference Id")
    String formFieldTitle_sourceReferenceId();
    @DefaultMessage("Special Terms")
    String formFieldTitle_specialTerms();
    @DefaultMessage("Standard Content Prefix")
    String formFieldTitle_standardContentPrefix();
    @DefaultMessage("Standard Lead Time Days")
    String formFieldTitle_standardLeadTimeDays();
    @DefaultMessage("Start Price")
    String formFieldTitle_startPrice();
    @DefaultMessage("State Province Geo Id")
    String formFieldTitle_stateProvinceGeoId();
    @DefaultMessage("Status Date")
    String formFieldTitle_statusDate();
    @DefaultMessage("Status Date Time")
    String formFieldTitle_statusDateTime();
    @DefaultMessage("Status History")
    String formFieldTitle_statusHistory();
    @DefaultMessage("Status ID")
    String formFieldTitle_statusId();
    @DefaultMessage("Status")
    String formFieldTitle_statusItemDescription();
    @DefaultMessage("Store Credit Valid Days")
    String formFieldTitle_storeCreditValidDays();
    @DefaultMessage("Store Name")
    String formFieldTitle_storeName();
    @DefaultMessage("Story")
    String formFieldTitle_story();
    @DefaultMessage("Sub Reference")
    String formFieldTitle_subReference();
    @DefaultMessage("Subject")
    String formFieldTitle_subject();
    @DefaultMessage("Submit")
    String formFieldTitle_submitButton();
    @DefaultMessage("Submit Caption")
    String formFieldTitle_submitCaption();
    @DefaultMessage("Subscription Id")
    String formFieldTitle_subscriptionId();
    @DefaultMessage("Subscription Resource Id")
    String formFieldTitle_subscriptionResourceId();
    @DefaultMessage("Subtitle")
    String formFieldTitle_subtitle();
    @DefaultMessage("Successive Failed Logins")
    String formFieldTitle_successiveFailedLogins();
    @DefaultMessage("Suffix")
    String formFieldTitle_suffix();
    @DefaultMessage("Supplier Commission Perc")
    String formFieldTitle_supplierCommissionPerc();
    @DefaultMessage("Supplier Pref Order Id")
    String formFieldTitle_supplierPrefOrderId();
    @DefaultMessage("Supplier Product Id")
    String formFieldTitle_supplierProductId();
    @DefaultMessage("Supplier Product Name")
    String formFieldTitle_supplierProductName();
    @DefaultMessage("Supplier Rating Type Id")
    String formFieldTitle_supplierRatingTypeId();
    @DefaultMessage("Survey Id")
    String formFieldTitle_surveyId();
    @DefaultMessage("Survey Name")
    String formFieldTitle_surveyName();
    @DefaultMessage("Sync Status Id")
    String formFieldTitle_syncStatusId();
    @DefaultMessage("Target")
    String formFieldTitle_target();
    @DefaultMessage("Target Type Enum Id")
    String formFieldTitle_targetTypeEnumId();
    @DefaultMessage("Tax Auth Geo ID")
    String formFieldTitle_taxAuthGeoId();
    @DefaultMessage("Tax Authority Party")
    String formFieldTitle_taxAuthPartyId();
    @DefaultMessage("Tax Authority Rate Seq Id")
    String formFieldTitle_taxAuthorityRateSeqId();
    @DefaultMessage("Tax Form for Organization")
    String formFieldTitle_taxFormId();
    @DefaultMessage("Tax Id Format Pattern")
    String formFieldTitle_taxIdFormatPattern();
    @DefaultMessage("Tax Percentage")
    String formFieldTitle_taxPercentage();
    @DefaultMessage("Tax Shipping")
    String formFieldTitle_taxShipping();
    @DefaultMessage("Taxable Flag")
    String formFieldTitle_taxableFlag();
    @DefaultMessage("Template Data Resource Id")
    String formFieldTitle_templateDataResourceId();
    @DefaultMessage("Term Days")
    String formFieldTitle_termDays();
    @DefaultMessage("termUomId")
    String formFieldTitle_termUomId();
    @DefaultMessage("Term Value")
    String formFieldTitle_termValue();
    @DefaultMessage("Terminal Id")
    String formFieldTitle_terminalId();
    @DefaultMessage("Text Data")
    String formFieldTitle_textData();
    @DefaultMessage("Thru Date")
    String formFieldTitle_thruDate();
    @DefaultMessage("Time Transparency")
    String formFieldTitle_timeTransparency();
    @DefaultMessage("Timesheet Id")
    String formFieldTitle_timesheetId();
    @DefaultMessage("Title")
    String formFieldTitle_title();
    @DefaultMessage("To payment ID")
    String formFieldTitle_toPaymentId();
    @DefaultMessage("To Tax Auth Geo Id")
    String formFieldTitle_toTaxAuthGeoId();
    @DefaultMessage("To Tax Auth Party Id")
    String formFieldTitle_toTaxAuthPartyId();
    @DefaultMessage("Tot Issued Quantity")
    String formFieldTitle_totIssuedQuantity();
    @DefaultMessage("Tot Ordered Quantity")
    String formFieldTitle_totOrderedQuantity();
    @DefaultMessage("Tot Planned Quantity")
    String formFieldTitle_totPlannedQuantity();
    @DefaultMessage("Total")
    String formFieldTitle_total();
    @DefaultMessage("Total Cubic Size")
    String formFieldTitle_totalCubicSize();
    @DefaultMessage("Cubic Measurement")
    String formFieldTitle_totalCubicUomId();
    @DefaultMessage("Total Milli Seconds Allowed")
    String formFieldTitle_totalMilliSecondsAllowed();
    @DefaultMessage("Total Money Allowed")
    String formFieldTitle_totalMoneyAllowed();
    @DefaultMessage("Total Weight")
    String formFieldTitle_totalWeight();
    @DefaultMessage("Weight Measurement")
    String formFieldTitle_totalWeightUomId();
    @DefaultMessage("Total Years Work Experience")
    String formFieldTitle_totalYearsWorkExperience();
    @DefaultMessage("Tracking Code Id")
    String formFieldTitle_trackingCodeId();
    @DefaultMessage("Trans Code Enum Id")
    String formFieldTitle_transCodeEnumId();
    @DefaultMessage("Transaction Date")
    String formFieldTitle_transactionDate();
    @DefaultMessage("Type")
    String formFieldTitle_type();
    @DefaultMessage("unassigned Requirements")
    String formFieldTitle_unassignedRequirements();
    @DefaultMessage("Units Included")
    String formFieldTitle_unitsIncluded();
    @DefaultMessage("Units Pieces")
    String formFieldTitle_unitsPieces();
    @DefaultMessage("Universal Id")
    String formFieldTitle_universalId();
    @DefaultMessage("UOM")
    String formFieldTitle_uomId();
    @DefaultMessage("Update")
    String formFieldTitle_updateButton();
    @DefaultMessage("Use Case")
    String formFieldTitle_useCase();
    @DefaultMessage("Use Count Limit")
    String formFieldTitle_useCountLimit();
    @DefaultMessage("Use Days Limit")
    String formFieldTitle_useDaysLimit();
    @DefaultMessage("Use Invoice Id For Returns")
    String formFieldTitle_useInvoiceIdForReturns();
    @DefaultMessage("Use Limit Per Customer")
    String formFieldTitle_useLimitPerCustomer();
    @DefaultMessage("Use Limit Per Order")
    String formFieldTitle_useLimitPerOrder();
    @DefaultMessage("Use Limit Per Promotion")
    String formFieldTitle_useLimitPerPromotion();
    @DefaultMessage("Use Primary Email Username")
    String formFieldTitle_usePrimaryEmailUsername();
    @DefaultMessage("Use Role Type Id")
    String formFieldTitle_useRoleTypeId();
    @DefaultMessage("Use Time")
    String formFieldTitle_useTime();
    @DefaultMessage("Use Time Uom Id")
    String formFieldTitle_useTimeUomId();
    @DefaultMessage("User Entered")
    String formFieldTitle_userEntered();
    @DefaultMessage("User Login Id")
    String formFieldTitle_userLoginId();
    @DefaultMessage("Variable Cost")
    String formFieldTitle_variableCost();
    @DefaultMessage("Variance Reason Id")
    String formFieldTitle_varianceReasonId();
    @DefaultMessage("Vat Tax Auth Geo Id")
    String formFieldTitle_vatTaxAuthGeoId();
    @DefaultMessage("Vat Tax Auth Party Id")
    String formFieldTitle_vatTaxAuthPartyId();
    @DefaultMessage("View Cart On Add")
    String formFieldTitle_viewCartOnAdd();
    @DefaultMessage("Visit Id")
    String formFieldTitle_visitId();
    @DefaultMessage("Visitor Id")
    String formFieldTitle_visitorId();
    @DefaultMessage("Voucher Ref")
    String formFieldTitle_voucherRef();
    @DefaultMessage("Web Site Id")
    String formFieldTitle_webSiteId();
    @DefaultMessage("Web Site Url")
    String formFieldTitle_webSiteUrl();
    @DefaultMessage("Weight")
    String formFieldTitle_weight();
    @DefaultMessage("Work Effort Assoc Type Id")
    String formFieldTitle_workEffortAssocTypeId();
    @DefaultMessage("Work Effort Id")
    String formFieldTitle_workEffortId();
    @DefaultMessage("Work Effort Id From")
    String formFieldTitle_workEffortIdFrom();
    @DefaultMessage("Work Effort Id To")
    String formFieldTitle_workEffortIdTo();
    @DefaultMessage("Work Effort Name")
    String formFieldTitle_workEffortName();
    @DefaultMessage("Work Effort Parent Id")
    String formFieldTitle_workEffortParentId();
    @DefaultMessage("Work Effort Purpose Type Id")
    String formFieldTitle_workEffortPurposeTypeId();
    @DefaultMessage("Work Effort Type Id")
    String formFieldTitle_workEffortTypeId();
    @DefaultMessage("Work Req Fulf Type Description")
    String formFieldTitle_workReqFulfTypeDescription();
    @DefaultMessage("Work Req Fulf Type Id")
    String formFieldTitle_workReqFulfTypeId();
    @DefaultMessage("Years With Employer")
    String formFieldTitle_yearsWithEmployer();
    @DefaultMessage("French")
    String fr();
    @DefaultMessage("From Time Period")
    String fromTimePeriod();
    @DefaultMessage("You do not have permission to run {0}. (\"CATALOG{1}\" or \"CATALOG_ADMIN\" needed)")
    String generalCatalogPermissionError(String methodShortDescription, String securityAction);
    @DefaultMessage("Fiscal Type")
    String glFiscalType();
    @DefaultMessage("ISBN")
    String goodIdentificationType_description_ISBN();
    @DefaultMessage("Manufacturer (Model) Number")
    String goodIdentificationType_description_MANUFACTURER_ID_NO();
    @DefaultMessage("Model Year")
    String goodIdentificationType_description_MODEL_YEAR();
    @DefaultMessage("Other")
    String goodIdentificationType_description_OTHER_ID();
    @DefaultMessage("SKU")
    String goodIdentificationType_description_SKU();
    @DefaultMessage("UPCA")
    String goodIdentificationType_description_UPCA();
    @DefaultMessage("UPCE")
    String goodIdentificationType_description_UPCE();
    @DefaultMessage("Greek")
    String gr();
    @DefaultMessage("You might also be interested in :")
    String help_also_interested_in();
    @DefaultMessage("Id")
    String id();
    @DefaultMessage("Non-Serialized")
    String inventoryItemType_description_NON_SERIAL_INV_ITEM();
    @DefaultMessage("Serialized")
    String inventoryItemType_description_SERIALIZED_INV_ITEM();
    @DefaultMessage("CLOSED")
    String isClosed();
    @DefaultMessage("NOT CLOSED")
    String isNotClosed();
    @DefaultMessage("Italian")
    String it();
    @DefaultMessage("OK")
    String item_availableOk();
    @DefaultMessage("Quantity requested: {0} Quantity available: {1}")
    String item_availableQnt(String quantityReq, String quantityAvail);
    @DefaultMessage("Tried to add the Product {0} (productId: {1}) to the cart. This product is no longer available for sale, so not adding.")
    String item_cannot_add_product_no_longer_available(String productName, String productId);
    @DefaultMessage("Tried to add the Product {0} (productId: {1}) to the cart, not adding: the product is not configured correctly.")
    String item_cannot_add_product_not_configured_correctly(String productName, String productId);
    @DefaultMessage("Tried to add the Product {0} (productId: {1}) to the cart. This product has not yet been made available for sale, so not adding.")
    String item_cannot_add_product_not_yet_available(String productName, String productId);
    @DefaultMessage("Tried to add the Virtual Product {0} (productId: {1}) to the cart, not adding.")
    String item_cannot_add_product_virtual(String productName, String productId);
    @DefaultMessage("Could not find a related Fixed Asset for the product: {0}")
    String item_cannot_find_Fixed_Asset(String productId);
    @DefaultMessage("fixed_Asset_not_found. Fixed AssetId: {0}")
    String item_fixed_Asset_not_found(String fixedAssetId);
    @DefaultMessage("The maximum number of persons renting this object is {0} however you have requested: {1} !")
    String item_maximum_number_of_person_renting(String reservMaxPersons, String reservPersons);
    @DefaultMessage("The starting date of the reservation is missing....")
    String item_missing_reservation_starting_date();
    @DefaultMessage("I am sorry, not available at these dates: {0} item not added to the shopping cart.....")
    String item_notAvailable(String resultMessage);
    @DefaultMessage("Please enter a number of days, 1, or more....")
    String item_number_of_days();
    @DefaultMessage("Product not available, ProductId: {0} message: {1}")
    String item_product_not_available(String productId, String availableMessage);
    @DefaultMessage("Product not found, not adding to cart. [productId: {0}]")
    String item_product_not_found(String productId);
    @DefaultMessage("You can only make reservation starting tomorrow....")
    String item_reservation_from_tomorrow();
    @DefaultMessage("ERROR: There are no items to order")
    String items_none();
    @DefaultMessage("Last Name")
    String lastName();
    @DefaultMessage("Lead Id")
    String leadId();
    @DefaultMessage("Lead List")
    String leadList();
    @DefaultMessage("Activity List")
    String activityList();
    @DefaultMessage("Case List")
    String caseList();
    @DefaultMessage("List Gl Accounts")
    String listAccounts();
    @DefaultMessage("List Price Range")
    String listPriceRange();
    @DefaultMessage("Loading...")
    String loading();
    @DefaultMessage("Manufacturing")
    String manufacturing();
    @DefaultMessage("ATP Date")
    String manufacturingATPDate();
    @DefaultMessage("Completion Date")
    String manufacturingActualCompletionDate();
    @DefaultMessage("Actual Costs")
    String manufacturingActualCosts();
    @DefaultMessage("Actual End Date/Time")
    String manufacturingActualEndDateTime();
    @DefaultMessage("Actual Materials")
    String manufacturingActualMaterials();
    @DefaultMessage("Start Date")
    String manufacturingActualStartDate();
    @DefaultMessage("Actual Start Date/Time")
    String manufacturingActualStartDateTime();
    @DefaultMessage("Add a existing RoutingTask")
    String manufacturingAddExistingRoutingTask();
    @DefaultMessage("Assign Fixed Asset")
    String manufacturingAddProductionRunFixedAssetAssign();
    @DefaultMessage("Add ProductComponent to ProductionRun")
    String manufacturingAddProductionRunProductComponent();
    @DefaultMessage("Add Qty Produced")
    String manufacturingAddQuantityProduced();
    @DefaultMessage("Add Qty Rejected")
    String manufacturingAddQuantityRejected();
    @DefaultMessage("Add a RoutingTask")
    String manufacturingAddRoutingTask();
    @DefaultMessage("Add Actual Setup Time")
    String manufacturingAddSetupTime();
    @DefaultMessage("Add Actual Task Time")
    String manufacturingAddTaskTime();
    @DefaultMessage("Any Fixed Asset Group")
    String manufacturingAnyMachineGroup();
    @DefaultMessage("Bill Of Materials")
    String manufacturingBillOfMaterials();
    @DefaultMessage("Bom Simulation")
    String manufacturingBomSimulation();
    @DefaultMessage("Bom Type")
    String manufacturingBomType();
    @DefaultMessage("Calendar")
    String manufacturingCalendar();
    @DefaultMessage("ManufacturingCalendarCapacity")
    String manufacturingCalendarCapacity();
    @DefaultMessage("Exception Day")
    String manufacturingCalendarExceptionDate();
    @DefaultMessage("ManufacturingCalendarExceptionDayIdAlreadyExist")
    String manufacturingCalendarExceptionDayIdAlreadyExist();
    @DefaultMessage("There is still an exception day for this calendar")
    String manufacturingCalendarExceptionDayUseCalendar();
    @DefaultMessage("Exception Week")
    String manufacturingCalendarExceptionWeek();
    @DefaultMessage("ManufacturingCalendarExceptionWeekIdAlreadyExist")
    String manufacturingCalendarExceptionWeekIdAlreadyExist();
    @DefaultMessage("There is still an exception week for this calendar")
    String manufacturingCalendarExceptionWeekUseCalendar();
    @DefaultMessage("Calendar ID")
    String manufacturingCalendarId();
    @DefaultMessage("CalendarId already exist")
    String manufacturingCalendarIdAlreadyExist();
    @DefaultMessage("You do not have permission to view this page. (\"MANUFACTURING_VIEW\" or \"MANUFACTURING_ADMIN\" needed)")
    String manufacturingCalendarPermissionError();
    @DefaultMessage("There is still an calendar which use this week")
    String manufacturingCalendarUseCalendarWeek();
    @DefaultMessage("Week")
    String manufacturingCalendarWeek();
    @DefaultMessage("There is still an exception week which use this week")
    String manufacturingCalendarWeekExceptionUseCalendarWeek();
    @DefaultMessage("Calendar Week ID")
    String manufacturingCalendarWeekId();
    @DefaultMessage("CalendarWeekId already exist")
    String manufacturingCalendarWeekIdAlreadyExist();
    @DefaultMessage("Calendar Week ID does''nt exist")
    String manufacturingCalendarWeekIdNotExisting();
    @DefaultMessage("Weeks")
    String manufacturingCalendarWeeks();
    @DefaultMessage("Calendars")
    String manufacturingCalendars();
    @DefaultMessage("Cancel")
    String manufacturingCancel();
    @DefaultMessage("Comments")
    String manufacturingComments();
    @DefaultMessage("OFBiz: Manufacturing Manager")
    String manufacturingCompanyName();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String manufacturingCompanySubtitle();
    @DefaultMessage("Complete")
    String manufacturingCompleteProductionRunTask();
    @DefaultMessage("Components of Shipment Plan")
    String manufacturingComponentsOfShipmentPlan();
    @DefaultMessage("Confirm")
    String manufacturingConfirmProductionRun();
    @DefaultMessage("Copy a routingTask and Add it")
    String manufacturingCopyAndAddRoutingTask();
    @DefaultMessage("Copy BOM")
    String manufacturingCopyBOMAssocs();
    @DefaultMessage("To Product Id")
    String manufacturingCopyToProductId();
    @DefaultMessage("Costs")
    String manufacturingCostCalcs();
    @DefaultMessage("Create calendar")
    String manufacturingCreateCalendar();
    @DefaultMessage("Create Calendar Week")
    String manufacturingCreateCalendarWeek();
    @DefaultMessage("Create a Fixed Asset group")
    String manufacturingCreateMachineGroup();
    @DefaultMessage("Security Error: to run this operation you must have the MANUFACTURING_CREATE or MANUFACTURING_ADMIN permission")
    String manufacturingCreatePermissionError();
    @DefaultMessage("Create a Production Run")
    String manufacturingCreateProductionRun();
    @DefaultMessage("Cutting List")
    String manufacturingCuttingList();
    @DefaultMessage("Cutting List Report")
    String manufacturingCuttingListReport();
    @DefaultMessage("Declare")
    String manufacturingDeclareProductionRunTask();
    @DefaultMessage("Security Error: to run this operation you must have the MANUFACTURING_DELETE or MANUFACTURING_ADMIN permission")
    String manufacturingDeletePermissionError();
    @DefaultMessage("Delivery date")
    String manufacturingDeliveryDate();
    @DefaultMessage("This production run is required before the following productions could be completed")
    String manufacturingDependentProductionRuns();
    @DefaultMessage("Dependent Production Runs")
    String manufacturingDependentWorkEfforts();
    @DefaultMessage("The following existing association could cause loops: {0} --> {1}")
    String manufacturingDuplicatedComponentInBOM(String param_0, String param_1);
    @DefaultMessage("Edit Calendar Exception day for")
    String manufacturingEditCalendarExceptionDayFor();
    @DefaultMessage("Edit Calendar Exception week for")
    String manufacturingEditCalendarExceptionWeekFor();
    @DefaultMessage("Edit Week")
    String manufacturingEditCalendarWeek();
    @DefaultMessage("Edit Cost Component Calc Entries")
    String manufacturingEditCostComponentCalc();
    @DefaultMessage("Edit Fixed Asset")
    String manufacturingEditMachine();
    @DefaultMessage("Edit Fixed AssetGroup")
    String manufacturingEditMachineGroup();
    @DefaultMessage("Edit BOM")
    String manufacturingEditProductBom();
    @DefaultMessage("Edit Production Run")
    String manufacturingEditProductionRun();
    @DefaultMessage("Edit Routing")
    String manufacturingEditRouting();
    @DefaultMessage("Edit Routing Product Link")
    String manufacturingEditRoutingProductLink();
    @DefaultMessage("Edit RoutingTask")
    String manufacturingEditRoutingTask();
    @DefaultMessage("Edit RoutingTask Assoc")
    String manufacturingEditRoutingTaskAssoc();
    @DefaultMessage("Edit RoutingTask Association Date validity")
    String manufacturingEditRoutingTaskAssocDateValidity();
    @DefaultMessage("Edit RoutingTask - ID")
    String manufacturingEditRoutingTaskId();
    @DefaultMessage("Error, Bom does not exist")
    String manufacturingErrorBomNotExist();
    @DefaultMessage("Calculated Completion Date")
    String manufacturingEstimatedCompletionDate();
    @DefaultMessage("Estimated Start Date")
    String manufacturingEstimatedStartDate();
    @DefaultMessage("Star of Exception Date")
    String manufacturingExceptionDateStart();
    @DefaultMessage("Date and Time of exception day")
    String manufacturingExceptionDateStartTime();
    @DefaultMessage("Explosion")
    String manufacturingExplosion();
    @DefaultMessage("Explosion (only for products needing manufacturing)")
    String manufacturingExplosionManufacturing();
    @DefaultMessage("Single Level Explosion")
    String manufacturingExplosionSingleLevel();
    @DefaultMessage("The facility table does not exist")
    String manufacturingFacilityNotExist();
    @DefaultMessage("Find Bill Of Materials")
    String manufacturingFindBillOfMaterials();
    @DefaultMessage("Find Inventory Event Planned")
    String manufacturingFindInventory();
    @DefaultMessage("Find Parts")
    String manufacturingFindParts();
    @DefaultMessage("Find Production Run")
    String manufacturingFindProductionRun();
    @DefaultMessage("Find Routing")
    String manufacturingFindRouting();
    @DefaultMessage("Find Routing Tasks")
    String manufacturingFindRoutingTasks();
    @DefaultMessage("The Allocated Cost field is not formatted correctly")
    String manufacturingFixedAssetAllocatedCostNotCorrect();
    @DefaultMessage("The From date is missing")
    String manufacturingFixedAssetFromDateMissing();
    @DefaultMessage("The From Date field is not formatted correctly")
    String manufacturingFixedAssetFromDateNotCorrect();
    @DefaultMessage("FixedAsset does not exist")
    String manufacturingFixedAssetNotExist();
    @DefaultMessage("The Thru Date field is not formatted correctly")
    String manufacturingFixedAssetThruDateNotCorrect();
    @DefaultMessage("Formula")
    String manufacturingFormula();
    @DefaultMessage("From Date")
    String manufacturingFromDate();
    @DefaultMessage("Implosion")
    String manufacturingImplosion();
    @DefaultMessage("Instruction")
    String manufacturingInstruction();
    @DefaultMessage("Inventory Event Planned")
    String manufacturingInventoryEventPlanned();
    @DefaultMessage("Can not create a record in InventoryEventPlanned")
    String manufacturingInventoryEventPlannedCreateError();
    @DefaultMessage("InventoryEventPlanned does not exist")
    String manufacturingInventoryEventPlannedNotExist();
    @DefaultMessage("InventoryEventPlanned can''t be updated")
    String manufacturingInventoryEventPlannedNotUpdate();
    @DefaultMessage("Inventory Event Type does not exist")
    String manufacturingInventoryEventTypeNotExist();
    @DefaultMessage("InventoryItem table does not exist")
    String manufacturingInventoryItemNotExis();
    @DefaultMessage("Inventory Items")
    String manufacturingInventoryItemsProduced();
    @DefaultMessage("Issue Components")
    String manufacturingIssueProductionRunTask();
    @DefaultMessage("Issued")
    String manufacturingIssuedQuantity();
    @DefaultMessage("JobShop")
    String manufacturingJobShop();
    @DefaultMessage("Init Low Level Codes")
    String manufacturingLLCInit();
    @DefaultMessage("List of weeks")
    String manufacturingListCalendarWeek();
    @DefaultMessage("List Cost Component Calc Entries")
    String manufacturingListCostComponentCalc();
    @DefaultMessage("List Of ProductionRun Components")
    String manufacturingListOfProductionRunComponents();
    @DefaultMessage("List Of ProductionRun FixedAssets")
    String manufacturingListOfProductionRunFixedAssets();
    @DefaultMessage("Tasks")
    String manufacturingListOfProductionRunRoutingTasks();
    @DefaultMessage("Deliverable Products")
    String manufacturingListProducts();
    @DefaultMessage("List Routings")
    String manufacturingListRoutings();
    @DefaultMessage("Error while listing the Bill of Material")
    String manufacturingListingBomError();
    @DefaultMessage("Fixed Asset")
    String manufacturingMachine();
    @DefaultMessage("Fixed Asset group")
    String manufacturingMachineGroup();
    @DefaultMessage("Fixed Asset group ID")
    String manufacturingMachineGroupId();
    @DefaultMessage("Fixed Asset Group ID does''nt exist")
    String manufacturingMachineGroupIdAlreadyExist();
    @DefaultMessage("Security Error: to work on Fixed Asset group you must have the MANUFACTURING_CREATE or MANUFACTURING_ADMIN permission <br>")
    String manufacturingMachineGroupPermissionError();
    @DefaultMessage("Fixed Asset ID")
    String manufacturingMachineId();
    @DefaultMessage("Fixed AssetId already exist")
    String manufacturingMachineIdAlreadyExist();
    @DefaultMessage("Security Error: to work on Fixed Asset you must have the MANUFACTURING_CREATE or MANUFACTURING_ADMIN permission <br>")
    String manufacturingMachinePermissionError();
    @DefaultMessage("Manufacturing Manager Main Page")
    String manufacturingMainPage();
    @DefaultMessage("NOTE: This application is currently in development. This page will change.")
    String manufacturingMainPageNote();
    @DefaultMessage("Manage Cost Component Calc Entries")
    String manufacturingManageCostComponentCalc();
    @DefaultMessage("Manufacturing Manager Application")
    String manufacturingManagerApplication();
    @DefaultMessage("The following production runs must be completed before this production run")
    String manufacturingMandatoryProductionRuns();
    @DefaultMessage("Mandatory Production Runs")
    String manufacturingMandatoryWorkEfforts();
    @DefaultMessage("Manufacturing Rules")
    String manufacturingManufacturingRules();
    @DefaultMessage("Materials")
    String manufacturingMaterials();
    @DefaultMessage("MRP")
    String manufacturingMrp();
    @DefaultMessage("IEP init.")
    String manufacturingMrpInitialisation();
    @DefaultMessage("An Mrp Job is Running")
    String manufacturingMrpJobIsRunning();
    @DefaultMessage("Last Job")
    String manufacturingMrpJobLastExecuted();
    @DefaultMessage("Scheduled or Running Jobs")
    String manufacturingMrpJobScheduledOrRunning();
    @DefaultMessage("Mrp Name")
    String manufacturingMrpName();
    @DefaultMessage("Need Quantity")
    String manufacturingNeedQuantity();
    @DefaultMessage("New calendar")
    String manufacturingNewCalendar();
    @DefaultMessage("New Week")
    String manufacturingNewCalendarWeek();
    @DefaultMessage("New Fixed Asset group")
    String manufacturingNewMachineGroup();
    @DefaultMessage("New Routing")
    String manufacturingNewRouting();
    @DefaultMessage("New Routing Task")
    String manufacturingNewRoutingTask();
    @DefaultMessage("Add Deliverable Product")
    String manufacturingNewRoutingTaskProduct();
    @DefaultMessage("No calendar found")
    String manufacturingNoCalendarFound();
    @DefaultMessage("No Data Available.")
    String manufacturingNoDataAvailable();
    @DefaultMessage("No Fixed Asset group found")
    String manufacturingNoMachineGroupFound();
    @DefaultMessage("No ProductionRun Selected")
    String manufacturingNoProductionRunSelected();
    @DefaultMessage("On Hand Quantity")
    String manufacturingOnHandQuantity();
    @DefaultMessage("Operation Code And Description")
    String manufacturingOperationCodeAndDescription();
    @DefaultMessage("Operation Run For Shipment")
    String manufacturingOperationRunForShipment();
    @DefaultMessage("Order Items")
    String manufacturingOrderItems();
    @DefaultMessage("Package")
    String manufacturingPackage();
    @DefaultMessage("Package Labels Report")
    String manufacturingPackageLabelsReport();
    @DefaultMessage("Manufacturing Print Production Run")
    String manufacturingPrintProductionRun();
    @DefaultMessage("Stock in")
    String manufacturingProduceQuantity();
    @DefaultMessage("ProductAssoc does not exist")
    String manufacturingProductAssocNotExist();
    @DefaultMessage("This Product is a Component of")
    String manufacturingProductComponentOf();
    @DefaultMessage("Components of this Product")
    String manufacturingProductComponents();
    @DefaultMessage("ProductFacility table does not exist")
    String manufacturingProductFacilityTableNotExist();
    @DefaultMessage("Product has no Bill of material")
    String manufacturingProductHasNoBom();
    @DefaultMessage("Product ID")
    String manufacturingProductId();
    @DefaultMessage("Product ID To")
    String manufacturingProductIdTo();
    @DefaultMessage("Product Level")
    String manufacturingProductLevel();
    @DefaultMessage("Product does not exist")
    String manufacturingProductNotExist();
    @DefaultMessage("Product Routing link doesn''t exist")
    String manufacturingProductRoutingNotExist();
    @DefaultMessage("The product Table does not exist")
    String manufacturingProductTableNotExist();
    @DefaultMessage("Production Run")
    String manufacturingProductionRun();
    @DefaultMessage("Assocs")
    String manufacturingProductionRunAssocs();
    @DefaultMessage("Close Production Run")
    String manufacturingProductionRunClose();
    @DefaultMessage("Production Run Costs")
    String manufacturingProductionRunCosts();
    @DefaultMessage("ProductionRun {0} created")
    String manufacturingProductionRunCreated(String productionRunId);
    @DefaultMessage("Production Run Declaration")
    String manufacturingProductionRunDeclaration();
    @DefaultMessage("Fixed Asset Assign")
    String manufacturingProductionRunFixedAssetAssign();
    @DefaultMessage("Fixed Asset Id is missing")
    String manufacturingProductionRunFixedAssetIdMissing();
    @DefaultMessage("Production Run ID")
    String manufacturingProductionRunId();
    @DefaultMessage("ProductionRun Name")
    String manufacturingProductionRunName();
    @DefaultMessage("ProductionRun update failed see log for more information")
    String manufacturingProductionRunNotUpdated();
    @DefaultMessage("ProductionRun Product Component")
    String manufacturingProductionRunProductComponent();
    @DefaultMessage("Cannot produce more than the production run specification.")
    String manufacturingProductionRunProductProducedNotStillAvailable();
    @DefaultMessage("ProductionRun Quantity is Missing")
    String manufacturingProductionRunQuantityMissing();
    @DefaultMessage("ProductionRun Quantity field is not formatted correctly")
    String manufacturingProductionRunQuantityNotCorrect();
    @DefaultMessage("ProductionRun StartDate is Missing")
    String manufacturingProductionRunStartDateMissing();
    @DefaultMessage("the Start Date field is incorrect, format must be AAAA-mm-jj HH:mm:ss")
    String manufacturingProductionRunStartDateNotCorrect();
    @DefaultMessage("ProductionRun status changed successfully.")
    String manufacturingProductionRunStatusChanged();
    @DefaultMessage("This status change cannot be completed because there are other production runs which this production run depends upon, and they must be completed first.")
    String manufacturingProductionRunStatusNotChangedMandatoryProductionRunFound();
    @DefaultMessage("This task cannot start because tasks before it are not finished yet.")
    String manufacturingProductionRunTaskCannotStartPrevTasksNotCompleted();
    @DefaultMessage("Production Runs")
    String manufacturingProductionRuns();
    @DefaultMessage("Products Components")
    String manufacturingProductsComponents();
    @DefaultMessage("Proposed Order")
    String manufacturingProposedOrder();
    @DefaultMessage("Quantity")
    String manufacturingQuantity();
    @DefaultMessage("Quantity Minimum")
    String manufacturingQuantityMinimum();
    @DefaultMessage("Produced")
    String manufacturingQuantityProduced();
    @DefaultMessage("Rejected")
    String manufacturingQuantityRejected();
    @DefaultMessage("Remaining")
    String manufacturingQuantityRemaining();
    @DefaultMessage("Qty To Produce")
    String manufacturingQuantityToProduce();
    @DefaultMessage("Quick Close")
    String manufacturingQuickClose();
    @DefaultMessage("Quick Complete")
    String manufacturingQuickComplete();
    @DefaultMessage("Quick Run All Tasks")
    String manufacturingQuickRunAllTasks();
    @DefaultMessage("Quick Run Task")
    String manufacturingQuickRunTask();
    @DefaultMessage("Reason")
    String manufacturingReason();
    @DefaultMessage("Reports")
    String manufacturingReports();
    @DefaultMessage("Returned")
    String manufacturingReturnedQuantity();
    @DefaultMessage("Routing")
    String manufacturingRouting();
    @DefaultMessage("Routing has no Routing Task")
    String manufacturingRoutingHasNoRoutingTask();
    @DefaultMessage("Routing Id")
    String manufacturingRoutingId();
    @DefaultMessage("RoutingId is missing")
    String manufacturingRoutingIdMissing();
    @DefaultMessage("Routing Name")
    String manufacturingRoutingName();
    @DefaultMessage("The Routing Seq Id format is not correct")
    String manufacturingRoutingSeqIdFormatNotCorrect();
    @DefaultMessage("Routing SeqId is Missing")
    String manufacturingRoutingSeqIdMissing();
    @DefaultMessage("Routing Task")
    String manufacturingRoutingTask();
    @DefaultMessage("Routing Task association creation successfull")
    String manufacturingRoutingTaskAssocCreateSuccessfully();
    @DefaultMessage("Routing Task copied Successfully")
    String manufacturingRoutingTaskCopiedSuccessfully();
    @DefaultMessage("Routing Task Costs")
    String manufacturingRoutingTaskCosts();
    @DefaultMessage("Fixed Assets")
    String manufacturingRoutingTaskFixedAssets();
    @DefaultMessage("Routing Task Id")
    String manufacturingRoutingTaskId();
    @DefaultMessage("Routing Task To is Missing")
    String manufacturingRoutingTaskToMissing();
    @DefaultMessage("Routing Tasks")
    String manufacturingRoutingTasks();
    @DefaultMessage("Routings")
    String manufacturingRoutings();
    @DefaultMessage("Run MRP")
    String manufacturingRunMrp();
    @DefaultMessage("Schedule")
    String manufacturingSchedule();
    @DefaultMessage("Scrap Factor %")
    String manufacturingScrapFactor();
    @DefaultMessage("Ship To")
    String manufacturingShipTo();
    @DefaultMessage("Shipment Id")
    String manufacturingShipmentId();
    @DefaultMessage("Shipment Plan Stock Report")
    String manufacturingShipmentPlanStockReport();
    @DefaultMessage("Shipment Plans")
    String manufacturingShipmentPlans();
    @DefaultMessage("Shop Order")
    String manufacturingShopOrder();
    @DefaultMessage("Show BOM")
    String manufacturingShowBOMAssocs();
    @DefaultMessage("Start Date")
    String manufacturingStartDate();
    @DefaultMessage("Start")
    String manufacturingStartProductionRunTask();
    @DefaultMessage("Start Time")
    String manufacturingStartTime();
    @DefaultMessage("Summarized Breakdown")
    String manufacturingSummarizedPartBreakdown();
    @DefaultMessage("Actual Time")
    String manufacturingTaskActualMilliSeconds();
    @DefaultMessage("Actual Setup Time")
    String manufacturingTaskActualSetupMillis();
    @DefaultMessage("Estimated Unit Run Time")
    String manufacturingTaskEstimatedMilliSeconds();
    @DefaultMessage("Estimated Setup Time")
    String manufacturingTaskEstimatedSetupMillis();
    @DefaultMessage("Estimated Total Run Time")
    String manufacturingTaskEstimatedTotalMilliSeconds();
    @DefaultMessage("Task ID")
    String manufacturingTaskId();
    @DefaultMessage("Routing Task Name")
    String manufacturingTaskName();
    @DefaultMessage("Task Type")
    String manufacturingTaskPurpose();
    @DefaultMessage("Task Run Time")
    String manufacturingTaskRunTime();
    @DefaultMessage("Task Setup Time")
    String manufacturingTaskSetupTime();
    @DefaultMessage("Tasks Report")
    String manufacturingTasksReport();
    @DefaultMessage("Tech. Data")
    String manufacturingTechData();
    @DefaultMessage("TechDataCalendar does not exist")
    String manufacturingTechDataCalendarNotExist();
    @DefaultMessage("TechDataCalendarWeek does not exist")
    String manufacturingTechDataCalendarWeekNotExist();
    @DefaultMessage("To Date")
    String manufacturingToDate();
    @DefaultMessage("Total Quantity")
    String manufacturingTotalQuantity();
    @DefaultMessage("Two routing task with same SeqId and same period")
    String manufacturingTwoRoutingTaskWithSameSeqId();
    @DefaultMessage("Update Calendar")
    String manufacturingUpdateCalendar();
    @DefaultMessage("Update Week")
    String manufacturingUpdateCalendarWeek();
    @DefaultMessage("Update Fixed Asset Group")
    String manufacturingUpdateMachineGroup();
    @DefaultMessage("Security Error: to run this operation you must have the MANUFACTURING_UPDATE or MANUFACTURING_ADMIN permission")
    String manufacturingUpdatePermissionError();
    @DefaultMessage("You do not have permission to view this page. (\"MANUFACTURING_VIEW\" or \"MANUFACTURING_ADMIN\" needed)")
    String manufacturingViewPermissionError();
    @DefaultMessage("Tree visit Algorithm")
    String manufacturingVisitType();
    @DefaultMessage("Will be set to now if empty")
    String manufacturingWillBeSetToNow();
    @DefaultMessage("Work Center")
    String manufacturingWorkCenter();
    @DefaultMessage("WorkEffortAssoc does not exist")
    String manufacturingWorkEffortAssocNotExist();
    @DefaultMessage("The selected fixed asset is already associated with this production run task")
    String manufacturingWorkEffortFixedAssetAsgAlreadyExist();
    @DefaultMessage("The selected fixed asset type is already associated with this routing task")
    String manufacturingWorkEffortFixedAssetStdAlreadyExist();
    @DefaultMessage("WorkEffortGoodStandard table does not exist")
    String manufacturingWorkEffortGoodStandardNotExist();
    @DefaultMessage("workEffortIdFrom does not exist")
    String manufacturingWorkEffortIdFromNotExist();
    @DefaultMessage("WorkEffort does not exist")
    String manufacturingWorkEffortNotExist();
    @DefaultMessage("Shipment Plans")
    String manufacturingWorkWithShipmentPlans();
    @DefaultMessage("Worker")
    String manufacturingWorker();
    @DefaultMessage("Marketing")
    String marketing();
    @DefaultMessage("RTF Rich Text")
    String mimeType_description_application_rtf();
    @DefaultMessage("Recently Viewed")
    String mostRecentlyViewed();
    @DefaultMessage("New Contact")
    String newContact();
    @DefaultMessage("Nederlands")
    String nl();
    @DefaultMessage("Custom method name for UoM conversion not found")
    String noCustomMethodName();
    @DefaultMessage("Product-based UoM conversion requires a valid productId")
    String noProductSpecifiedForUomConversion();
    @DefaultMessage("UOM Conversion Relationship Not Found")
    String noUomConversionFound();
    @DefaultMessage("opentaps")
    String opentaps();
    @DefaultMessage("Accept")
    String opentapsAccept();
    @DefaultMessage("Account Number")
    String opentapsAccountNumber();
    @DefaultMessage("Add Existing")
    String opentapsAddExisting();
    @DefaultMessage("Add New")
    String opentapsAddNew();
    @DefaultMessage("Add New Term")
    String opentapsAddNewAgreementTerm();
    @DefaultMessage("Address")
    String opentapsAddress();
    @DefaultMessage("Address Book")
    String opentapsAddressBook();
    @DefaultMessage("Adjustment ID")
    String opentapsAdjustmentId();
    @DefaultMessage("Advanced Search")
    String opentapsAdvancedSearch();
    @DefaultMessage("Commission Agreement")
    String opentapsAgreementCommission();
    @DefaultMessage("Customer Agreement")
    String opentapsAgreementCustomer();
    @DefaultMessage("Partner Agreement")
    String opentapsAgreementPartner();
    @DefaultMessage("Partner Sales Agreement")
    String opentapsAgreementPartnerSales();
    @DefaultMessage("Purchase Agreement")
    String opentapsAgreementPurchase();
    @DefaultMessage("Party Class")
    String opentapsAgreementTermClsGroupId();
    @DefaultMessage("Currency")
    String opentapsAgreementTermCurrency();
    @DefaultMessage("Days")
    String opentapsAgreementTermDays();
    @DefaultMessage("Description")
    String opentapsAgreementTermDescription();
    @DefaultMessage("Server return empty response. Can''t display agreement terms.")
    String opentapsAgreementTermEmptyResponse();
    @DefaultMessage("Max")
    String opentapsAgreementTermMaxQty();
    @DefaultMessage("Min")
    String opentapsAgreementTermMinQty();
    @DefaultMessage("Max")
    String opentapsAgreementTermName_maxQuantity();
    @DefaultMessage("Min")
    String opentapsAgreementTermName_minQuantity();
    @DefaultMessage("Party Class")
    String opentapsAgreementTermName_partyClassificationGroupId();
    @DefaultMessage("Party")
    String opentapsAgreementTermName_partyId();
    @DefaultMessage("Category")
    String opentapsAgreementTermName_productCategoryId();
    @DefaultMessage("Product")
    String opentapsAgreementTermName_productId();
    @DefaultMessage("Type")
    String opentapsAgreementTermName_roleTypeId();
    @DefaultMessage("Days")
    String opentapsAgreementTermName_termDays();
    @DefaultMessage("Value")
    String opentapsAgreementTermName_termValue();
    @DefaultMessage("Agreement Term Not Implemented!")
    String opentapsAgreementTermNotImplemented();
    @DefaultMessage("Party")
    String opentapsAgreementTermPartyId();
    @DefaultMessage("Category")
    String opentapsAgreementTermProdCatId();
    @DefaultMessage("Product")
    String opentapsAgreementTermProductId();
    @DefaultMessage("Role")
    String opentapsAgreementTermRoleTypeId();
    @DefaultMessage("Text Value")
    String opentapsAgreementTermText();
    @DefaultMessage("Term Value")
    String opentapsAgreementTermValue();
    @DefaultMessage("All Open Orders")
    String opentapsAllOpenOrders();
    @DefaultMessage("Approve")
    String opentapsApprove();
    @DefaultMessage("Approve All")
    String opentapsApproveAll();
    @DefaultMessage("Approved Orders Only")
    String opentapsApprovedOrdersOnly();
    @DefaultMessage("Are you sure?")
    String opentapsAreYouSure();
    @DefaultMessage("Area Code")
    String opentapsAreaCode();
    @DefaultMessage("As of date")
    String opentapsAsOfDate();
    @DefaultMessage("Assign to me")
    String opentapsAssignToMe();
    @DefaultMessage("Opentaps BI")
    String opentapsBI();
    @DefaultMessage("Begins With")
    String opentapsBeginsWith();
    @DefaultMessage("Billing Address")
    String opentapsBillingAddress();
    @DefaultMessage("Browse and Search")
    String opentapsBrowseAndSearch();
    @DefaultMessage("Cancel")
    String opentapsCancel();
    @DefaultMessage("Cancel Order")
    String opentapsCancelOrder();
    @DefaultMessage("Carrier")
    String opentapsCarrier();
    @DefaultMessage("Active Cash Drawers")
    String opentapsCashDrawerActive();
    @DefaultMessage("Cancel Close")
    String opentapsCashDrawerCancelClose();
    @DefaultMessage("Closing Comments")
    String opentapsCashDrawerCloseComments();
    @DefaultMessage("Close Drawer")
    String opentapsCashDrawerCloseDrawer();
    @DefaultMessage("Closed")
    String opentapsCashDrawerClosed();
    @DefaultMessage("Closed By")
    String opentapsCashDrawerClosedBy();
    @DefaultMessage("Current Balance")
    String opentapsCashDrawerCurrent();
    @DefaultMessage("Final")
    String opentapsCashDrawerFinal();
    @DefaultMessage("Final Cash Amount")
    String opentapsCashDrawerFinalCashAmount();
    @DefaultMessage("Find Past Cash Drawers")
    String opentapsCashDrawerFindPast();
    @DefaultMessage("Force Close")
    String opentapsCashDrawerForceClose();
    @DefaultMessage("Forced Closed?")
    String opentapsCashDrawerForcedClosed();
    @DefaultMessage("Initial Cash Amount")
    String opentapsCashDrawerInitialAmount();
    @DefaultMessage("Manage Cash Drawers")
    String opentapsCashDrawerManage();
    @DefaultMessage("Open Cash Drawer")
    String opentapsCashDrawerOpen();
    @DefaultMessage("Opening Comments")
    String opentapsCashDrawerOpenComments();
    @DefaultMessage("Opened At")
    String opentapsCashDrawerOpenTime();
    @DefaultMessage("Opened")
    String opentapsCashDrawerOpened();
    @DefaultMessage("Opened By")
    String opentapsCashDrawerOpenedBy();
    @DefaultMessage("User")
    String opentapsCashDrawerUser();
    @DefaultMessage("Variance")
    String opentapsCashDrawerVariance();
    @DefaultMessage("Change Password")
    String opentapsChangePassword();
    @DefaultMessage("&#x2713;")
    String opentapsCheckmark();
    @DefaultMessage("City / State / Country")
    String opentapsCityStateCountry();
    @DefaultMessage("City / State / Zip")
    String opentapsCityStateZip();
    @DefaultMessage("Clear Items")
    String opentapsClearItems();
    @DefaultMessage("Closed Cash Drawers")
    String opentapsClosedCashDrawers();
    @DefaultMessage("Company Name")
    String opentapsCompanyName();
    @DefaultMessage("Company/Personal Name")
    String opentapsCompanyOrPersonalName();
    @DefaultMessage("Complete")
    String opentapsComplete();
    @DefaultMessage("Compose Message")
    String opentapsComposeMessage();
    @DefaultMessage("Compose New")
    String opentapsComposeNew();
    @DefaultMessage("Configuration")
    String opentapsConfiguration();
    @DefaultMessage("Confirmed")
    String opentapsConfirmed();
    @DefaultMessage("Contains")
    String opentapsContains();
    @DefaultMessage("MS Word")
    String opentapsContentType_ApplicationMSWord();
    @DefaultMessage("PDF")
    String opentapsContentType_ApplicationPDF();
    @DefaultMessage("HTML")
    String opentapsContentType_TextHtml();
    @DefaultMessage("Text")
    String opentapsContentType_TextPlain();
    @DefaultMessage("XML")
    String opentapsContentType_TextXML();
    @DefaultMessage("Country")
    String opentapsCountry();
    @DefaultMessage("State / Country")
    String opentapsCountryState();
    @DefaultMessage("Create Address")
    String opentapsCreateAddress();
    @DefaultMessage("Create Catalog Request")
    String opentapsCreateCatalogRequest();
    @DefaultMessage("Create Email")
    String opentapsCreateEmail();
    @DefaultMessage("Create Note")
    String opentapsCreateNote();
    @DefaultMessage("Create Order")
    String opentapsCreateOrder();
    @DefaultMessage("Create Partner")
    String opentapsCreatePartner();
    @DefaultMessage("Create Partner Sales Agreement")
    String opentapsCreatePartnerSalesAgreement();
    @DefaultMessage("Create Phone Number")
    String opentapsCreatePhoneNumber();
    @DefaultMessage("Create Web Url")
    String opentapsCreateWebUrl();
    @DefaultMessage("Customer")
    String opentapsCustomer();
    @DefaultMessage("Date Requested")
    String opentapsDateRequested();
    @DefaultMessage("Default")
    String opentapsDefault();
    @DefaultMessage("Select action...")
    String opentapsDefaultActionPrompt();
    @DefaultMessage("...")
    String opentapsDefaultActionSeparator();
    @DefaultMessage("This customer is flagged as \"Do not Ship\"")
    String opentapsDoNotShipCustomer();
    @DefaultMessage("Done")
    String opentapsDone();
    @DefaultMessage("Edit Shipping Account")
    String opentapsEditShippingAccount();
    @DefaultMessage("Edit Tax Id")
    String opentapsEditTaxId();
    @DefaultMessage("Forward")
    String opentapsEmailForward();
    @DefaultMessage("View Email")
    String opentapsEmailViewEmail();
    @DefaultMessage("Equals")
    String opentapsEquals();
    @DefaultMessage("Cannot perform operation, Agreement [{0}] has no currency set")
    String opentapsError_AgreementCurrencyNotSet(String agreementId);
    @DefaultMessage("Agreement item of type {0} can''t be applied to agreement [{1}]")
    String opentapsError_AgreementItemNotValid(String agreementItemTypeId, String agreementId);
    @DefaultMessage("Maximum allowed items count of type {0} already assigned to agreement [{1}]")
    String opentapsError_AgreementItemsMaxAllow(String agreementItemTypeId, String agreementId);
    @DefaultMessage("Agreement [{0}] not found")
    String opentapsError_AgreementNotFound(String agreementId);
    @DefaultMessage("No active partner agreement found for party {0}")
    String opentapsError_AgreementNotFoundForParties(String partnerName);
    @DefaultMessage("Agreement [{0}] not found or has expired")
    String opentapsError_AgreementNotFoundOrExpired(String agreementId);
    @DefaultMessage("Cannot perform operation, terms of Agreement [{0}] have different currencies")
    String opentapsError_AgreementTermCurrencyMismatch(String agreementId);
    @DefaultMessage("It''s impossible to display calendar, periods aren''t defined.")
    String opentapsError_CalendarFail();
    @DefaultMessage("Failed to add item due to internal error: {0}.")
    String opentapsError_CannotAddItem(String message);
    @DefaultMessage("CarrierReturnService {0} not found")
    String opentapsError_CarrierReturnServiceNotFound(String carrierReturnServiceId);
    @DefaultMessage("CarrierShipmentMethod with partyId {0} and shipmentMethodTypeId {1} not found")
    String opentapsError_CarrierShipmentMethodNotFound(String partyId, String shipmentMethodTypeId);
    @DefaultMessage("Cash Drawer [{0}] not found")
    String opentapsError_CashDrawerNotFound(String cashDrawerId);
    @DefaultMessage("Not recording payment [{0}] as a Cash Drawer transaction: invalid payment method type [{1}]")
    String opentapsError_CashDrawerTrans_skipInvalidMethodType(String paymentId, String paymentMethodTypeId);
    @DefaultMessage("Not recording payment [{0}] as a Cash Drawer transaction: invalid payment type [{1}]")
    String opentapsError_CashDrawerTrans_skipInvalidPaymentType(String paymentId, String paymentTypeId);
    @DefaultMessage("Not recording payment [{0}] as a Cash Drawer transaction: missing currencyUomId")
    String opentapsError_CashDrawerTrans_skipMissingPaymentCurrency(String paymentId);
    @DefaultMessage("Not recording payment [{0}] as a Cash Drawer transaction: user [{1}] has no open Cash Drawer for currency [{2}]")
    String opentapsError_CashDrawerTrans_skipNoOpenDrawerForCurrency(String paymentId, String userLoginId, String currencyUomId);
    @DefaultMessage("Not closing cash drawer [{0}]: A cash variance of {1} exists")
    String opentapsError_CashDrawerVarianceExists(String cashDrawerId, String cashVariance);
    @DefaultMessage("Error closing cash drawer")
    String opentapsError_CloseCashDrawerFail();
    @DefaultMessage("Can''t create agreement with type {0} and role {1}.")
    String opentapsError_CreateAgreementFailSinceRole(String agreementTypeId, String roleTypeId);
    @DefaultMessage("Error opening cash drawer")
    String opentapsError_CreateCashDrawerFail();
    @DefaultMessage("Error recording cash drawer transaction")
    String opentapsError_CreateCashDrawerTransFail();
    @DefaultMessage("Error creating merge form category")
    String opentapsError_CreateMergeFormCategoryFail();
    @DefaultMessage("Error creating merge form")
    String opentapsError_CreateMergeFormFail();
    @DefaultMessage("Error creating note")
    String opentapsError_CreateNoteFail();
    @DefaultMessage("Error deleting merge form category")
    String opentapsError_DeleteMergeFormCategoryFail();
    @DefaultMessage("Error deleting merge form")
    String opentapsError_DeleteMergeFormFail();
    @DefaultMessage("Error deleting note")
    String opentapsError_DeleteNoteFail();
    @DefaultMessage("Error editing note")
    String opentapsError_EditNoteFail();
    @DefaultMessage("There is already an owner for this email address")
    String opentapsError_EmailOwnerExist();
    @DefaultMessage("Error saving to file {0}")
    String opentapsError_ErrorSavingFileToPath(String path);
    @DefaultMessage("An error occured during the form generation. Please review your form for errors.")
    String opentapsError_FormGeneration();
    @DefaultMessage("Unable to generate Form from XSL-FO")
    String opentapsError_FormGenerationBadXslFo();
    @DefaultMessage("Unable to generate. Invalid Form.")
    String opentapsError_FormGenerationInvalidForm();
    @DefaultMessage("An error occured retrieving the merge context from service {0} during form generation.")
    String opentapsError_FormGenerationNoContext(String serviceName);
    @DefaultMessage("Unable to write to browser OutputStream")
    String opentapsError_FormGenerationStreamError();
    @DefaultMessage("Error importing macros from template at location {0}:")
    String opentapsError_FreemarkerUtilImportError(String location);
    @DefaultMessage("Error parsing template at location {0}:")
    String opentapsError_FreemarkerUtilParseError(String location);
    @DefaultMessage("Error reading file at location {0}:")
    String opentapsError_FreemarkerUtilReadError(String location);
    @DefaultMessage("Found more than one product with the same GoodIdentification value {0}")
    String opentapsError_GoodIdentificationDupe(String idValue);
    @DefaultMessage("Ignoring internal organization partyId {0}")
    String opentapsError_IgnoringInternalOrg(String partyId);
    @DefaultMessage("There was an internal error while processing your request.  Please contact a System Administrator for assistance.")
    String opentapsError_Internal();
    @DefaultMessage("Message body is required.")
    String opentapsError_InternalMessageBodyRequired();
    @DefaultMessage("{0} have no permission to receive an internal message.")
    String opentapsError_InternalMessageNoRecipientPermission(String partyId);
    @DefaultMessage("Failed to receive requested messages")
    String opentapsError_InternalMessageNoRecipients();
    @DefaultMessage("{0} have no permission to send an internal message.")
    String opentapsError_InternalMessageNoSenderPermission(String partyIdFrom);
    @DefaultMessage("InventoryItem [{0}] not found.")
    String opentapsError_InventoryItemNotFound(String inventoryItemId);
    @DefaultMessage("InventoryItem [{0}] has been updated but the unitCost has not changed - not recording a new InventoryItemValueHistory")
    String opentapsError_InventoryItemValueHistory_UnitCostNotChanged(String inventoryItemId);
    @DefaultMessage("InventoryItem [{0}] has been updated but the unitCost is empty - using zero")
    String opentapsError_InventoryItemValueHistory_UnitCostZero(String inventoryItemId);
    @DefaultMessage("This invoice cannot be printed")
    String opentapsError_InvoiceCannotPrint();
    @DefaultMessage("Invoice [{0}] does not have a currency defined.  Cannot proceed with operation.")
    String opentapsError_InvoiceCurrencyNotSet(String invoiceId);
    @DefaultMessage("Cannot create order, a payment method must be supplied.")
    String opentapsError_MissingOrderPaymentMethod();
    @DefaultMessage("<div class=\"errortooltip\">Unable to fetch data because session has expired.  Please reload this page.</div>")
    String opentapsError_MissingPaginator();
    @DefaultMessage("No items to process.")
    String opentapsError_NoItemsToProcess();
    @DefaultMessage("No prepared statement has been configured for Query")
    String opentapsError_NoPreparedStatement();
    @DefaultMessage("Party with ID [{0}] is not a supplier.")
    String opentapsError_NoSupplierRole(String partyId);
    @DefaultMessage("No suppliers found that can supply quantity {0} of product [{1}].")
    String opentapsError_NoSuppliersForProductAndQty(String quantity, String productId);
    @DefaultMessage("Order [{0}] is not Approved.")
    String opentapsError_OrderNotApproved(String orderId);
    @DefaultMessage("This operation requires an approved order.  Order [{0}] is currently {1}.")
    String opentapsError_OrderNotApprovedLong(String orderId, String statusDescription);
    @DefaultMessage("Order [{0}] not found.")
    String opentapsError_OrderNotFound(String orderId);
    @DefaultMessage("Order [{0}] is not a Purchase Order.")
    String opentapsError_OrderNotPurchaseOrder(String orderId);
    @DefaultMessage("Order [{0}] is not a Sales Order.")
    String opentapsError_OrderNotSalesOrder(String orderId);
    @DefaultMessage("Origin phone number is required for UPS return service shipments")
    String opentapsError_OriginPhoneNumberRequiredForUPSReturnShipments();
    @DefaultMessage("Origin postal address is required for UPS return service shipments")
    String opentapsError_OriginPostalAddressRequiredForUPSReturnShipments();
    @DefaultMessage("Party [{0}] is already assigned.")
    String opentapsError_PartyAlreadyAssigned(String partyId);
    @DefaultMessage("Active account for party [{0}] and carrier [{1}] not found.")
    String opentapsError_PartyCarrierAccountNotFound(String partyId, String carrierPartyId);
    @DefaultMessage("Party [{0}] has been deactivated.")
    String opentapsError_PartyDeactivated(String partyId);
    @DefaultMessage("Party [{0}] not found.")
    String opentapsError_PartyNotFound(String partyId);
    @DefaultMessage("This payment cannot be printed")
    String opentapsError_PaymentCannotPrint();
    @DefaultMessage("Payment method [{0}] not found.")
    String opentapsError_PaymentMethodNotFound(String paymentMethodId);
    @DefaultMessage("Payment [{0}] not found.")
    String opentapsError_PaymentNotFound(String paymentId);
    @DefaultMessage("No performed items to invoice found on order {0}.")
    String opentapsError_PerformedItemsToInvoiceNotFound(String orderId);
    @DefaultMessage("Sorry, you do not have permission to perform this action.")
    String opentapsError_PermissionDenied();
    @DefaultMessage("Product [{0}] is not a type of product that can be marked as performed.")
    String opentapsError_ProductCannotBeMarkPerformed(String productId);
    @DefaultMessage("Product [{0}] not found.")
    String opentapsError_ProductNotFound(String productId);
    @DefaultMessage("Product [{0}] has no price defined for currency [{1}].")
    String opentapsError_ProductPriceNotFound(String productId, String currencyUomId);
    @DefaultMessage("There are no catalogs related to the product store {0}")
    String opentapsError_ProductStoreHaveNoCatalogs(String productStoreId);
    @DefaultMessage("Product Store [{0}] not found.")
    String opentapsError_ProductStoreNotFound(String productStoreId);
    @DefaultMessage("{0} {1} is already used by product {2}")
    String opentapsError_ProductUpcCodeNotUnique(String goodIdentificationTypeId, String idValue, String productId);
    @DefaultMessage("{0} is not a valid UPC code")
    String opentapsError_ProductUpcCodeNotValid(String idValue);
    @DefaultMessage("{0} is not configured in {1}")
    String opentapsError_PropertyNotConfigured(String propertyName, String resource);
    @DefaultMessage("Error receiving offline payment")
    String opentapsError_ReceiveOfflinePayment();
    @DefaultMessage("Encountered error in report design: {0}")
    String opentapsError_ReportDesignError(String message);
    @DefaultMessage("Report {0} not found.")
    String opentapsError_ReportNotFound(String location);
    @DefaultMessage("Requested quantity of product is greater than was reserved. Service doesn''t support this operation.")
    String opentapsError_ReservedMoreThanRequested();
    @DefaultMessage("Return {0} not found.")
    String opentapsError_ReturnNotFound(String returnId);
    @DefaultMessage("OrderItemShipGroup {0} for orderId {1} not found")
    String opentapsError_ShipGroupNotFound(String shipGroupSeqId, String orderId);
    @DefaultMessage("ShipmentId {0} not found")
    String opentapsError_ShipmentNotFound(String shipmentId);
    @DefaultMessage("No known recepient for this shipment.  Please edit it manually and set the Party Id To field to the correct customer partyId")
    String opentapsError_ShipmentRecepientNotFound();
    @DefaultMessage("ShipmentRouteSegmentId {0} for shipmentId {1} not found")
    String opentapsError_ShipmentRouteSegmentNotFound(String shipmentRouteSegmentId, String shipmentId);
    @DefaultMessage("Shipping methods of type {0} are invalid for the product store {1}.")
    String opentapsError_ShippingMethodInvalid(String shipmentMethodTypeId, String productStoreId);
    @DefaultMessage("You must choose a valid shipping method and shipping address.")
    String opentapsError_ShippingMethodOrAddressMissing();
    @DefaultMessage("The Thru Date must be after the From Date")
    String opentapsError_ThruDateAfterFromDate();
    @DefaultMessage("Error updating merge form category")
    String opentapsError_UpdateMergeFormCategoryFail();
    @DefaultMessage("Error updating merge form")
    String opentapsError_UpdateMergeFormFail();
    @DefaultMessage("UserLogin [{0}] not found")
    String opentapsError_UserLoginNotFound(String userLoginId);
    @DefaultMessage("ViewPref type [{0}] for userLogin [{1}] not found")
    String opentapsError_ViewPrefNotFound(String viewPrefTypeId, String userLoginId);
    @DefaultMessage("Weight and weight units are required for all UPS shipments")
    String opentapsError_WeightRequiredForUPSShipments();
    @DefaultMessage("Estimate")
    String opentapsEstimate();
    @DefaultMessage("Export to Excel")
    String opentapsExportToExcel();
    @DefaultMessage("This field must be a date in {0} format.")
    String opentapsFieldError_BadDateFormat(String format);
    @DefaultMessage("This field must be a number.")
    String opentapsFieldError_BadDoubleFormat();
    @DefaultMessage("This field is required.")
    String opentapsFieldError_Required();
    @DefaultMessage("Finalize Order")
    String opentapsFinalizeOrder();
    @DefaultMessage("Find a Person")
    String opentapsFindAPerson();
    @DefaultMessage("Find By")
    String opentapsFindBy();
    @DefaultMessage("Find Message")
    String opentapsFindMessage();
    @DefaultMessage("Find Order")
    String opentapsFindOrder();
    @DefaultMessage("Find Orders")
    String opentapsFindOrders();
    @DefaultMessage("Find Partners")
    String opentapsFindPartners();
    @DefaultMessage("Find a Party by Name")
    String opentapsFindPartyByName();
    @DefaultMessage("Find Product Category")
    String opentapsFindProductCategory();
    @DefaultMessage("Find Purchase Order")
    String opentapsFindPurch();
    @DefaultMessage("Find Sales Order")
    String opentapsFindSalesOrder();
    @DefaultMessage("Find Suppliers")
    String opentapsFindSuppliers();
    @DefaultMessage("Force Complete")
    String opentapsForceComplete();
    @DefaultMessage("Force Create")
    String opentapsForceCreate();
    @DefaultMessage("Force Issue")
    String opentapsForceIssue();
    @DefaultMessage("Force Update")
    String opentapsForceUpdate();
    @DefaultMessage("Form")
    String opentapsForm();
    @DefaultMessage("Form Name")
    String opentapsFormName();
    @DefaultMessage("Form Text")
    String opentapsFormText();
    @DefaultMessage("Forward")
    String opentapsForward();
    @DefaultMessage("Free Shipping")
    String opentapsFreeShipping();
    @DefaultMessage("Generate Form")
    String opentapsGenerateForm();
    @DefaultMessage("Generate Letter")
    String opentapsGenerateFormLetter();
    @DefaultMessage("Go Back")
    String opentapsGoBack();
    @DefaultMessage("Gross Value")
    String opentapsGrossValue();
    @DefaultMessage("Gross value does not include tax, shipping, promotions or other adjustments.")
    String opentapsGrossValueDisclaimer();
    @DefaultMessage("Help")
    String opentapsHelp();
    @DefaultMessage("Hide Full Text")
    String opentapsHideTextData();
    @DefaultMessage("Insert Tags")
    String opentapsHtmlEditorInsertTagsLabel();
    @DefaultMessage("Ignore Case")
    String opentapsIgnoreCase();
    @DefaultMessage("Instructions")
    String opentapsInstructions();
    @DefaultMessage("Is Empty")
    String opentapsIsEmpty();
    @DefaultMessage("Incorporated?")
    String opentapsIsIncorporated();
    @DefaultMessage("Item ID")
    String opentapsItemID();
    @DefaultMessage("Last updated at {0}")
    String opentapsLastUpdatedAt(String lastUpdatedStamp);
    @DefaultMessage("Opentaps Login")
    String opentapsLoginGreeting();
    @DefaultMessage("Is Default?")
    String opentapsMakeDefault();
    @DefaultMessage("Map It")
    String opentapsMapIt();
    @DefaultMessage("Mini-Catalog")
    String opentapsMiniCatalog();
    @DefaultMessage("Move")
    String opentapsMove();
    @DefaultMessage("Move To")
    String opentapsMoveTo();
    @DefaultMessage("My Home")
    String opentapsMyHome();
    @DefaultMessage("My Messages")
    String opentapsMyMessages();
    @DefaultMessage("N/A")
    String opentapsNA();
    @DefaultMessage("{0} agreement {1} to \"{2}\"")
    String opentapsNavHistoryAgreement(String agreementTypeName, String agreementId, String partyNameTo);
    @DefaultMessage("Last Viewed")
    String opentapsNavHistoryTitle();
    @DefaultMessage("&#x2026;")
    String opentapsNavHistoryTruncMark();
    @DefaultMessage("Needed")
    String opentapsNeeded();
    @DefaultMessage("new messages")
    String opentapsNewMessages();
    @DefaultMessage("You have")
    String opentapsNewMessagesPrefix();
    @DefaultMessage("New Team Member")
    String opentapsNewTeamMember();
    @DefaultMessage("You have no new messages.")
    String opentapsNoNewMessages();
    @DefaultMessage("<No subject>")
    String opentapsNoSubjectSubjectMessage();
    @DefaultMessage("Full text is not available.")
    String opentapsNoTextData();
    @DefaultMessage("Not Available")
    String opentapsNotAvailable();
    @DefaultMessage("Notes")
    String opentapsNotes();
    @DefaultMessage("This order has nothing to invoice.")
    String opentapsNothingToInvoice();
    @DefaultMessage("This order has nothing to mark as performed.")
    String opentapsNothingToMarkAsPerformed();
    @DefaultMessage("of")
    String opentapsOf();
    @DefaultMessage("Ok")
    String opentapsOk();
    @DefaultMessage("Use only for this order")
    String opentapsOnlyThisOrder();
    @DefaultMessage("Open")
    String opentapsOpen();
    @DefaultMessage("Open Amount")
    String opentapsOpenAmount();
    @DefaultMessage("Added {0} of {1} to ship group {2}")
    String opentapsOrderAddedItem(String quantity, String productId, String shipGroupSeqId);
    @DefaultMessage("Edit or Add Items")
    String opentapsOrderEditAddItem();
    @DefaultMessage("Edit Order")
    String opentapsOrderEditOrder();
    @DefaultMessage("Order Name and ID")
    String opentapsOrderNameID();
    @DefaultMessage("Net")
    String opentapsOrderNetOrdered();
    @DefaultMessage("Recalculate Order")
    String opentapsOrderRecalcOrder();
    @DefaultMessage("Return to Order")
    String opentapsOrderReturnToOrder();
    @DefaultMessage("Order Settings")
    String opentapsOrderSettings();
    @DefaultMessage("Orders")
    String opentapsOrders();
    @DefaultMessage("Output")
    String opentapsOutput();
    @DefaultMessage("Owner")
    String opentapsOwner();
    @DefaultMessage("PO #")
    String opentapsPONumber();
    @DefaultMessage("Page")
    String opentapsPage();
    @DefaultMessage("Excel")
    String opentapsPaginationExportExcelButtonLabel();
    @DefaultMessage("{0} - {1} of {2}")
    String opentapsPaginationWithTotal(String beginIndex, String endIndex, String totalResultSize);
    @DefaultMessage("{0} - {1}")
    String opentapsPaginationWithoutTotal(String beginIndex, String endIndex);
    @DefaultMessage("paid {0}")
    String opentapsPaidPercentageDescr(String paidPercents);
    @DefaultMessage("Partner")
    String opentapsPartner();
    @DefaultMessage("Partner ID")
    String opentapsPartnerId();
    @DefaultMessage("Partner Invoice")
    String opentapsPartnerInvoice();
    @DefaultMessage("Partner Name")
    String opentapsPartnerName();
    @DefaultMessage("Partners")
    String opentapsPartners();
    @DefaultMessage("PayPal Account")
    String opentapsPayPalAccount();
    @DefaultMessage("Payment ID")
    String opentapsPaymentId();
    @DefaultMessage("Check/Ref Num")
    String opentapsPaymentRefNum();
    @DefaultMessage("Payments Received")
    String opentapsPaymentsReceived();
    @DefaultMessage("Person to Ask For")
    String opentapsPhoneAskForName();
    @DefaultMessage("Phone Number")
    String opentapsPhoneNumber();
    @DefaultMessage("Phone Numbers")
    String opentapsPhoneNumbers();
    @DefaultMessage("Postal Code")
    String opentapsPostalCode();
    @DefaultMessage("Product {0} ({1}) has been discontinued.")
    String opentapsProductIsDiscontinued(String productName, String productId);
    @DefaultMessage("Product {0} ({1}) has not been introduced yet.")
    String opentapsProductIsNotIntroduced(String productName, String productId);
    @DefaultMessage("opentaps Open Source ERP + CRM")
    String opentapsProductName();
    @DefaultMessage("Promised By")
    String opentapsPromisedDate();
    @DefaultMessage("Purchase Orders")
    String opentapsPurchaseOrders();
    @DefaultMessage("Purchased From")
    String opentapsPurchasedFrom();
    @DefaultMessage("QOH")
    String opentapsQOH();
    @DefaultMessage("Qty Back Ordered")
    String opentapsQtyBackOrdered();
    @DefaultMessage("Qty Ordered")
    String opentapsQtyOrdered();
    @DefaultMessage("Qty to Invoice")
    String opentapsQtyToInvoice();
    @DefaultMessage("Qty to Purchase")
    String opentapsQtyToPurchase();
    @DefaultMessage("Qty to Receive")
    String opentapsQtyToReceive();
    @DefaultMessage("Quote Type")
    String opentapsQuoteType();
    @DefaultMessage("Rate Not Available")
    String opentapsRateNotAvailable();
    @DefaultMessage("Re-reserve")
    String opentapsReReserve();
    @DefaultMessage("Re-reserve product")
    String opentapsReReserveProduct();
    @DefaultMessage("Received")
    String opentapsReceived();
    @DefaultMessage("1.4-Preview")
    String opentapsReleaseVersion();
    @DefaultMessage("Reply")
    String opentapsReply();
    @DefaultMessage("Report")
    String opentapsReport();
    @DefaultMessage("The data source have no records to fill out the report. Please check if the report parameters are correct.")
    String opentapsReportDatasourceEmpty();
    @DefaultMessage("Report Format")
    String opentapsReportFormat();
    @DefaultMessage("Available reports")
    String opentapsReportList();
    @DefaultMessage("Upload new report")
    String opentapsReportUpload();
    @DefaultMessage("Reports")
    String opentapsReports();
    @DefaultMessage("Requires 1099?")
    String opentapsRequires1099();
    @DefaultMessage("Reserved On")
    String opentapsReservationSequence();
    @DefaultMessage("Resume Order")
    String opentapsResumeOrder();
    @DefaultMessage("Run Report")
    String opentapsRunReport();
    @DefaultMessage("Select Organization")
    String opentapsSelectOrganization();
    @DefaultMessage("Select Printer")
    String opentapsSelectPrinter();
    @DefaultMessage("Send message")
    String opentapsSendMessage();
    @DefaultMessage("Ship After")
    String opentapsShipAfter();
    @DefaultMessage("Ship Before")
    String opentapsShipBefore();
    @DefaultMessage("No Ship Group {0} found for Order {1}")
    String opentapsShipGroupNotFound(String shipGroupSeqId, String orderId);
    @DefaultMessage("Ship Via")
    String opentapsShipVia();
    @DefaultMessage("Shipping Address")
    String opentapsShippingAddress();
    @DefaultMessage("Same as Billing")
    String opentapsShippingSameAsBilling();
    @DefaultMessage("Shortcuts")
    String opentapsShortcuts();
    @DefaultMessage("Show/Hide Details")
    String opentapsShowHideDetails();
    @DefaultMessage("Show read?")
    String opentapsShowRead();
    @DefaultMessage("Subject")
    String opentapsSubject();
    @DefaultMessage("Supplier Name")
    String opentapsSupplierName();
    @DefaultMessage("Tax Id")
    String opentapsTaxAuthPartyId();
    @DefaultMessage("Tax IDs")
    String opentapsTaxIds();
    @DefaultMessage("Team Member")
    String opentapsTeamMember();
    @DefaultMessage("Team Members")
    String opentapsTeamMembers();
    @DefaultMessage("Template")
    String opentapsTemplate();
    @DefaultMessage("Template Name")
    String opentapsTemplateName();
    @DefaultMessage("Term of Item")
    String opentapsTermOfItem();
    @DefaultMessage("Full Text")
    String opentapsTextData();
    @DefaultMessage("Full Text Not Available")
    String opentapsTextDataNotAvailable();
    @DefaultMessage("Top Level Only")
    String opentapsTopLevelOnly();
    @DefaultMessage("Tracking Codes")
    String opentapsTrackingCodes();
    @DefaultMessage("Tracking Number")
    String opentapsTrackingNumber();
    @DefaultMessage("UPC")
    String opentapsUPC();
    @DefaultMessage("Unassign")
    String opentapsUnassign();
    @DefaultMessage("Unknown")
    String opentapsUnknown();
    @DefaultMessage("Edit Profile")
    String opentapsUpdateProfile();
    @DefaultMessage("User")
    String opentapsUser();
    @DefaultMessage("My Language")
    String opentapsUserLocale();
    @DefaultMessage("View All")
    String opentapsViewAll();
    @DefaultMessage("View Message")
    String opentapsViewMessage();
    @DefaultMessage("Partner Details")
    String opentapsViewPartner();
    @DefaultMessage("View Purchase Order")
    String opentapsViewPurchaseOrder();
    @DefaultMessage("View Full Text")
    String opentapsViewTextData();
    @DefaultMessage("Warehouse")
    String opentapsWarehouse();
    @DefaultMessage("Web URL")
    String opentapsWebUrl();
    @DefaultMessage("Order")
    String order();
    @DefaultMessage("Add Code")
    String orderAddCode();
    @DefaultMessage("Add Note")
    String orderAddNote();
    @DefaultMessage("Add Order Items to Shopping List")
    String orderAddOrderToShoppingList();
    @DefaultMessage("Add To Order")
    String orderAddToOrder();
    @DefaultMessage("Address")
    String orderAddress();
    @DefaultMessage("Adjustment")
    String orderAdjustment();
    @DefaultMessage("Adjustment Type")
    String orderAdjustmentType();
    @DefaultMessage("Adjustments")
    String orderAdjustments();
    @DefaultMessage("Advance Payment")
    String orderAdvancePayment();
    @DefaultMessage("Order Agent")
    String orderAgent();
    @DefaultMessage("Allow Split")
    String orderAllowSplit();
    @DefaultMessage("Amount")
    String orderAmount();
    @DefaultMessage("Approve Order")
    String orderApproveOrder();
    @DefaultMessage("Approve Requirements")
    String orderApproveRequirements();
    @DefaultMessage("Approved")
    String orderApproved();
    @DefaultMessage("Approved Product Requirements")
    String orderApprovedProductRequirements();
    @DefaultMessage("Approved Requirements By Vendor")
    String orderApprovedProductRequirementsByVendor();
    @DefaultMessage("Assign Items")
    String orderAssignItems();
    @DefaultMessage("Auto Assign")
    String orderAutoAssign();
    @DefaultMessage("Auto Create Adjustments")
    String orderAutoCreateQuoteAdjustments();
    @DefaultMessage("AVS")
    String orderAvs();
    @DefaultMessage("Back Home")
    String orderBackHome();
    @DefaultMessage("Backordered")
    String orderBackOrdered();
    @DefaultMessage("Backorders")
    String orderBackOrders();
    @DefaultMessage("Order Backorder Notification")
    String orderBackorderNotification();
    @DefaultMessage("Back to Shopping Cart")
    String orderBacktoShoppingCart();
    @DefaultMessage("Be sure to include your order")
    String orderBeSureIncludeOrder();
    @DefaultMessage("Be sure to include your order #")
    String orderBeSureToIncludeYourOrderNb();
    @DefaultMessage("Be sure to include your order")
    String orderBesureIncludeOrder();
    @DefaultMessage("Bill Up To")
    String orderBillUpTo();
    @DefaultMessage("Box #")
    String orderBoxNumber();
    @DefaultMessage("COD")
    String orderCOD();
    @DefaultMessage("Calculated Offline")
    String orderCalculatedOffline();
    @DefaultMessage("Cancel all Items")
    String orderCancelAllItems();
    @DefaultMessage("Cancelled")
    String orderCancelled();
    @DefaultMessage("(cannot be changed without clearing order.)")
    String orderCannotBeChanged();
    @DefaultMessage("Card Security Code")
    String orderCardSecurityCode();
    @DefaultMessage("Cart Total")
    String orderCartTotal();
    @DefaultMessage("Cash Payment on Pickup")
    String orderCashPaymentOnPickUp();
    @DefaultMessage("Change Payment Info")
    String orderChangePaymentInfo();
    @DefaultMessage("Change Shipping Address")
    String orderChangeShippingAddress();
    @DefaultMessage("Change Shipping Options")
    String orderChangeShippingOptions();
    @DefaultMessage("Choose Another Gift")
    String orderChooseAnotherGift();
    @DefaultMessage("You may choose a facility instead of the default one")
    String orderChooseFacilityDifferentDefault();
    @DefaultMessage("You may also choose one of the following for your gift")
    String orderChooseFollowingForGift();
    @DefaultMessage("Clear Order")
    String orderClearOrder();
    @DefaultMessage("You may add other comma separated email addresses here that will be used only for the current order")
    String orderCommaSeperatedEmailAddresses();
    @DefaultMessage("OFBiz: Order Manager")
    String orderCompanyName();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String orderCompanySubtitle();
    @DefaultMessage("Complete Order")
    String orderCompleteOrder();
    @DefaultMessage("Completed")
    String orderCompleted();
    @DefaultMessage("Confirm")
    String orderConfirm();
    @DefaultMessage("Order Confirmation")
    String orderConfirmation();
    @DefaultMessage("Contact Information")
    String orderContactInformation();
    @DefaultMessage("Contains BackOrders")
    String orderContainsBackOrders();
    @DefaultMessage("Continue Shopping")
    String orderContinueShopping();
    @DefaultMessage("Continue to Final Order Review")
    String orderContinueToFinalOrderReview();
    @DefaultMessage("Duplicate Request Item")
    String orderCopyCustRequestItem();
    @DefaultMessage("Duplicate Quote")
    String orderCopyQuote();
    @DefaultMessage("Create As New Order")
    String orderCreateAsNewOrder();
    @DefaultMessage("Create a Request For Quote")
    String orderCreateCustRequestFromCart();
    @DefaultMessage("Create a Request For Quote")
    String orderCreateCustRequestFromShoppingList();
    @DefaultMessage("Create new return")
    String orderCreateNewReturn();
    @DefaultMessage("Create Order")
    String orderCreateOrder();
    @DefaultMessage("Create New Quote")
    String orderCreateOrderQuote();
    @DefaultMessage("Create Manual Adjustment")
    String orderCreateOrderQuoteAdjustment();
    @DefaultMessage("Create New Quote Attribute")
    String orderCreateOrderQuoteAttribute();
    @DefaultMessage("Create New Quote Coefficient")
    String orderCreateOrderQuoteCoefficient();
    @DefaultMessage("Create New Quote Item")
    String orderCreateOrderQuoteItem();
    @DefaultMessage("Create New Quote Role")
    String orderCreateOrderQuoteRole();
    @DefaultMessage("Create Quote Work Efforts")
    String orderCreateOrderQuoteWorkEfforts();
    @DefaultMessage("Create New Quote From Cart")
    String orderCreateQuoteFromCart();
    @DefaultMessage("Create New Quote")
    String orderCreateQuoteFromShoppingList();
    @DefaultMessage("Create new Quote Workeffort")
    String orderCreateQuoteWorkEffort();
    @DefaultMessage("Create return")
    String orderCreateReturn();
    @DefaultMessage("Create New Shipping Address")
    String orderCreateShippingAddress();
    @DefaultMessage("Created by")
    String orderCreatedBy();
    @DefaultMessage("Current Status")
    String orderCurrentStatus();
    @DefaultMessage("Customer PO#")
    String orderCustomerPo();
    @DefaultMessage("Customer Tax ID")
    String orderCustomerTaxId();
    @DefaultMessage("Order Date")
    String orderDate();
    @DefaultMessage("Date Ordered")
    String orderDateOrdered();
    @DefaultMessage("Default Shipment Method")
    String orderDefaultShipmentMethod();
    @DefaultMessage("Please select your default shipping address; then select a default shipping method.")
    String orderDefaultShipmentMethodMsg();
    @DefaultMessage("NOTE: This is a DEMO store-front.  Orders placed here will NOT be billed, and will NOT be fulfilled")
    String orderDemoFrontNote();
    @DefaultMessage("Desired Delivery Date")
    String orderDesiredDeliveryDate();
    @DefaultMessage("Destination")
    String orderDestination();
    @DefaultMessage("Distributor")
    String orderDistributor();
    @DefaultMessage("Run Promotions")
    String orderDoPromotions();
    @DefaultMessage("Drop Shipped")
    String orderDropShipped();
    @DefaultMessage("Edit Items")
    String orderEditItems();
    @DefaultMessage("Edit Shipment Info")
    String orderEditShipmentInfo();
    @DefaultMessage("has been accepted. <br/>Your order will be processed, and you will receive an email notification once the item(s) have shipped.<br/><br/>Thank you for your order!<br/>")
    String orderEmailAccepted();
    @DefaultMessage("Customer Service")
    String orderEmailCustomerService();
    @DefaultMessage("This email is to inform you that your payment for order #")
    String orderEmailPaymentOK();
    @DefaultMessage("At this time your order has been cancelled and will not be processed. Please contact customer service if you have any questions.")
    String orderEmailProblemCancelledNotProcessed();
    @DefaultMessage("This email is to inform you there was a problem with your payment method for order #")
    String orderEmailProblemWithYourPaymentMethod();
    @DefaultMessage("Your order will be sent to the following email addresses")
    String orderEmailSentToFollowingAddresses();
    @DefaultMessage("Sorry, there was a problem with this email, please contact customer service for information regarding your order #")
    String orderEmailSorry();
    @DefaultMessage("Entered Codes")
    String orderEnteredPromoCodes();
    @DefaultMessage("Entry Date")
    String orderEntryDate();
    @DefaultMessage("Error : the facility does not have addresses")
    String orderErrorFacilityHaveNoAdress();
    @DefaultMessage("ERROR: Shopping cart empty, please start over")
    String orderErrorShoppingCartEmpty();
    @DefaultMessage("Estimate Next Order Date")
    String orderEstimateNextOrderDate();
    @DefaultMessage("Exempt Amount")
    String orderExemptAmount();
    @DefaultMessage("External ID")
    String orderExternalId();
    @DefaultMessage("Authorisation Problems")
    String orderFilterAuthProblems();
    @DefaultMessage("Inventory problems")
    String orderFilterInventoryProblems();
    @DefaultMessage("Filter on")
    String orderFilterOn();
    @DefaultMessage("purchase orders")
    String orderFilterPOs();
    @DefaultMessage("open past their ETA")
    String orderFilterPOsOpenPastTheirETA();
    @DefaultMessage("with rejected items")
    String orderFilterPOsWithRejectedItems();
    @DefaultMessage("partially received")
    String orderFilterPartiallyReceivedPOs();
    @DefaultMessage("Final Checkout Review")
    String orderFinalCheckoutReview();
    @DefaultMessage("Final Order Notification")
    String orderFinalOrderNotification();
    @DefaultMessage("Finalize Order")
    String orderFinalizeOrder();
    @DefaultMessage("Finalize Order With Default Options")
    String orderFinalizeOrderDefault();
    @DefaultMessage("Find Orders")
    String orderFindOrder();
    @DefaultMessage("Find Quote")
    String orderFindQuote();
    @DefaultMessage("Find Quotes")
    String orderFindQuotes();
    @DefaultMessage("Find Requests")
    String orderFindRequests();
    @DefaultMessage("Find Requirements")
    String orderFindRequirements();
    @DefaultMessage("Find Requirements For Supplier")
    String orderFindRequirementsForSupplier();
    @DefaultMessage("Find Returns")
    String orderFindReturn();
    @DefaultMessage("Force Complete Purchase Order")
    String orderForceCompletePurchaseOrder();
    @DefaultMessage("from Order")
    String orderFromOrder();
    @DefaultMessage("Gift")
    String orderGift();
    @DefaultMessage("Gift Card")
    String orderGiftCard();
    @DefaultMessage("Gift Message")
    String orderGiftMessage();
    @DefaultMessage("Gift Wrap All Items?")
    String orderGiftWrapAllItems();
    @DefaultMessage("Grand Total")
    String orderGrandTotal();
    @DefaultMessage("Gross Dollar Amounts (includes adjustments and pending orders)")
    String orderGrossDollarAmountsIncludesAdjustmentsAndPendingOrders();
    @DefaultMessage("Gross Items Sold (includes promotions and pending orders)")
    String orderGrossItemsSoldIncludesPromotionsAndPendingOrders();
    @DefaultMessage("Order&nbsp;History")
    String orderHistory();
    @DefaultMessage("Hold Order")
    String orderHold();
    @DefaultMessage("How shall we ship it")
    String orderHowShallWeShipIt();
    @DefaultMessage("How shall you pay")
    String orderHowShallYouPay();
    @DefaultMessage("Image")
    String orderImage();
    @DefaultMessage("In Production")
    String orderInProduction();
    @DefaultMessage("In Progress")
    String orderInProgress();
    @DefaultMessage("Information about you")
    String orderInformationAboutYou();
    @DefaultMessage("Purchase Order Quick Entry")
    String orderInputQuickPurchaseOrder();
    @DefaultMessage("Internal Code")
    String orderInternalCode();
    @DefaultMessage("Internal Note")
    String orderInternalNote();
    @DefaultMessage("If yes is selected, this note doesn''t appear on the print documents")
    String orderInternalNoteMessage();
    @DefaultMessage("Instructions")
    String orderIntructions();
    @DefaultMessage("Invoice")
    String orderInvoice();
    @DefaultMessage("Invoiced")
    String orderInvoiced();
    @DefaultMessage("Invoices")
    String orderInvoices();
    @DefaultMessage("Is Gift")
    String orderIsGift();
    @DefaultMessage("Is This a Gift")
    String orderIsThisGift();
    @DefaultMessage("Issued to Shipment Item")
    String orderIssuedToShipmentItem();
    @DefaultMessage("Issued Without a Shipment (Immediate, Physical Store)")
    String orderIssuedWithoutShipment();
    @DefaultMessage("Discontinued")
    String orderItemDiscontinued();
    @DefaultMessage("Item Groups")
    String orderItemGroups();
    @DefaultMessage("Item Status")
    String orderItemStatus();
    @DefaultMessage("Item Total")
    String orderItemTotal();
    @DefaultMessage("Items Backordered")
    String orderItemsBackOrdered();
    @DefaultMessage("Items Ordered")
    String orderItemsOrdered();
    @DefaultMessage("Items Returned")
    String orderItemsReturned();
    @DefaultMessage("Items SubTotal")
    String orderItemsSubTotal();
    @DefaultMessage("Jurisdiction")
    String orderJurisdiction();
    @DefaultMessage("Last Ordered Date")
    String orderLastOrderedDate();
    @DefaultMessage("Linked from order item")
    String orderLinkedFromOrderItem();
    @DefaultMessage("Linked to order item")
    String orderLinkedToOrderItem();
    @DefaultMessage("Linked to quote")
    String orderLinkedToQuote();
    @DefaultMessage("Linked to requirement")
    String orderLinkedToRequirement();
    @DefaultMessage("Lookup Order(s)")
    String orderLookupOrder();
    @DefaultMessage("Lookup Return(s)")
    String orderLookupReturn();
    @DefaultMessage("MTD")
    String orderMTD();
    @DefaultMessage("Order Manager Application")
    String orderManagerApplication();
    @DefaultMessage("Manual Promotions")
    String orderManualPromotions();
    @DefaultMessage("Method")
    String orderMethod();
    @DefaultMessage("Mail Check/Money Order")
    String orderMoneyOrder();
    @DefaultMessage("More options available in drop down")
    String orderMoreOptionsAvailable();
    @DefaultMessage("Move Qty")
    String orderMoveQty();
    @DefaultMessage("NOTE: Multiple shipments exist, use Split Shipment.")
    String orderNOTEMultipleShipmentsExist();
    @DefaultMessage("#")
    String orderNbr();
    @DefaultMessage("New Drop Shipment For Ship Group")
    String orderNewDropShipmentForShipGroup();
    @DefaultMessage("New Order")
    String orderNewOrder();
    @DefaultMessage("New quantity")
    String orderNewQuantity();
    @DefaultMessage("New quote")
    String orderNewQuote();
    @DefaultMessage("New Quote Attribute")
    String orderNewQuoteAttribute();
    @DefaultMessage("New Quote Item")
    String orderNewQuoteItem();
    @DefaultMessage("New Receipt")
    String orderNewReceipt();
    @DefaultMessage("New Request")
    String orderNewRequest();
    @DefaultMessage("New Request Item")
    String orderNewRequestItem();
    @DefaultMessage("New Requirement")
    String orderNewRequirement();
    @DefaultMessage("New Shipment")
    String orderNewShipment();
    @DefaultMessage("New Shipment For Ship Group")
    String orderNewShipmentForShipGroup();
    @DefaultMessage("No Addresses Available")
    String orderNoAddressesAvailable();
    @DefaultMessage("No Channel")
    String orderNoChannel();
    @DefaultMessage("No Gift Wrap")
    String orderNoGiftWrap();
    @DefaultMessage("No notes for this order")
    String orderNoNotes();
    @DefaultMessage("No Notes For This Request Item")
    String orderNoNotesForThisRequestItem();
    @DefaultMessage("No adjustments on this order.")
    String orderNoOrderAdjustments();
    @DefaultMessage("No Orders Found")
    String orderNoOrderFound();
    @DefaultMessage("No orders found for partyId")
    String orderNoOrderFoundForParty();
    @DefaultMessage("No order items to display.")
    String orderNoOrderItemsToDisplay();
    @DefaultMessage("No payment preferences associated with this order.")
    String orderNoOrderPaymentPreferences();
    @DefaultMessage("No Purchase Payment Method Information Found.")
    String orderNoPurchasePaymentMethod();
    @DefaultMessage("No Purchased Product Information Found.")
    String orderNoPurchaseProduct();
    @DefaultMessage("No Purchase Order was specified")
    String orderNoPurchaseSpecified();
    @DefaultMessage("No Quotes Found")
    String orderNoQuoteFound();
    @DefaultMessage("No Request Found")
    String orderNoRequestFound();
    @DefaultMessage("No return found.")
    String orderNoReturnFound();
    @DefaultMessage("No return found with return ID")
    String orderNoReturnFoundWithId();
    @DefaultMessage("No item(s) in return.")
    String orderNoReturnItemsFound();
    @DefaultMessage("No returnable items found for order")
    String orderNoReturnableItems();
    @DefaultMessage("No Roles Associated With This Customer Request")
    String orderNoRolesAssociatedRequest();
    @DefaultMessage("No ship groups defined")
    String orderNoShipGroupsDefined();
    @DefaultMessage("Not A Gift")
    String orderNotAGift();
    @DefaultMessage("Internal Note (Not Printed)")
    String orderNotPrintableNote();
    @DefaultMessage("Not Shipped")
    String orderNotShipped();
    @DefaultMessage("Not Used For Purchase Orders")
    String orderNotUsedForPurchase();
    @DefaultMessage("Not Used For Sales Orders")
    String orderNotUsedForSales();
    @DefaultMessage("Not Yet Known")
    String orderNotYetKnown();
    @DefaultMessage("Not Yet Ordered")
    String orderNotYetOrdered();
    @DefaultMessage("Note")
    String orderNote();
    @DefaultMessage("Notes")
    String orderNotes();
    @DefaultMessage("Create New")
    String orderNotesCreateNew();
    @DefaultMessage("Notes For Request Item")
    String orderNotesForRequestItem();
    @DefaultMessage("Make Private")
    String orderNotesPrivate();
    @DefaultMessage("Make Public")
    String orderNotesPublic();
    @DefaultMessage("Number of persons")
    String orderNumberOfPersons();
    @DefaultMessage("Offline: Check/Money Order")
    String orderOfflineCheckMoney();
    @DefaultMessage("On Order")
    String orderOnOrder();
    @DefaultMessage("Order options")
    String orderOptions();
    @DefaultMessage("Order")
    String orderOrder();
    @DefaultMessage("Bill From Party")
    String orderOrderBillFromParty();
    @DefaultMessage("Bill To Party")
    String orderOrderBillToParty();
    @DefaultMessage("Order Change Notification")
    String orderOrderChangeNotification();
    @DefaultMessage("Order Confirmation")
    String orderOrderConfirmation();
    @DefaultMessage("Order Date")
    String orderOrderDate();
    @DefaultMessage("Order Entry")
    String orderOrderEntry();
    @DefaultMessage("Enter Order Currency, Agreements, and Ship Dates")
    String orderOrderEntryCurrencyAgreementShipDates();
    @DefaultMessage("Order Entry Customer Info")
    String orderOrderEntryCustomerInfo();
    @DefaultMessage("Internal Organization")
    String orderOrderEntryInternalOrganziation();
    @DefaultMessage("Order Entry Order Terms")
    String orderOrderEntryOrderTerms();
    @DefaultMessage("Order Entry Payment Settings")
    String orderOrderEntryPaymentSettings();
    @DefaultMessage("Order Entry Ship-To Settings")
    String orderOrderEntryShipToSettings();
    @DefaultMessage("Order for")
    String orderOrderFor();
    @DefaultMessage("Order(s) Found")
    String orderOrderFound();
    @DefaultMessage("Order Header Info")
    String orderOrderHeaderInfo();
    @DefaultMessage("Order Id")
    String orderOrderId();
    @DefaultMessage("Include")
    String orderOrderInclude();
    @DefaultMessage("Order Item")
    String orderOrderItem();
    @DefaultMessage("Item Type")
    String orderOrderItemType();
    @DefaultMessage("Order Items")
    String orderOrderItems();
    @DefaultMessage("Order List")
    String orderOrderList();
    @DefaultMessage("Order Manager Application")
    String orderOrderManagerApplication();
    @DefaultMessage("Order Name")
    String orderOrderName();
    @DefaultMessage("Orders Needing Attention")
    String orderOrderNeedingAttention();
    @DefaultMessage("Order Number")
    String orderOrderNumber();
    @DefaultMessage("Order Option Settings")
    String orderOrderOptionSettings();
    @DefaultMessage("Order Purchase To Be Scheluded")
    String orderOrderPurchaseToBeScheduled();
    @DefaultMessage("Order Qty")
    String orderOrderQty();
    @DefaultMessage("Quote")
    String orderOrderQuote();
    @DefaultMessage("Quote Adjustment Id")
    String orderOrderQuoteAdjustmentId();
    @DefaultMessage("Quote Adjustment Type")
    String orderOrderQuoteAdjustmentType();
    @DefaultMessage("Adjustments")
    String orderOrderQuoteAdjustments();
    @DefaultMessage("Attribute Name")
    String orderOrderQuoteAttributeName();
    @DefaultMessage("Attribute Value")
    String orderOrderQuoteAttributeValue();
    @DefaultMessage("Quote Attributes")
    String orderOrderQuoteAttributes();
    @DefaultMessage("Average Cost")
    String orderOrderQuoteAverageCost();
    @DefaultMessage("Coeff. Name")
    String orderOrderQuoteCoeffName();
    @DefaultMessage("Coeff. Value")
    String orderOrderQuoteCoeffValue();
    @DefaultMessage("Quote Coefficients")
    String orderOrderQuoteCoefficients();
    @DefaultMessage("Cost to Price")
    String orderOrderQuoteCostToPrice();
    @DefaultMessage("Default Unit Price")
    String orderOrderQuoteDefaultUnitPrice();
    @DefaultMessage("Deliverable Type Id")
    String orderOrderQuoteDeliverableTypeId();
    @DefaultMessage("Edit Quote")
    String orderOrderQuoteEdit();
    @DefaultMessage("Edit Quote Adjustments")
    String orderOrderQuoteEditAdjustments();
    @DefaultMessage("Edit Quote Attributes")
    String orderOrderQuoteEditAttributes();
    @DefaultMessage("Edit Quote Coefficients")
    String orderOrderQuoteEditCoefficients();
    @DefaultMessage("Edit Quote Items")
    String orderOrderQuoteEditItems();
    @DefaultMessage("Edit Quote Report Mail")
    String orderOrderQuoteEditReportMail();
    @DefaultMessage("Edit Quote Roles")
    String orderOrderQuoteEditRoles();
    @DefaultMessage("Edit Quote Work Efforts")
    String orderOrderQuoteEditWorkEfforts();
    @DefaultMessage("Enter existing WorkEffort Id below")
    String orderOrderQuoteEnterWorkEffortId();
    @DefaultMessage("OR add new WorkEffort data below to create new entity (leave WorkEffort Id empty)")
    String orderOrderQuoteEnterWorkEffortIdNew();
    @DefaultMessage("Estimated Delivery Date")
    String orderOrderQuoteEstimatedDeliveryDate();
    @DefaultMessage("Quote Id")
    String orderOrderQuoteId();
    @DefaultMessage("Quote Issue Date")
    String orderOrderQuoteIssueDate();
    @DefaultMessage("Quote Item")
    String orderOrderQuoteItem();
    @DefaultMessage("Quote Item Seq Id")
    String orderOrderQuoteItemSeqId();
    @DefaultMessage("Quote Items")
    String orderOrderQuoteItems();
    @DefaultMessage("List Quote Adjustments")
    String orderOrderQuoteListAdjustments();
    @DefaultMessage("List Quote Attributes")
    String orderOrderQuoteListAttributes();
    @DefaultMessage("List Quote Coefficients")
    String orderOrderQuoteListCoefficients();
    @DefaultMessage("List Quote Items")
    String orderOrderQuoteListItems();
    @DefaultMessage("List Quote Roles")
    String orderOrderQuoteListRoles();
    @DefaultMessage("Manual Unit Price")
    String orderOrderQuoteManualUnitPrice();
    @DefaultMessage("Quote Name")
    String orderOrderQuoteName();
    @DefaultMessage("Quote Percentage Profit")
    String orderOrderQuotePercProfit();
    @DefaultMessage("Quote Percent")
    String orderOrderQuotePercent();
    @DefaultMessage("Quote Prices")
    String orderOrderQuotePrices();
    @DefaultMessage("Quote Profit")
    String orderOrderQuoteProfit();
    @DefaultMessage("Quote Report")
    String orderOrderQuoteReport();
    @DefaultMessage("Quote Roles")
    String orderOrderQuoteRoles();
    @DefaultMessage("Quote Skill Type Id")
    String orderOrderQuoteSkillTypeId();
    @DefaultMessage("Quote Type")
    String orderOrderQuoteType();
    @DefaultMessage("Quote Type Id")
    String orderOrderQuoteTypeId();
    @DefaultMessage("Quote Unit Price")
    String orderOrderQuoteUnitPrice();
    @DefaultMessage("View Quote Profit")
    String orderOrderQuoteViewProfit();
    @DefaultMessage("View Request")
    String orderOrderQuoteViewRequest();
    @DefaultMessage("Quote Work Effort Id")
    String orderOrderQuoteWorkEffortId();
    @DefaultMessage("Quote Work Efforts")
    String orderOrderQuoteWorkEfforts();
    @DefaultMessage("Quotes")
    String orderOrderQuotes();
    @DefaultMessage("Quote Uom Id")
    String orderOrderQuoteuomId();
    @DefaultMessage("Return")
    String orderOrderReturn();
    @DefaultMessage("Returns")
    String orderOrderReturns();
    @DefaultMessage("Shortcuts")
    String orderOrderShortcuts();
    @DefaultMessage("Order Statistics Page")
    String orderOrderStatisticsPage();
    @DefaultMessage("Order Tasks")
    String orderOrderTasks();
    @DefaultMessage("Term Days")
    String orderOrderTermDays();
    @DefaultMessage("Term Type")
    String orderOrderTermType();
    @DefaultMessage("Term Value")
    String orderOrderTermValue();
    @DefaultMessage("Order Terms")
    String orderOrderTerms();
    @DefaultMessage("Order Total")
    String orderOrderTotal();
    @DefaultMessage("Order Type")
    String orderOrderType();
    @DefaultMessage("Ordered")
    String orderOrdered();
    @DefaultMessage("Orders")
    String orderOrders();
    @DefaultMessage("Orders Item Counts")
    String orderOrdersItemCounts();
    @DefaultMessage("Orders Pending")
    String orderOrdersPending();
    @DefaultMessage("Orders to pack")
    String orderOrdersToPack();
    @DefaultMessage("Orders Totals")
    String orderOrdersTotals();
    @DefaultMessage("Origin Facility")
    String orderOriginFacility();
    @DefaultMessage("Other Orders")
    String orderOtherOrders();
    @DefaultMessage("Outstanding")
    String orderOutstanding();
    @DefaultMessage("Override Price")
    String orderOverridePrice();
    @DefaultMessage("PO Number")
    String orderPONumber();
    @DefaultMessage("Pack Shipment For Ship Group")
    String orderPackShipmentForShipGroup();
    @DefaultMessage("Paid Dollar Amounts (includes adjustments)")
    String orderPaidDollarAmountsIncludesAdjustments();
    @DefaultMessage("Paid Items Sold (includes promotions)")
    String orderPaidItemsSoldIncludesPromotions();
    @DefaultMessage("I do not wish to add additional parties.")
    String orderPartyDontWish();
    @DefaultMessage("Name Not Found")
    String orderPartyNameNotFound();
    @DefaultMessage("Select Role For Party")
    String orderPartySelectRoleForParty();
    @DefaultMessage("Pay By")
    String orderPayBy();
    @DefaultMessage("Max Amount")
    String orderPaymentMaximumAmount();
    @DefaultMessage("Offline Payment: Check/Money Order")
    String orderPaymentOfflineCheckMoney();
    @DefaultMessage("Payment Type")
    String orderPaymentType();
    @DefaultMessage("Pending Payment Dollar Amounts (includes adjustments)")
    String orderPendingPaymentDollarAmountsIncludesAdjustments();
    @DefaultMessage("Pending Payment Items Sold (includes promotions)")
    String orderPendingPaymentItemsSoldIncludesPromotions();
    @DefaultMessage("Pick Orders")
    String orderPickOrders();
    @DefaultMessage("Received quantity")
    String orderPlannedInReceive();
    @DefaultMessage("Planned in Shipment")
    String orderPlannedInShipment();
    @DefaultMessage("Rejected quantity")
    String orderPlannedRejected();
    @DefaultMessage("Please ship items I ordered as they become available (you may incur additional shipping charges)")
    String orderPleaseShipItemsBecomeAvailable();
    @DefaultMessage("Please wait until the entire order is ready before shipping")
    String orderPleaseWaitUntilBeforeShipping();
    @DefaultMessage("PO Number")
    String orderPoNumber();
    @DefaultMessage("Prepare Order")
    String orderPrepareOrder();
    @DefaultMessage("Price")
    String orderPrice();
    @DefaultMessage("Public Note (Printed)")
    String orderPrintableNote();
    @DefaultMessage("At this time your order has been cancelled and will not be processed. Please contact customer service if you have any questions.")
    String orderProblemCancelledNotProcessed();
    @DefaultMessage("This email is to inform you there was a problem with your payment method for order #")
    String orderProblemWithYourPaymentMethod();
    @DefaultMessage("This order is currently in a ''Active'' state.")
    String orderProcessingInActive();
    @DefaultMessage("This order is currently in a ''Hold'' state. The activity has been suspended.")
    String orderProcessingInHold();
    @DefaultMessage("** Note: If this state is a result of an automated activity, releasing may not have an effect until all conditions are met.")
    String orderProcessingInHoldNote();
    @DefaultMessage("Processing Status")
    String orderProcessingStatus();
    @DefaultMessage("Processing Transitions")
    String orderProcessingTransitions();
    @DefaultMessage("Product Store")
    String orderProductStore();
    @DefaultMessage("Promotion/Coupon Codes")
    String orderPromotionCouponCodes();
    @DefaultMessage("Purchase Order")
    String orderPurchaseOrder();
    @DefaultMessage("Purchase Order Number")
    String orderPurchaseOrderNumber();
    @DefaultMessage("Order Purchase Report Options")
    String orderPurchaseReportOptions();
    @DefaultMessage("Purchased From")
    String orderPurchasedFrom();
    @DefaultMessage("Qty")
    String orderQty();
    @DefaultMessage("Qty Cancelled")
    String orderQtyCanceled();
    @DefaultMessage("Qty Ordered")
    String orderQtyOrdered();
    @DefaultMessage("Qty Picked")
    String orderQtyPicked();
    @DefaultMessage("Qty Shipped")
    String orderQtyShipped();
    @DefaultMessage("Quantity")
    String orderQuantity();
    @DefaultMessage("Qty Cncld")
    String orderQuantityCancelled();
    @DefaultMessage("In Group")
    String orderQuantityInShipGroup();
    @DefaultMessage("Total In Group")
    String orderQuantityInShipGroupTotal();
    @DefaultMessage("Qty Purch")
    String orderQuantityPurchase();
    @DefaultMessage("Shipped")
    String orderQuantityShipped();
    @DefaultMessage("Qty Sold")
    String orderQuantitySold();
    @DefaultMessage("Unity of measure")
    String orderQuantityUom();
    @DefaultMessage("Order Item Quick Add")
    String orderQuickAddOrderItem();
    @DefaultMessage("Quick Finalize Order")
    String orderQuickFinalizeOrder();
    @DefaultMessage("Quick Lookup")
    String orderQuickLookup();
    @DefaultMessage("Quick Receive Purchase Order")
    String orderQuickReceivePurchaseOrder();
    @DefaultMessage("Quick Refund Entire Order")
    String orderQuickRefundEntireOrder();
    @DefaultMessage("Quick Ship Entire Order")
    String orderQuickShipEntireOrder();
    @DefaultMessage("Quote")
    String orderQuote();
    @DefaultMessage("Rate")
    String orderRate();
    @DefaultMessage("Reason")
    String orderReason();
    @DefaultMessage("Recalculate Order")
    String orderRecalculateOrder();
    @DefaultMessage("Receipt Information")
    String orderReceiptInformation();
    @DefaultMessage("Receive Offline Payment(s)")
    String orderReceiveOfflinePayments();
    @DefaultMessage("Receive Return")
    String orderReceiveReturn();
    @DefaultMessage("On Other Delivery Order")
    String orderReceivedInOtherReceive();
    @DefaultMessage("Reference")
    String orderReference();
    @DefaultMessage("Rejected")
    String orderRejected();
    @DefaultMessage("Release Hold")
    String orderRelease();
    @DefaultMessage("Remaining")
    String orderRemaining();
    @DefaultMessage("Remaining SubTotal")
    String orderRemainingSubTotal();
    @DefaultMessage("Remove Selected")
    String orderRemoveSelected();
    @DefaultMessage("Open Order Items Report")
    String orderReportOpenOrderItems();
    @DefaultMessage("Purchases by Organization Report")
    String orderReportPurchasesByOrganization();
    @DefaultMessage("Purchases by Payment Method Report")
    String orderReportPurchasesByPaymentMethod();
    @DefaultMessage("Purchases by Product Report")
    String orderReportPurchasesByProduct();
    @DefaultMessage("Sales by Store Report")
    String orderReportSalesByStore();
    @DefaultMessage("Order Reports")
    String orderReports();
    @DefaultMessage("Request")
    String orderRequest();
    @DefaultMessage("Created Date")
    String orderRequestCreatedDate();
    @DefaultMessage("Request Date")
    String orderRequestDate();
    @DefaultMessage("Request Item")
    String orderRequestItem();
    @DefaultMessage("Request Items")
    String orderRequestItems();
    @DefaultMessage("Last Modified Date")
    String orderRequestLastModifiedDate();
    @DefaultMessage("Request List")
    String orderRequestList();
    @DefaultMessage("Request Manager")
    String orderRequestManager();
    @DefaultMessage("Maximum Amount")
    String orderRequestMaximumAmount();
    @DefaultMessage("Request Name")
    String orderRequestName();
    @DefaultMessage("Request Return")
    String orderRequestReturn();
    @DefaultMessage("Request Roles")
    String orderRequestRoles();
    @DefaultMessage("Request Taker")
    String orderRequestTaker();
    @DefaultMessage("Requested Response")
    String orderRequestedResponse();
    @DefaultMessage("Requesting Party")
    String orderRequestingParty();
    @DefaultMessage("Requests")
    String orderRequests();
    @DefaultMessage("Required for SO")
    String orderRequiredForSO();
    @DefaultMessage("Requirement")
    String orderRequirement();
    @DefaultMessage("Manufacturing Requirement By Date")
    String orderRequirementByDate();
    @DefaultMessage("RequirementId")
    String orderRequirementId();
    @DefaultMessage("Manufacturing Requirement Start Date")
    String orderRequirementStartDate();
    @DefaultMessage("Order Requirement Status Id")
    String orderRequirementStatusId();
    @DefaultMessage("Requirements")
    String orderRequirements();
    @DefaultMessage("Requirements For Request Item")
    String orderRequirementsForRequestItem();
    @DefaultMessage("Requirement List")
    String orderRequirementsList();
    @DefaultMessage("Accept Return")
    String orderReturnAccept();
    @DefaultMessage("Return Order Adjustment(s) From Order")
    String orderReturnAdjustments();
    @DefaultMessage("Create Return")
    String orderReturnCreate();
    @DefaultMessage("Destination Facility")
    String orderReturnDestinationFacility();
    @DefaultMessage("Return(s) Found")
    String orderReturnFound();
    @DefaultMessage("Return From Address")
    String orderReturnFromAddress();
    @DefaultMessage("Return Item(s) From Order")
    String orderReturnFromOrder();
    @DefaultMessage("Return From Party")
    String orderReturnFromParty();
    @DefaultMessage("Return Header")
    String orderReturnHeader();
    @DefaultMessage("Return ID")
    String orderReturnId();
    @DefaultMessage("Inventory Status")
    String orderReturnItemInventoryStatus();
    @DefaultMessage("Return Items")
    String orderReturnItems();
    @DefaultMessage("Return Item(s) From Order")
    String orderReturnItemsFromOrder();
    @DefaultMessage("Load order items for return")
    String orderReturnLoadItems();
    @DefaultMessage("Manual Return Adjustment For Order")
    String orderReturnManualAdjustment();
    @DefaultMessage("Needs Auto-Receive (On ACCEPT)")
    String orderReturnNeedsAutoReceive();
    @DefaultMessage("No returnable items found for order")
    String orderReturnNoReturnableItems();
    @DefaultMessage("Return Price")
    String orderReturnPrice();
    @DefaultMessage("Price not includes tax & adjustments")
    String orderReturnPriceNotIncludeTax();
    @DefaultMessage("Return Qty")
    String orderReturnQty();
    @DefaultMessage("Reason")
    String orderReturnReason();
    @DefaultMessage("Receive Return")
    String orderReturnReceive();
    @DefaultMessage("Response")
    String orderReturnResponse();
    @DefaultMessage("Return Selected Item(s)")
    String orderReturnSelectedItems();
    @DefaultMessage("Please select a ship from address")
    String orderReturnShipFromAddress();
    @DefaultMessage("Return Summary")
    String orderReturnSummary();
    @DefaultMessage("Return To Address")
    String orderReturnToAddress();
    @DefaultMessage("Return To Facility")
    String orderReturnToFacility();
    @DefaultMessage("Return Total")
    String orderReturnTotal();
    @DefaultMessage("Type")
    String orderReturnType();
    @DefaultMessage("Returned")
    String orderReturned();
    @DefaultMessage("Review Order")
    String orderReviewOrder();
    @DefaultMessage("Run Action")
    String orderRunAction();
    @DefaultMessage("Run Store Promotions")
    String orderRunStorePromotions();
    @DefaultMessage("Sales Channel")
    String orderSalesChannel();
    @DefaultMessage("Sales Order")
    String orderSalesOrder();
    @DefaultMessage("ERROR: Sales Order Lines lookup failed")
    String orderSalesOrderLookupFailed();
    @DefaultMessage("Sales Tax")
    String orderSalesTax();
    @DefaultMessage("Schedule Delivery")
    String orderScheduleDelivery();
    @DefaultMessage("Score")
    String orderScore();
    @DefaultMessage("Error in toggling notes to Private/Public")
    String orderSecurityErrorToRunUpdateOrderNote();
    @DefaultMessage("Select A Shipping Address")
    String orderSelectAShippingAddress();
    @DefaultMessage("Select Address First")
    String orderSelectAddressFirst();
    @DefaultMessage("Select an agreement for this order")
    String orderSelectAgreement();
    @DefaultMessage("Set a currency for this order")
    String orderSelectCurrency();
    @DefaultMessage("Or set a currency for this order")
    String orderSelectCurrencyOr();
    @DefaultMessage("Select type of party to associate to order")
    String orderSelectPartyToOrder();
    @DefaultMessage("Select Payment Method")
    String orderSelectPaymentMethod();
    @DefaultMessage("Please select a ship from address")
    String orderSelectShipFromAddress();
    @DefaultMessage("Select Shipping Address")
    String orderSelectShippingAddress();
    @DefaultMessage("Select Shipping Method")
    String orderSelectShippingMethod();
    @DefaultMessage("Selected Gift Wrap is not available for all items. The items which are available have been selected, the others remain unchanged.")
    String orderSelectedGiftNotAvailableForAll();
    @DefaultMessage("Send a confirmation email")
    String orderSendConfirmationEmail();
    @DefaultMessage("BCC To")
    String orderSendConfirmationEmailBCCTo();
    @DefaultMessage("Body")
    String orderSendConfirmationEmailBody();
    @DefaultMessage("CC To")
    String orderSendConfirmationEmailCCTo();
    @DefaultMessage("Content-Type")
    String orderSendConfirmationEmailContentType();
    @DefaultMessage("Note")
    String orderSendConfirmationEmailNote();
    @DefaultMessage("Send To")
    String orderSendConfirmationEmailSendTo();
    @DefaultMessage("Subject")
    String orderSendConfirmationEmailSubject();
    @DefaultMessage("Send Email")
    String orderSendEmail();
    @DefaultMessage("Send me this every month")
    String orderSendMeThisEveryMonth();
    @DefaultMessage("Please Send Payment To")
    String orderSendPaymentTo();
    @DefaultMessage("Ship After Date")
    String orderShipAfterDate();
    @DefaultMessage("Default Ship After Date")
    String orderShipAfterDateDefault();
    @DefaultMessage("Ship all at once, or ''as available''")
    String orderShipAllAtOnce();
    @DefaultMessage("Ship All Items Together")
    String orderShipAllItemsTogether();
    @DefaultMessage("Ship Before Date")
    String orderShipBeforeDate();
    @DefaultMessage("Default Ship Before Date")
    String orderShipBeforeDateDefault();
    @DefaultMessage("Ship Group")
    String orderShipGroup();
    @DefaultMessage("Ship Group Seq Id")
    String orderShipGroupSeqId();
    @DefaultMessage("To Ship Group")
    String orderShipGroupTo();
    @DefaultMessage("Ship Groups")
    String orderShipGroups();
    @DefaultMessage("Ship Items When Available")
    String orderShipItemsWhenAvailable();
    @DefaultMessage("Ship Request")
    String orderShipRequest();
    @DefaultMessage("Ship To")
    String orderShipTo();
    @DefaultMessage("Ship to Another Party")
    String orderShipToAnotherParty();
    @DefaultMessage("Ship Via")
    String orderShipVia();
    @DefaultMessage("Shipment Information")
    String orderShipmentInformation();
    @DefaultMessage("Shipping")
    String orderShipping();
    @DefaultMessage("Shipping Address")
    String orderShippingAddress();
    @DefaultMessage("Shipping and Handling")
    String orderShippingAndHandling();
    @DefaultMessage("Shipping Information")
    String orderShippingInformation();
    @DefaultMessage("Shortfalled")
    String orderShortfalled();
    @DefaultMessage("Show All Notes")
    String orderShowAllNotes();
    @DefaultMessage("Show This Item''s Notes")
    String orderShowThisItemsNotes();
    @DefaultMessage("Special Instructions")
    String orderSpecialInstructions();
    @DefaultMessage("The specified order was not found, please try again")
    String orderSpecifiedNotFound();
    @DefaultMessage("Split Into Multiple Shipments")
    String orderSplitIntoMultipleShipments();
    @DefaultMessage("Split Shipment")
    String orderSplitShipment();
    @DefaultMessage("Splitting Preference")
    String orderSplittingPreference();
    @DefaultMessage("Start Date/Time")
    String orderStartDateTime();
    @DefaultMessage("Status Changes")
    String orderStatusChanges();
    @DefaultMessage("Status History")
    String orderStatusHistory();
    @DefaultMessage("Stock event planned")
    String orderStockEventPlanned();
    @DefaultMessage("Sub Total")
    String orderSubTotal();
    @DefaultMessage("Submit Order")
    String orderSubmitOrder();
    @DefaultMessage("Please Wait, Processing Order...")
    String orderSubmittingOrder();
    @DefaultMessage("Supplier Data")
    String orderSupplierData();
    @DefaultMessage("Supplier Financial Data")
    String orderSupplierFinancialData();
    @DefaultMessage("Survey")
    String orderSurvey();
    @DefaultMessage("This order is a gift")
    String orderThisIsGift();
    @DefaultMessage("This order is not a gift")
    String orderThisIsNotGift();
    @DefaultMessage("This order is a gift")
    String orderThisOrderGift();
    @DefaultMessage("This order is not a gift")
    String orderThisOrderNotGift();
    @DefaultMessage("Total Due")
    String orderTotalDue();
    @DefaultMessage("Total Other Order Adjustments")
    String orderTotalOtherOrderAdjustments();
    @DefaultMessage("Total Qty")
    String orderTotalQty();
    @DefaultMessage("Total quantity accepted")
    String orderTotalQuantityAccepted();
    @DefaultMessage("Total quantity not received")
    String orderTotalQuantityNotReceived();
    @DefaultMessage("Total quantity ordered")
    String orderTotalQuantityOrdered();
    @DefaultMessage("Total quantity received")
    String orderTotalQuantityReceive();
    @DefaultMessage("Total quantity rejected")
    String orderTotalQuantityRejected();
    @DefaultMessage("Total Sales Tax")
    String orderTotalSalesTax();
    @DefaultMessage("Total Shipping and Handling")
    String orderTotalShippingAndHandling();
    @DefaultMessage("Tracking Code")
    String orderTrackingCode();
    @DefaultMessage("Tracking Number")
    String orderTrackingNumber();
    @DefaultMessage("Unit / List")
    String orderUnitList();
    @DefaultMessage("Unit Price")
    String orderUnitPrice();
    @DefaultMessage("Unplanned")
    String orderUnplanned();
    @DefaultMessage("Your may update these in your")
    String orderUpdateEmailAddress();
    @DefaultMessage("Update Items")
    String orderUpdateItems();
    @DefaultMessage("Use Default: No other shipping methods available")
    String orderUseDefault();
    @DefaultMessage("Use as default comment for next entry")
    String orderUseDefaultComment();
    @DefaultMessage("Use as default desired delivery date for next entry")
    String orderUseDefaultDesiredDeliveryDate();
    @DefaultMessage("Value Purch")
    String orderValuePurchase();
    @DefaultMessage("Value Sold")
    String orderValueSold();
    @DefaultMessage("# Products")
    String orderVendorRequirementCount();
    @DefaultMessage("Verify Configuration")
    String orderVerifyConfiguration();
    @DefaultMessage("View/Edit Delivery Schedule Info")
    String orderViewEditDeliveryScheduleInfo();
    @DefaultMessage("View Image")
    String orderViewImage();
    @DefaultMessage("View Order")
    String orderViewOrder();
    @DefaultMessage("You do not have permission to view this page.")
    String orderViewPermissionError();
    @DefaultMessage("View Quote")
    String orderViewQuote();
    @DefaultMessage("Profit")
    String orderViewQuoteProfit();
    @DefaultMessage("View Request")
    String orderViewRequest();
    @DefaultMessage("WTD")
    String orderWTD();
    @DefaultMessage("Waiting Approval")
    String orderWaitingApproval();
    @DefaultMessage("Waiting Completion")
    String orderWaitingCompletion();
    @DefaultMessage("Waiting Payment")
    String orderWaitingPayment();
    @DefaultMessage("Where shall we ship it")
    String orderWhereShallWeShipIt();
    @DefaultMessage("with Code")
    String orderWithPromoCode();
    @DefaultMessage("Workflow")
    String orderWorkflow();
    @DefaultMessage("YTD")
    String orderYTD();
    @DefaultMessage("Yes, Is A Gift")
    String orderYesIsAGift();
    @DefaultMessage("Authorization Problems")
    String orderfilterAuthProblems();
    @DefaultMessage("Inventory Problems")
    String orderfilterInventoryProblems();
    @DefaultMessage("Organization")
    String organization();
    @DefaultMessage("Add Content")
    String pageTitleAddContent();
    @DefaultMessage("Add New Data Source")
    String pageTitleAddDataSource();
    @DefaultMessage("Add New Data Source Type")
    String pageTitleAddDataSourceType();
    @DefaultMessage("Add Gl Account")
    String pageTitleAddGlAccount();
    @DefaultMessage("Add Items From Order")
    String pageTitleAddItemsFromOrder();
    @DefaultMessage("Add Party Content")
    String pageTitleAddPartyContent();
    @DefaultMessage("Add Product Work Effort")
    String pageTitleAddProductWorkEffort();
    @DefaultMessage("Add Response")
    String pageTitleAddResponse();
    @DefaultMessage("Add Tax Authority Association")
    String pageTitleAddTaxAuthorityAssoc();
    @DefaultMessage("Add Tax Authority Product Category")
    String pageTitleAddTaxAuthorityCategory();
    @DefaultMessage("Add Tax Authority GL Account")
    String pageTitleAddTaxAuthorityGlAccount();
    @DefaultMessage("Add Tax Authority Product Rate")
    String pageTitleAddTaxAuthorityRateProduct();
    @DefaultMessage("Add Timesheet")
    String pageTitleAddTimesheet();
    @DefaultMessage("Add Work Effort")
    String pageTitleAddWorkEffort();
    @DefaultMessage("Add Work Effort Assignment Rate")
    String pageTitleAddWorkEffortAssignmentRate();
    @DefaultMessage("Add Work Effort Communication Event")
    String pageTitleAddWorkEffortCommEvent();
    @DefaultMessage("Add Work Effort Keyword")
    String pageTitleAddWorkEffortKeyword();
    @DefaultMessage("Add Work Effort Notes")
    String pageTitleAddWorkEffortNotes();
    @DefaultMessage("Add Order to Work Effort")
    String pageTitleAddWorkEffortOrderHeader();
    @DefaultMessage("Add Work Effort Party Assignment")
    String pageTitleAddWorkEffortPartyAssign();
    @DefaultMessage("Add Work Effort Quote")
    String pageTitleAddWorkEffortQuote();
    @DefaultMessage("Add Work Effort QuoteItem")
    String pageTitleAddWorkEffortQuoteItem();
    @DefaultMessage("Add Work Effort Request")
    String pageTitleAddWorkEffortRequest();
    @DefaultMessage("Add Work Effort RequestItem")
    String pageTitleAddWorkEffortRequestItem();
    @DefaultMessage("Add Work Effort Requirement")
    String pageTitleAddWorkEffortRequirement();
    @DefaultMessage("Add Work Effort Shopping List")
    String pageTitleAddWorkEffortShopList();
    @DefaultMessage("Add Time Entry to Work Effort")
    String pageTitleAddWorkEffortTimeEntry();
    @DefaultMessage("Add Work Effort Time to Invoice")
    String pageTitleAddWorkEffortTimeToInvoice();
    @DefaultMessage("Add Work Effort Time to New Invoice")
    String pageTitleAddWorkEffortTimeToNewInvoice();
    @DefaultMessage("Additional Info")
    String pageTitleAdditionalInfo();
    @DefaultMessage("Address Match Map")
    String pageTitleAddressMatchMap();
    @DefaultMessage("Address Matches")
    String pageTitleAddressMatches();
    @DefaultMessage("Advanced Search")
    String pageTitleAdvancedSearch();
    @DefaultMessage("Apply Features From Category")
    String pageTitleApplyFeaturesFromCategory();
    @DefaultMessage("Billing Information")
    String pageTitleBillingInformation();
    @DefaultMessage("Calendar Day")
    String pageTitleCalendarDay();
    @DefaultMessage("Calendar Month")
    String pageTitleCalendarMonth();
    @DefaultMessage("Calendar Upcoming")
    String pageTitleCalendarUpcoming();
    @DefaultMessage("Calendar Week")
    String pageTitleCalendarWeek();
    @DefaultMessage("Catalog Manager Main Page")
    String pageTitleCatalogManagerMainPage();
    @DefaultMessage("Category Page")
    String pageTitleCategoryPage();
    @DefaultMessage("Change Password")
    String pageTitleChangePassword();
    @DefaultMessage("Checkout Options")
    String pageTitleCheckoutOptions();
    @DefaultMessage("Checkout Review")
    String pageTitleCheckoutReview();
    @DefaultMessage("Choose Top Category")
    String pageTitleChooseTopCategory();
    @DefaultMessage("Communication Events")
    String pageTitleCommEvents();
    @DefaultMessage("Content Page")
    String pageTitleContentPage();
    @DefaultMessage("Create New Party Detail")
    String pageTitleCreateNewPartyDetail();
    @DefaultMessage("Create Product in Category - Check Existing")
    String pageTitleCreateProductCategoryCheckExisting();
    @DefaultMessage("Create Product in Category - Start")
    String pageTitleCreateProductCategoryStart();
    @DefaultMessage("Create a new Quote and QuoteItem for a CustRequest")
    String pageTitleCreateQuoteForCustRequest();
    @DefaultMessage("Create Virtual with Variants")
    String pageTitleCreateVirtualWithVariants();
    @DefaultMessage("Create Timesheet for This Week")
    String pageTitleCreateWeekTimesheet();
    @DefaultMessage("Edit My Digital Product")
    String pageTitleDigitalProductEdit();
    @DefaultMessage("List My Digital Products")
    String pageTitleDigitalProductList();
    @DefaultMessage("Edit/Add Content")
    String pageTitleEditAddContent();
    @DefaultMessage("Edit/Add Image")
    String pageTitleEditAddImage();
    @DefaultMessage("Edit Agreement")
    String pageTitleEditAgreement();
    @DefaultMessage("Edit Agreement Item")
    String pageTitleEditAgreementItem();
    @DefaultMessage("Edit Agreement Term")
    String pageTitleEditAgreementTerm();
    @DefaultMessage("Edit AVS Override")
    String pageTitleEditAvsOverride();
    @DefaultMessage("Edit Billing Account")
    String pageTitleEditBillingAccount();
    @DefaultMessage("Edit Billing Account Invoices")
    String pageTitleEditBillingAccountInvoices();
    @DefaultMessage("Edit Billing Account Payments")
    String pageTitleEditBillingAccountPayments();
    @DefaultMessage("Edit Billing Account Roles")
    String pageTitleEditBillingAccountRoles();
    @DefaultMessage("Edit Billing Account Terms")
    String pageTitleEditBillingAccountTerms();
    @DefaultMessage("Edit Calendar")
    String pageTitleEditCalendar();
    @DefaultMessage("Edit Calendar Exception Day")
    String pageTitleEditCalendarExceptionDay();
    @DefaultMessage("Edit Calendar Exception Week")
    String pageTitleEditCalendarExceptionWeek();
    @DefaultMessage("Edit Week")
    String pageTitleEditCalendarWeek();
    @DefaultMessage("Edit Category")
    String pageTitleEditCategory();
    @DefaultMessage("Edit Product Category Attributes")
    String pageTitleEditCategoryAttributes();
    @DefaultMessage("Edit Category Content")
    String pageTitleEditCategoryContent();
    @DefaultMessage("Edit Category Feature Categories")
    String pageTitleEditCategoryFeatureCategories();
    @DefaultMessage("Edit Category Parties")
    String pageTitleEditCategoryParties();
    @DefaultMessage("Edit Category Product Catalogs")
    String pageTitleEditCategoryProductCatalogs();
    @DefaultMessage("Edit Category Products")
    String pageTitleEditCategoryProducts();
    @DefaultMessage("Edit Category Rollup")
    String pageTitleEditCategoryRollup();
    @DefaultMessage("Edit Comm Content")
    String pageTitleEditCommContent();
    @DefaultMessage("Edit Communication")
    String pageTitleEditCommunication();
    @DefaultMessage("Edit Config Item")
    String pageTitleEditConfigItem();
    @DefaultMessage("Edit Config Options")
    String pageTitleEditConfigOptions();
    @DefaultMessage("Edit Contact Mech")
    String pageTitleEditContactMech();
    @DefaultMessage("Edit Contact Mechanism")
    String pageTitleEditContactMechanism();
    @DefaultMessage("Edit Content")
    String pageTitleEditContent();
    @DefaultMessage("Edit Cost Calcs")
    String pageTitleEditCostCalcs();
    @DefaultMessage("Edit Credit Card")
    String pageTitleEditCreditCard();
    @DefaultMessage("Edit Data Source")
    String pageTitleEditDataSource();
    @DefaultMessage("Edit Data Source Type")
    String pageTitleEditDataSourceType();
    @DefaultMessage("Edit EFT Account")
    String pageTitleEditEFTAccount();
    @DefaultMessage("Edit EFT Account")
    String pageTitleEditEftAccount();
    @DefaultMessage("Edit Facility Contact Mech")
    String pageTitleEditFacilityContactMech();
    @DefaultMessage("Edit Facility Group")
    String pageTitleEditFacilityGroup();
    @DefaultMessage("Edit Facility Group Members")
    String pageTitleEditFacilityGroupMembers();
    @DefaultMessage("Edit Facility Group Roles")
    String pageTitleEditFacilityGroupRoles();
    @DefaultMessage("Edit Facility Group Rollup")
    String pageTitleEditFacilityGroupRollup();
    @DefaultMessage("Edit Facility Groups")
    String pageTitleEditFacilityGroups();
    @DefaultMessage("Edit Facility Inventory Items")
    String pageTitleEditFacilityInventoryItems();
    @DefaultMessage("Edit Facility Location")
    String pageTitleEditFacilityLocation();
    @DefaultMessage("Edit Facility Roles")
    String pageTitleEditFacilityRoles();
    @DefaultMessage("Edit Feature")
    String pageTitleEditFeature();
    @DefaultMessage("Edit Feature Category Features")
    String pageTitleEditFeatureCategoryFeatures();
    @DefaultMessage("Edit Feature Types")
    String pageTitleEditFeatureTypes();
    @DefaultMessage("Edit Financial Account")
    String pageTitleEditFinAccount();
    @DefaultMessage("Edit Financial Account Authority")
    String pageTitleEditFinAccountAuths();
    @DefaultMessage("Edit Financial Account Role")
    String pageTitleEditFinAccountRole();
    @DefaultMessage("Edit Financial Account Transaction")
    String pageTitleEditFinAccountTrans();
    @DefaultMessage("Edit Fixed Asset")
    String pageTitleEditFixedAsset();
    @DefaultMessage("Edit Fixed Asset Idents")
    String pageTitleEditFixedAssetIdents();
    @DefaultMessage("Edit Fixed Asset Maintenance")
    String pageTitleEditFixedAssetMaintenance();
    @DefaultMessage("Edit Fixed Asset Registrations")
    String pageTitleEditFixedAssetRegistrations();
    @DefaultMessage("Edit Fixed Asset Standard Cost")
    String pageTitleEditFixedAssetStdCost();
    @DefaultMessage("Edit Standard Cost")
    String pageTitleEditFixedAssetStdCosts();
    @DefaultMessage("Edit Forum Content Info")
    String pageTitleEditForumContentInfo();
    @DefaultMessage("Edit Gift Card")
    String pageTitleEditGiftCard();
    @DefaultMessage("Edit GL Account")
    String pageTitleEditGlAccount();
    @DefaultMessage("Edit Global GL Account")
    String pageTitleEditGlobalGlAccount();
    @DefaultMessage("Edit Group Information")
    String pageTitleEditGroupInformation();
    @DefaultMessage("Edit Inventory Item")
    String pageTitleEditInventoryItem();
    @DefaultMessage("Edit Invoice")
    String pageTitleEditInvoice();
    @DefaultMessage("Edit Fixed Assets")
    String pageTitleEditMachine();
    @DefaultMessage("Edit Fixed Asset Group")
    String pageTitleEditMachineGroup();
    @DefaultMessage("Edit Party Attribute")
    String pageTitleEditPartyAttribute();
    @DefaultMessage("Edit Party Classification Group")
    String pageTitleEditPartyClassificationGroup();
    @DefaultMessage("Edit Classification Group Parties")
    String pageTitleEditPartyClassificationGroupParties();
    @DefaultMessage("Edit Party Rates")
    String pageTitleEditPartyRates();
    @DefaultMessage("Edit Party Relationships")
    String pageTitleEditPartyRelationships();
    @DefaultMessage("Edit Party Tax Authority Info")
    String pageTitleEditPartyTaxAuthInfos();
    @DefaultMessage("Edit Payment")
    String pageTitleEditPayment();
    @DefaultMessage("Edit Person")
    String pageTitleEditPerson();
    @DefaultMessage("Edit Personal Information")
    String pageTitleEditPersonalInformation();
    @DefaultMessage("Edit Product")
    String pageTitleEditProduct();
    @DefaultMessage("Edit Product Asset Usage")
    String pageTitleEditProductAssetUsage();
    @DefaultMessage("Edit Product Associations")
    String pageTitleEditProductAssociations();
    @DefaultMessage("Edit Product Attributes")
    String pageTitleEditProductAttributes();
    @DefaultMessage("Edit Product Bom")
    String pageTitleEditProductBom();
    @DefaultMessage("Edit Product Catalog")
    String pageTitleEditProductCatalog();
    @DefaultMessage("Edit Product Catalog Categories")
    String pageTitleEditProductCatalogCategories();
    @DefaultMessage("Edit Product Catalog Parties")
    String pageTitleEditProductCatalogParties();
    @DefaultMessage("Edit Product Catalog Stores")
    String pageTitleEditProductCatalogStores();
    @DefaultMessage("Edit Product Categories")
    String pageTitleEditProductCategories();
    @DefaultMessage("Edit Product Category Link")
    String pageTitleEditProductCategoryLink();
    @DefaultMessage("Edit Product Config Item Content")
    String pageTitleEditProductConfigItemContent();
    @DefaultMessage("Edit Product Configs")
    String pageTitleEditProductConfigs();
    @DefaultMessage("Edit Product Content")
    String pageTitleEditProductContent();
    @DefaultMessage("Edit Product Costs")
    String pageTitleEditProductCosts();
    @DefaultMessage("Edit Product Facilities")
    String pageTitleEditProductFacilities();
    @DefaultMessage("Edit Product Facility Locations")
    String pageTitleEditProductFacilityLocations();
    @DefaultMessage("Edit Product Feature Categories")
    String pageTitleEditProductFeatureCategories();
    @DefaultMessage("Edit Feature Groups")
    String pageTitleEditProductFeatureGroups();
    @DefaultMessage("Edit Product Features")
    String pageTitleEditProductFeatures();
    @DefaultMessage("Edit Product Geos")
    String pageTitleEditProductGeos();
    @DefaultMessage("Edit Product GL Accounts")
    String pageTitleEditProductGlAccounts();
    @DefaultMessage("Edit Product Good Identifications")
    String pageTitleEditProductGoodIdentifications();
    @DefaultMessage("Edit Product Inventory Items")
    String pageTitleEditProductInventoryItems();
    @DefaultMessage("Edit Product Keywords")
    String pageTitleEditProductKeywords();
    @DefaultMessage("Edit Product Maintenance")
    String pageTitleEditProductMaintenance();
    @DefaultMessage("Product Manufacturing Rules")
    String pageTitleEditProductManufacturingRules();
    @DefaultMessage("Edit Product Meters")
    String pageTitleEditProductMeters();
    @DefaultMessage("Edit Product Price Rules")
    String pageTitleEditProductPriceRules();
    @DefaultMessage("Edit Product Prices")
    String pageTitleEditProductPrices();
    @DefaultMessage("Edit Product Promo Rules")
    String pageTitleEditProductPromoRules();
    @DefaultMessage("Edit Product Promo Stores")
    String pageTitleEditProductPromoStores();
    @DefaultMessage("Edit Product Promos")
    String pageTitleEditProductPromos();
    @DefaultMessage("Edit Product Promotion Code")
    String pageTitleEditProductPromotionCode();
    @DefaultMessage("Edit Product Quick Admin")
    String pageTitleEditProductQuickAdmin();
    @DefaultMessage("Edit Product Store")
    String pageTitleEditProductStore();
    @DefaultMessage("Edit Product Store Catalogs")
    String pageTitleEditProductStoreCatalogs();
    @DefaultMessage("Edit Product Store Email Setup")
    String pageTitleEditProductStoreEmailSetup();
    @DefaultMessage("Edit Product Store Keyword Ovrd")
    String pageTitleEditProductStoreKeywordOvrd();
    @DefaultMessage("Edit Product Store List")
    String pageTitleEditProductStoreList();
    @DefaultMessage("Edit Product Store Payment Setup")
    String pageTitleEditProductStorePaySetup();
    @DefaultMessage("Edit Product Store Promos")
    String pageTitleEditProductStorePromos();
    @DefaultMessage("Edit Product Store Roles")
    String pageTitleEditProductStoreRoles();
    @DefaultMessage("Edit Product Store Ship Setup")
    String pageTitleEditProductStoreShipSetup();
    @DefaultMessage("Edit Product Store Surveys")
    String pageTitleEditProductStoreSurveys();
    @DefaultMessage("Edit Product Store Tax Setup")
    String pageTitleEditProductStoreTaxSetup();
    @DefaultMessage("Edit Product Store Web Sites")
    String pageTitleEditProductStoreWebSites();
    @DefaultMessage("Edit Product Subscription Resources")
    String pageTitleEditProductSubscriptionResources();
    @DefaultMessage("Edit a QuoteItem For a CustRequest")
    String pageTitleEditQuoteItemForCustRequest();
    @DefaultMessage("Edit a Request Item")
    String pageTitleEditRequestItem();
    @DefaultMessage("Edit a Request Item WorkEffort")
    String pageTitleEditRequestItemWorkEffort();
    @DefaultMessage("Edit Requirement")
    String pageTitleEditRequirement();
    @DefaultMessage("Edit Routing")
    String pageTitleEditRouting();
    @DefaultMessage("Edit Routing-Product Link")
    String pageTitleEditRoutingProductLink();
    @DefaultMessage("Edit Routing Task")
    String pageTitleEditRoutingTask();
    @DefaultMessage("Edit Routing Task Association")
    String pageTitleEditRoutingTaskAssoc();
    @DefaultMessage("Edit Routing Task Costs")
    String pageTitleEditRoutingTaskCosts();
    @DefaultMessage("Edit Routing Task-Fixed Asset Association")
    String pageTitleEditRoutingTaskFixedAsset();
    @DefaultMessage("Edit Routing Task Product")
    String pageTitleEditRoutingTaskProduct();
    @DefaultMessage("Edit Security Group")
    String pageTitleEditSecurityGroup();
    @DefaultMessage("Edit Security Group Permissions")
    String pageTitleEditSecurityGroupPermissions();
    @DefaultMessage("Edit Security Group UserLogins")
    String pageTitleEditSecurityGroupUserLogins();
    @DefaultMessage("Edit Shipment Items")
    String pageTitleEditShipmentItems();
    @DefaultMessage("Edit Shipment Packages")
    String pageTitleEditShipmentPackages();
    @DefaultMessage("Edit Shipment Plan")
    String pageTitleEditShipmentPlan();
    @DefaultMessage("Edit Shipment Route Segments")
    String pageTitleEditShipmentRouteSegments();
    @DefaultMessage("Edit Subscription")
    String pageTitleEditSubscription();
    @DefaultMessage("Edit Subscription Attributes")
    String pageTitleEditSubscriptionAttributes();
    @DefaultMessage("Edit Subscription Communication Event")
    String pageTitleEditSubscriptionCommEvent();
    @DefaultMessage("Edit Subscription Resource")
    String pageTitleEditSubscriptionResource();
    @DefaultMessage("Edit Subscription Resource Products")
    String pageTitleEditSubscriptionResourceProducts();
    @DefaultMessage("Edit Supplier Product")
    String pageTitleEditSupplierProduct();
    @DefaultMessage("Edit Tax Authority")
    String pageTitleEditTaxAuthority();
    @DefaultMessage("Edit Tax Authority Associations")
    String pageTitleEditTaxAuthorityAssocs();
    @DefaultMessage("Edit Tax Authority Product Categories")
    String pageTitleEditTaxAuthorityCategories();
    @DefaultMessage("Edit Tax Authority GL Accounts")
    String pageTitleEditTaxAuthorityGlAccounts();
    @DefaultMessage("Edit Tax Authority Party Info")
    String pageTitleEditTaxAuthorityPartyInfo();
    @DefaultMessage("Edit Tax Authority Product Rates")
    String pageTitleEditTaxAuthorityRateProducts();
    @DefaultMessage("Edit Timesheet")
    String pageTitleEditTimesheet();
    @DefaultMessage("Edit Timesheet Entries")
    String pageTitleEditTimesheetEntries();
    @DefaultMessage("Edit Timesheet Roles")
    String pageTitleEditTimesheetRoles();
    @DefaultMessage("Edit UserLogin Security Groups")
    String pageTitleEditUserLoginSecurityGroups();
    @DefaultMessage("Edit Work Effort")
    String pageTitleEditWorkEffort();
    @DefaultMessage("Edit Work Effort CommEvent")
    String pageTitleEditWorkEffortCommEvent();
    @DefaultMessage("Work Effort Content")
    String pageTitleEditWorkEffortContent();
    @DefaultMessage("Work Effort Good Standards")
    String pageTitleEditWorkEffortGoodStandards();
    @DefaultMessage("Edit Work Effort Party Assignment")
    String pageTitleEditWorkEffortPartyAssign();
    @DefaultMessage("Edit Work Effort Quote")
    String pageTitleEditWorkEffortQuote();
    @DefaultMessage("Edit Work Effort QuoteItem")
    String pageTitleEditWorkEffortQuoteItem();
    @DefaultMessage("Edit Work Effort Request")
    String pageTitleEditWorkEffortRequest();
    @DefaultMessage("Edit Work Effort RequestItem")
    String pageTitleEditWorkEffortRequestItem();
    @DefaultMessage("Edit Work Effort Requirement")
    String pageTitleEditWorkEffortRequirement();
    @DefaultMessage("Field lookup")
    String pageTitleFieldLookup();
    @DefaultMessage("Financial Account")
    String pageTitleFinAccount();
    @DefaultMessage("Financial Account Summary")
    String pageTitleFinancialAccountSummary();
    @DefaultMessage("Financial Summary Report Options")
    String pageTitleFinancialSummaryReportOptions();
    @DefaultMessage("Find Agreements")
    String pageTitleFindAgreement();
    @DefaultMessage("Find Billing Account(s)")
    String pageTitleFindBillingAccount();
    @DefaultMessage("Find Calendar")
    String pageTitleFindCalendar();
    @DefaultMessage("Find Communications")
    String pageTitleFindCommunicationEvents();
    @DefaultMessage("Find Config Items")
    String pageTitleFindConfigItems();
    @DefaultMessage("Find Facility")
    String pageTitleFindFacility();
    @DefaultMessage("Find Facility Group")
    String pageTitleFindFacilityGroup();
    @DefaultMessage("Find Facility Location")
    String pageTitleFindFacilityLocation();
    @DefaultMessage("Find Facility Transfers")
    String pageTitleFindFacilityTransfers();
    @DefaultMessage("Find Gateway Responses")
    String pageTitleFindGatewayResponses();
    @DefaultMessage("Find Global GL Account")
    String pageTitleFindGlobalGlAccount();
    @DefaultMessage("Find Inventory Event Planned")
    String pageTitleFindInventoryEventPlan();
    @DefaultMessage("Find Invoice")
    String pageTitleFindInvoice();
    @DefaultMessage("Find Fixed Asset Group")
    String pageTitleFindMachineGroup();
    @DefaultMessage("Find Matches")
    String pageTitleFindMatches();
    @DefaultMessage("Find Party(s)")
    String pageTitleFindParty();
    @DefaultMessage("Find Party Classification Groups")
    String pageTitleFindPartyClassificationGroups();
    @DefaultMessage("Find Payment")
    String pageTitleFindPayment();
    @DefaultMessage("Find Product Catalog")
    String pageTitleFindProductCatalog();
    @DefaultMessage("Find Product Price Rule")
    String pageTitleFindProductPriceRule();
    @DefaultMessage("Find Product Promos")
    String pageTitleFindProductPromos();
    @DefaultMessage("Find Product Promotion Code")
    String pageTitleFindProductPromotionCode();
    @DefaultMessage("Quick Return")
    String pageTitleFindQuickReturn();
    @DefaultMessage("Find Requirements")
    String pageTitleFindRequirements();
    @DefaultMessage("Find Return")
    String pageTitleFindReturn();
    @DefaultMessage("Find Routing")
    String pageTitleFindRouting();
    @DefaultMessage("Find - Edit Routing Task")
    String pageTitleFindRoutingTask();
    @DefaultMessage("Find Security Group")
    String pageTitleFindSecurityGroup();
    @DefaultMessage("Find Subscription")
    String pageTitleFindSubscription();
    @DefaultMessage("Find Subscription Resource")
    String pageTitleFindSubscriptionResource();
    @DefaultMessage("Find Tax Authority")
    String pageTitleFindTaxAuthority();
    @DefaultMessage("Find Timesheet")
    String pageTitleFindTimesheet();
    @DefaultMessage("Find Work Effort")
    String pageTitleFindWorkEffort();
    @DefaultMessage("Forum Article")
    String pageTitleForumArticle();
    @DefaultMessage("Forum Response")
    String pageTitleForumResponse();
    @DefaultMessage("Forum Summary")
    String pageTitleForumSummary();
    @DefaultMessage("Gift Card Balance")
    String pageTitleGiftCardBalance();
    @DefaultMessage("Gift Card Link")
    String pageTitleGiftCardLink();
    @DefaultMessage("Inventory Issue Summary")
    String pageTitleInventoryIssueSummary();
    @DefaultMessage("Invoice Overview")
    String pageTitleInvoiceOverview();
    @DefaultMessage("Label Printing")
    String pageTitleLabelPrinting();
    @DefaultMessage("Last View Products")
    String pageTitleLastViewProducts();
    @DefaultMessage("List Accounts")
    String pageTitleListAccounts();
    @DefaultMessage("List Agreement Items")
    String pageTitleListAgreementItems();
    @DefaultMessage("List Agreement Terms")
    String pageTitleListAgreementTerms();
    @DefaultMessage("List of weeks")
    String pageTitleListCalendarWeek();
    @DefaultMessage("List Comm Customer Requests")
    String pageTitleListCommCustRequests();
    @DefaultMessage("List Comm WorkEfforts")
    String pageTitleListCommWorkEfforts();
    @DefaultMessage("List Communications")
    String pageTitleListCommunications();
    @DefaultMessage("List Contact List")
    String pageTitleListContactList();
    @DefaultMessage("List Data Source")
    String pageTitleListDataSource();
    @DefaultMessage("List Data Source Type")
    String pageTitleListDataSourceType();
    @DefaultMessage("List Edit Invoice Applications")
    String pageTitleListEditInvoiceApplications();
    @DefaultMessage("List Fixed Asset Calendar")
    String pageTitleListFixedAssetCalendar();
    @DefaultMessage("Fixed Asset Children")
    String pageTitleListFixedAssetChildren();
    @DefaultMessage("List Fixed Asset Maints")
    String pageTitleListFixedAssetMaints();
    @DefaultMessage("List Fixed Asset Products")
    String pageTitleListFixedAssetProducts();
    @DefaultMessage("List Fixed Asset Standard Costs")
    String pageTitleListFixedAssetStdCosts();
    @DefaultMessage("List Fixed Assets")
    String pageTitleListFixedAssets();
    @DefaultMessage("List Invoice Roles")
    String pageTitleListInvoiceRoles();
    @DefaultMessage("List Invoices")
    String pageTitleListInvoices();
    @DefaultMessage("List Requirement Cust Requests")
    String pageTitleListRequirementCustRequests();
    @DefaultMessage("List Requirement Orders")
    String pageTitleListRequirementOrders();
    @DefaultMessage("Edit Routing Task Products")
    String pageTitleListRoutingTaskProducts();
    @DefaultMessage("Edit Routing Task Routings")
    String pageTitleListRoutingTaskRoutings();
    @DefaultMessage("List Tax Authority Parties")
    String pageTitleListTaxAuthorityParties();
    @DefaultMessage("Work Effort Assignment Rates")
    String pageTitleListWorkEffortAssignmentRates();
    @DefaultMessage("Work Effort Communication Events")
    String pageTitleListWorkEffortCommEvents();
    @DefaultMessage("Work Effort Keywords")
    String pageTitleListWorkEffortKeyword();
    @DefaultMessage("Work Effort Notes")
    String pageTitleListWorkEffortNotes();
    @DefaultMessage("Work Effort Orders")
    String pageTitleListWorkEffortOrderHeaders();
    @DefaultMessage("Work Effort Party Assignments")
    String pageTitleListWorkEffortPartyAssigns();
    @DefaultMessage("Work Effort QuoteItems")
    String pageTitleListWorkEffortQuoteItems();
    @DefaultMessage("Work Effort Quotes")
    String pageTitleListWorkEffortQuotes();
    @DefaultMessage("Work Effort RequestItems")
    String pageTitleListWorkEffortRequestItems();
    @DefaultMessage("Work Effort Requests")
    String pageTitleListWorkEffortRequests();
    @DefaultMessage("Work Effort Requirements")
    String pageTitleListWorkEffortRequirements();
    @DefaultMessage("Work Effort Reviews")
    String pageTitleListWorkEffortReviews();
    @DefaultMessage("Work Effort Shopping Lists")
    String pageTitleListWorkEffortShopLists();
    @DefaultMessage("Work Effort Time Entries")
    String pageTitleListWorkEffortTimeEntries();
    @DefaultMessage("Work Efforts")
    String pageTitleListWorkEfforts();
    @DefaultMessage("Login")
    String pageTitleLogin();
    @DefaultMessage("Lookup Billing Account by Name")
    String pageTitleLookupBillingAccount();
    @DefaultMessage("Bulk Add Product")
    String pageTitleLookupBulkAddProduct();
    @DefaultMessage("Lookup Customer Request")
    String pageTitleLookupCustomerRequest();
    @DefaultMessage("Lookup Customer Request Item")
    String pageTitleLookupCustomerRequestItem();
    @DefaultMessage("Lookup Facility")
    String pageTitleLookupFacility();
    @DefaultMessage("Lookup Fixed Asset")
    String pageTitleLookupFixedAsset();
    @DefaultMessage("Lookup GL Account")
    String pageTitleLookupGlAccount();
    @DefaultMessage("Lookup Order Header")
    String pageTitleLookupOrderHeader();
    @DefaultMessage("Lookup Order Header and Ship Info")
    String pageTitleLookupOrderHeaderAndShipInfo();
    @DefaultMessage("Product Lookup")
    String pageTitleLookupProduct();
    @DefaultMessage("Lookup Product Category")
    String pageTitleLookupProductCategory();
    @DefaultMessage("Lookup Product Feature")
    String pageTitleLookupProductFeature();
    @DefaultMessage("Lookup Product And Price")
    String pageTitleLookupProductPrice();
    @DefaultMessage("Lookup Product Store")
    String pageTitleLookupProductStore();
    @DefaultMessage("Lookup Variant Product")
    String pageTitleLookupProductVariant();
    @DefaultMessage("Lookup Virtual Product")
    String pageTitleLookupProductVirtual();
    @DefaultMessage("Lookup Purchase Order Header and Ship Info")
    String pageTitleLookupPurchaseOrderHeaderAndShipInfo();
    @DefaultMessage("Lookup Quote")
    String pageTitleLookupQuote();
    @DefaultMessage("Lookup Quote Item")
    String pageTitleLookupQuoteItem();
    @DefaultMessage("Lookup Requirement")
    String pageTitleLookupRequirement();
    @DefaultMessage("Lookup Routing")
    String pageTitleLookupRouting();
    @DefaultMessage("Lookup RoutingTask")
    String pageTitleLookupRoutingTask();
    @DefaultMessage("Lookup Shopping List")
    String pageTitleLookupShoppingList();
    @DefaultMessage("Lookup Timesheet by Name")
    String pageTitleLookupTimesheet();
    @DefaultMessage("Lookup Virtual Products")
    String pageTitleLookupVirtualProducts();
    @DefaultMessage("Lookup WorkEffort by Name")
    String pageTitleLookupWorkEffort();
    @DefaultMessage("Main Page")
    String pageTitleMain();
    @DefaultMessage("Message Detail")
    String pageTitleMessageDetail();
    @DefaultMessage("Message List")
    String pageTitleMessageList();
    @DefaultMessage("New Customer")
    String pageTitleNewCustomer();
    @DefaultMessage("New Message")
    String pageTitleNewMessage();
    @DefaultMessage("New Party Note")
    String pageTitleNewPartyNote();
    @DefaultMessage("Order Agreements")
    String pageTitleOrderAgreements();
    @DefaultMessage("Order Complete Notice")
    String pageTitleOrderCompleteNotice();
    @DefaultMessage("Order Confirmation")
    String pageTitleOrderConfirmation();
    @DefaultMessage("Order History")
    String pageTitleOrderHistory();
    @DefaultMessage("Order Initis")
    String pageTitleOrderInits();
    @DefaultMessage("Show Cart")
    String pageTitleOrderShowCart();
    @DefaultMessage("Order Status")
    String pageTitleOrderStatus();
    @DefaultMessage("Order Summary - Thank you for your order!")
    String pageTitleOrderSummary();
    @DefaultMessage("Package Shipment Scheduling")
    String pageTitlePackageShipmentScheduling();
    @DefaultMessage("Payments By Method Summary")
    String pageTitlePaymentByMethodSummary();
    @DefaultMessage("Payment Overview")
    String pageTitlePaymentOverview();
    @DefaultMessage("Pending Communications")
    String pageTitlePendingCommunications();
    @DefaultMessage("Pick List")
    String pageTitlePickList();
    @DefaultMessage("Pick List Options")
    String pageTitlePickListOptions();
    @DefaultMessage("Picking : Move Stock")
    String pageTitlePickingMoveStock();
    @DefaultMessage("Picking : View Started Picks")
    String pageTitlePickingViewStartedPicks();
    @DefaultMessage("Product Page")
    String pageTitleProductPage();
    @DefaultMessage("Product Review")
    String pageTitleProductReview();
    @DefaultMessage("Products Export on eBay")
    String pageTitleProductsExportToEbay();
    @DefaultMessage("Products Export on Google Base")
    String pageTitleProductsExportToGoogle();
    @DefaultMessage("Profile Survey")
    String pageTitleProfileSurvey();
    @DefaultMessage("Quick Add")
    String pageTitleQuickAdd();
    @DefaultMessage("Quick Add Product Variants")
    String pageTitleQuickAddProductVariants();
    @DefaultMessage("Request Item Notes")
    String pageTitleRequestItemNotes();
    @DefaultMessage("Request Item Quotes")
    String pageTitleRequestItemQuotes();
    @DefaultMessage("Request Item Requirements")
    String pageTitleRequestItemRequirements();
    @DefaultMessage("Request Items")
    String pageTitleRequestItems();
    @DefaultMessage("Request Return")
    String pageTitleRequestReturn();
    @DefaultMessage("Request Roles")
    String pageTitleRequestRoles();
    @DefaultMessage("Return Header")
    String pageTitleReturnHeader();
    @DefaultMessage("Return Items")
    String pageTitleReturnItems();
    @DefaultMessage("Return List")
    String pageTitleReturnList();
    @DefaultMessage("Sales Invoice By Product Category Summary")
    String pageTitleSalesInvoiceByProductCategorySummary();
    @DefaultMessage("Sales Invoice By Product GL Account Summary")
    String pageTitleSalesInvoiceByProductGlAccountSummary();
    @DefaultMessage("Search Inventory Items")
    String pageTitleSearchInventoryItems();
    @DefaultMessage("Search Results")
    String pageTitleSearchResults();
    @DefaultMessage("Search Sites")
    String pageTitleSearchSites();
    @DefaultMessage("Security Groups List")
    String pageTitleSecurityGroupsList();
    @DefaultMessage("Send Invoice per email")
    String pageTitleSendInvoicePerEmail();
    @DefaultMessage("Sent Messages")
    String pageTitleSentMessages();
    @DefaultMessage("Shipment Complete Notice")
    String pageTitleShipmentCompleteNotice();
    @DefaultMessage("Shipping Information")
    String pageTitleShippingInformation();
    @DefaultMessage("Shipping Options")
    String pageTitleShippingOptions();
    @DefaultMessage("Shopping Cart")
    String pageTitleShoppingCart();
    @DefaultMessage("Shopping List")
    String pageTitleShoppingList();
    @DefaultMessage("Show All Promotions")
    String pageTitleShowAllPromotions();
    @DefaultMessage("Show Promotion Details")
    String pageTitleShowPromotionDetails();
    @DefaultMessage("Split Items For Shipping")
    String pageTitleSplitItemsForShipping();
    @DefaultMessage("Transfer Inventory Item")
    String pageTitleTransferInventoryItem();
    @DefaultMessage("Child Work Efforts")
    String pageTitleTreeWorkEfforts();
    @DefaultMessage("Un-posted Accounting Transactions")
    String pageTitleUnpostedTransactions();
    @DefaultMessage("View Accounting Transaction")
    String pageTitleViewAccountingTransaction();
    @DefaultMessage("View Activity and Task List")
    String pageTitleViewActivityAndTaskList();
    @DefaultMessage("View Blog")
    String pageTitleViewBlog();
    @DefaultMessage("View Communication Purposes")
    String pageTitleViewCommPurposes();
    @DefaultMessage("View Communication Roles")
    String pageTitleViewCommRoles();
    @DefaultMessage("View Content")
    String pageTitleViewContent();
    @DefaultMessage("View Facility Contact Mechanism")
    String pageTitleViewFacilityContactMechanism();
    @DefaultMessage("View Gl Account Entries")
    String pageTitleViewGlAccountEntries();
    @DefaultMessage("View Party Classifications")
    String pageTitleViewPartyClassifications();
    @DefaultMessage("View Party Profile")
    String pageTitleViewPartyProfile();
    @DefaultMessage("View Party Roles")
    String pageTitleViewPartyRole();
    @DefaultMessage("View Party Segment Roles")
    String pageTitleViewPartySegmentRoles();
    @DefaultMessage("View Product Manufacturing")
    String pageTitleViewProductManufacturing();
    @DefaultMessage("View Product Store Segments")
    String pageTitleViewProductStoreSegments();
    @DefaultMessage("View Profile")
    String pageTitleViewProfile();
    @DefaultMessage("View Request")
    String pageTitleViewRequest();
    @DefaultMessage("View Shipment")
    String pageTitleViewShipment();
    @DefaultMessage("View Vendor Party Info")
    String pageTitleViewVendorParty();
    @DefaultMessage("Visit Detail")
    String pageTitleVisitDetail();
    @DefaultMessage("Visit List")
    String pageTitleVisitList();
    @DefaultMessage("Work Effort Related Summary")
    String pageTitleWorkEffortRelatedSummary();
    @DefaultMessage("Work Effort Shopping Lists")
    String pageTitleWorkEffortShopLists();
    @DefaultMessage("of '{0}'")
    String pagerAfterPage();
    @DefaultMessage("Page")
    String pagerBeforePage();
    @DefaultMessage("No records to display")
    String pagerDisplayEmpty();
    @DefaultMessage("Displaying records '{0} - {1} of {2}'")
    String pagerDisplayMessage();
    @DefaultMessage("Enter page size")
    String pagerEnterPageSize();
    @DefaultMessage("Export To Excel")
    String pagerExportToExcel();
    @DefaultMessage("First Page")
    String pagerFirstPage();
    @DefaultMessage("Last Page")
    String pagerLastPage();
    @DefaultMessage("Next Page")
    String pagerNextPage();
    @DefaultMessage("records per page.")
    String pagerPageSize();
    @DefaultMessage("Previous Page")
    String pagerPreviousPage();
    @DefaultMessage("Panel number")
    String panelNumber();
    @DefaultMessage("Parent Id")
    String parentGroupId();
    @DefaultMessage("Parties")
    String parties();
    @DefaultMessage("Partner Id")
    String partnerId();
    @DefaultMessage("Partner List")
    String partnerList();
    @DefaultMessage("Partner Name")
    String partnerName();
    @DefaultMessage("Party")
    String party();
    @DefaultMessage("Account")
    String partyAccount();
    @DefaultMessage("Active")
    String partyActive();
    @DefaultMessage("Add Child List To Cart")
    String partyAddChildListsToCart();
    @DefaultMessage("Add Communication Content")
    String partyAddCommContent();
    @DefaultMessage("Add this contact information to party")
    String partyAddContactInformationParty();
    @DefaultMessage("Add List To Cart")
    String partyAddListToCart();
    @DefaultMessage("New Address")
    String partyAddNewAddress();
    @DefaultMessage("Add New Personal Information")
    String partyAddNewPersonalInformation();
    @DefaultMessage("Add Permission (manually) to SecurityGroup")
    String partyAddPermissionManuallyToSecurityGroup();
    @DefaultMessage("Add Permission (from list) to SecurityGroup")
    String partyAddPermissionToSecurityGroup();
    @DefaultMessage("Add Product To List")
    String partyAddProductToList();
    @DefaultMessage("Add Purpose")
    String partyAddPurpose();
    @DefaultMessage("Add Role")
    String partyAddRole();
    @DefaultMessage("Add To Role")
    String partyAddToRole();
    @DefaultMessage("Add To Shopping List")
    String partyAddToShoppingList();
    @DefaultMessage("Add UserLogin to Security Group")
    String partyAddUserLoginToSecurityGroup();
    @DefaultMessage("Add Work Effort")
    String partyAddWorkEffort();
    @DefaultMessage("Additional Party Entry")
    String partyAdditionalPartyEntry();
    @DefaultMessage("Additional Party Listing")
    String partyAdditionalPartyListing();
    @DefaultMessage("Attn")
    String partyAddrAttnName();
    @DefaultMessage("To")
    String partyAddrToName();
    @DefaultMessage("Address Line 1")
    String partyAddressLine1();
    @DefaultMessage("Address Line 1 is missing")
    String partyAddressLine1Missing();
    @DefaultMessage("Address Line 1 is missing")
    String partyAddressLine1MissingError();
    @DefaultMessage("Address Line 2")
    String partyAddressLine2();
    @DefaultMessage("Mailing/Shipping Address")
    String partyAddressMailingShipping();
    @DefaultMessage("Match Key")
    String partyAddressMatchKey();
    @DefaultMessage("Format: key,value,sequence (sequence is optional)")
    String partyAddressMatchMessage1();
    @DefaultMessage("Match Value")
    String partyAddressMatchValue();
    @DefaultMessage("Matching")
    String partyAddressMatching();
    @DefaultMessage("Affiliate Code is missing")
    String partyAffiliateCodeMissingError();
    @DefaultMessage("Affiliate Name is missing")
    String partyAffiliateNameMissing();
    @DefaultMessage("All Communication Events")
    String partyAllCommunicationEvents();
    @DefaultMessage("All phone numbers")
    String partyAllPhoneNumbers();
    @DefaultMessage("Allow Address Solicitation")
    String partyAllowAddressSolicitation();
    @DefaultMessage("Allow Solicitation")
    String partyAllowSolicitation();
    @DefaultMessage("If you already have an account")
    String partyAlreadyHaveAccount();
    @DefaultMessage("Area Code")
    String partyAreaCode();
    @DefaultMessage("Attach Content")
    String partyAttachContent();
    @DefaultMessage("Attention Name")
    String partyAttentionName();
    @DefaultMessage("Party Attribute")
    String partyAttribute();
    @DefaultMessage("Party Attribute(s)")
    String partyAttributes();
    @DefaultMessage("AVS Override (CC Fraud Screening)")
    String partyAvsOver();
    @DefaultMessage("AVS String")
    String partyAvsString();
    @DefaultMessage("Bank")
    String partyBank();
    @DefaultMessage("Basic Information")
    String partyBasicInformation();
    @DefaultMessage("Billing Address")
    String partyBillingAddress();
    @DefaultMessage("Billing Address Not Yet Selected")
    String partyBillingAddressNotSelected();
    @DefaultMessage("Birth Date")
    String partyBirthDate();
    @DefaultMessage("Birthdate is not formatted correctly: must be yyyy-mm-dd, like 1982-07-21")
    String partyBirthDateMissingError();
    @DefaultMessage("Business phone")
    String partyBusinessPhone();
    @DefaultMessage("ERROR: Cannot update specified contact info because it does not correspond to the specified party.")
    String partyCannotUpdateContactBecauseNotWithSpecifiedParty();
    @DefaultMessage("Change Party")
    String partyChangeParty();
    @DefaultMessage("Change Password")
    String partyChangePassword();
    @DefaultMessage("Child Shopping List")
    String partyChildShoppingList();
    @DefaultMessage("City")
    String partyCity();
    @DefaultMessage("City is Missing")
    String partyCityMissing();
    @DefaultMessage("Classification Group")
    String partyClassificationGroup();
    @DefaultMessage("Classification Group Id")
    String partyClassificationGroupId();
    @DefaultMessage("Classification Group Parties")
    String partyClassificationGroupParties();
    @DefaultMessage("Classification Groups")
    String partyClassificationGroups();
    @DefaultMessage("Classifications")
    String partyClassifications();
    @DefaultMessage("Client")
    String partyClient();
    @DefaultMessage("Client IP")
    String partyClientIP();
    @DefaultMessage("Client User")
    String partyClientUser();
    @DefaultMessage("Communication Content")
    String partyCommContent();
    @DefaultMessage("Communication Customer Requests")
    String partyCommCustRequests();
    @DefaultMessage("Comm Event")
    String partyCommEvent();
    @DefaultMessage("Communication Event Purposes")
    String partyCommEventPurposes();
    @DefaultMessage("Communication Event Roles")
    String partyCommEventRoles();
    @DefaultMessage("Party Comm Event Subject")
    String partyCommEventSubject();
    @DefaultMessage("Comm Events")
    String partyCommEvents();
    @DefaultMessage("Communication Work Efforts")
    String partyCommWorkEfforts();
    @DefaultMessage("Comments")
    String partyComments();
    @DefaultMessage("Communications")
    String partyCommunications();
    @DefaultMessage("Communications with")
    String partyCommunicationsWith();
    @DefaultMessage("Company Party ID")
    String partyCompanyId();
    @DefaultMessage("OFBiz: Party Manager")
    String partyCompanyName();
    @DefaultMessage("Company Name is missing")
    String partyCompanyNameMissingError();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String partyCompanySubtitle();
    @DefaultMessage("Allow Address Solicitation")
    String partyContactAllowAddressSolicitation();
    @DefaultMessage("Allow Solicitation")
    String partyContactAllowSolicitation();
    @DefaultMessage("Effective Thru")
    String partyContactEffectiveThru();
    @DefaultMessage("ext")
    String partyContactExt();
    @DefaultMessage("Fax Number")
    String partyContactFaxPhoneNumber();
    @DefaultMessage("The contact information specified does not belong to you, you may not view or edit it")
    String partyContactInfoNotBelongToYou();
    @DefaultMessage("Contact Information")
    String partyContactInformation();
    @DefaultMessage("Contact List")
    String partyContactList();
    @DefaultMessage("Add Party to Contact List")
    String partyContactListPartyCreate();
    @DefaultMessage("Contact Lists")
    String partyContactLists();
    @DefaultMessage("Contact Mechanism ID")
    String partyContactMechID();
    @DefaultMessage("Contact Mech ID is missing")
    String partyContactMechIdMissing();
    @DefaultMessage("ERROR: Could not delete contact info (party contact mech not found)")
    String partyContactMechNotFoundCannotDelete();
    @DefaultMessage("Contact Mech Type")
    String partyContactMechType();
    @DefaultMessage("Contact Mech Type ID is missing")
    String partyContactMechTypeIdMissing();
    @DefaultMessage("Contact Mechanism successfully created.")
    String partyContactMechanismSuccessfullyCreated();
    @DefaultMessage("Contact Mechanism successfully updated.")
    String partyContactMechanismSuccessfullyUpdated();
    @DefaultMessage("ContactMechs")
    String partyContactMechs();
    @DefaultMessage("Mobile Phone Number")
    String partyContactMobilePhoneNumber();
    @DefaultMessage("Contact Number")
    String partyContactNumber();
    @DefaultMessage("Contact Number is missing")
    String partyContactNumberMissing();
    @DefaultMessage("Contact Purpose")
    String partyContactPurpose();
    @DefaultMessage("Contact Purposes")
    String partyContactPurposes();
    @DefaultMessage("Soliciting OK?")
    String partyContactSolicitingOk();
    @DefaultMessage("Contact telephone is missing")
    String partyContactTelephoneMissing();
    @DefaultMessage("Contact telephone is missing")
    String partyContactTelephoneMissingError();
    @DefaultMessage("Contact Type")
    String partyContactType();
    @DefaultMessage("Work Phone Number")
    String partyContactWorkPhoneNumber();
    @DefaultMessage("Party Content")
    String partyContent();
    @DefaultMessage("Content ID")
    String partyContentId();
    @DefaultMessage("Cookie")
    String partyCookie();
    @DefaultMessage("Country")
    String partyCountry();
    @DefaultMessage("Country Code")
    String partyCountryCode();
    @DefaultMessage("Country is Missing")
    String partyCountryMissing();
    @DefaultMessage("Security Error: to run addWebSiteRole you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateAddWebSiteRolePermissionError();
    @DefaultMessage("Create additional contact information")
    String partyCreateAdditionalContactInformation();
    @DefaultMessage("Security Error: to run createPartyAttribute you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateAttributePermissionError();
    @DefaultMessage("Security Error: to run createCommunicationEvent you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateCommunicationEventPermissionError();
    @DefaultMessage("Security Error: to run createCommunicationEventPurpose you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateCommunicationEventPurposePermissionError();
    @DefaultMessage("Security Error: to run createCommunicationEventRole you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateCommunicationEventRolePermissionError();
    @DefaultMessage("Create a new billing address for this credit card")
    String partyCreateNewBillingAddress();
    @DefaultMessage("Create New Contact Information")
    String partyCreateNewContact();
    @DefaultMessage("Create New Contact Information")
    String partyCreateNewContactInfo();
    @DefaultMessage("Create New Credit Card")
    String partyCreateNewCreditCard();
    @DefaultMessage("Create Request")
    String partyCreateNewCustRequest();
    @DefaultMessage("Create Customer")
    String partyCreateNewCustomer();
    @DefaultMessage("Create New EFT Account")
    String partyCreateNewEftAccount();
    @DefaultMessage("Create Employee")
    String partyCreateNewEmployee();
    @DefaultMessage("Create New Gift Card")
    String partyCreateNewGiftCard();
    @DefaultMessage("Create New Party Detail")
    String partyCreateNewParty();
    @DefaultMessage("Create New Party Classification Group")
    String partyCreateNewPartyClassificationGroup();
    @DefaultMessage("Create New Party Group")
    String partyCreateNewPartyGroup();
    @DefaultMessage("Create New Person")
    String partyCreateNewPerson();
    @DefaultMessage("Create Prospect")
    String partyCreateNewProspect();
    @DefaultMessage("Create Quote")
    String partyCreateNewQuote();
    @DefaultMessage("Create New SecurityGroup")
    String partyCreateNewSecurityGroup();
    @DefaultMessage("Security Error: to run createPartyClassificationGroup you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreatePartyClassificationGroupPermissionError();
    @DefaultMessage("Security Error: to run createPartyClassification you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreatePartyClassificationPermissionError();
    @DefaultMessage("Security Error: to run createPartyRole you must have the PARTYMGR_ROLE_CREATE or PARTYMGR_ADMIN permission")
    String partyCreatePartyRolePermissionError();
    @DefaultMessage("Security Error: to run createPostalAddressBoundary you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreatePostalAddressBoundaryPermissionError();
    @DefaultMessage("Create UserLogin")
    String partyCreateUserLogin();
    @DefaultMessage("Security Error: to run createVendor you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateVendorPermissionError();
    @DefaultMessage("Party Created Date")
    String partyCreatedDate();
    @DefaultMessage("Current Shopping Cart")
    String partyCurrentShoppingCart();
    @DefaultMessage("Customer Request")
    String partyCustomerRequest();
    @DefaultMessage("Customer will receive a temporary password by email.")
    String partyCustomerTemporaryPassword();
    @DefaultMessage("Security Error: to run deletePartyRole you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyDeletePartyRolePermissionError();
    @DefaultMessage("Security Error: to run deleteVendor you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyDeleteVendorPermissionError();
    @DefaultMessage("DISABLED")
    String partyDisabled();
    @DefaultMessage("D - Divorced")
    String partyDivorced();
    @DefaultMessage("Domain Name successfully created.")
    String partyDomainNameSuccessfullyCreated();
    @DefaultMessage("Domain Name successfully updated.")
    String partyDomainNameSuccessfullyUpdated();
    @DefaultMessage("Edit Communication Customer Request")
    String partyEditCommCustRequest();
    @DefaultMessage("Edit Communication Work Purpose")
    String partyEditCommPurpose();
    @DefaultMessage("Edit Communication Role")
    String partyEditCommRole();
    @DefaultMessage("New Communication Work Effort")
    String partyEditCommWorkEffort();
    @DefaultMessage("Edit Communication Event")
    String partyEditCommunicationEvent();
    @DefaultMessage("Edit Contact Information")
    String partyEditContactInfo();
    @DefaultMessage("Edit Contact Information")
    String partyEditContactInformation();
    @DefaultMessage("Edit Personal Information")
    String partyEditPersonalInformation();
    @DefaultMessage("Edit Security Group With ID")
    String partyEditSecurityGroupWithId();
    @DefaultMessage("Edit Work Effort")
    String partyEditWorkEffort();
    @DefaultMessage("EFT Account")
    String partyEftAccount();
    @DefaultMessage("Email address")
    String partyEmailAddress();
    @DefaultMessage("Email Address is missing")
    String partyEmailAddressMissing();
    @DefaultMessage("E-mail address is missing")
    String partyEmailAddressMissingError();
    @DefaultMessage("E-mail address not formatted correctly, must be like: name@domain")
    String partyEmailAddressNotFormattedCorrectly();
    @DefaultMessage("Email Address successfully created.")
    String partyEmailAddressSuccessfullyCreated();
    @DefaultMessage("Email Address successfully updated.")
    String partyEmailAddressSuccessfullyUpdated();
    @DefaultMessage("Email Addresses")
    String partyEmailAddresses();
    @DefaultMessage("ENABLED")
    String partyEnabled();
    @DefaultMessage("You must enter your password twice")
    String partyEnterPasswordTwice();
    @DefaultMessage("Entered Date")
    String partyEnteredDate();
    @DefaultMessage("The contact information specified does not belong to you, you may not view or edit it.")
    String partyErrorContactInformation();
    @DefaultMessage("Event Purpose(s)")
    String partyEventPurpose();
    @DefaultMessage("Event Type")
    String partyEventType();
    @DefaultMessage("Extension")
    String partyExtension();
    @DefaultMessage("Fax number")
    String partyFaxNumber();
    @DefaultMessage("Find Communication Events")
    String partyFindCommunicationEvents();
    @DefaultMessage("Find Parties")
    String partyFindParties();
    @DefaultMessage("Find Party")
    String partyFindParty();
    @DefaultMessage("First name")
    String partyFirstName();
    @DefaultMessage("Firstname is Missing")
    String partyFirstNameMissing();
    @DefaultMessage("Follow Session")
    String partyFollowSession();
    @DefaultMessage("Found Communication Events")
    String partyFoundCommunicationEvents();
    @DefaultMessage("From Contact Mech")
    String partyFromContactMech();
    @DefaultMessage("From Email Address")
    String partyFromEmailAddress();
    @DefaultMessage("Gender")
    String partyGender();
    @DefaultMessage("Goto List")
    String partyGotoList();
    @DefaultMessage("Group Name")
    String partyGroupName();
    @DefaultMessage("Group Name is missing")
    String partyGroupNameMissing();
    @DefaultMessage("Group Party ID")
    String partyGroupPartyId();
    @DefaultMessage("Height")
    String partyHeight();
    @DefaultMessage("Height is not a valid number")
    String partyHeightNotValidNumber();
    @DefaultMessage("Hide Old")
    String partyHideOld();
    @DefaultMessage("Changed")
    String partyHistoryChanged();
    @DefaultMessage("Name History")
    String partyHistoryName();
    @DefaultMessage("Was")
    String partyHistoryWas();
    @DefaultMessage("Hit Tracker")
    String partyHitTracker();
    @DefaultMessage("Home phone")
    String partyHomePhone();
    @DefaultMessage("Home Phone Area Code is missing.")
    String partyHomePhoneAreaCodeMissing();
    @DefaultMessage("Home Phone Contact Number is missing.")
    String partyHomePhoneContactNumberMissing();
    @DefaultMessage("Party ID is missing.")
    String partyIdMissing();
    @DefaultMessage("This information does not belong to you and you do not have permission to view it")
    String partyInformationNotBelongToYou();
    @DefaultMessage("Information Not Found")
    String partyInformationNotFound();
    @DefaultMessage("Initial Locale")
    String partyInitialLocale();
    @DefaultMessage("Initial Referer")
    String partyInitialReferer();
    @DefaultMessage("Initial Request")
    String partyInitialRequest();
    @DefaultMessage("Initial User Agent")
    String partyInitialUserAgent();
    @DefaultMessage("Web IP Address successfully created.")
    String partyIpAddressSuccessfullyCreated();
    @DefaultMessage("Web IP Address successfully updated.")
    String partyIpAddressSuccessfullyUpdated();
    @DefaultMessage("Last name")
    String partyLastName();
    @DefaultMessage("Lastname is Missing")
    String partyLastNameMissingError();
    @DefaultMessage("Last Visit(s)")
    String partyLastVisit();
    @DefaultMessage("Link Party")
    String partyLink();
    @DefaultMessage("WARNING: This cannot be un-done, confirm you wish to link the two party records listed below.")
    String partyLinkMessage1();
    @DefaultMessage("Found Communication Customer Requests")
    String partyListCommCustRequest();
    @DefaultMessage("Found Communication Work Purposes")
    String partyListCommPurpose();
    @DefaultMessage("Found Communication Roles")
    String partyListCommRole();
    @DefaultMessage("Found Communication Work Efforts")
    String partyListCommWorkEffort();
    @DefaultMessage("Found Communication Events")
    String partyListCommunicationEvents();
    @DefaultMessage("List Items")
    String partyListItems();
    @DefaultMessage("List Name")
    String partyListName();
    @DefaultMessage("List Type")
    String partyListType();
    @DefaultMessage("Lookup Contact Mech")
    String partyLookupContactMech();
    @DefaultMessage("Lookup Party")
    String partyLookupParty();
    @DefaultMessage("Lookup PartyAndUserLoginAndPerson")
    String partyLookupPartyAndUserLoginAndPerson();
    @DefaultMessage("Lookup Party by Name")
    String partyLookupPartyByName();
    @DefaultMessage("Lookup Party Classification Group")
    String partyLookupPartyClassificationGroup();
    @DefaultMessage("Lookup Communication Event")
    String partyLookupPartyCommEvent();
    @DefaultMessage("Lookup Group")
    String partyLookupPartyGroup();
    @DefaultMessage("Lookup Person")
    String partyLookupPartyPerson();
    @DefaultMessage("Lookup UserLoginAndPartyDetails")
    String partyLookupUserLoginAndPartyDetails();
    @DefaultMessage("Loyalty Points")
    String partyLoyaltyPoints();
    @DefaultMessage("Mothers Maiden Name")
    String partyMaidenName();
    @DefaultMessage("Party Manager Application")
    String partyManagerApplication();
    @DefaultMessage("Manifest Company Name")
    String partyManifestCompanyName();
    @DefaultMessage("Manifest Company Title")
    String partyManifestCompanyTitle();
    @DefaultMessage("Manifest Logo Url")
    String partyManifestLogoUrl();
    @DefaultMessage("Manifest Policies")
    String partyManifestPolicies();
    @DefaultMessage("Marital Status")
    String partyMaritalStatus();
    @DefaultMessage("Divorced")
    String partyMaritalStatusDivorced();
    @DefaultMessage("Married")
    String partyMaritalStatusMarried();
    @DefaultMessage("Separated")
    String partyMaritalStatusSeparated();
    @DefaultMessage("Single")
    String partyMaritalStatusSingle();
    @DefaultMessage("Widowed")
    String partyMaritalStatusWidowed();
    @DefaultMessage("M - Married")
    String partyMarried();
    @DefaultMessage("Purpose Type not found with ID")
    String partyMechPurposeTypeNotFound();
    @DefaultMessage("Member Roles")
    String partyMemberRoles();
    @DefaultMessage("You do not have permission to view this page. (\"PARTYMGR_CREATE\" or \"PARTYMGR_ADMIN\" needed)")
    String partyMgrCreatePermissionError();
    @DefaultMessage("You do not have permission to view this page. (\"PARTYMGR_VIEW\" or \"PARTYMGR_ADMIN\" needed)")
    String partyMgrViewPermissionError();
    @DefaultMessage("Middle initial")
    String partyMiddleInitial();
    @DefaultMessage("Middle Name")
    String partyMiddleName();
    @DefaultMessage("Mobile phone")
    String partyMobilePhone();
    @DefaultMessage("Mothers Maiden Name")
    String partyMothersMaidenName();
    @DefaultMessage("Note: this new contact information will have the purpose")
    String partyMsgContactHavePurpose();
    @DefaultMessage("The contact information specified does not belong to you, you may not view or edit it.")
    String partyMsgContactNotBelongToYou();
    @DefaultMessage("Name")
    String partyName();
    @DefaultMessage("Name Phone and Email")
    String partyNameAndConactInfo();
    @DefaultMessage("Name and Shipping Address")
    String partyNameAndShippingAddress();
    @DefaultMessage("New Communication Content")
    String partyNewCommContent();
    @DefaultMessage("New Communication Customer Request")
    String partyNewCommCustRequest();
    @DefaultMessage("New Communication Work Purpose")
    String partyNewCommPurpose();
    @DefaultMessage("New Communication Role")
    String partyNewCommRole();
    @DefaultMessage("New Communication Work Effort")
    String partyNewCommWorkEffort();
    @DefaultMessage("New Communication")
    String partyNewCommunication();
    @DefaultMessage("Note: this new contact information will have the purpose")
    String partyNewContactHavePurpose();
    @DefaultMessage("New Event")
    String partyNewEvent();
    @DefaultMessage("New Find")
    String partyNewFind();
    @DefaultMessage("New Password")
    String partyNewPassword();
    @DefaultMessage("New Password Verify")
    String partyNewPasswordVerify();
    @DefaultMessage("New Relationship")
    String partyNewRelationship();
    @DefaultMessage("New Relationship Type")
    String partyNewRelationshipType();
    @DefaultMessage("New Role Type")
    String partyNewRoleType();
    @DefaultMessage("New Security Group")
    String partyNewSecurityGroup();
    @DefaultMessage("New Task")
    String partyNewTask();
    @DefaultMessage("New User")
    String partyNewUser();
    @DefaultMessage("Nick Name")
    String partyNickName();
    @DefaultMessage("Nickname")
    String partyNickname();
    @DefaultMessage("No Billing Address Selected")
    String partyNoBillingAddress();
    @DefaultMessage("No Communication Events")
    String partyNoCommunicationFound();
    @DefaultMessage("No contact information on file")
    String partyNoContactInformation();
    @DefaultMessage("No contact information was found for the party with ID {0}")
    String partyNoContactInformationParty(String partyId);
    @DefaultMessage("No Content")
    String partyNoContent();
    @DefaultMessage("No records match.")
    String partyNoMatch();
    @DefaultMessage("No name found")
    String partyNoNameFound();
    @DefaultMessage("No name (group)")
    String partyNoNameGroup();
    @DefaultMessage("No notes for this party.")
    String partyNoNotesForParty();
    @DefaultMessage("No Parent")
    String partyNoParent();
    @DefaultMessage("No parties found.")
    String partyNoPartiesFound();
    @DefaultMessage("No party attributes found.")
    String partyNoPartyAttributesFound();
    @DefaultMessage("No party found for current user with user name")
    String partyNoPartyForCurrentUserName();
    @DefaultMessage("No partyId passed, cannot Update Customer")
    String partyNoPartyForUpdateCustomer();
    @DefaultMessage("No party found with the partyId of")
    String partyNoPartyFoundWithPartyId();
    @DefaultMessage("No relationships found.")
    String partyNoPartyRelationshipsFound();
    @DefaultMessage("No party roles found.")
    String partyNoPartyRolesFound();
    @DefaultMessage("No payment method information on file.")
    String partyNoPaymentMethodInformation();
    @DefaultMessage("No shopping cart saved for party")
    String partyNoShoppingCartSavedForParty();
    @DefaultMessage("No Shopping lists for party")
    String partyNoShoppingListsParty();
    @DefaultMessage("No State/Province")
    String partyNoState();
    @DefaultMessage("No Supplier")
    String partyNoSupplier();
    @DefaultMessage("No UserLogin(s) found for this party.")
    String partyNoUserLogin();
    @DefaultMessage("No Visit(s) found for this party.")
    String partyNoVisitFound();
    @DefaultMessage("This cannot be changed without re-creating the securityGroup.")
    String partyNotModifRecreatSecurityGroup();
    @DefaultMessage("Note: this new contact information will have the purpose")
    String partyNoteNewContactInformation();
    @DefaultMessage("Current (Old) Password")
    String partyOldPassword();
    @DefaultMessage("Optional")
    String partyOptional();
    @DefaultMessage("order(s) in the last")
    String partyOrderInLast();
    @DefaultMessage("Organization Party")
    String partyOrganizationParty();
    @DefaultMessage("Organization Party ID")
    String partyOrganizationPartyId();
    @DefaultMessage("Page Push/Following")
    String partyPagePushFollowing();
    @DefaultMessage("Parent List")
    String partyParentList();
    @DefaultMessage("Parties")
    String partyParties();
    @DefaultMessage("Parties for")
    String partyPartiesFor();
    @DefaultMessage("Parties Found")
    String partyPartiesFound();
    @DefaultMessage("Party")
    String partyParty();
    @DefaultMessage("Party Assignment Status")
    String partyPartyAssignmentStatus();
    @DefaultMessage("Party Assignments Detail")
    String partyPartyAssignmentsDetail();
    @DefaultMessage("The current party in the role of")
    String partyPartyCurrentInTheRoleOf();
    @DefaultMessage("Party From")
    String partyPartyFrom();
    @DefaultMessage("Party Group Information")
    String partyPartyGroupInformation();
    @DefaultMessage("Party Group Name")
    String partyPartyGroupName();
    @DefaultMessage("Party Group successfully created.")
    String partyPartyGroupSuccessfullyCreated();
    @DefaultMessage("Party Group successfully updated.")
    String partyPartyGroupSuccessfullyUpdated();
    @DefaultMessage("Party ID")
    String partyPartyID();
    @DefaultMessage("PartyID/UserLoginID")
    String partyPartyIDUserLoginID();
    @DefaultMessage("Party ID")
    String partyPartyId();
    @DefaultMessage("in the role of")
    String partyPartyInTheRoleOf();
    @DefaultMessage("Party not defined")
    String partyPartyNotDefined();
    @DefaultMessage("of the current party in the role of")
    String partyPartyOfTheRoleParty();
    @DefaultMessage("Requests")
    String partyPartyRequests();
    @DefaultMessage("Party successfully deleted.")
    String partyPartySuccessfullyDeleted();
    @DefaultMessage("Party To")
    String partyPartyTo();
    @DefaultMessage("of the Party with ID")
    String partyPartyWithId();
    @DefaultMessage("Passport Expire")
    String partyPassportExpire();
    @DefaultMessage("Passport Expire Date")
    String partyPassportExpireDate();
    @DefaultMessage("Passport Expire Date is not a valid Date")
    String partyPassportExpireDateNotValidDate();
    @DefaultMessage("Passport Number")
    String partyPassportNumber();
    @DefaultMessage("Password Hint")
    String partyPasswordHint();
    @DefaultMessage("Your Passwords do not match")
    String partyPasswordMatchError();
    @DefaultMessage("Password is Missing")
    String partyPasswordMissing();
    @DefaultMessage("Payment Method Information")
    String partyPaymentMethodInformation();
    @DefaultMessage("Pending")
    String partyPending();
    @DefaultMessage("Pending Communication Events")
    String partyPendingCommunicationEvents();
    @DefaultMessage("Permission")
    String partyPermission();
    @DefaultMessage("Security Error: to run {0} you must have the PARTYMGR{1} or PARTYMGR_ADMIN permission")
    String partyPermissionError(String methodShortDescription, String securityAction);
    @DefaultMessage("You do not have permission to perform this operation for this party.<br>")
    String partyPermissionErrorForThisParty();
    @DefaultMessage("Permission ID")
    String partyPermissionId();
    @DefaultMessage("Permissions for SecurityGroup with ID")
    String partyPermissionSecurityGroupWithId();
    @DefaultMessage("Permissions")
    String partyPermissions();
    @DefaultMessage("Person successfully created.")
    String partyPersonSuccessfullyCreated();
    @DefaultMessage("Person successfully updated.")
    String partyPersonSuccessfullyUpdated();
    @DefaultMessage("Personal Information")
    String partyPersonalInformation();
    @DefaultMessage("Personal Information Not Found")
    String partyPersonalInformationNotFound();
    @DefaultMessage("Personal Title")
    String partyPersonalTitle();
    @DefaultMessage("Phone Number")
    String partyPhoneNumber();
    @DefaultMessage("Phone Number Information Not Found")
    String partyPhoneNumberInfoNotFound();
    @DefaultMessage("Phone Numbers")
    String partyPhoneNumbers();
    @DefaultMessage("points from")
    String partyPointsFrom();
    @DefaultMessage("Postal")
    String partyPostal();
    @DefaultMessage("Postal Address successfully created.")
    String partyPostalAddressSuccessfullyCreated();
    @DefaultMessage("Postal Address successfully updated.")
    String partyPostalAddressSuccessfullyUpdated();
    @DefaultMessage("Postal Code")
    String partyPostalCode();
    @DefaultMessage("Zip/Postal Code is missing")
    String partyPostalCodeMissing();
    @DefaultMessage("Directions")
    String partyPostalDirections();
    @DefaultMessage("Postal Information Not Found")
    String partyPostalInformationNotFound();
    @DefaultMessage("Price")
    String partyPrice();
    @DefaultMessage("Product")
    String partyProduct();
    @DefaultMessage("Product Id")
    String partyProductId();
    @DefaultMessage("Profile")
    String partyProfile();
    @DefaultMessage("Province is missing, and is required for an address in Canada.")
    String partyProveinceInCanadaMissing();
    @DefaultMessage("State/Province is Missing")
    String partyProvinceMissing();
    @DefaultMessage("Public")
    String partyPublic();
    @DefaultMessage("Purpose type not specified, cannot add purpose to contact mechanism")
    String partyPurposeTypeMissingCannotAdd();
    @DefaultMessage("Purpose type not specified, cannot remove purpose from contact mechanism")
    String partyPurposeTypeMissingCannotRemove();
    @DefaultMessage("Contact Purpose Type Not Found with ID")
    String partyPurposeTypeNotFound();
    @DefaultMessage("Push URL")
    String partyPushURL();
    @DefaultMessage("Quantity")
    String partyQuantity();
    @DefaultMessage("Quantity Purchased")
    String partyQuantityPurchased();
    @DefaultMessage("Quick Add To Shopping List")
    String partyQuickAddList();
    @DefaultMessage("You will receive a password by email when your new account is approved")
    String partyRecievePasswordByEmail();
    @DefaultMessage("Party Relationship Security")
    String partyRelationSecurity();
    @DefaultMessage("Valid From Role Type")
    String partyRelationshipValidFromRoleType();
    @DefaultMessage("Valid To Role Type")
    String partyRelationshipValidToRoleType();
    @DefaultMessage("Relationships")
    String partyRelationships();
    @DefaultMessage("Security Error: to run createPartyAttribute you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemoveAttributePermissionError();
    @DefaultMessage("Security Error: to run removeCommunicationEventPurpose you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemoveCommunicationEventPurposePermissionError();
    @DefaultMessage("Security Error: to run removeCommunicationEventRole you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemoveCommunicationEventRolePermissionError();
    @DefaultMessage("Security Error: to run deletePartyClassificationGroup you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemovePartyClassificationGroupPermissionError();
    @DefaultMessage("Security Error: to run deletePartyClassification you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemovePartyClassificationPermissionError();
    @DefaultMessage("Security Error: to run removePartyRelationship you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemovePartyRelationshipPermissionError();
    @DefaultMessage("Security Error: to run deletePostalAddressBoundary you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemovePostalAddressBoundaryPermissionError();
    @DefaultMessage("Security Error: to run removeWebSiteRole you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemoveWebSiteRolePermissionError();
    @DefaultMessage("Repeat password to confirm")
    String partyRepeatPassword();
    @DefaultMessage("Reply")
    String partyReply();
    @DefaultMessage("RE:")
    String partyReplyPrefix();
    @DefaultMessage("Request a New Account")
    String partyRequestNewAccount();
    @DefaultMessage("Fields marked with (*) are required.")
    String partyRequiredNote();
    @DefaultMessage("Role")
    String partyRole();
    @DefaultMessage("Roles for")
    String partyRoleFor();
    @DefaultMessage("Role ID")
    String partyRoleId();
    @DefaultMessage("Role Type")
    String partyRoleType();
    @DefaultMessage("RoleType From")
    String partyRoleTypeFrom();
    @DefaultMessage("Role Type ID")
    String partyRoleTypeId();
    @DefaultMessage("Party Role Type Id From (NEW)")
    String partyRoleTypeIdFrom();
    @DefaultMessage("Role Type ID is missing.")
    String partyRoleTypeIdMissing();
    @DefaultMessage("Party Role Type Id To (NEW)")
    String partyRoleTypeIdTo();
    @DefaultMessage("Role Type To")
    String partyRoleTypeTo();
    @DefaultMessage("Roles")
    String partyRoles();
    @DefaultMessage("Security Group")
    String partySecurityGroup();
    @DefaultMessage("Security Group ID")
    String partySecurityGroupId();
    @DefaultMessage("Security Groups")
    String partySecurityGroups();
    @DefaultMessage("SecurityGroups List")
    String partySecurityGroupsList();
    @DefaultMessage("PartySecurityViewPermissionError You do not have permission to view this page. (\"SECURITY_VIEW\" or \"SECURITY_ADMIN\" needed)")
    String partySecurityViewPermissionError();
    @DefaultMessage("Segment Group Id")
    String partySegmentGroupId();
    @DefaultMessage("Product Store Id")
    String partySegmentGroupProductStoreId();
    @DefaultMessage("Segment Type Id")
    String partySegmentGroupTypeId();
    @DefaultMessage("Segments")
    String partySegments();
    @DefaultMessage("Select Contact Type")
    String partySelectContactType();
    @DefaultMessage("Select Mime Type")
    String partySelectMimeType();
    @DefaultMessage("Select role(s) for this party")
    String partySelectcRoleForParty();
    @DefaultMessage("Send Email")
    String partySendEmail();
    @DefaultMessage("Sequence Id")
    String partySequenceId();
    @DefaultMessage("Server")
    String partyServer();
    @DefaultMessage("This service (createContactMech) should not be used for POSTAL_ADDRESS type ContactMechs, use the createPostalAddress service")
    String partyServiceNotForPostalAddress();
    @DefaultMessage("This service (createContactMech) should not be used for TELECOM_NUMBER type ContactMechs, use the createTelecomNumber service")
    String partyServiceNotForTelecomNumber();
    @DefaultMessage("Service management Customer Request Id")
    String partyServicemgntCustRequestId();
    @DefaultMessage("Shopping List Detail")
    String partyShoppingListDetail();
    @DefaultMessage("Empty Shopping List")
    String partyShoppingListEmpty();
    @DefaultMessage("Shopping Lists")
    String partyShoppingLists();
    @DefaultMessage("Show Active")
    String partyShowActive();
    @DefaultMessage("Show All")
    String partyShowAll();
    @DefaultMessage("Show Old")
    String partyShowOld();
    @DefaultMessage("S - Single")
    String partySingle();
    @DefaultMessage("Site URL is missing")
    String partySiteURLMissing();
    @DefaultMessage("Size")
    String partySize();
    @DefaultMessage("Social Security Number")
    String partySocialSecurityNumber();
    @DefaultMessage("Soliciting OK")
    String partySolicitingOk();
    @DefaultMessage("Start Time")
    String partyStartTime();
    @DefaultMessage("State/Province")
    String partyState();
    @DefaultMessage("State is missing, and is required for an address in the United States.")
    String partyStateInUsMissing();
    @DefaultMessage("State/Province")
    String partyStateProvince();
    @DefaultMessage("Status")
    String partyStatus();
    @DefaultMessage("Still Active")
    String partyStillActive();
    @DefaultMessage("Subject")
    String partySubject();
    @DefaultMessage("Suffix")
    String partySuffix();
    @DefaultMessage("Supplier")
    String partySupplier();
    @DefaultMessage("Add Tax Info")
    String partyTaxAddInfo();
    @DefaultMessage("Tax Infos")
    String partyTaxAuthInfos();
    @DefaultMessage("Tax ID")
    String partyTaxId();
    @DefaultMessage("Tax Identification and Exemption")
    String partyTaxIdentification();
    @DefaultMessage("Is Exempt?")
    String partyTaxIsExempt();
    @DefaultMessage("Telecom")
    String partyTelecom();
    @DefaultMessage("Telecom Number successfully created.")
    String partyTelecomNumberSuccessfullyCreated();
    @DefaultMessage("Telecom Number successfully updated.")
    String partyTelecomNumberSuccessfullyUpdated();
    @DefaultMessage("Term")
    String partyTerm();
    @DefaultMessage("Term Type")
    String partyTermTyp();
    @DefaultMessage("Term Type")
    String partyTermType();
    @DefaultMessage("Term Value")
    String partyTermValue();
    @DefaultMessage("Terms")
    String partyTerms();
    @DefaultMessage("The Profile of")
    String partyTheProfileOf();
    @DefaultMessage("Time")
    String partyTime();
    @DefaultMessage("To Cart")
    String partyToCart();
    @DefaultMessage("To Contact Mech")
    String partyToContactMech();
    @DefaultMessage("To Email Address")
    String partyToEmailAddress();
    @DefaultMessage("To Name")
    String partyToName();
    @DefaultMessage("Total")
    String partyTotal();
    @DefaultMessage("Total Years Work Experience")
    String partyTotalYearsWorkExperience();
    @DefaultMessage("Total Years Work Experience is not a valid number")
    String partyTotalYearsWorkNotValidNumber();
    @DefaultMessage("Type")
    String partyType();
    @DefaultMessage("Party Type Id")
    String partyTypeId();
    @DefaultMessage("URI")
    String partyURI();
    @DefaultMessage("Unknown")
    String partyUnknown();
    @DefaultMessage("Security Error: to run updatePartyAttribute you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdateAttributePermissionError();
    @DefaultMessage("Security Error: to run updateCommunicationEvent you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdateCommunicationEventPermissionError();
    @DefaultMessage("Security Error: to run updatePartyClassificationGroup you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdatePartyClassificationGroupPermissionError();
    @DefaultMessage("Security Error: to run updatePartyClassification you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdatePartyClassificationPermissionError();
    @DefaultMessage("Security Error: to run updateVendor you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdateVendorPermissionError();
    @DefaultMessage("Security Error: to run updateWebSiteRole you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdateWebSiteRolePermissionError();
    @DefaultMessage("Use Current Address")
    String partyUseCurrentAddress();
    @DefaultMessage("User Created")
    String partyUserCreated();
    @DefaultMessage("User Login")
    String partyUserLogin();
    @DefaultMessage("Change UserLogin Password")
    String partyUserLoginChangePassword();
    @DefaultMessage("User Login Id")
    String partyUserLoginId();
    @DefaultMessage("Username is Missing")
    String partyUserLoginMissingError();
    @DefaultMessage("Update UserLogin Security Settings")
    String partyUserLoginUpdateSecuritySettings();
    @DefaultMessage("User Logins")
    String partyUserLogins();
    @DefaultMessage("UserLogins for SecurityGroup with ID")
    String partyUserLoginsForSecurityGroup();
    @DefaultMessage("User Name(s)")
    String partyUserName();
    @DefaultMessage("Username is missing")
    String partyUserNameMissing();
    @DefaultMessage("Vendor")
    String partyVendor();
    @DefaultMessage("Vendor Information")
    String partyVendorInformation();
    @DefaultMessage("View Communication Event")
    String partyViewCommunicationEvent();
    @DefaultMessage("View Image")
    String partyViewImage();
    @DefaultMessage("Security Error: to run getPostalAddressBoundary you must have the PARTY_VIEW or PARTY_ADMIN permission")
    String partyViewPostalAddressBoundaryPermissionError();
    @DefaultMessage("View Party Segment Roles")
    String partyViewSegmentRoles();
    @DefaultMessage("Visit Detail")
    String partyVisitDetail();
    @DefaultMessage("VisitID / SessionID")
    String partyVisitIDSessionID();
    @DefaultMessage("Visit Id")
    String partyVisitId();
    @DefaultMessage("Visit Listing")
    String partyVisitListing();
    @DefaultMessage("Visitor ID")
    String partyVisitorId();
    @DefaultMessage("Visits")
    String partyVisits();
    @DefaultMessage("Web Address suSuccessfully created.")
    String partyWebAddressSuccessfullyCreated();
    @DefaultMessage("Web Address suSuccessfully updated.")
    String partyWebAddressSuccessfullyUpdated();
    @DefaultMessage("WebApp")
    String partyWebApp();
    @DefaultMessage("Weight")
    String partyWeight();
    @DefaultMessage("Weight is not a valid number")
    String partyWeightNotValidNumber();
    @DefaultMessage("Years Work")
    String partyYearsWork();
    @DefaultMessage("You have")
    String partyYouHave();
    @DefaultMessage("Zip/Postal Code")
    String partyZipCode();
    @DefaultMessage("Zip/Postal Code is missing")
    String partyZipCodeMissing();
    @DefaultMessage("Zip/Postal Code")
    String partyZipPostalCode();
    @DefaultMessage("ERROR: Failure generating new party ID")
    String party_id_generation_failure();
    @DefaultMessage("Specified party ID cannot start with a digit, numeric IDs are reserved for auto-generated IDs")
    String party_id_is_digit();
    @DefaultMessage("Cannot create party relationship, partyIdFrom is not in specified role.")
    String partyrelationshipservices_cannot_create_party_relationship_partyIdFrom_not_in_role();
    @DefaultMessage("Cannot create party relationship, partyIdTo is not in specified role.")
    String partyrelationshipservices_cannot_create_party_relationship_partyIdTo_not_in_role();
    @DefaultMessage("Cannot create party relationship, partyIdTo cannot be null.")
    String partyrelationshipservices_cannot_create_party_relationship_partyIdTo_null();
    @DefaultMessage("Could not create party relationship: already exists.")
    String partyrelationshipservices_could_not_create_party_role_exists();
    @DefaultMessage("Could not create party role (read failure): {0}.")
    String partyrelationshipservices_could_not_create_party_role_read(String errMessage);
    @DefaultMessage("Could not create party relationship (write failure): {0}.")
    String partyrelationshipservices_could_not_create_party_role_write(String errMessage);
    @DefaultMessage("Could not update party relationship (relationship not found).")
    String partyrelationshipservices_could_not_update_party_relation_not_found();
    @DefaultMessage("Could not update party relation (read failure): {0}.")
    String partyrelationshipservices_could_not_update_party_relation_read(String errMessage);
    @DefaultMessage("Could not update party relationship (write failure): {0}.")
    String partyrelationshipservices_could_not_update_party_relation_write(String errMessage);
    @DefaultMessage("Both ''lastName'' and ''firstName'' cannot be empty.")
    String partyservices_both_names_cannot_be_empty();
    @DefaultMessage("Cannot create, an affiliate with the specified party ID already exists.")
    String partyservices_cannot_create_affiliate_ID_already_exists();
    @DefaultMessage("Cannot create affiliate, specified party ID cannot start with a digit, numeric IDs are reserved for auto-generated IDs.")
    String partyservices_cannot_create_affiliate_digit();
    @DefaultMessage("ERROR: Could not create affiliate (id generation failure).")
    String partyservices_cannot_create_affiliate_generation_failure();
    @DefaultMessage("Cannot create affiliate; no party entity found.")
    String partyservices_cannot_create_affiliate_no_party_entity();
    @DefaultMessage("Cannot create party group, a party group with the specified party ID already exists.")
    String partyservices_cannot_create_party_group_already_exists();
    @DefaultMessage("Cannot create party group, a party with the specified party ID already exists and is not a PARTY_GROUP type party, or a child of the PARTY_GROUP type.")
    String partyservices_cannot_create_party_group_already_exists_not_PARTY_GROUP_type();
    @DefaultMessage("Cannot delete party, operation not yet implemented.")
    String partyservices_cannot_delete_party_not_implemented();
    @DefaultMessage("Cannot get party entities (read failure): {0}.")
    String partyservices_cannot_get_party_entities_read(String errMessage);
    @DefaultMessage("Could not add affiliate info (write failure): {0}.")
    String partyservices_could_not_add_affiliate_info_write(String errMessage);
    @DefaultMessage("Cannot create party group, specified party ID cannot start with a digit, numeric IDs are reserved for auto-generated IDs.")
    String partyservices_could_not_create_party_ID_digit();
    @DefaultMessage("ERROR: Could not create party group (id generation failure).")
    String partyservices_could_not_create_party_group_generation_failure();
    @DefaultMessage("Could not update affiliate information (affiliate not found).")
    String partyservices_could_not_update_affiliate_information_not_found();
    @DefaultMessage("Could not update affiliate information (read failure): {0}.")
    String partyservices_could_not_update_affiliate_information_read(String errMessage);
    @DefaultMessage("Could not update affiliate information (write failure): {0}.")
    String partyservices_could_not_update_affiliate_information_write(String errMessage);
    @DefaultMessage("Could not update party or party group information (party or partyGroup not found).")
    String partyservices_could_not_update_party_information_not_found();
    @DefaultMessage("Could not update party or party group information (read failure): {0}.")
    String partyservices_could_not_update_party_information_read(String errMessage);
    @DefaultMessage("Could not update party or party group information (write failure): {0}.")
    String partyservices_could_not_update_party_information_write(String errMessage);
    @DefaultMessage("Data source error occurred while adding party group: {0}.")
    String partyservices_data_source_error_adding_party_group(String errMessage);
    @DefaultMessage("The party type with ID PARTY_GROUP was not found in the database, cannot create new party group.")
    String partyservices_party_type_not_found_in_database_cannot_create_party_group();
    @DefaultMessage("Problem associating note with party \"{0}\".")
    String partyservices_problem_associating_note_with_party(String errMessage);
    @DefaultMessage("Problem creating the note, no noteId returned.")
    String partyservices_problem_creating_note_no_noteId_returned();
    @DefaultMessage("Required parameter ''email'' cannot be empty.")
    String partyservices_required_parameter_email_cannot_be_empty();
    @DefaultMessage("Approve")
    String pendingReviewApprove();
    @DefaultMessage("Delete")
    String pendingReviewDelete();
    @DefaultMessage("Pending Approval")
    String pendingReviewPendingApproval();
    @DefaultMessage("Opentaps BI Login")
    String pentahoLoginGreeting();
    @DefaultMessage("Pentaho Reporting Framework")
    String pentahoMain();
    @DefaultMessage("Could not add person info (write failure): {0}")
    String person_create_db_error(String param_0);
    @DefaultMessage("Cannot create person, a party with the specified party ID already exists and is not a PERSON type party")
    String person_create_party_exists_not_person_type();
    @DefaultMessage("Cannot create person, a person with the specified party ID already exists")
    String person_create_person_exists();
    @DefaultMessage("Could not update person information (person not found)")
    String person_update_not_found();
    @DefaultMessage("Could not update person information (read failure): {0}")
    String person_update_read_failure(String param_0);
    @DefaultMessage("Person successfully updated.")
    String person_update_success();
    @DefaultMessage("Could not update person information (write failure): {0}")
    String person_update_write_failure(String param_0);
    @DefaultMessage("Area Code")
    String phoneAreaCode();
    @DefaultMessage("Country Code")
    String phoneCountryCode();
    @DefaultMessage("Phone Number")
    String phoneNumber();
    @DefaultMessage("Extension")
    String phoneExt();
    @DefaultMessage("Picking date")
    String pickingDate();
    @DefaultMessage("Picking for release")
    String pickingListFx();
    @DefaultMessage("Picking period")
    String pickingPeriod();
    @DefaultMessage("Pin Code")
    String postalCode();
    @DefaultMessage("Postal Code Extension")
    String postalCodeExt();
    @DefaultMessage("Admin Allow (One)")
    String prodCatalogCategoryType_description_PCCT_ADMIN_ALLW();
    @DefaultMessage("Browse Root (One)")
    String prodCatalogCategoryType_description_PCCT_BROWSE_ROOT();
    @DefaultMessage("Most Popular (One)")
    String prodCatalogCategoryType_description_PCCT_MOST_POPULAR();
    @DefaultMessage("Other Search (Many)")
    String prodCatalogCategoryType_description_PCCT_OTHER_SEARCH();
    @DefaultMessage("Promotions (One)")
    String prodCatalogCategoryType_description_PCCT_PROMOTIONS();
    @DefaultMessage("Purchase Allow (One)")
    String prodCatalogCategoryType_description_PCCT_PURCH_ALLW();
    @DefaultMessage("Quick Add (Many)")
    String prodCatalogCategoryType_description_PCCT_QUICK_ADD();
    @DefaultMessage("Default Search (One)")
    String prodCatalogCategoryType_description_PCCT_SEARCH();
    @DefaultMessage("View Allow (One)")
    String prodCatalogCategoryType_description_PCCT_VIEW_ALLW();
    @DefaultMessage("What''s New (One)")
    String prodCatalogCategoryType_description_PCCT_WHATS_NEW();
    @DefaultMessage("Description")
    String prodConfItemContentType_description_DESCRIPTION();
    @DefaultMessage("Image")
    String prodConfItemContentType_description_IMAGE_URL();
    @DefaultMessage("Instructions")
    String prodConfItemContentType_description_INSTRUCTIONS();
    @DefaultMessage("Description - Long")
    String prodConfItemContentType_description_LONG_DESCRIPTION();
    @DefaultMessage("You might be interested in these as well:")
    String producrCrossSell();
    @DefaultMessage("Abbrev")
    String productAbbrev();
    @DefaultMessage("Abbreviation")
    String productAbbreviation();
    @DefaultMessage("Accept UPS Shipment Confirmation")
    String productAcceptUpsShipmentConfirmation();
    @DefaultMessage("Account Type")
    String productAccountType();
    @DefaultMessage("Accounts")
    String productAccounts();
    @DefaultMessage("Action Type Amount")
    String productActionTypeAmount();
    @DefaultMessage("ActionType, Order Adjustment Type, Quantity, Item ID, Party ID &Limit")
    String productActionTypeOrderAdjustmentTypeQuantityItemPartyLimit();
    @DefaultMessage("ActionType, Quantity, Amount, Item ID, Party ID")
    String productActionUpdateFields();
    @DefaultMessage("Actions")
    String productActions();
    @DefaultMessage("Activation Number")
    String productActivationNumber();
    @DefaultMessage("Active and Inactive")
    String productActiveAndInactive();
    @DefaultMessage("Active only")
    String productActiveOnly();
    @DefaultMessage("Actual Other")
    String productActualOther();
    @DefaultMessage("Actual Services")
    String productActualServices();
    @DefaultMessage("Actual (Start-Arrive)")
    String productActualStartArrive();
    @DefaultMessage("Actual Total")
    String productActualTotal();
    @DefaultMessage("Actual Transport")
    String productActualTransport();
    @DefaultMessage("Add a Category to this Catalog (select Category and Type, then enter optional From Date)")
    String productAddCatalogProdCat();
    @DefaultMessage("Add a Catalog to this Category (select Catalog and Type, then enter optional From Date)")
    String productAddCatalogProductCategory();
    @DefaultMessage("Add Content to Category")
    String productAddContentCategory();
    @DefaultMessage("Add Content to Product")
    String productAddContentProduct();
    @DefaultMessage("Add Content to Product Config Item")
    String productAddContentProductConfigItem();
    @DefaultMessage("Add New Cost Component")
    String productAddCostComponent();
    @DefaultMessage("Add Email")
    String productAddEmail();
    @DefaultMessage("Add Facility")
    String productAddFacility();
    @DefaultMessage("Add FacilityGroupMember")
    String productAddFacilityGroupMember();
    @DefaultMessage("Add FacilityGroup Party Role")
    String productAddFacilityGroupPartyRole();
    @DefaultMessage("Add Facility Party Role")
    String productAddFacilityPartyRole();
    @DefaultMessage("Add Feature")
    String productAddFeature();
    @DefaultMessage("new features to this category")
    String productAddFeatureToCategory();
    @DefaultMessage("Add Feature to Results")
    String productAddFeatureToResults();
    @DefaultMessage("Add From Item")
    String productAddFromItem();
    @DefaultMessage("Add GL Account")
    String productAddGlAccount();
    @DefaultMessage("Add Items to Shipment")
    String productAddItemsShipment();
    @DefaultMessage("Add Package Info")
    String productAddPackageInfo();
    @DefaultMessage("Add Party Id")
    String productAddPartyId();
    @DefaultMessage("Add Price")
    String productAddPrice();
    @DefaultMessage("Add Price Rule")
    String productAddPriceRule();
    @DefaultMessage("Add Product")
    String productAddProduct();
    @DefaultMessage("Add Product Attribute (enter Name, Value and Type)")
    String productAddProductAttributeNameValueType();
    @DefaultMessage("Add Product Category Content (select Content Id, enter From Date):")
    String productAddProductCategoryContentFromDate();
    @DefaultMessage("Add Product Category Member")
    String productAddProductCategoryMember();
    @DefaultMessage("Add Product Category Member (select Category, enter From Date)")
    String productAddProductCategoryMemberFromDate();
    @DefaultMessage("Add Product Content (select Content Id, enter From Date):")
    String productAddProductContentFromDate();
    @DefaultMessage("Add Product Feature From Category or Group")
    String productAddProductFeatureFromCategory();
    @DefaultMessage("Add Product Feature From Group")
    String productAddProductFeatureFromGroup();
    @DefaultMessage("Add Product Feature with ID")
    String productAddProductFeatureID();
    @DefaultMessage("Adding Product Features in Bulk")
    String productAddProductFeatureInBulk();
    @DefaultMessage("Add Product Feature with Type and ID Code")
    String productAddProductFeatureTypeId();
    @DefaultMessage("Add product keyword")
    String productAddProductKeyword();
    @DefaultMessage("Add Products in this Category to the Cart using Default Quantities")
    String productAddProductsUsingDefaultQuantities();
    @DefaultMessage("Add New Promo Rule")
    String productAddPromoRule();
    @DefaultMessage("Add Results To")
    String productAddResultsTo();
    @DefaultMessage("Add Route Segment Info")
    String productAddRouteSegmentInfo();
    @DefaultMessage("Add Store Promo (select Store, enter optional From Date)")
    String productAddStorePromo();
    @DefaultMessage("Add Store Promo (select Promo, enter optional From Date)")
    String productAddStorePromoOptionalDate();
    @DefaultMessage("Add to Category")
    String productAddToCategory();
    @DefaultMessage("Add to Package")
    String productAddToPackage();
    @DefaultMessage("Add to shopping list")
    String productAddToShoppingList();
    @DefaultMessage("Additional Shipping Charge")
    String productAdditionalShippingCharge();
    @DefaultMessage("Addresses")
    String productAddresses();
    @DefaultMessage("Advanced Search")
    String productAdvancedSearch();
    @DefaultMessage("Advanced Search in")
    String productAdvancedSearchIn();
    @DefaultMessage("Advanced Search in Category")
    String productAdvancedSearchinCategory();
    @DefaultMessage("Product Aggregated Price")
    String productAggregatedPrice();
    @DefaultMessage("Agreements")
    String productAgreements();
    @DefaultMessage("Aisle")
    String productAisle();
    @DefaultMessage("All Keywords")
    String productAllKeyword();
    @DefaultMessage("Allow Co")
    String productAllowCo();
    @DefaultMessage("Allow Company Addr")
    String productAllowCoAddr();
    @DefaultMessage("Used with allow company address")
    String productAllowMessage();
    @DefaultMessage("Allow USPS")
    String productAllowUSPS();
    @DefaultMessage("Allow USPS Addr (PO Box, RR, etc)")
    String productAllowUSPSAddr();
    @DefaultMessage("Alternate")
    String productAlternate();
    @DefaultMessage("Alternate KeyWord Thesaurus")
    String productAlternateKeyWordThesaurus();
    @DefaultMessage("Amount")
    String productAmount();
    @DefaultMessage("Amount Uom Type Id")
    String productAmountUomTypeId();
    @DefaultMessage("And Apply Features to Product with ID")
    String productAndApplyFeaturesToProductWithId();
    @DefaultMessage("AND container")
    String productAndContainer();
    @DefaultMessage("AND quantity OnHand")
    String productAndQuantityOnHand();
    @DefaultMessage("Any Catalog")
    String productAnyCatalog();
    @DefaultMessage("Any Category")
    String productAnyCategory();
    @DefaultMessage("Any Facility")
    String productAnyFacility();
    @DefaultMessage("Any Keyword")
    String productAnyKeyword();
    @DefaultMessage("Any Shipment Status")
    String productAnyShipmentStatus();
    @DefaultMessage("Any Shipment Type")
    String productAnyShipmentType();
    @DefaultMessage("Appl Type")
    String productApplType();
    @DefaultMessage("Apply Features From Category")
    String productApplyFeatureGroupFromCategory();
    @DefaultMessage("Apply Features To Category")
    String productApplyFeatureGroupToCategory();
    @DefaultMessage("Apply Features From Category")
    String productApplyFeaturesFromCategory();
    @DefaultMessage("should generally be Approved before shipping")
    String productApprovedBeforeShipping();
    @DefaultMessage("Area")
    String productArea();
    @DefaultMessage("Arrival")
    String productArrival();
    @DefaultMessage("Rental")
    String productAssetUsage();
    @DefaultMessage("Assign Picker")
    String productAssignPicker();
    @DefaultMessage("Also Bought")
    String productAssocType_description_ALSO_BOUGHT();
    @DefaultMessage("Engineering Bill of Materials")
    String productAssocType_description_ENGINEER_COMPONENT();
    @DefaultMessage("Manufacturing Bill of Materials")
    String productAssocType_description_MANUF_COMPONENT();
    @DefaultMessage("Marketing Package Component")
    String productAssocType_description_MARKETING_PACKAGE();
    @DefaultMessage("Marketing Package Auto Explode Component")
    String productAssocType_description_MARKETING_PKG_AUTO();
    @DefaultMessage("Complementary or Cross-Sell")
    String productAssocType_description_PRODUCT_COMPLEMENT();
    @DefaultMessage("Actual Product Component")
    String productAssocType_description_PRODUCT_COMPONENT();
    @DefaultMessage("Incompatable")
    String productAssocType_description_PRODUCT_INCOMPATABLE();
    @DefaultMessage("Product Manufactured As")
    String productAssocType_description_PRODUCT_MANUFACTURED();
    @DefaultMessage("New Version, Replacement")
    String productAssocType_description_PRODUCT_OBSOLESCENCE();
    @DefaultMessage("Revision")
    String productAssocType_description_PRODUCT_REVISION();
    @DefaultMessage("Equivalent or Substitute")
    String productAssocType_description_PRODUCT_SUBSTITUTE();
    @DefaultMessage("Upgrade or Up-Sell")
    String productAssocType_description_PRODUCT_UPGRADE();
    @DefaultMessage("Product Variant")
    String productAssocType_description_PRODUCT_VARIANT();
    @DefaultMessage("Unique Item")
    String productAssocType_description_UNIQUE_ITEM();
    @DefaultMessage("Associate Party to Category (enter Party ID, select Type, then enter optional From Date)")
    String productAssociatePartyToCategory();
    @DefaultMessage("Association not found: Product Id={0}, Product Id To={1}, Association Type Id={2}, From Date={3}")
    String productAssociationNotFound(String productId, String productIdTo, String productAssocTypeId, String fromDate);
    @DefaultMessage("Association Type")
    String productAssociationType();
    @DefaultMessage("Association Type ID")
    String productAssociationTypeId();
    @DefaultMessage("Associations")
    String productAssociations();
    @DefaultMessage("Associations FROM this Product to")
    String productAssociationsFromProduct();
    @DefaultMessage("Associations TO this Product from")
    String productAssociationsToProduct();
    @DefaultMessage("Assocs")
    String productAssocs();
    @DefaultMessage("ATP")
    String productAtp();
    @DefaultMessage("ATP/QOH or Serial#")
    String productAtpQohSerial();
    @DefaultMessage("Attachment Screen Location (XSL-FO)")
    String productAttachmentScreenLocation();
    @DefaultMessage("Attributes")
    String productAttributes();
    @DefaultMessage("Auto-Calculate Costs")
    String productAutoCreateCosts();
    @DefaultMessage("AutoCreateKeywords")
    String productAutoCreateKeywords();
    @DefaultMessage("Auto Create Keywords for All Products")
    String productAutoCreateKeywordsForAllProducts();
    @DefaultMessage("Available")
    String productAvailable();
    @DefaultMessage("Available from date")
    String productAvailableFromDate();
    @DefaultMessage("Available To Promise / Quantity On Hand")
    String productAvailablePromiseQuantityHand();
    @DefaultMessage("Available thru date")
    String productAvailableThruDate();
    @DefaultMessage("Average Cost")
    String productAverageCost();
    @DefaultMessage("Back Orders")
    String productBackOrders();
    @DefaultMessage("Back to Edit Category")
    String productBackToEditCategory();
    @DefaultMessage("Barcode")
    String productBarcode();
    @DefaultMessage("Base")
    String productBase();
    @DefaultMessage("Base Prc")
    String productBasePrc();
    @DefaultMessage("Be The First To Review This Product!")
    String productBeTheFirstToReviewThisProduct();
    @DefaultMessage("Billing Weight &amp; UOM")
    String productBillingWeightUom();
    @DefaultMessage("Bin Num")
    String productBinNum();
    @DefaultMessage("Bin Number")
    String productBinNumber();
    @DefaultMessage("Body Screen Location")
    String productBodyScreenLocation();
    @DefaultMessage("Box")
    String productBox();
    @DefaultMessage("Brand Name")
    String productBrandName();
    @DefaultMessage("Browse&nbsp;Blogs")
    String productBrowseBlogs();
    @DefaultMessage("Browse Catalogs")
    String productBrowseCatalogs();
    @DefaultMessage("Browse&nbsp;Categories")
    String productBrowseCategories();
    @DefaultMessage("Browse&nbsp;Content")
    String productBrowseContent();
    @DefaultMessage("Browse&nbsp;Forums")
    String productBrowseForums();
    @DefaultMessage("Bulk Item")
    String productBulkItem();
    @DefaultMessage("Cannot review an unknown product")
    String productCannotReviewUnKnownProduct();
    @DefaultMessage("Carrier")
    String productCarrier();
    @DefaultMessage("Carrier Service Code")
    String productCarrierServiceCode();
    @DefaultMessage("Carrier Shipment Method")
    String productCarrierShipmentMethod();
    @DefaultMessage("Carrier Shipment Methods")
    String productCarrierShipmentMethods();
    @DefaultMessage("Carrier Status")
    String productCarrierStatus();
    @DefaultMessage("Catalog")
    String productCatalog();
    @DefaultMessage("Catalog Administration Main Page")
    String productCatalogAdministrationMainPage();
    @DefaultMessage("Catalog Detail List")
    String productCatalogDetailList();
    @DefaultMessage("Catalog [ID]")
    String productCatalogId();
    @DefaultMessage("Catalog Manager Application")
    String productCatalogManagerApplication();
    @DefaultMessage("This application is primarily intended for those responsible for the maintenance of product catalog related information")
    String productCatalogManagerIsFor();
    @DefaultMessage("Catalog Name")
    String productCatalogName();
    @DefaultMessage("Catalog Name [Id]")
    String productCatalogNameId();
    @DefaultMessage("You do not have permission to view this page. (\"CATALOG_VIEW\" or \"CATALOG_ADMIN\" needed)")
    String productCatalogViewPermissionError();
    @DefaultMessage("Catalogs")
    String productCatalogs();
    @DefaultMessage("Categories")
    String productCategories();
    @DefaultMessage("Categories for")
    String productCategoriesFor();
    @DefaultMessage("Category")
    String productCategory();
    @DefaultMessage("Content")
    String productCategoryContent();
    @DefaultMessage("Category Image URL")
    String productCategoryContentType_description_CATEGORY_IMAGE_URL();
    @DefaultMessage("Category Name")
    String productCategoryContentType_description_CATEGORY_NAME();
    @DefaultMessage("Description")
    String productCategoryContentType_description_DESCRIPTION();
    @DefaultMessage("Footer")
    String productCategoryContentType_description_FOOTER();
    @DefaultMessage("Description - Long")
    String productCategoryContentType_description_LONG_DESCRIPTION();
    @DefaultMessage("Category ID")
    String productCategoryId();
    @DefaultMessage("Category Image URL")
    String productCategoryImageUrl();
    @DefaultMessage("Links")
    String productCategoryLinks();
    @DefaultMessage("Category Members")
    String productCategoryMembers();
    @DefaultMessage("Category not found for Category ID")
    String productCategoryNotFoundforCategoryID();
    @DefaultMessage("Category Page")
    String productCategoryPage();
    @DefaultMessage("Products from this category")
    String productCategoryProducts();
    @DefaultMessage("Permission required to add product to \"PurchaseAllow\" category")
    String productCategoryPurchaseAllowPermReqd();
    @DefaultMessage("Category Rollup : Child Categories")
    String productCategoryRollupChildCategories();
    @DefaultMessage("Category Rollup : Parent Categories")
    String productCategoryRollupParentCategories();
    @DefaultMessage("Category (select Category and enter fromDate)")
    String productCategorySelectCategoryAndEnterFromDate();
    @DefaultMessage("Catalog")
    String productCategoryType_description_CATALOG_CATEGORY();
    @DefaultMessage("Cross Sell")
    String productCategoryType_description_CROSS_SELL_CATEGORY();
    @DefaultMessage("Industry")
    String productCategoryType_description_INDUSTRY_CATEGORY();
    @DefaultMessage("Internal")
    String productCategoryType_description_INTERNAL_CATEGORY();
    @DefaultMessage("Materials")
    String productCategoryType_description_MATERIALS_CATEGORY();
    @DefaultMessage("Mix and Match")
    String productCategoryType_description_MIXMATCH_CATEGORY();
    @DefaultMessage("Quick Add")
    String productCategoryType_description_QUICKADD_CATEGORY();
    @DefaultMessage("Search")
    String productCategoryType_description_SEARCH_CATEGORY();
    @DefaultMessage("Tax")
    String productCategoryType_description_TAX_CATEGORY();
    @DefaultMessage("Usage")
    String productCategoryType_description_USAGE_CATEGORY();
    @DefaultMessage("Permission required to add product to \"ViewAllow\" category")
    String productCategoryViewAllowPermReqd();
    @DefaultMessage("Categories With No Parent Categories")
    String productCategoryWithNoParent();
    @DefaultMessage("Category [ID]")
    String productCategory_Id();
    @DefaultMessage("This cannot be changed without re-creating the Product Catalog.")
    String productChangeWithoutProductCatalog();
    @DefaultMessage("Charge Shipping")
    String productChargeShipping();
    @DefaultMessage("Check Existing")
    String productCheckExisting();
    @DefaultMessage("Check Inventory")
    String productCheckInventory();
    @DefaultMessage("Checking for Existing Product in Category")
    String productCheckingForExistingProductInCategory();
    @DefaultMessage("Child")
    String productChild();
    @DefaultMessage("Child Category ID")
    String productChildCategoryId();
    @DefaultMessage("Child Group ID")
    String productChildGroupId();
    @DefaultMessage("Choose Catalog")
    String productChooseCatalog();
    @DefaultMessage("Choose a Feature Category")
    String productChooseFeatureCategory();
    @DefaultMessage("Choose a Feature Group")
    String productChooseFeatureGroup();
    @DefaultMessage("Choose QuickAdd Category")
    String productChooseQuickAddCategory();
    @DefaultMessage("Choose Top Category")
    String productChooseTopCategory();
    @DefaultMessage("Comments")
    String productComments();
    @DefaultMessage("Commissions")
    String productCommissions();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String productCompanySubtitle();
    @DefaultMessage("Compare At")
    String productCompareAtPrice();
    @DefaultMessage("Complete")
    String productComplete();
    @DefaultMessage("Force Complete")
    String productCompleteForce();
    @DefaultMessage("Complete Requested Transfers")
    String productCompleteRequestedTransfers();
    @DefaultMessage("Components")
    String productComponents();
    @DefaultMessage("Conditions")
    String productConditions();
    @DefaultMessage("Config Item")
    String productConfigItem();
    @DefaultMessage("Configurations")
    String productConfigItems();
    @DefaultMessage("Config Options")
    String productConfigOptions();
    @DefaultMessage("Configurations")
    String productConfigs();
    @DefaultMessage("Confirm selected moves")
    String productConfirmSelectedMoves();
    @DefaultMessage("Confirm Shipment with DHL")
    String productConfirmShipmentDHL();
    @DefaultMessage("Confirm Shipment with Fedex")
    String productConfirmShipmentFedex();
    @DefaultMessage("Confirm Shipment with UPS")
    String productConfirmShipmentUps();
    @DefaultMessage("Contact Type Information")
    String productContactTypeInformation();
    @DefaultMessage("C")
    String productContainerLetter();
    @DefaultMessage("Content")
    String productContent();
    @DefaultMessage("Content ID")
    String productContentId();
    @DefaultMessage("Content Info Text")
    String productContentInfoText();
    @DefaultMessage("Content Path Prefix")
    String productContentPathPrefix();
    @DefaultMessage("Description")
    String productContentType_description_DESCRIPTION();
    @DefaultMessage("Image - Detail")
    String productContentType_description_DETAIL_IMAGE_URL();
    @DefaultMessage("Digital Download")
    String productContentType_description_DIGITAL_DOWNLOAD();
    @DefaultMessage("Directions")
    String productContentType_description_DIRECTIONS();
    @DefaultMessage("Fulfillment Email")
    String productContentType_description_FULFILLMENT_EMAIL();
    @DefaultMessage("Fulfillment External (Async)")
    String productContentType_description_FULFILLMENT_EXTASYNC();
    @DefaultMessage("Fulfillment External (Sync)")
    String productContentType_description_FULFILLMENT_EXTSYNC();
    @DefaultMessage("Ingredients")
    String productContentType_description_INGREDIENTS();
    @DefaultMessage("Image - Large")
    String productContentType_description_LARGE_IMAGE_URL();
    @DefaultMessage("Description - Long")
    String productContentType_description_LONG_DESCRIPTION();
    @DefaultMessage("Image - Medium")
    String productContentType_description_MEDIUM_IMAGE_URL();
    @DefaultMessage("Online Access")
    String productContentType_description_ONLINE_ACCESS();
    @DefaultMessage("Price Detail Text")
    String productContentType_description_PRICE_DETAIL_TEXT();
    @DefaultMessage("Product Name")
    String productContentType_description_PRODUCT_NAME();
    @DefaultMessage("Image - Small")
    String productContentType_description_SMALL_IMAGE_URL();
    @DefaultMessage("Special Instructions")
    String productContentType_description_SPECIALINSTRUCTIONS();
    @DefaultMessage("Unique Ingredients")
    String productContentType_description_UNIQUE_INGREDIENTS();
    @DefaultMessage("Warnings")
    String productContentType_description_WARNINGS();
    @DefaultMessage("Content [ID]")
    String productContent_Id();
    @DefaultMessage("Copy Product Category Members to Another Category")
    String productCopyProductCategoryMembersToAnotherCategory();
    @DefaultMessage("Costs")
    String productCosts();
    @DefaultMessage("Could Not Find Facility with ID")
    String productCouldNotFindFacilityWithId();
    @DefaultMessage("Could Not Find Product with ID")
    String productCouldNotFindProduct();
    @DefaultMessage("Could not Find Product Catalog with Id")
    String productCouldNotFindProductCatalogWithId();
    @DefaultMessage("Could not Find Product Category with Id")
    String productCouldNotFindProductCategoryWithId();
    @DefaultMessage("Could Not Find Product Config Item with ID")
    String productCouldNotFindProductConfigItem();
    @DefaultMessage("Could not find Config Item with ID")
    String productCouldNotFindProductConfigItemWithId();
    @DefaultMessage("Could not find Product Feature Type with ID")
    String productCouldNotFindProductFeatureType();
    @DefaultMessage("Could not find ProductPromoCode with ID")
    String productCouldNotFindProductPromoCode();
    @DefaultMessage("Could not find Product Promotion with ID")
    String productCouldNotFindProductPromotion();
    @DefaultMessage("Could not find Shipment with ID")
    String productCouldNotFindProductShipmentWithId();
    @DefaultMessage("Country")
    String productCountry();
    @DefaultMessage("Create a Product Feature Category")
    String productCreateAProductFeatureCategory();
    @DefaultMessage("Create information for new supplier")
    String productCreateInformationNewSupplier();
    @DefaultMessage("Create New Catalog")
    String productCreateNewCatalog();
    @DefaultMessage("Create New Category")
    String productCreateNewCategory();
    @DefaultMessage("Create New Facility")
    String productCreateNewFacility();
    @DefaultMessage("Create New Feature")
    String productCreateNewFeature();
    @DefaultMessage("Create New Inventory Item for this Facility")
    String productCreateNewInventoryItemFacility();
    @DefaultMessage("Create New Inventory Item for this Product")
    String productCreateNewInventoryItemProduct();
    @DefaultMessage("Create NewProd Catalog")
    String productCreateNewProdCatalog();
    @DefaultMessage("Create New Product")
    String productCreateNewProduct();
    @DefaultMessage("Create New Product Config Item Content")
    String productCreateNewProductConfigItemContent();
    @DefaultMessage("Create New Product Content")
    String productCreateNewProductContent();
    @DefaultMessage("Create New ProductPromo")
    String productCreateNewProductPromo();
    @DefaultMessage("Create New Product Store")
    String productCreateNewProductStore();
    @DefaultMessage("Create Picklist")
    String productCreatePicklist();
    @DefaultMessage("Create Product")
    String productCreateProduct();
    @DefaultMessage("Create a Product Feature Group")
    String productCreateProductFeatureGroup();
    @DefaultMessage("Create Product Feature in This Category")
    String productCreateProductFeatureInThisCategory();
    @DefaultMessage("Create Product in Category")
    String productCreateProductInCategory();
    @DefaultMessage("Create Product in Category Check Existing")
    String productCreateProductInCategoryCheckExisting();
    @DefaultMessage("Thank you, your review was successfully submitted.")
    String productCreateProductReviewSuccess();
    @DefaultMessage("Create ProductStoreRole")
    String productCreateProductStoreRole();
    @DefaultMessage("Create Rule")
    String productCreateRule();
    @DefaultMessage("Create Virtual Product")
    String productCreateVirtualProduct();
    @DefaultMessage("Created By")
    String productCreatedBy();
    @DefaultMessage("Created By User Login")
    String productCreatedByUserLogin();
    @DefaultMessage("Created Date")
    String productCreatedDate();
    @DefaultMessage("Currency")
    String productCurrency();
    @DefaultMessage("Currency UOM")
    String productCurrencyUom();
    @DefaultMessage("Currency Uom Id")
    String productCurrencyUomId();
    @DefaultMessage("Customer")
    String productCustomer();
    @DefaultMessage("Customer Rating")
    String productCustomerRating();
    @DefaultMessage("DL")
    String productDL();
    @DefaultMessage("Date Filter")
    String productDateFilter();
    @DefaultMessage("Date Received")
    String productDateReceived();
    @DefaultMessage("Days To Ship")
    String productDaysToShip();
    @DefaultMessage("Default Amount")
    String productDefaultAmount();
    @DefaultMessage("Default Days To Ship")
    String productDefaultDaysToShip();
    @DefaultMessage("Default Price")
    String productDefaultPrice();
    @DefaultMessage("Default Sequence Number")
    String productDefaultSequenceNumber();
    @DefaultMessage("Defaults to")
    String productDefaultsTo();
    @DefaultMessage("Defective")
    String productDefective();
    @DefaultMessage("Delete All Keywords")
    String productDeleteAllKeywords();
    @DefaultMessage("Depth")
    String productDept();
    @DefaultMessage("Depth Uom Id")
    String productDepthUomId();
    @DefaultMessage("Description")
    String productDescription();
    @DefaultMessage("Dest")
    String productDest();
    @DefaultMessage("Dest. Facility")
    String productDestFacility();
    @DefaultMessage("Destination")
    String productDestination();
    @DefaultMessage("Destination Facility")
    String productDestinationFacility();
    @DefaultMessage("Destination Facility is")
    String productDestinationFacilityIs();
    @DefaultMessage("Destination Phone Number Id")
    String productDestinationPhoneNumberId();
    @DefaultMessage("Destination Postal Address Id")
    String productDestinationPostalAddressId();
    @DefaultMessage("Detail Image")
    String productDetailImage();
    @DefaultMessage("Detail Screen")
    String productDetailScreen();
    @DefaultMessage("for screens in other files use something like")
    String productDetailScreenMessage();
    @DefaultMessage("Drop Shipment")
    String productDropShipment();
    @DefaultMessage("Duplicate Product")
    String productDuplicateProduct();
    @DefaultMessage("Duplicate a Product Category")
    String productDuplicateProductCategory();
    @DefaultMessage("Duplicate Selected with New ID")
    String productDuplicateProductCategorySelected();
    @DefaultMessage("Duplicate / Remove Selected with New ID")
    String productDuplicateRemoveSelectedWithNewId();
    @DefaultMessage("Each Product")
    String productEach();
    @DefaultMessage("Edit Catalog")
    String productEditCatalog();
    @DefaultMessage("Edit Catalog with Catalog ID")
    String productEditCatalogWithCatalogId();
    @DefaultMessage("Edit Category")
    String productEditCategory();
    @DefaultMessage("Edit Category with Category ID")
    String productEditCategoryWithCategoryId();
    @DefaultMessage("Edit Content")
    String productEditContent();
    @DefaultMessage("Edit Facility")
    String productEditFacility();
    @DefaultMessage("Edit Feature")
    String productEditFeature();
    @DefaultMessage("Product Feature Group Applications")
    String productEditFeatureGroupAppls();
    @DefaultMessage("Edit Feature with ID")
    String productEditFeatureId();
    @DefaultMessage("Edit Features for Feature Category")
    String productEditFeaturesForFeatureCategory();
    @DefaultMessage("Edit Inventory Item with ID")
    String productEditInventoryItemWithId();
    @DefaultMessage("Edit Product")
    String productEditProduct();
    @DefaultMessage("Edit Product with Product ID")
    String productEditProductWithProductId();
    @DefaultMessage("Edit Shipment")
    String productEditShipment();
    @DefaultMessage("Entire Catalog")
    String productEntireCatalog();
    @DefaultMessage("Error: facility")
    String productErrorFacility();
    @DefaultMessage("ERROR: Facility with ID [{0}] not found")
    String productErrorFacilityIdNotFound(String facilityId);
    @DefaultMessage("Error: No Facility Available")
    String productErrorNoFacilityAvailable();
    @DefaultMessage("ERROR: No packages found for this shipment")
    String productErrorNoPackagesFoundForShipment();
    @DefaultMessage("ERROR: Order with ID [{0}] not found")
    String productErrorOrderIdNotFound(String orderId);
    @DefaultMessage("Order {0} is not a Purchase Order")
    String productErrorOrderNotPurchaseOrder(String orderId);
    @DefaultMessage("ERROR: Product not found")
    String productErrorProductNotFound();
    @DefaultMessage("Shipment {0} is not a Purchase Shipment")
    String productErrorShipmentNotPurchaseShipment(String shipmentId);
    @DefaultMessage("Error: Type")
    String productErrorType();
    @DefaultMessage("Estimate ID")
    String productEstimateId();
    @DefaultMessage("Estimate Ship Cost")
    String productEstimateShipCost();
    @DefaultMessage("Estimated Arrival Date")
    String productEstimatedArrivalDate();
    @DefaultMessage("Estimated Arrival Event")
    String productEstimatedArrivalEvent();
    @DefaultMessage("Estimated Arrival Work Eff Id")
    String productEstimatedArrivalWorkEffId();
    @DefaultMessage("Estimated Standard Costs")
    String productEstimatedCosts();
    @DefaultMessage("Estimated Dates")
    String productEstimatedDates();
    @DefaultMessage("Estimated Ready Date")
    String productEstimatedReadyDate();
    @DefaultMessage("Estimated Ship Cost")
    String productEstimatedShipCost();
    @DefaultMessage("Estimated Ship Cost for Ship Group")
    String productEstimatedShipCostForShipGroup();
    @DefaultMessage("Estimated Ship Cost for Packages")
    String productEstimatedShipCostPackages();
    @DefaultMessage("Estimated Ship Date")
    String productEstimatedShipDate();
    @DefaultMessage("Estimated Ship Event")
    String productEstimatedShipEvent();
    @DefaultMessage("Estimated Ship Work Eff Id")
    String productEstimatedShipWorkEffId();
    @DefaultMessage("Estimated (Start-Arrive)")
    String productEstimatedStartArrive();
    @DefaultMessage("Exc Feature")
    String productExcFeature();
    @DefaultMessage("Exc Geo")
    String productExcGeo();
    @DefaultMessage("Exclude Feature Group")
    String productExcludeFeature();
    @DefaultMessage("Displays only if all items have no features in this group")
    String productExcludeFeatureMessage();
    @DefaultMessage("Exclude Geo")
    String productExcludeGeo();
    @DefaultMessage("Displays only if ship-to is not in this geo")
    String productExcludeGeoMessage();
    @DefaultMessage("Exclude Variants")
    String productExcludeVariants();
    @DefaultMessage("Existing Inventory Item")
    String productExistingInventoryItem();
    @DefaultMessage("Existing Variant IDs")
    String productExistingVariant();
    @DefaultMessage("Expire All Product Members")
    String productExpireAllProductMembers();
    @DefaultMessage("Expire Date")
    String productExpireDate();
    @DefaultMessage("Expire Results From")
    String productExpireResultsFrom();
    @DefaultMessage("Explode Order Items")
    String productExplodeOrderItems();
    @DefaultMessage("Deactivated")
    String productExportDeactivated();
    @DefaultMessage("Not Requested")
    String productExportNoTrackingRequested();
    @DefaultMessage("Publish")
    String productExportPublish();
    @DefaultMessage("Publish Draft")
    String productExportPublishDraft();
    @DefaultMessage("Export To Google Base")
    String productExportToGoogle();
    @DefaultMessage("Export To eBay")
    String productExportToeBay();
    @DefaultMessage("Facilities")
    String productFacilities();
    @DefaultMessage("Facilities List")
    String productFacilitiesList();
    @DefaultMessage("Facility")
    String productFacility();
    @DefaultMessage("Facility / Container")
    String productFacilityContainer();
    @DefaultMessage("Facility or Container ID")
    String productFacilityContainerId();
    @DefaultMessage("You do not have permission to view this page. (\"FACILITY_CREATE\" or \"FACILITY_ADMIN\" needed)")
    String productFacilityCreatePermissionError();
    @DefaultMessage("Default Inventory Item Type")
    String productFacilityDefaultInventoryItemType();
    @DefaultMessage("Default Weight Unit")
    String productFacilityDefaultWeightUnit();
    @DefaultMessage("Facility Group")
    String productFacilityGroup();
    @DefaultMessage("Facility Group ID")
    String productFacilityGroupId();
    @DefaultMessage("Facility Group List")
    String productFacilityGroupList();
    @DefaultMessage("Facility-Group Member Maintenance")
    String productFacilityGroupMemberMaintenance();
    @DefaultMessage("Facility Group Name [ID]")
    String productFacilityGroupNameId();
    @DefaultMessage("FacilityGroup Rollup : Parent Groups")
    String productFacilityGroupRollupParentGroups();
    @DefaultMessage("Facility Group Type")
    String productFacilityGroupType();
    @DefaultMessage("Facility Groups")
    String productFacilityGroups();
    @DefaultMessage("Facility ID")
    String productFacilityId();
    @DefaultMessage("F")
    String productFacilityLetter();
    @DefaultMessage("Facility Location")
    String productFacilityLocation();
    @DefaultMessage("Facility Locations")
    String productFacilityLocations();
    @DefaultMessage("Facility Manager Application")
    String productFacilityManagerApplication();
    @DefaultMessage("Facility Name [ID]")
    String productFacilityNameId();
    @DefaultMessage("Owner")
    String productFacilityOwner();
    @DefaultMessage("Facility Role Member Maintenance")
    String productFacilityRoleMemberMaintenance();
    @DefaultMessage("Facility Type")
    String productFacilityType();
    @DefaultMessage("Facility Type ID")
    String productFacilityTypeId();
    @DefaultMessage("You do not have permission to view this page. (\"FACILITY_VIEW\" or \"FACILITY_ADMIN\" needed)")
    String productFacilityViewPermissionError();
    @DefaultMessage("Fast Load Catalog into Cache")
    String productFastLoadCatalogIntoCache();
    @DefaultMessage("Feature")
    String productFeature();
    @DefaultMessage("Distinguishing")
    String productFeatureApplType_description_DISTINGUISHING_FEAT();
    @DefaultMessage("Optional")
    String productFeatureApplType_description_OPTIONAL_FEATURE();
    @DefaultMessage("Required")
    String productFeatureApplType_description_REQUIRED_FEATURE();
    @DefaultMessage("Selectable")
    String productFeatureApplType_description_SELECTABLE_FEATURE();
    @DefaultMessage("Standard")
    String productFeatureApplType_description_STANDARD_FEATURE();
    @DefaultMessage("Feature Application Type")
    String productFeatureApplicationType();
    @DefaultMessage("Feature Appls")
    String productFeatureAppls();
    @DefaultMessage("Product Feature Attributes")
    String productFeatureAttributes();
    @DefaultMessage("Feature Categories and Groups")
    String productFeatureCategoriesGroups();
    @DefaultMessage("Feature Category")
    String productFeatureCategory();
    @DefaultMessage("Attach Features to Category from Products")
    String productFeatureCategoryAttach();
    @DefaultMessage("Features")
    String productFeatureCats();
    @DefaultMessage("Finished w/ This Category")
    String productFeatureFinishedWithCategories();
    @DefaultMessage("Feature Group")
    String productFeatureGroup();
    @DefaultMessage("Feature Id")
    String productFeatureId();
    @DefaultMessage("Below surcharge(s) will be added per-product * per-feature")
    String productFeatureMessage();
    @DefaultMessage("Per-Feature Percent")
    String productFeaturePerFeaturePercent();
    @DefaultMessage("Per-Feature Price")
    String productFeaturePerFeaturePrice();
    @DefaultMessage("Feature Type")
    String productFeatureType();
    @DefaultMessage("Accessory")
    String productFeatureType_description_ACCESSORY();
    @DefaultMessage("Amount")
    String productFeatureType_description_AMOUNT();
    @DefaultMessage("Artist")
    String productFeatureType_description_ARTIST();
    @DefaultMessage("Billing Feature")
    String productFeatureType_description_BILLING_FEATURE();
    @DefaultMessage("Brand")
    String productFeatureType_description_BRAND();
    @DefaultMessage("Care")
    String productFeatureType_description_CARE();
    @DefaultMessage("Color")
    String productFeatureType_description_COLOR();
    @DefaultMessage("Dimension")
    String productFeatureType_description_DIMENSION();
    @DefaultMessage("Equipment Class")
    String productFeatureType_description_EQUIP_CLASS();
    @DefaultMessage("Fabric")
    String productFeatureType_description_FABRIC();
    @DefaultMessage("Genre")
    String productFeatureType_description_GENRE();
    @DefaultMessage("Gift Wrap")
    String productFeatureType_description_GIFT_WRAP();
    @DefaultMessage("Hardware Feature")
    String productFeatureType_description_HARDWARE_FEATURE();
    @DefaultMessage("Hazmat")
    String productFeatureType_description_HAZMAT();
    @DefaultMessage("License")
    String productFeatureType_description_LICENSE();
    @DefaultMessage("Model Year")
    String productFeatureType_description_MODEL_YEAR();
    @DefaultMessage("Net Weight")
    String productFeatureType_description_NET_WEIGHT();
    @DefaultMessage("Origin")
    String productFeatureType_description_ORIGIN();
    @DefaultMessage("Other Feature")
    String productFeatureType_description_OTHER_FEATURE();
    @DefaultMessage("Product Quality")
    String productFeatureType_description_PRODUCT_QUALITY();
    @DefaultMessage("Size")
    String productFeatureType_description_SIZE();
    @DefaultMessage("Software Feature")
    String productFeatureType_description_SOFTWARE_FEATURE();
    @DefaultMessage("Style")
    String productFeatureType_description_STYLE();
    @DefaultMessage("Symptom")
    String productFeatureType_description_SYMPTOM();
    @DefaultMessage("Topic")
    String productFeatureType_description_TOPIC();
    @DefaultMessage("Type")
    String productFeatureType_description_TYPE();
    @DefaultMessage("Warranty")
    String productFeatureType_description_WARRANTY();
    @DefaultMessage("Year Made")
    String productFeatureType_description_YEAR_MADE();
    @DefaultMessage("Features")
    String productFeatures();
    @DefaultMessage("File")
    String productFile();
    @DefaultMessage("Filtered by Introduction and Sales Discontinuation Dates")
    String productFilterByAvailabilityDates();
    @DefaultMessage("Find Location")
    String productFindLocation();
    @DefaultMessage("Find Locations for")
    String productFindLocationsFor();
    @DefaultMessage("Find Orders to pick")
    String productFindOrdersToPick();
    @DefaultMessage("Find Product")
    String productFindProduct();
    @DefaultMessage("Find Product with ID Value")
    String productFindProductWithIdValue();
    @DefaultMessage("Find Subscriptions for Resource")
    String productFindResourceSubscriptions();
    @DefaultMessage("Find Rule")
    String productFindRule();
    @DefaultMessage("Find Shipment(s)")
    String productFindShipment();
    @DefaultMessage("Fl. Oz.")
    String productFlOz();
    @DefaultMessage("Flag picking started")
    String productFlagPickingStarted();
    @DefaultMessage("Flat Base Percent")
    String productFlatBasePercent();
    @DefaultMessage("Flat Base Price")
    String productFlatBasePrice();
    @DefaultMessage("Flat Item Price")
    String productFlatItemPrice();
    @DefaultMessage("Flat Shipping Percent")
    String productFlatShippingPercent();
    @DefaultMessage("From Geo")
    String productFromGeo();
    @DefaultMessage("From Location")
    String productFromLocation();
    @DefaultMessage("Product from order")
    String productFromOrder();
    @DefaultMessage("From Party")
    String productFromParty();
    @DefaultMessage("Future Party / RoleList")
    String productFuturePartyRoleList();
    @DefaultMessage("For something interesting make sure you are logged in, try username:admin, password:ofbiz")
    String productGeneralMessage();
    @DefaultMessage("Generate Shipment Manifest Report")
    String productGenerateShipmentManifestReport();
    @DefaultMessage("Get Item")
    String productGetItem();
    @DefaultMessage("GL Account")
    String productGlAccount();
    @DefaultMessage("GL Accounts")
    String productGlAccounts();
    @DefaultMessage("Global")
    String productGlobal();
    @DefaultMessage("Global Price Rule")
    String productGlobalPriceRule();
    @DefaultMessage("Global Price Rules")
    String productGlobalPriceRules();
    @DefaultMessage("Go to Feature Category")
    String productGoToFeatureCategory();
    @DefaultMessage("Good Id")
    String productGoodId();
    @DefaultMessage("Good Identification")
    String productGoodIdentification();
    @DefaultMessage("Grams")
    String productGrams();
    @DefaultMessage("Group Member Maintenance")
    String productGroupMemberMaintenance();
    @DefaultMessage("Group Rollup : Child Groups")
    String productGroupRollupChildGroups();
    @DefaultMessage("Group (select Category and enter From Date)")
    String productGroupSelectCategoryFromDate();
    @DefaultMessage("Group (select Group and enter From Date)")
    String productGroupSelectGroupFromDate();
    @DefaultMessage("Groups")
    String productGroups();
    @DefaultMessage("Groups for")
    String productGroupsFor();
    @DefaultMessage("HZ")
    String productHZ();
    @DefaultMessage("Handling Instructions")
    String productHandlingInstructions();
    @DefaultMessage("Header Logo")
    String productHeaderLogo();
    @DefaultMessage("Height")
    String productHeight();
    @DefaultMessage("Height Uom Id")
    String productHeightUomId();
    @DefaultMessage("Hide Empty Items")
    String productHideEmptyItems();
    @DefaultMessage("Hide Grid")
    String productHideGrid();
    @DefaultMessage("High to Low")
    String productHighToLow();
    @DefaultMessage("Host")
    String productHost();
    @DefaultMessage("HTML Search Parameters")
    String productHtmlSearchParameters();
    @DefaultMessage("ID Code")
    String productIdCode();
    @DefaultMessage("ID Seq Num")
    String productIdSeqNum();
    @DefaultMessage("ID Type")
    String productIdType();
    @DefaultMessage("ID Value")
    String productIdValue();
    @DefaultMessage("If not specified defaults to")
    String productIfNotSpecifiedDefaultsIsProductdetail();
    @DefaultMessage("In Inventory")
    String productInInventory();
    @DefaultMessage("In Production")
    String productInProduction();
    @DefaultMessage("Inc Feature")
    String productIncFeature();
    @DefaultMessage("Inc FreeShip")
    String productIncFreeship();
    @DefaultMessage("Inc Geo")
    String productIncGeo();
    @DefaultMessage("Include All Sub Categories")
    String productIncludeAllSubCategories();
    @DefaultMessage("Include Feature Group")
    String productIncludeFeature();
    @DefaultMessage("Displays only if all items have all features in this group")
    String productIncludeFeatureMessage();
    @DefaultMessage("Include Free Ship Items")
    String productIncludeFreeship();
    @DefaultMessage("Set to N to hide when the cart contains ONLY free shipping items")
    String productIncludeFreeshipMessage();
    @DefaultMessage("Include Geo")
    String productIncludeGeo();
    @DefaultMessage("Displays only if ship-to is in this geo")
    String productIncludeGeoMessage();
    @DefaultMessage("Include In Promotions")
    String productIncludePromotions();
    @DefaultMessage("Include Sub-Categories")
    String productIncludeSubCategories();
    @DefaultMessage("Include sub-categories?")
    String productIncludeSubcategories();
    @DefaultMessage("Incoming Production Runs")
    String productIncomingProductionRuns();
    @DefaultMessage("Incoming Shipments")
    String productIncomingShipments();
    @DefaultMessage("Initial Inventory Item Status")
    String productInitialInventoryItemStatus();
    @DefaultMessage("Input, Operator & Value")
    String productInputOperatorValue();
    @DefaultMessage("Insert Default Image URL")
    String productInsertDefaultImageUrl();
    @DefaultMessage("Instruction")
    String productInstruction();
    @DefaultMessage("Internal Name")
    String productInternalName();
    @DefaultMessage("Inventory")
    String productInventory();
    @DefaultMessage("Avail")
    String productInventoryAvail();
    @DefaultMessage("Inventory Avail: Not Avail:")
    String productInventoryAvailNotAvail();
    @DefaultMessage("Inventory By Product")
    String productInventoryByProduct();
    @DefaultMessage("Inventory Details")
    String productInventoryDetails();
    @DefaultMessage("Inventory Facility")
    String productInventoryFacility();
    @DefaultMessage("Inventory Item")
    String productInventoryItem();
    @DefaultMessage("Inventory Item Id")
    String productInventoryItemId();
    @DefaultMessage("Inventory Item Reservations")
    String productInventoryItemReservations();
    @DefaultMessage("Inventory Item Type")
    String productInventoryItemType();
    @DefaultMessage("InventoryItem Type ID")
    String productInventoryItemTypeId();
    @DefaultMessage("Inventory Items")
    String productInventoryItems();
    @DefaultMessage("Inventory Items for")
    String productInventoryItemsFor();
    @DefaultMessage("Inventory Items to Pick")
    String productInventoryItemsToPick();
    @DefaultMessage("Inventory Message")
    String productInventoryMessage();
    @DefaultMessage("Not Avail")
    String productInventoryNotAvail();
    @DefaultMessage("Receive Inventory")
    String productInventoryReceive();
    @DefaultMessage("Should inventory be required to purchase this product? If not specified defaults to the Catalog setting.")
    String productInventoryRequiredProduct();
    @DefaultMessage("Inventory Summary")
    String productInventorySummary();
    @DefaultMessage("Inventory Transfer")
    String productInventoryTransfer();
    @DefaultMessage("Inventory Transfers for")
    String productInventoryTransfersFor();
    @DefaultMessage("Inventory Xfers")
    String productInventoryXfers();
    @DefaultMessage("Issued  : Ordered")
    String productIssedOrdered();
    @DefaultMessage("Issue")
    String productIssue();
    @DefaultMessage("Issue All")
    String productIssueAll();
    @DefaultMessage("Issued Quantity")
    String productIssuedQuantity();
    @DefaultMessage("[Issued + Reserved=Total]=Ordered")
    String productIssuedReservedTotalOrdered();
    @DefaultMessage("Item")
    String productItem();
    @DefaultMessage("Item ATP")
    String productItemATP();
    @DefaultMessage("Item Description")
    String productItemDescription();
    @DefaultMessage("Item ID")
    String productItemId();
    @DefaultMessage("The Item ID on an action is a Product ID for Gift With Purchase actions or for Free Shipping actions it is Shipment Method Type ID to give free shipping on (if blank any Shipment Method Types may receive free shipping)")
    String productItemIdGiftPurchaseFreeShipping();
    @DefaultMessage("This item is out of stock")
    String productItemOutofStock();
    @DefaultMessage("Item Prc")
    String productItemPrc();
    @DefaultMessage("Item : Product")
    String productItemProduct();
    @DefaultMessage("Item QOH")
    String productItemQOH();
    @DefaultMessage("Item Type")
    String productItemType();
    @DefaultMessage("Items")
    String productItems();
    @DefaultMessage("Items Issued")
    String productItemsIssued();
    @DefaultMessage("Items Issued or Reserved")
    String productItemsIssuedReserved();
    @DefaultMessage("Keyword")
    String productKeyword();
    @DefaultMessage("all words match")
    String productKeywordAllWordsMatch();
    @DefaultMessage("any word matches")
    String productKeywordAnyWordMatches();
    @DefaultMessage("Keyword Relevancy")
    String productKeywordRelevancy();
    @DefaultMessage("Keyword Relevancy")
    String productKeywordRelevency();
    @DefaultMessage("where")
    String productKeywordWhere();
    @DefaultMessage("Keywords")
    String productKeywords();
    @DefaultMessage("Label")
    String productLabel();
    @DefaultMessage("Labels")
    String productLabels();
    @DefaultMessage("Large Image")
    String productLargeImage();
    @DefaultMessage("Last Created By")
    String productLastCreatedBy();
    @DefaultMessage("Last Modified By")
    String productLastModifiedBy();
    @DefaultMessage("Last Modified By User Login")
    String productLastModifiedByUserLogin();
    @DefaultMessage("Last Modified Date")
    String productLastModifiedDate();
    @DefaultMessage("Last price")
    String productLastPrice();
    @DefaultMessage("Last Search")
    String productLastSearch();
    @DefaultMessage("Latest Cancel Date")
    String productLatestCancelDate();
    @DefaultMessage("Leave empty for entire PO receiving")
    String productLeaveEntirePoReceiving();
    @DefaultMessage("Leave empty for single product receiving")
    String productLeaveSingleProductReceiving();
    @DefaultMessage("Level")
    String productLevel();
    @DefaultMessage("Line")
    String productLine();
    @DefaultMessage("Link One Image URL")
    String productLinkOneImageUrl();
    @DefaultMessage("Link Two Image URL")
    String productLinkTwoImageUrl();
    @DefaultMessage("Link Type Enum")
    String productLinkTypeEnumId();
    @DefaultMessage("List Price")
    String productListPrice();
    @DefaultMessage("Loading Catalog Caches")
    String productLoadingCatalogCaches();
    @DefaultMessage("Locale String")
    String productLocaleString();
    @DefaultMessage("Location")
    String productLocation();
    @DefaultMessage("Location for")
    String productLocationFor();
    @DefaultMessage("Location Product(s)")
    String productLocationProduct();
    @DefaultMessage("Location SeqID")
    String productLocationSeqId();
    @DefaultMessage("Locations")
    String productLocations();
    @DefaultMessage("Location(s) for")
    String productLocationsFor();
    @DefaultMessage("Long Description")
    String productLongDescription();
    @DefaultMessage("Lookup Shipment(s)")
    String productLookupShipment();
    @DefaultMessage("Lot ID")
    String productLotId();
    @DefaultMessage("Low Level Code")
    String productLowLevelCode();
    @DefaultMessage("Low to High")
    String productLowToHigh();
    @DefaultMessage("ML")
    String productML();
    @DefaultMessage("Main")
    String productMain();
    @DefaultMessage("Oil Change")
    String productMaintType_description_OIL_CHANGE();
    @DefaultMessage("Re-Fuel")
    String productMaintType_description_REFUEL();
    @DefaultMessage("Replace Battery")
    String productMaintType_description_REPLACE_BATTERY();
    @DefaultMessage("Serpentine Belt Replacement")
    String productMaintType_description_SERP_BELT();
    @DefaultMessage("Vehicle Maintenance")
    String productMaintType_description_VEHICLE_MAINT();
    @DefaultMessage("Wash")
    String productMaintType_description_WASH();
    @DefaultMessage("Maintenance")
    String productMaintenance();
    @DefaultMessage("MakeTop")
    String productMakeTop();
    @DefaultMessage("Manufacturing")
    String productManufacturing();
    @DefaultMessage("Mark as Accepted")
    String productMarkAsAccepted();
    @DefaultMessage("ATP from Components")
    String productMarketingPackageATP();
    @DefaultMessage("QOH from Components")
    String productMarketingPackageQOH();
    @DefaultMessage("Max Size")
    String productMaxSize();
    @DefaultMessage("Displays only if largest product size is equal/less than this value")
    String productMaxSizeMessage();
    @DefaultMessage("Max Sz")
    String productMaxSz();
    @DefaultMessage("Max Tot")
    String productMaxTot();
    @DefaultMessage("Max Total")
    String productMaxTotal();
    @DefaultMessage("Displays only if total price is equal/less than this value")
    String productMaxTotalMessage();
    @DefaultMessage("Max Weight")
    String productMaxWeight();
    @DefaultMessage("Displays only if total weight is equal/less than this value")
    String productMaxWeightMessage();
    @DefaultMessage("Max Wt")
    String productMaxWt();
    @DefaultMessage("Maximum")
    String productMaximum();
    @DefaultMessage("Maximum Price")
    String productMaximumPrice();
    @DefaultMessage("Medium Image")
    String productMediumImage();
    @DefaultMessage("Copy Count Meter")
    String productMeterType_description_COPY_COUNT();
    @DefaultMessage("Distance Meter")
    String productMeterType_description_DISTANCE();
    @DefaultMessage("Motor Time Meter")
    String productMeterType_description_MOTOR_TIME();
    @DefaultMessage("Speedometer")
    String productMeterType_description_SPEEDOMETER();
    @DefaultMessage("Tachometer")
    String productMeterType_description_TACHOMETER();
    @DefaultMessage("Use Count Meter")
    String productMeterType_description_USE_COUNT();
    @DefaultMessage("Meters")
    String productMeters();
    @DefaultMessage("Method")
    String productMethod();
    @DefaultMessage("Method Type")
    String productMethodType();
    @DefaultMessage("Min Item Price")
    String productMinItemPrice();
    @DefaultMessage("0 min -> up to max; 0 max -> from min and up")
    String productMinMax();
    @DefaultMessage("Min - Max (span)")
    String productMinMaxSpan();
    @DefaultMessage("Min Purchase")
    String productMinPurchase();
    @DefaultMessage("Min Size")
    String productMinSize();
    @DefaultMessage("Displays only if smallest product size is equal/greater than this value")
    String productMinSizeMessage();
    @DefaultMessage("Min Sz")
    String productMinSz();
    @DefaultMessage("Min Tot")
    String productMinTot();
    @DefaultMessage("Min Total")
    String productMinTotal();
    @DefaultMessage("Displays only if total price is equal/greater than this value")
    String productMinTotalMesssage();
    @DefaultMessage("Min Weight")
    String productMinWeight();
    @DefaultMessage("Displays only if total weight is equal/greater than this value")
    String productMinWeightMessage();
    @DefaultMessage("Min Wt")
    String productMinWt();
    @DefaultMessage("Minimum Item Price")
    String productMinimumItemPrice();
    @DefaultMessage("Minimum order quantity")
    String productMinimumOrderQuantity();
    @DefaultMessage("Minimum Price")
    String productMinimumPrice();
    @DefaultMessage("Minimum Purchase")
    String productMinimumPurchase();
    @DefaultMessage("Minimum Stock")
    String productMinimumStock();
    @DefaultMessage("Minimum Stock &amp; Move Quantity")
    String productMinimumStockAndMoveQuantity();
    @DefaultMessage("Minimum Stock & Reorder Quantity & Days To Ship")
    String productMinimumStockReorderQuantityDaysToShip();
    @DefaultMessage("More options available in drop down.")
    String productMoreOptions();
    @DefaultMessage("More than one package found for this shipment. You must ship this manually")
    String productMorePackageFoundShipment();
    @DefaultMessage("More than one route segment found. You must ship this manually")
    String productMoreRouteSegmentFound();
    @DefaultMessage("Move Quantity")
    String productMoveQuantity();
    @DefaultMessage("Multi Choice")
    String productMultiChoice();
    @DefaultMessage("Multiple order items for this product")
    String productMultipleOrderItemsProduct();
    @DefaultMessage("Name")
    String productName();
    @DefaultMessage("Need stock move")
    String productNeedStockMove();
    @DefaultMessage("New Article")
    String productNewArticle();
    @DefaultMessage("New Category")
    String productNewCategory();
    @DefaultMessage("New Contact Mech")
    String productNewContactMech();
    @DefaultMessage("New Facility")
    String productNewFacility();
    @DefaultMessage("New Facility Location")
    String productNewFacilityLocation();
    @DefaultMessage("New Feature Type")
    String productNewFeatureType();
    @DefaultMessage("New Group")
    String productNewGroup();
    @DefaultMessage("New Inventory Item")
    String productNewInventoryItem();
    @DefaultMessage("New Item")
    String productNewItem();
    @DefaultMessage("New Package")
    String productNewPackage();
    @DefaultMessage("New Prod Catalog")
    String productNewProdCatalog();
    @DefaultMessage("New Product")
    String productNewProduct();
    @DefaultMessage("New Product Id and Create")
    String productNewProductCreate();
    @DefaultMessage("New Product ID")
    String productNewProductId();
    @DefaultMessage("New ProductPromo")
    String productNewProductPromo();
    @DefaultMessage("New Product Store")
    String productNewProductStore();
    @DefaultMessage("New Promotion Code")
    String productNewPromotionCode();
    @DefaultMessage("New Search")
    String productNewSearch();
    @DefaultMessage("New Segment")
    String productNewSegment();
    @DefaultMessage("New Shipment")
    String productNewShipment();
    @DefaultMessage("New Shipment Estimate")
    String productNewShipmentEstimate();
    @DefaultMessage("New Shipment Method")
    String productNewShipmentMethod();
    @DefaultMessage("New Subscription")
    String productNewSubscription();
    @DefaultMessage("New Subscription Resource")
    String productNewSubscriptionResource();
    @DefaultMessage("New Virtual Product")
    String productNewVirtualProduct();
    @DefaultMessage("Next Shipment")
    String productNextShipment();
    @DefaultMessage("No category specified")
    String productNoCategorySpecified();
    @DefaultMessage("No Child Categories found")
    String productNoChildCategoriesFound();
    @DefaultMessage("NoChild GroupsFound")
    String productNoChildGroupsFound();
    @DefaultMessage("No description")
    String productNoDescription();
    @DefaultMessage("No existing Products found")
    String productNoExistingProductsFound();
    @DefaultMessage("no Facility")
    String productNoFacility();
    @DefaultMessage("No file specified for Upload")
    String productNoFileSpecifiedForUpload();
    @DefaultMessage("No Inventory found to pick")
    String productNoInventoryFoundToPick();
    @DefaultMessage("No Inventory Reservation Information Available")
    String productNoInventoryReservation();
    @DefaultMessage("there should be no items left to issue from this order")
    String productNoItemsLeft();
    @DefaultMessage("No Items in PO")
    String productNoItemsPo();
    @DefaultMessage("There are no items in the PO to receive")
    String productNoItemsPoReceive();
    @DefaultMessage("No Items in Return")
    String productNoItemsReturn();
    @DefaultMessage("There are no items to receive")
    String productNoItemsToReceive();
    @DefaultMessage("No Keywords Found")
    String productNoKeywordsFound();
    @DefaultMessage("No Location")
    String productNoLocation();
    @DefaultMessage("No Longer Available")
    String productNoLongerAvailable();
    @DefaultMessage("No orders found that are ready to pick or that need stock moves")
    String productNoOrdersFoundReadyToPickOrNeedStockMoves();
    @DefaultMessage("No Parent Categories found")
    String productNoParentCategoriesFound();
    @DefaultMessage("No Parent Groups found")
    String productNoParentGroupsFound();
    @DefaultMessage("No picks are started right now")
    String productNoPicksStarted();
    @DefaultMessage("No Price Rules found")
    String productNoPriceRulesFound();
    @DefaultMessage("No products in category")
    String productNoProductsInCategory();
    @DefaultMessage("There are no products in this category")
    String productNoProductsInThisCategory();
    @DefaultMessage("No results found")
    String productNoResultsFound();
    @DefaultMessage("No selectable Features found . Please create some and try again.")
    String productNoSelectableFeaturesFound();
    @DefaultMessage("No shipments found")
    String productNoShipmentsFound();
    @DefaultMessage("No specific shipment (Receive entire PO)")
    String productNoSpecificShipment();
    @DefaultMessage("No Stock moves needed right now")
    String productNoStockMovesNeeded();
    @DefaultMessage("Not Available")
    String productNotAvailable();
    @DefaultMessage("Cannot create location without FacilityId")
    String productNotCreateLocationFacilityId();
    @DefaultMessage("Could not find inventoryItem with ID")
    String productNotFindInventoryItemWithId();
    @DefaultMessage("Could not find product with ID")
    String productNotFindProductId();
    @DefaultMessage("This cannot be changed without re-creating the category")
    String productNotModificationRecrationCategory();
    @DefaultMessage("This cannot be changed without re-creating the facility")
    String productNotModificationRecrationFacility();
    @DefaultMessage("This cannot be changed without re-creating the facility group")
    String productNotModificationRecrationFacilityGroup();
    @DefaultMessage("This cannot be changed without re-creating the inventoryItem")
    String productNotModificationRecrationInventoryItem();
    @DefaultMessage("This cannot be changed without re-creating the product content association.")
    String productNotModificationRecrationProductContentAssociation();
    @DefaultMessage("This cannot be changed without re-creating the product")
    String productNotModificationRecreatingProduct();
    @DefaultMessage("This cannot be changed without re-creating the Product Catalog")
    String productNotModificationRecreatingProductCatalog();
    @DefaultMessage("This cannot be changed without re-creating the Config Item")
    String productNotModificationRecreatingProductConfigItems();
    @DefaultMessage("This cannot be changed without re-creating the Shipment")
    String productNotModificationRecreatingProductShipment();
    @DefaultMessage("This cannot be changed without re-creating the Product Store")
    String productNotModificationRecreatingProductStore();
    @DefaultMessage("Not In Origin Facility")
    String productNotOriginFacility();
    @DefaultMessage("but this is NOT a Purchase Shipment")
    String productNotPurchaseShipment();
    @DefaultMessage("but this is NOT a Sales Shipment")
    String productNotSalesShipment();
    @DefaultMessage("Not Set")
    String productNotSet();
    @DefaultMessage("You have not viewed any products this session")
    String productNotViewedAnyProducts();
    @DefaultMessage("Not Yet Available")
    String productNotYetAvailable();
    @DefaultMessage("NOTE")
    String productNote();
    @DefaultMessage("NOTE: For content options, use the Content tab.")
    String productNoteForContentOptions();
    @DefaultMessage("The check boxes above are used only to add to and remove from the text box below, they will not limit the other actions for the forms below!")
    String productNoteKeywordSearch();
    @DefaultMessage("Keywords are automatically created when product information is changed, but you may manually CREATE or DELETE keywords here as well.")
    String productNoteKeywordsAutomaticallyCreated();
    @DefaultMessage("NOTE on Item ID")
    String productNoteOnItemId();
    @DefaultMessage("NOTE on Party ID")
    String productNoteOnPartyId();
    @DefaultMessage("NOTE: Order Status is")
    String productNoteOrderStatus();
    @DefaultMessage("NOTE: Order Type is")
    String productNoteOrderType();
    @DefaultMessage("NOTE: The Require Email Or Party flag is set to N (No), so any email addresses or parties listed here will be ignored. To require an email address or party from these lists, set the flag to Y (Yes).")
    String productNoteRequireEmailParty();
    @DefaultMessage("NOTE: Only user entered promos included in drop-down")
    String productNoteUserPromotionEntered();
    @DefaultMessage("Sale Price")
    String productNotifySale();
    @DefaultMessage("Nt. Wt.")
    String productNtWt();
    @DefaultMessage("Number / Quantity")
    String productNumberQuantity();
    @DefaultMessage("makes these products obsolete:")
    String productObsolescense();
    @DefaultMessage("is made obsolete by these products:")
    String productObsolete();
    @DefaultMessage("OEM Party ID")
    String productOemPartyId();
    @DefaultMessage("Product OEM Name")
    String productOemPartyName();
    @DefaultMessage("ID at the manufacturer")
    String productOemProductId();
    @DefaultMessage("One Inventory Facility")
    String productOneInventoryFacility();
    @DefaultMessage("only applies if within span")
    String productOnlyAppliesWithinSpan();
    @DefaultMessage("Open")
    String productOpenQuantity();
    @DefaultMessage("Optional")
    String productOptional();
    @DefaultMessage("optional will create new if empty")
    String productOptionalCreateNew();
    @DefaultMessage("Optional Expiration Date")
    String productOptionalExpirationDate();
    @DefaultMessage("Optional Expired Before Date")
    String productOptionalExpiredBeforeDate();
    @DefaultMessage("Optional Filter With Date")
    String productOptionalFilterWithDate();
    @DefaultMessage("OR enter a Container ID")
    String productOrEnterContainerId();
    @DefaultMessage("Order ID")
    String productOrderId();
    @DefaultMessage("Order Item")
    String productOrderItem();
    @DefaultMessage("Order Items")
    String productOrderItems();
    @DefaultMessage("Order Number")
    String productOrderNumber();
    @DefaultMessage("Order qty increments")
    String productOrderQtyIncrements();
    @DefaultMessage("Ship Group ID")
    String productOrderShipGroupId();
    @DefaultMessage("orderTotal")
    String productOrderTotal();
    @DefaultMessage("Ordered Quantity")
    String productOrderedQuantity();
    @DefaultMessage("Organization")
    String productOrganization();
    @DefaultMessage("Origin")
    String productOrigin();
    @DefaultMessage("Origin-Destination Address ID")
    String productOriginDestinationAddressId();
    @DefaultMessage("Origin-Destination Facility")
    String productOriginDestinationFacility();
    @DefaultMessage("Origin-Destination Phone ID")
    String productOriginDestinationPhoneId();
    @DefaultMessage("Origin Facility")
    String productOriginFacility();
    @DefaultMessage("Origin Facility is")
    String productOriginFacilityIs();
    @DefaultMessage("Origin Phone Number Id")
    String productOriginPhoneNumberId();
    @DefaultMessage("Origin Postal Address Id")
    String productOriginPostalAddressId();
    @DefaultMessage("Outgoing Production Runs")
    String productOutgoingProductionRuns();
    @DefaultMessage("Outgoing Shipments")
    String productOutgoingShipments();
    @DefaultMessage("Outstanding Purchase Orders")
    String productOutstandingPurchaseOrders();
    @DefaultMessage("Override")
    String productOverride();
    @DefaultMessage("Override Simple Fields")
    String productOverrideSimpleFields();
    @DefaultMessage("oversize")
    String productOversize();
    @DefaultMessage("Oversize Surcharge")
    String productOversizeSurcharge();
    @DefaultMessage("Oversize Unit")
    String productOversizeUnit();
    @DefaultMessage("Pack Item")
    String productPackItem();
    @DefaultMessage("Pack Order")
    String productPackOrder();
    @DefaultMessage("Qty to Pack")
    String productPackQty();
    @DefaultMessage("Package")
    String productPackage();
    @DefaultMessage("Package Qty")
    String productPackageQty();
    @DefaultMessage("Packages")
    String productPackages();
    @DefaultMessage("Packed Qty")
    String productPackedQty();
    @DefaultMessage("Packed Weight")
    String productPackedWeight();
    @DefaultMessage("Packing")
    String productPacking();
    @DefaultMessage("Packing Slip")
    String productPackingSlip();
    @DefaultMessage("Parent")
    String productParent();
    @DefaultMessage("Parent Category")
    String productParentCategory();
    @DefaultMessage("Parent Category [ID]")
    String productParentCategoryId();
    @DefaultMessage("Parent Group [Id]")
    String productParentGroupId();
    @DefaultMessage("Product Parent Type")
    String productParentType();
    @DefaultMessage("Parties")
    String productParties();
    @DefaultMessage("The Party ID for Free Shipping actions is Carrier Party ID to give free shipping for (if blank any Carrier Parties may receive free shipping).")
    String productPartyFreeShipping();
    @DefaultMessage("Payment Types")
    String productPaymentTypes();
    @DefaultMessage("Per Unit Price")
    String productPerUnitPrice();
    @DefaultMessage("percent")
    String productPercent();
    @DefaultMessage("Security Error: to run {0} you must have the CATALOG_{1} or CATALOG_ADMIN permission")
    String productPermissionError(String resourceDescription, String mainAction);
    @DefaultMessage("persons")
    String productPersons();
    @DefaultMessage("Phone Numbers")
    String productPhoneNumbers();
    @DefaultMessage("Physical Inventory")
    String productPhysicalInventory();
    @DefaultMessage("(This can be changed by doing a physical inventory variance below)")
    String productPhysicalInventoryVariance();
    @DefaultMessage("Physical Inventory Variances")
    String productPhysicalInventoryVariances();
    @DefaultMessage("Pick")
    String productPick();
    @DefaultMessage("Pick first")
    String productPickFirst();
    @DefaultMessage("Picklist")
    String productPickList();
    @DefaultMessage("Pick Pack Warnings")
    String productPickPackWarnings();
    @DefaultMessage("Pick started")
    String productPickStarted();
    @DefaultMessage("Picking")
    String productPicking();
    @DefaultMessage("Open Picklists")
    String productPicklistManage();
    @DefaultMessage("Create Picklists")
    String productPicklistOptions();
    @DefaultMessage("Picks in progress")
    String productPicksInProgress();
    @DefaultMessage("Picks started in progress")
    String productPicksStartedInProgress();
    @DefaultMessage("Pieces Included")
    String productPiecesIncluded();
    @DefaultMessage("Plain Search Parameters")
    String productPlainSearchParameters();
    @DefaultMessage("Planned Quantity")
    String productPlannedQuantity();
    @DefaultMessage("PO")
    String productPo();
    @DefaultMessage("Popularity by Orders")
    String productPopularityByOrders();
    @DefaultMessage("Popularity by Views")
    String productPopularityByViews();
    @DefaultMessage("Populate New Form")
    String productPopulateNewForm();
    @DefaultMessage("Port")
    String productPort();
    @DefaultMessage("Position")
    String productPosition();
    @DefaultMessage("Prepare Create")
    String productPrepareCreate();
    @DefaultMessage("Define the prefix of the content placement file .  Start up by a / and finish without /")
    String productPrependedImageContentPaths();
    @DefaultMessage("Define the skeleton  of the content placement file .  Start up by a / and finish without /")
    String productPrependedTemplatePaths();
    @DefaultMessage("Price")
    String productPrice();
    @DefaultMessage("Flat Amount Override")
    String productPriceActionType_description_PRICE_FLAT();
    @DefaultMessage("Flat Amount Modify")
    String productPriceActionType_description_PRICE_FOL();
    @DefaultMessage("Promo Amount Override")
    String productPriceActionType_description_PRICE_PFLAT();
    @DefaultMessage("Percent Of Average Cost")
    String productPriceActionType_description_PRICE_POAC();
    @DefaultMessage("Percent Of Default Price")
    String productPriceActionType_description_PRICE_POD();
    @DefaultMessage("Percent Of List Price")
    String productPriceActionType_description_PRICE_POL();
    @DefaultMessage("Percent Of Margin")
    String productPriceActionType_description_PRICE_POM();
    @DefaultMessage("Wholesale Amount Override")
    String productPriceActionType_description_PRICE_WFLAT();
    @DefaultMessage("You do not have permission to maintain price information. (\"CATALOG_PRICE_MAINT\" needed)")
    String productPriceMaintPermissionError();
    @DefaultMessage("Component Price")
    String productPricePurpose_description_COMPONENT_PRICE();
    @DefaultMessage("Purchase/Initial")
    String productPricePurpose_description_PURCHASE();
    @DefaultMessage("Recurring Charge")
    String productPricePurpose_description_RECURRING_CHARGE();
    @DefaultMessage("Usage Charge")
    String productPricePurpose_description_USAGE_CHARGE();
    @DefaultMessage("Price Rule Name [ID]")
    String productPriceRuleNameId();
    @DefaultMessage("PriceRules")
    String productPriceRules();
    @DefaultMessage("Price Type")
    String productPriceType();
    @DefaultMessage("Average Cost")
    String productPriceType_description_AVERAGE_COST();
    @DefaultMessage("Competitive Price")
    String productPriceType_description_COMPETITIVE_PRICE();
    @DefaultMessage("Default Price")
    String productPriceType_description_DEFAULT_PRICE();
    @DefaultMessage("List Price")
    String productPriceType_description_LIST_PRICE();
    @DefaultMessage("Maximum Price")
    String productPriceType_description_MAXIMUM_PRICE();
    @DefaultMessage("Minimum Price")
    String productPriceType_description_MINIMUM_PRICE();
    @DefaultMessage("Promotional Price")
    String productPriceType_description_PROMO_PRICE();
    @DefaultMessage("Special Promo Price")
    String productPriceType_description_SPECIAL_PROMO_PRICE();
    @DefaultMessage("Wholesale Price")
    String productPriceType_description_WHOLESALE_PRICE();
    @DefaultMessage("Prices")
    String productPrices();
    @DefaultMessage("Primary  Category")
    String productPrimaryCategory();
    @DefaultMessage("Primary Order ID")
    String productPrimaryOrderId();
    @DefaultMessage("Primary Parent Category")
    String productPrimaryParentCategory();
    @DefaultMessage("Primary Parent Group")
    String productPrimaryParentGroup();
    @DefaultMessage("Primary Ship Group Seq Id")
    String productPrimaryShipGroupSeqId();
    @DefaultMessage("Prioritize Products in Category")
    String productPrioritizeProductsinCategory();
    @DefaultMessage("Prod Cat Content Type Id")
    String productProdCatContentTypeId();
    @DefaultMessage("Product")
    String productProduct();
    @DefaultMessage("Product ATP")
    String productProductATP();
    @DefaultMessage("ATP Var")
    String productProductATPVar();
    @DefaultMessage("Draw no")
    String productProductBrandName();
    @DefaultMessage("Product Catalogs List")
    String productProductCatalogsList();
    @DefaultMessage("Product Category")
    String productProductCategory();
    @DefaultMessage("Product Category ID")
    String productProductCategoryId();
    @DefaultMessage("Product Category Member Maintenance")
    String productProductCategoryMemberMaintenance();
    @DefaultMessage("Product Category Type")
    String productProductCategoryType();
    @DefaultMessage("Product Config Item Content Type Id")
    String productProductConfigItemContentTypeId();
    @DefaultMessage("Product Content Type Id")
    String productProductContentTypeId();
    @DefaultMessage("Product Depth")
    String productProductDepth();
    @DefaultMessage("Product Description")
    String productProductDescription();
    @DefaultMessage("Product Feature Categories")
    String productProductFeatureCategories();
    @DefaultMessage("Product Feature Maintenance")
    String productProductFeatureMaintenance();
    @DefaultMessage("Product Height")
    String productProductHeight();
    @DefaultMessage("Product ID")
    String productProductId();
    @DefaultMessage("ProductIdFor")
    String productProductIdFor();
    @DefaultMessage("ProductIdI")
    String productProductIdIn();
    @DefaultMessage("ProductIdInSubst")
    String productProductIdInSubst();
    @DefaultMessage("Product ID Missing")
    String productProductIdMissing();
    @DefaultMessage("Product ID To")
    String productProductIdTo();
    @DefaultMessage("Internal Name")
    String productProductInternalName();
    @DefaultMessage("Product Jump")
    String productProductJump();
    @DefaultMessage("Product Name")
    String productProductName();
    @DefaultMessage("Product Name Id")
    String productProductNameId();
    @DefaultMessage("This product is no longer available for sale")
    String productProductNoLongerAvailable();
    @DefaultMessage("Product not found for Product ID")
    String productProductNotFound();
    @DefaultMessage("Product not found with Product ID")
    String productProductNotFoundWithProduct();
    @DefaultMessage("This product hasn''t been reviewed yet")
    String productProductNotReviewedYet();
    @DefaultMessage("This product has not yet been made available for sale")
    String productProductNotYetMadeAvailable();
    @DefaultMessage("Product Page")
    String productProductPage();
    @DefaultMessage("Product Promotions List")
    String productProductPromotionsList();
    @DefaultMessage("Product QOH")
    String productProductQOH();
    @DefaultMessage("QOH Var")
    String productProductQOHVar();
    @DefaultMessage("Product Search")
    String productProductSearch();
    @DefaultMessage("Product Store")
    String productProductStore();
    @DefaultMessage("Product Store Email Settings")
    String productProductStoreEmailSettings();
    @DefaultMessage("Product Store Group")
    String productProductStoreGroup();
    @DefaultMessage("Product Store Group Id")
    String productProductStoreGroupId();
    @DefaultMessage("Product Store Keyword Override Settings")
    String productProductStoreKeywordOverrideSettings();
    @DefaultMessage("Product Store List")
    String productProductStoreList();
    @DefaultMessage("Product Store Payment Settings")
    String productProductStorePaymentSettings();
    @DefaultMessage("Product Store Roles")
    String productProductStoreRoles();
    @DefaultMessage("Product Store Shipment Settings")
    String productProductStoreShipmentSettings();
    @DefaultMessage("Product Store Tax Settings")
    String productProductStoreTaxSettings();
    @DefaultMessage("Product Store WebSites")
    String productProductStoreWebSites();
    @DefaultMessage("Product Type")
    String productProductType();
    @DefaultMessage("Product Width")
    String productProductWidth();
    @DefaultMessage("Products")
    String productProducts();
    @DefaultMessage("Products Last Viewed")
    String productProductsLastViewed();
    @DefaultMessage("Promo Code Emails")
    String productPromoCodeEmails();
    @DefaultMessage("Promo Code Parties")
    String productPromoCodeParties();
    @DefaultMessage("Promotion/Coupon Codes")
    String productPromoCodes();
    @DefaultMessage("Entered Codes:")
    String productPromoCodesEntered();
    @DefaultMessage("Promo Name [ID]")
    String productPromoNameId();
    @DefaultMessage("Promo Show To Customer")
    String productPromoShowToCustomer();
    @DefaultMessage("Promo Text")
    String productPromoText();
    @DefaultMessage("User Entered")
    String productPromoUserEntered();
    @DefaultMessage("Promos")
    String productPromos();
    @DefaultMessage("Promotion")
    String productPromotion();
    @DefaultMessage("Add Set of Promotion Codes")
    String productPromotionAddSetOfPromotionCodes();
    @DefaultMessage("Promotion Code")
    String productPromotionCode();
    @DefaultMessage("View Manual Only")
    String productPromotionManual();
    @DefaultMessage("View Manual and Imported")
    String productPromotionManualImported();
    @DefaultMessage("Per Code")
    String productPromotionPerCode();
    @DefaultMessage("Per Customer")
    String productPromotionPerCustomer();
    @DefaultMessage("Promotion Products")
    String productPromotionProducts();
    @DefaultMessage("Req. Code")
    String productPromotionReqCode();
    @DefaultMessage("Req. Email or Party")
    String productPromotionReqEmailOrParty();
    @DefaultMessage("Use Limits")
    String productPromotionUseLimits();
    @DefaultMessage("Promotions")
    String productPromotions();
    @DefaultMessage("Purchase From Date")
    String productPurchaseFromDate();
    @DefaultMessage("Purchase Order")
    String productPurchaseOrder();
    @DefaultMessage("Purchase Order Number")
    String productPurchaseOrderNumber();
    @DefaultMessage("Purchase Shipment Status")
    String productPurchaseShipmentStatus();
    @DefaultMessage("Purchase Thru")
    String productPurchaseThru();
    @DefaultMessage("Purchase Thru Date")
    String productPurchaseThruDate();
    @DefaultMessage("Purchases")
    String productPurchases();
    @DefaultMessage("Purpose Type not found with ID")
    String productPurposeTypeNotFoundWithId();
    @DefaultMessage("QOH")
    String productQoh();
    @DefaultMessage("ATP minus Min Stock")
    String productQtyOffsetATP();
    @DefaultMessage("ATP minus Min Stock &lt;=")
    String productQtyOffsetATPBelow();
    @DefaultMessage("QOH minus Min Stock")
    String productQtyOffsetQOH();
    @DefaultMessage("QOH minus Min Stock &lt;=")
    String productQtyOffsetQOHBelow();
    @DefaultMessage("Qty Received")
    String productQtyReceived();
    @DefaultMessage("Qty Rejected")
    String productQtyRejected();
    @DefaultMessage("Quantity")
    String productQuantity();
    @DefaultMessage("Quantity Accepted")
    String productQuantityAccepted();
    @DefaultMessage("Quantity Breaks")
    String productQuantityBreaks();
    @DefaultMessage("Quantity Included")
    String productQuantityIncluded();
    @DefaultMessage("Quantity Not Set")
    String productQuantityNotSet();
    @DefaultMessage("Quantity Rejected")
    String productQuantityRejected();
    @DefaultMessage("Quantity Requested")
    String productQuantityRequested();
    @DefaultMessage("Quantity Shipped")
    String productQuantityShipped();
    @DefaultMessage("Quantity To Bin")
    String productQuantityToBin();
    @DefaultMessage("Quantity To Transfer")
    String productQuantityToTransfer();
    @DefaultMessage("Quantity UomId")
    String productQuantityUomId();
    @DefaultMessage("Question")
    String productQuestion();
    @DefaultMessage("Quick Add Variants")
    String productQuickAddVariants();
    @DefaultMessage("Quick Admin")
    String productQuickAdmin();
    @DefaultMessage("Quick Apply Product Feature")
    String productQuickApplyFeature();
    @DefaultMessage("Quick Create Virtual from Variants")
    String productQuickCreateVirtualFromVariants();
    @DefaultMessage("Quick&nbsp;Reorder")
    String productQuickReorder();
    @DefaultMessage("Quick Ship Order:")
    String productQuickShipOrder();
    @DefaultMessage("Quick Ship Order From")
    String productQuickShipOrderFrom();
    @DefaultMessage("Rating")
    String productRating();
    @DefaultMessage("Rating Type Enum")
    String productRatingTypeEnum();
    @DefaultMessage("Re-induce Keywords")
    String productReInduceKeywords();
    @DefaultMessage("Re-Weigh Package")
    String productReWeighPackage();
    @DefaultMessage("Ready to pick")
    String productReadyToPick();
    @DefaultMessage("Reason")
    String productReason();
    @DefaultMessage("Receipt")
    String productReceipt();
    @DefaultMessage("Receipt(s) For Return")
    String productReceiptForReturn();
    @DefaultMessage("Receipt(s) For Purchase Order")
    String productReceiptPurchaseOrder();
    @DefaultMessage("Receive Inventory")
    String productReceiveInventory();
    @DefaultMessage("Add Product to Receive")
    String productReceiveInventoryAddProductToReceive();
    @DefaultMessage("Receive Against PO")
    String productReceiveInventoryAgainstPO();
    @DefaultMessage("Receive Inventory Against Purchase Order")
    String productReceiveInventoryAgainstPurchaseOrder();
    @DefaultMessage("Product {0} not found in order {1}")
    String productReceiveInventoryAgainstPurchaseOrderProductNotFound(String productId, String orderId);
    @DefaultMessage("Quantity {0} for product {1} exceeds quantity available to receive")
    String productReceiveInventoryAgainstPurchaseOrderQuantityExceedsAvailableToReceive(String newQuantity, String productId);
    @DefaultMessage("Quantity {0} of {1} for product {2} will go to a back order")
    String productReceiveInventoryAgainstPurchaseOrderQuantityGoesToBackOrder(String quantityToBackOrder, String quantityToReceive, String productId);
    @DefaultMessage("Receive Item(s)")
    String productReceiveItem();
    @DefaultMessage("Receive Product(s)")
    String productReceiveProduct();
    @DefaultMessage("Receive Purchase Order")
    String productReceivePurchaseOrder();
    @DefaultMessage("Receive Return")
    String productReceiveReturn();
    @DefaultMessage("Receive Selected Product(s)")
    String productReceiveSelectedProduct();
    @DefaultMessage("Receive Selected Shipment")
    String productReceiveSelectedShipment();
    @DefaultMessage("Received")
    String productReceived();
    @DefaultMessage("(You must re-create the association to change this.)")
    String productRecreateAssociation();
    @DefaultMessage("<b style=\"color: red;\">Red</b> date/time entries denote that the current time is before the From Date or after the Thru Date. If the From Date is <b style=\"color: red;\">red</b>, association has not started yet; if Thru Date is <b style=\"color: red;\">red</b>, association has expired (<u>and should probably be deleted</u>).")
    String productRedExplanation();
    @DefaultMessage("Refine Search")
    String productRefineSearch();
    @DefaultMessage("Regular Price")
    String productRegularPrice();
    @DefaultMessage("Rejected Reason")
    String productRejectedReason();
    @DefaultMessage("Rejection Reason")
    String productRejectionReason();
    @DefaultMessage("Relationship")
    String productRelationship();
    @DefaultMessage("Product Remove Before")
    String productRemoveBefore();
    @DefaultMessage("Remove Expired Product Members")
    String productRemoveExpiredProductMembers();
    @DefaultMessage("Remove Feature")
    String productRemoveFeature();
    @DefaultMessage("Remove Feature from Results")
    String productRemoveFeatureFromResults();
    @DefaultMessage("Remove Results From")
    String productRemoveResultsFrom();
    @DefaultMessage("Reorder Quantity")
    String productReorderQuantity();
    @DefaultMessage("Replace Original")
    String productReplaceOriginal();
    @DefaultMessage("Require Amount")
    String productRequireAmount();
    @DefaultMessage("Require Co")
    String productRequireCo();
    @DefaultMessage("Require Company Addr")
    String productRequireCoAddr();
    @DefaultMessage("Require the customer to enter an amount.")
    String productRequireCustomerAmount();
    @DefaultMessage("Require Inventory")
    String productRequireInventory();
    @DefaultMessage("Require Inventory For Purchase")
    String productRequireInventoryForPurchase();
    @DefaultMessage("Setting ignored if Allow is ''N''")
    String productRequireMessage();
    @DefaultMessage("Require USPS")
    String productRequireUSPS();
    @DefaultMessage("Require USPS Addr (PO Box, RR, etc)")
    String productRequireUSPSAddr();
    @DefaultMessage("Requirement Method Enum Id")
    String productRequirementMethodEnumId();
    @DefaultMessage("Second person add.price percentage")
    String productReserv2ndPPPerc();
    @DefaultMessage("Max.Nbr. of Persons for rental")
    String productReservMaxPersons();
    @DefaultMessage("Nth person add.price percentage")
    String productReservNthPPPerc();
    @DefaultMessage("Second")
    String productReservSecond();
    @DefaultMessage("3rd")
    String productReservThird();
    @DefaultMessage("Reservation Order")
    String productReservationOrder();
    @DefaultMessage("Reservenventory")
    String productReserveInventory();
    @DefaultMessage("Reserved")
    String productReserved();
    @DefaultMessage("Reset Date")
    String productResetDate();
    @DefaultMessage("Result of image Upload")
    String productResultOfImageUpload();
    @DefaultMessage("Return Number")
    String productReturnNumber();
    @DefaultMessage("Return to Edit Product")
    String productReturnToEditProduct();
    @DefaultMessage("Return to Edit Product Features")
    String productReturnToEditProductFeatures();
    @DefaultMessage("Return to Receiving")
    String productReturnToReceiving();
    @DefaultMessage("Returnable")
    String productReturnable();
    @DefaultMessage("Returned")
    String productReturned();
    @DefaultMessage("Review This Product!")
    String productReviewThisProduct();
    @DefaultMessage("Reviews")
    String productReviews();
    @DefaultMessage("Reviews Pending Approval")
    String productReviewsPendingApproval();
    @DefaultMessage("Rollup")
    String productRollup();
    @DefaultMessage("Rollup")
    String productRollupShort();
    @DefaultMessage("Rollups")
    String productRollups();
    @DefaultMessage("Route Segment")
    String productRouteSegment();
    @DefaultMessage("Route Segments")
    String productRouteSegments();
    @DefaultMessage("Routings")
    String productRoutings();
    @DefaultMessage("Rule ID")
    String productRuleId();
    @DefaultMessage("Rule Name")
    String productRuleName();
    @DefaultMessage("Rule Name, Description, From Date, Thru Date")
    String productRuleNameFromDateThruDate();
    @DefaultMessage("Rules")
    String productRules();
    @DefaultMessage("SRCH")
    String productSRCH();
    @DefaultMessage("ST")
    String productST();
    @DefaultMessage("Sale Rule")
    String productSaleRule();
    @DefaultMessage("Sales")
    String productSales();
    @DefaultMessage("Disc. When Inv. Not Avail?")
    String productSalesDiscontinuationNotAvailable();
    @DefaultMessage("Sales Shipment Status")
    String productSalesShipmentStatus();
    @DefaultMessage("Sales Tax")
    String productSalesTax();
    @DefaultMessage("Sales  discontinuation Thru Date")
    String productSalesThruDate();
    @DefaultMessage("Schedule")
    String productSchedule();
    @DefaultMessage("Schedule These Route Segments")
    String productScheduleTheseRouteSegments();
    @DefaultMessage("Scheduling")
    String productScheduling();
    @DefaultMessage("Search Catalog")
    String productSearchCatalog();
    @DefaultMessage("Added {0} features with ID {1}")
    String productSearchEvents_added_param_features(String numAdded, String productFeatureId);
    @DefaultMessage("Error casting data types")
    String productSearchEvents_error_casting_types();
    @DefaultMessage("Error getting search results")
    String productSearchEvents_error_getting_results();
    @DefaultMessage("Removed {0} features with ID {1}")
    String productSearchEvents_removed_param_features(String numRemoved, String productFeatureId);
    @DefaultMessage("Export")
    String productSearchExport();
    @DefaultMessage("Export Product List to Screen")
    String productSearchExportProductList();
    @DefaultMessage("you searched for")
    String productSearchFor();
    @DefaultMessage("Search Products")
    String productSearchProducts();
    @DefaultMessage("ID Value was the actual productId of this product.")
    String productSearchResultsFound();
    @DefaultMessage("Search Results for Product with ID Value")
    String productSearchResultsWithIdValue();
    @DefaultMessage("Search in Category")
    String productSearchinCategory();
    @DefaultMessage("Section")
    String productSection();
    @DefaultMessage("Segment")
    String productSegment();
    @DefaultMessage("Segment Id")
    String productSegmentGroupId();
    @DefaultMessage("Type Id")
    String productSegmentGroupTypeId();
    @DefaultMessage("Segments")
    String productSegments();
    @DefaultMessage("Select all")
    String productSelectAll();
    @DefaultMessage("Select Category")
    String productSelectCategory();
    @DefaultMessage("Select a Facility")
    String productSelectFacility();
    @DefaultMessage("Select One")
    String productSelectOne();
    @DefaultMessage("Select Shipment to Receive")
    String productSelectShipmentReceive();
    @DefaultMessage("Select To Edit")
    String productSelectToEdit();
    @DefaultMessage("Selectable")
    String productSelectable();
    @DefaultMessage("Selected")
    String productSelected();
    @DefaultMessage("Seq Id")
    String productSeqId();
    @DefaultMessage("Seq Num")
    String productSeqNum();
    @DefaultMessage("Sequence")
    String productSequence();
    @DefaultMessage("Sequence Num")
    String productSequenceNum();
    @DefaultMessage("Serial# or ATP/QOH")
    String productSerialAtpQoh();
    @DefaultMessage("Serial Number")
    String productSerialNumber();
    @DefaultMessage("Serialized Inventory Found")
    String productSerializedInventoryFound();
    @DefaultMessage("ServerDirectory")
    String productServerDirectory();
    @DefaultMessage("Server file name")
    String productServerFileName();
    @DefaultMessage("Service Config")
    String productServiceConfig();
    @DefaultMessage("Service Name")
    String productServiceName();
    @DefaultMessage("Service Type")
    String productServiceType();
    @DefaultMessage("Set Item")
    String productSetItem();
    @DefaultMessage("Set store on WebSite")
    String productSetStoreOnWebSite();
    @DefaultMessage("Set Weight")
    String productSetWeight();
    @DefaultMessage("Get Settings From Primary Order")
    String productSettingsFromPrimaryOrder();
    @DefaultMessage("Ship Date")
    String productShipDate();
    @DefaultMessage("Ship Method")
    String productShipMethod();
    @DefaultMessage("Ship Order")
    String productShipOrder();
    @DefaultMessage("Ship-To Address")
    String productShipToAddress();
    @DefaultMessage("shipamount")
    String productShipamount();
    @DefaultMessage("shipamount=shipamount + (orderTotal * percent)")
    String productShipamountOrderTotalPercent();
    @DefaultMessage("shipamount=shipamount + price")
    String productShipamountPrice();
    @DefaultMessage("shipamount=shipamount + (shipamount * percent)")
    String productShipamountShippingTotalPercent();
    @DefaultMessage("shipamount=shipamount + (totalQuantity * price)")
    String productShipamountTotalQuantityPrice();
    @DefaultMessage("Box Type")
    String productShipmentBoxType();
    @DefaultMessage("Appointment")
    String productShipmentFedexHomeAppointment();
    @DefaultMessage("Date Certain")
    String productShipmentFedexHomeDateCertain();
    @DefaultMessage("Home Delivery Type/Date (FedEx only)")
    String productShipmentFedexHomeDeliveryTypeDate();
    @DefaultMessage("Evening")
    String productShipmentFedexHomeEvening();
    @DefaultMessage("Shipment Id")
    String productShipmentId();
    @DefaultMessage("Insured Value")
    String productShipmentInsuredValuePackage();
    @DefaultMessage("Shipment Item Seq Id")
    String productShipmentItemSeqId();
    @DefaultMessage("Manifest for Shipment")
    String productShipmentManifest();
    @DefaultMessage("Shipment Method")
    String productShipmentMethod();
    @DefaultMessage("Shipment Method Type")
    String productShipmentMethodType();
    @DefaultMessage("Shipment Method Types")
    String productShipmentMethodTypes();
    @DefaultMessage("None")
    String productShipmentNone();
    @DefaultMessage("The Shipment was not found with ID")
    String productShipmentNotFoundId();
    @DefaultMessage("shipmentPackageSeqId [{0}] was not found in shipment with ID [{1}]")
    String productShipmentPackageNotFound(String shipmentPackageSeqId, String shipmentId);
    @DefaultMessage("Shipment Plan")
    String productShipmentPlan();
    @DefaultMessage("Shipment Plan --> Order Items")
    String productShipmentPlanToOrderItems();
    @DefaultMessage("Quick Complete Drop Shipment")
    String productShipmentQuickComplete();
    @DefaultMessage("Third Party Account Number")
    String productShipmentThirdPartyAccountNumber();
    @DefaultMessage("Third Party Country Code")
    String productShipmentThirdPartyCountryCode();
    @DefaultMessage("Third Party Postal Code")
    String productShipmentThirdPartyPostalCode();
    @DefaultMessage("Total Volume")
    String productShipmentTotalVolume();
    @DefaultMessage("Total Weight")
    String productShipmentTotalWeight();
    @DefaultMessage("Shipment Type")
    String productShipmentType();
    @DefaultMessage("Shipment type Id")
    String productShipmentTypeId();
    @DefaultMessage("kg")
    String productShipmentUomAbbreviation_WT_kg();
    @DefaultMessage("lbs")
    String productShipmentUomAbbreviation_WT_lb();
    @DefaultMessage("Residential Delivery")
    String productShipmentUpsResidential();
    @DefaultMessage("Shipments")
    String productShipments();
    @DefaultMessage("Shipments Found")
    String productShipmentsFound();
    @DefaultMessage("Shipping")
    String productShipping();
    @DefaultMessage("Shipping Address")
    String productShippingAddress();
    @DefaultMessage("In Shipping Box ?")
    String productShippingBox();
    @DefaultMessage("Shipping Depth")
    String productShippingDepth();
    @DefaultMessage("Shipping Height")
    String productShippingHeight();
    @DefaultMessage("Shipping Label")
    String productShippingLabel();
    @DefaultMessage("Shipping Weight")
    String productShippingWeight();
    @DefaultMessage("Short Description")
    String productShortDescription();
    @DefaultMessage("Show Active")
    String productShowActive();
    @DefaultMessage("Show All")
    String productShowAll();
    @DefaultMessage("showAllFacilities")
    String productShowAllFacilities();
    @DefaultMessage("Show Empty Items")
    String productShowEmptyItems();
    @DefaultMessage("showProductFacilities")
    String productShowProductFacilities();
    @DefaultMessage("Show Products Per Page")
    String productShowProductsPerPage();
    @DefaultMessage("Show Products Sold Thru")
    String productShowProductsSoldThruTimestamp();
    @DefaultMessage("Similar Products That Might Interest You...")
    String productSimilarProducts();
    @DefaultMessage("Single Choice")
    String productSingleChoice();
    @DefaultMessage("Single order item for this product")
    String productSingleOrderItemProduct();
    @DefaultMessage("Single Use")
    String productSingleUse();
    @DefaultMessage("Small Image")
    String productSmallImage();
    @DefaultMessage("Soft Identifier")
    String productSoftIdentifier();
    @DefaultMessage("Sort Order")
    String productSortOrder();
    @DefaultMessage("Sorted by")
    String productSortedBy();
    @DefaultMessage("Special Promo Price")
    String productSpecialPromoPrice();
    @DefaultMessage("SqFt")
    String productSqFt();
    @DefaultMessage("Square Footage")
    String productSquareFootage();
    @DefaultMessage("Standard")
    String productStandard();
    @DefaultMessage("Standard lead time days")
    String productStandardLeadTimeDays();
    @DefaultMessage("State")
    String productState();
    @DefaultMessage("Status")
    String productStatus();
    @DefaultMessage("Status Id")
    String productStatusId();
    @DefaultMessage("Stock Moves")
    String productStockMoves();
    @DefaultMessage("Stock Moves Needed")
    String productStockMovesNeeded();
    @DefaultMessage("Store")
    String productStore();
    @DefaultMessage("Not Applicable")
    String productStoreGroup_description__NA_();
    @DefaultMessage("Not Applicable")
    String productStoreGroup_productStoreGroupName__NA_();
    @DefaultMessage("Store ID")
    String productStoreId();
    @DefaultMessage("Store Keyword Overrides")
    String productStoreKeywordOverrides();
    @DefaultMessage("Store Name")
    String productStoreName();
    @DefaultMessage("Store Name [ID]")
    String productStoreNameId();
    @DefaultMessage("Store Shipment Method Associations")
    String productStoreShipmentMethodAssociations();
    @DefaultMessage("Result Template Path")
    String productStoreSurveyResultTemplatePath();
    @DefaultMessage("Store Survey Settings")
    String productStoreSurveySettings();
    @DefaultMessage("Survey Template Path")
    String productStoreSurveyTemplatePath();
    @DefaultMessage("Stores")
    String productStores();
    @DefaultMessage("Stores For")
    String productStoresFor();
    @DefaultMessage("Style Sheet")
    String productStyleSheet();
    @DefaultMessage("SubCats")
    String productSubCats();
    @DefaultMessage("SubProduct")
    String productSubProduct();
    @DefaultMessage("Sub-Title")
    String productSubTitle();
    @DefaultMessage("Subject")
    String productSubject();
    @DefaultMessage("Submit")
    String productSubmit();
    @DefaultMessage("Subscription")
    String productSubscription();
    @DefaultMessage("Subscription Attributes")
    String productSubscriptionAttributes();
    @DefaultMessage("Subscription Communication Event")
    String productSubscriptionCommEvent();
    @DefaultMessage("Subscription Resources")
    String productSubscriptionResource();
    @DefaultMessage("Subscription Resources")
    String productSubscriptionResources();
    @DefaultMessage("Subscriptions")
    String productSubscriptions();
    @DefaultMessage("Supplier")
    String productSupplier();
    @DefaultMessage("Supplier can drop ship?")
    String productSupplierCanDropShip();
    @DefaultMessage("Supplier pref order Id")
    String productSupplierPrefOrderId();
    @DefaultMessage("Supplier product Id")
    String productSupplierProductId();
    @DefaultMessage("Supplier product name")
    String productSupplierProductName();
    @DefaultMessage("Product supplier rating type Id")
    String productSupplierRatingTypeId();
    @DefaultMessage("Supplier Specific Feature Information")
    String productSupplierSpecificFeatureInformation();
    @DefaultMessage("Suppliers")
    String productSuppliers();
    @DefaultMessage("Suppliers Id")
    String productSuppliersId();
    @DefaultMessage("Support Thru Date")
    String productSupportThruDate();
    @DefaultMessage("surcharge")
    String productSurcharge();
    @DefaultMessage("TD")
    String productTD();
    @DefaultMessage("Target Product Category")
    String productTargetProductCategory();
    @DefaultMessage("Target Type")
    String productTargetType();
    @DefaultMessage("Target Type Enum [Id]")
    String productTargetTypeEnumId();
    @DefaultMessage("Tax Category")
    String productTaxCategory();
    @DefaultMessage("Tax Duty Code")
    String productTaxDutyCode();
    @DefaultMessage("Tax Rate")
    String productTaxRate();
    @DefaultMessage("Tax Shipping")
    String productTaxShipping();
    @DefaultMessage("Tax Vat Code")
    String productTaxVatCode();
    @DefaultMessage("Taxable")
    String productTaxable();
    @DefaultMessage("Template Path")
    String productTemplatePath();
    @DefaultMessage("Template Path Prefix")
    String productTemplatePathPrefix();
    @DefaultMessage("Text")
    String productText();
    @DefaultMessage("Text Data Resource Id")
    String productTextDataResourceId();
    @DefaultMessage("The file on your computer")
    String productTheFileOnYourComputer();
    @DefaultMessage("The URL of  your Uploaded File")
    String productTheUrlOfYourUploadedFile();
    @DefaultMessage("Thesaurus")
    String productThesaurus();
    @DefaultMessage("This is it")
    String productThisIsIt();
    @DefaultMessage("Thru Date, Amount, Sequence, Application Type")
    String productThruDateAmountSequenceApplicationType();
    @DefaultMessage("Thru Date/Time, Price")
    String productThruDateTimePrice();
    @DefaultMessage("Thru Date/Time & Sequence")
    String productThruDateTimeSequence();
    @DefaultMessage("Thru Date/Time, Sequence & Quantity")
    String productThruDateTimeSequenceQuantity();
    @DefaultMessage("Thru Date/Time, Sequence & Type")
    String productThruDateTimeSequenceType();
    @DefaultMessage("Title")
    String productTitle();
    @DefaultMessage("To Facility / Container")
    String productToFacilityContainer();
    @DefaultMessage("To Geo")
    String productToGeo();
    @DefaultMessage("To Location")
    String productToLocation();
    @DefaultMessage("To Pack")
    String productToPack();
    @DefaultMessage("To Party")
    String productToParty();
    @DefaultMessage("To Pick")
    String productToPick();
    @DefaultMessage("To Receive")
    String productToReceive();
    @DefaultMessage("Tot Issued Quantity")
    String productTotIssuedQuantity();
    @DefaultMessage("Tot Ordered Quantity")
    String productTotOrderedQuantity();
    @DefaultMessage("Tot Planned Quantity")
    String productTotPlannedQuantity();
    @DefaultMessage("total feature(s) applied")
    String productTotalFeaturesApplied();
    @DefaultMessage("Track")
    String productTrack();
    @DefaultMessage("Track UPS Shipment")
    String productTrackUpsShipment();
    @DefaultMessage("Tracking")
    String productTracking();
    @DefaultMessage("Tracking Number")
    String productTrackingNumber();
    @DefaultMessage("Transfer")
    String productTransfer();
    @DefaultMessage("Transfer ID")
    String productTransferId();
    @DefaultMessage("Transfer Item")
    String productTransferItem();
    @DefaultMessage("Transfer Receive Date")
    String productTransferReceiveDate();
    @DefaultMessage("Transfer Send Date")
    String productTransferSendDate();
    @DefaultMessage("Transfer Status")
    String productTransferStatus();
    @DefaultMessage("Type")
    String productType();
    @DefaultMessage("Configurable Good")
    String productType_description_AGGREGATED();
    @DefaultMessage("Fixed Asset Usage")
    String productType_description_ASSET_USAGE();
    @DefaultMessage("Digital Good")
    String productType_description_DIGITAL_GOOD();
    @DefaultMessage("Finished/Digital Good")
    String productType_description_FINDIG_GOOD();
    @DefaultMessage("Finished Good")
    String productType_description_FINISHED_GOOD();
    @DefaultMessage("Good")
    String productType_description_GOOD();
    @DefaultMessage("Raw Material")
    String productType_description_RAW_MATERIAL();
    @DefaultMessage("Service")
    String productType_description_SERVICE();
    @DefaultMessage("Subassembly")
    String productType_description_SUBASSEMBLY();
    @DefaultMessage("Work In Process")
    String productType_description_WIP();
    @DefaultMessage("Unit Of Measure")
    String productUnitOfMeasure();
    @DefaultMessage("Unit of Measure ID")
    String productUnitOfMeasureId();
    @DefaultMessage("Units Included")
    String productUnitsIncluded();
    @DefaultMessage("unknown, serialNumber")
    String productUnknownSerialNumber();
    @DefaultMessage("Unknown; specify a type")
    String productUnknownSpecifyType();
    @DefaultMessage("Uom Id")
    String productUomId();
    @DefaultMessage("Try these instead of")
    String productUpSell();
    @DefaultMessage("Update Download Content for Product")
    String productUpdateDownloadContentProduct();
    @DefaultMessage("Update Email Content for Product")
    String productUpdateEmailContentProduct();
    @DefaultMessage("Update External Content for Product")
    String productUpdateExternalContentProduct();
    @DefaultMessage("Update Product")
    String productUpdateProduct();
    @DefaultMessage("Update Product Variants")
    String productUpdateProductVariants();
    @DefaultMessage("Update Simple Text Content for Category")
    String productUpdateSimpleTextContentCategory();
    @DefaultMessage("Update Simple Text Content for Product")
    String productUpdateSimpleTextContentProduct();
    @DefaultMessage("Upload Category Image")
    String productUploadCategoryImage();
    @DefaultMessage("Upload Image")
    String productUploadImage();
    @DefaultMessage("Upload Link One Image")
    String productUploadLinkOneImage();
    @DefaultMessage("Upload Link Two Image")
    String productUploadLinkTwoImage();
    @DefaultMessage("Usage")
    String productUsage();
    @DefaultMessage("Use Count")
    String productUseCount();
    @DefaultMessage("Use Count Limit")
    String productUseCountLimit();
    @DefaultMessage("Use Days")
    String productUseDays();
    @DefaultMessage("Use Days Limit")
    String productUseDaysLimit();
    @DefaultMessage("Use Quick Add")
    String productUseQuickAdd();
    @DefaultMessage("Use Role")
    String productUseRole();
    @DefaultMessage("Use Time")
    String productUseTime();
    @DefaultMessage("Use Time Uom")
    String productUseTimeUom();
    @DefaultMessage("Used For Display Ordering")
    String productUsedForDisplayOrdering();
    @DefaultMessage("Usually ships in")
    String productUsuallyShipsIn();
    @DefaultMessage("Value, Type")
    String productValueType();
    @DefaultMessage("Add Variant Products")
    String productVariantAdd();
    @DefaultMessage("Is VARIANT Product ?")
    String productVariantProduct();
    @DefaultMessage("Variant Product IDs")
    String productVariantProductIds();
    @DefaultMessage("Variant Product Inventory Summary")
    String productVariantProductInventorySummary();
    @DefaultMessage("Variants")
    String productVariants();
    @DefaultMessage("Shipping Estimates")
    String productViewEstimates();
    @DefaultMessage("View Label Image")
    String productViewLabelImage();
    @DefaultMessage("You do not have permission to view this page. (\"CATALOG_VIEW\" or \"CATALOG_ADMIN\" needed)")
    String productViewPermissionError();
    @DefaultMessage("Is VIRTUAL Product ?")
    String productVirtualProduct();
    @DefaultMessage("Void UPS Shipment")
    String productVoidUpsShipment();
    @DefaultMessage("Void UPS Shipment Confirmation")
    String productVoidUpsShipmentConfirmation();
    @DefaultMessage("WARNING: Order Status is")
    String productWarningOrderStatus();
    @DefaultMessage("WARNING: Order Type is")
    String productWarningOrderType();
    @DefaultMessage("This product is not a virtual product, variants will not generally be used.")
    String productWarningProductNotVirtual();
    @DefaultMessage("This is a virtual product and generally should not have inventory items associated with it")
    String productWarningVirtualProduct();
    @DefaultMessage("Web Site")
    String productWebSite();
    @DefaultMessage("WebSite [ID]")
    String productWebSiteId();
    @DefaultMessage("Web Sites")
    String productWebSites();
    @DefaultMessage("Weight")
    String productWeight();
    @DefaultMessage("Weight Unit")
    String productWeightUnit();
    @DefaultMessage("Weight Uom Id")
    String productWeightUomId();
    @DefaultMessage("Width")
    String productWidth();
    @DefaultMessage("Width Uom Id")
    String productWidthUomId();
    @DefaultMessage("Work Effort Name")
    String productWorkEffortName();
    @DefaultMessage("Work Item")
    String productWorkItem();
    @DefaultMessage("you searched for")
    String productYouSearchedFor();
    @DefaultMessage("Tried to order the Product {0} (productId: {1}). This product is no longer available for sale. Please remove from your order.")
    String product_no_longer_for_sale(String param_0, String param_1);
    @DefaultMessage("Could not find the product with ID [{0}], cannot be purchased.")
    String product_not_found(String param_0);
    @DefaultMessage("Tried to order the Product {0} (productId: {1}). This product has not yet been made available for sale. Please remove from your order.")
    String product_not_yet_for_sale(String param_0, String param_1);
    @DefaultMessage("The product {0} with ID {1} is no longer in stock. Please try reducing the quantity or removing the product from this order.")
    String product_out_of_stock(String param_0, String param_1);
    @DefaultMessage("Association Type ID is missing.")
    String productevents_association_type_ID_missing();
    @DefaultMessage("Attribute name is missing.")
    String productevents_attribute_name_missing();
    @DefaultMessage("Could not create attribute (write error).")
    String productevents_could_not_create_attribute_write();
    @DefaultMessage("Could not create keywords (write error).")
    String productevents_could_not_create_keywords_write();
    @DefaultMessage("Could not create product association (already exists).")
    String productevents_could_not_create_product_association_exists();
    @DefaultMessage("Could not create product association (write error).")
    String productevents_could_not_create_product_association_write();
    @DefaultMessage("Could not create product-keyword entry (already exists).")
    String productevents_could_not_create_productkeyword_entry_exists();
    @DefaultMessage("Could not create product-keyword entry (write error).")
    String productevents_could_not_create_productkeyword_entry_write();
    @DefaultMessage("Could not delete attribute (write error).")
    String productevents_could_not_delete_attribute_write();
    @DefaultMessage("Could not remove product-keywords (write error).")
    String productevents_could_not_remove_keywords_write();
    @DefaultMessage("Could not remove product association (does not exist).")
    String productevents_could_not_remove_product_association_exist();
    @DefaultMessage("Could not remove product association (write error).")
    String productevents_could_not_remove_product_association_write();
    @DefaultMessage("Could not remove product-keyword (does not exist).")
    String productevents_could_not_remove_productkeyword_entry_notexists();
    @DefaultMessage("Could not remove product-keyword (write error);")
    String productevents_could_not_remove_productkeyword_entry_writeerror();
    @DefaultMessage("Could not update attribute (write error).")
    String productevents_could_not_update_attribute_write();
    @DefaultMessage("Could not update product association (write error).")
    String productevents_could_not_update_product_association_write();
    @DefaultMessage("Error getting the product list to index: {0}.")
    String productevents_error_getting_product_list(String gee);
    @DefaultMessage("The following errors occurred:")
    String productevents_following_errors_occurred();
    @DefaultMessage("From Date is missing.")
    String productevents_from_date_missing();
    @DefaultMessage("Keyword creation complete for {0} products.")
    String productevents_keyword_creation_complete_for_products(String numProds);
    @DefaultMessage("Keyword creation complete for {0} products, with errors in {1} products (see the log for more details).")
    String productevents_keyword_creation_complete_for_products_with_errors(String numProds, String errProds);
    @DefaultMessage("Keyword is missing.")
    String productevents_keyword_missing();
    @DefaultMessage("No Product ID specified, cannot update keywords.")
    String productevents_no_product_ID_specified_keywords();
    @DefaultMessage("You do not have sufficient permissions to {0} CATALOG (CATALOG_{0} or CATALOG_ADMIN needed).")
    String productevents_not_sufficient_permissions(String updateMode);
    @DefaultMessage("Product ID To is missing.")
    String productevents_product_ID_To_missing();
    @DefaultMessage("Product ID is missing.")
    String productevents_product_ID_missing();
    @DefaultMessage("Product To with id {0} not found.")
    String productevents_product_To_with_id_not_found(String productIdTo);
    @DefaultMessage("Product with id {0} not found.")
    String productevents_product_with_id_not_found(String productId);
    @DefaultMessage("Product with ID \"{0}\", not found; cannot update keywords.")
    String productevents_product_with_productId_not_found_keywords(String productId);
    @DefaultMessage("Quantity not formatted correctly.")
    String productevents_quantity_not_formatted_correctly();
    @DefaultMessage("SequenceNum not formatted correctly.")
    String productevents_sequenceNum_not_formatted_correctly();
    @DefaultMessage("Specified update mode: \"{0}\" is not supported.")
    String productevents_specified_update_mode_not_supported(String updateMode);
    @DefaultMessage("Thru Date not formatted correctly.")
    String productevents_thru_date_not_formatted_correctly();
    @DefaultMessage("Update Mode was not specified, but is required.")
    String productevents_updatemode_not_specified();
    @DefaultMessage("Error during authentication to eBay")
    String productsExportToEbay_errorDuringAuthenticationToEbay();
    @DefaultMessage("Exception occurred during building data items to eBay")
    String productsExportToEbay_exceptionDuringBuildingDataItemsToEbay();
    @DefaultMessage("Exception in exportToEbay")
    String productsExportToEbay_exceptionInExportToEbay();
    @DefaultMessage("Product items sent correclty to eBay")
    String productsExportToEbay_productItemsSentCorrecltyToEbay();
    @DefaultMessage("Cannot retrieve User Login")
    String productsExportToGoogle_cannotRetrieveUserLogin();
    @DefaultMessage("Error during authentication to Google Account")
    String productsExportToGoogle_errorDuringAuthenticationToGoogle();
    @DefaultMessage("Error in the response from Google :")
    String productsExportToGoogle_errorInTheResponseFromGoogle();
    @DefaultMessage("Exception occurred during building data items to Google Base")
    String productsExportToGoogle_exceptionDuringBuildingDataItemsToGoogle();
    @DefaultMessage("Exception in exportProductCategoryToGoogle")
    String productsExportToGoogle_exceptionInExportProductCategoryToGoogle();
    @DefaultMessage("Exception in exportToGoogle")
    String productsExportToGoogle_exceptionInExportToGoogle();
    @DefaultMessage("Exception reading response from Google")
    String productsExportToGoogle_exceptionReadingResponseFromGoogle();
    @DefaultMessage("Missing parameter productCategoryId")
    String productsExportToGoogle_missingParameterProductCategoryId();
    @DefaultMessage("No products available in the selected productCategoryId")
    String productsExportToGoogle_noProductsAvailableInProductCategory();
    @DefaultMessage("Product items sent correclty to Google Base")
    String productsExportToGoogle_productItemsSentCorrecltyToGoogle();
    @DefaultMessage("Added {0} product category members.")
    String productsearchevents_added_x_product_category_members(String numAdded);
    @DefaultMessage("Error getting search results: {0}.")
    String productsearchevents_error_getting_search_results(String errSearchResult);
    @DefaultMessage("Exception calling exportToGoogle")
    String productsearchevents_exceptionCallingExportToGoogle();
    @DefaultMessage("Expired {0} items.")
    String productsearchevents_expired_x_items(String numExpired);
    @DefaultMessage("The fromDate was not formatted properly: {0}.")
    String productsearchevents_fromDate_not_formatted_properly(String errDateFormat);
    @DefaultMessage("No results found, probably because there was an error or were no constraints.")
    String productsearchevents_no_results_found_probably_error_constraints();
    @DefaultMessage("removed {0} items.")
    String productsearchevents_removed_x_items(String numRemoved);
    @DefaultMessage("The thruDate is not formatted properly: {0}.")
    String productsearchevents_thruDate_not_formatted_properly(String errDateFormat);
    @DefaultMessage("Both productId and productIdTo cannot be defined.")
    String productservices_both_productId_and_productIdTo_cannot_be_defined();
    @DefaultMessage("Both productId and productIdTo cannot be null.")
    String productservices_both_productId_and_productIdTo_cannot_be_null();
    @DefaultMessage("Cannot build feature tree: featureList is null.")
    String productservices_cannot_build_feature_tree_full();
    @DefaultMessage("Empty list of products returned.")
    String productservices_empty_list_of_products_returned();
    @DefaultMessage("Empty list of selectable features found.")
    String productservices_empty_list_of_selectable_features_found();
    @DefaultMessage("Error finding associated variant with ID {0}, error was: {1}.")
    String productservices_error_finding_associated_variant_with_ID_error(String productIdTo, String errMessage);
    @DefaultMessage("Feature grouping came back empty.")
    String productservices_feature_grouping_came_back_empty();
    @DefaultMessage("Feature sample came back empty.")
    String productservices_feature_sample_came_back_empty();
    @DefaultMessage("Invalid productId passed.")
    String productservices_invalid_productId_passed();
    @DefaultMessage("Problem reading product feature entity: {0}.")
    String productservices_problem_reading_product_feature_entity(String errMessage);
    @DefaultMessage("Problem reading product features.")
    String productservices_problem_reading_product_features();
    @DefaultMessage("Problem reading product features: {0}.")
    String productservices_problem_reading_product_features_errors(String errProductFeatures);
    @DefaultMessage("Problems getting the product entity.")
    String productservices_problems_getting_product_entity();
    @DefaultMessage("Problems product association relation: {0}.")
    String productservices_problems_product_association_relation_error(String errMessage);
    @DefaultMessage("Problems reading product entity: {0}.")
    String productservices_problems_reading_product_entity(String errMessage);
    @DefaultMessage("Did not find any valid variants for virtual ID [{0}], not doing merge...")
    String productutilservices_did_not_find_any_valid_variants_for_virtual_ID(String productId);
    @DefaultMessage("Entity error running clearAllVirtualProductImageNames: {0}.")
    String productutilservices_entity_error_running_clearAllVirtualProductImageNames(String errMessage);
    @DefaultMessage("Entity error running discVirtualsWithDiscVariants: {0}.")
    String productutilservices_entity_error_running_discVirtualsWithDiscVariants(String errMessage);
    @DefaultMessage("Entity error running makeStandAloneFromSingleVariantVirtuals: {0}.")
    String productutilservices_entity_error_running_makeStandAloneFromSingleVariantVirtuals(String errMessage);
    @DefaultMessage("Entity error running removeCategoryMembersOfDiscProducts: {0}.")
    String productutilservices_entity_error_running_removeCategoryMembersOfDiscProducts(String errMessage);
    @DefaultMessage("Entity error running removeDuplicateOpenEndedCategoryMembers: {0}.")
    String productutilservices_entity_error_running_removeDuplicateOpenEndedCategoryMembers(String errMessage);
    @DefaultMessage("Entity error running setAllProductImageNames: {0}.")
    String productutilservices_entity_error_running_setAllProductImageNames(String errMessage);
    @DefaultMessage("Error in attachProductFeaturesToCategory: {0}.")
    String productutilservices_error_in_attachProductFeaturesToCategory(String errMessage);
    @DefaultMessage("Found more than one valid variant for virtual ID [{0}], not doing merge...")
    String productutilservices_found_more_than_one_valid_variant_for_virtual_ID(String productId);
    @DefaultMessage("Portuguese")
    String pt();
    @DefaultMessage("Portuguese Brazil")
    String pt_BR();
    @DefaultMessage("Portuguese Portugal")
    String pt_PT();
    @DefaultMessage("Publish & View")
    String publishAndView();
    @DefaultMessage("Failed to find products for  supplier [{0}]")
    String puchBshError_CannotFindProductsForSupplier(String supplierPartyId);
    @DefaultMessage("Add Existing Backup Warehouse")
    String purchAddExistingBackupWarehouse();
    @DefaultMessage("Add New Backup Warehouse")
    String purchAddNewBackupWarehouse();
    @DefaultMessage("Approved Internal Requirements")
    String purchApprovedInternalRequirements();
    @DefaultMessage("Approved Orders")
    String purchApprovedOrders();
    @DefaultMessage("Approved Requirements")
    String purchApprovedRequirements();
    @DefaultMessage("Backorder Date")
    String purchBackOrdersReportBackorderDate();
    @DefaultMessage("Main Supplier")
    String purchBackOrdersReportMainSupplier();
    @DefaultMessage("Min Stock")
    String purchBackOrdersReportMinStock();
    @DefaultMessage("Order Date")
    String purchBackOrdersReportOrderDate();
    @DefaultMessage("Sales")
    String purchBackOrdersReportProductSales();
    @DefaultMessage("Disc?")
    String purchBackOrdersReportProductSalesDiscontinued();
    @DefaultMessage("Reorder Qty")
    String purchBackOrdersReportReorderQty();
    @DefaultMessage("Open Sales Order Items Report")
    String purchBackOrdersReportTitle();
    @DefaultMessage("Backorders")
    String purchBackorders();
    @DefaultMessage("Backup Warehouse")
    String purchBackupWarehouse();
    @DefaultMessage("Backup Warehouses")
    String purchBackupWarehouses();
    @DefaultMessage("BOM")
    String purchBom();
    @DefaultMessage("Only for Routing")
    String purchBomComponentOnlyForRouting();
    @DefaultMessage("Configure Warehouses")
    String purchConfigureWarehouses();
    @DefaultMessage("Create Purchase Agreement")
    String purchCreateAgreement();
    @DefaultMessage("Create Agreement Term")
    String purchCreateAgreementTerm();
    @DefaultMessage("Create Supplier")
    String purchCreateSupplier();
    @DefaultMessage("Created Orders")
    String purchCreatedOrders();
    @DefaultMessage("Delivery Schedule")
    String purchDeliverySchedule();
    @DefaultMessage("Edit Agreement")
    String purchEditAgreement();
    @DefaultMessage("Edit Estimated Delivery Date")
    String purchEditEstDeliveryDate();
    @DefaultMessage("Edit Order Items Estimated Delivery Date")
    String purchEditOrderItemsEstDeliveryDate();
    @DefaultMessage("Edit Product Estimated Delivery Date")
    String purchEditProductEstDeliveryDate();
    @DefaultMessage("Failed to find ProductFacility data for this MrpInventoryEvent [{0}]. This event will not be processed by the MRP algorithm.")
    String purchError_CannotFindProductFacilityForMrpInventoryEvent(String inventoryEventPlanTypeId);
    @DefaultMessage("Failed to create production runs from the pending internal requirements.")
    String purchError_CreateProdRunFromPendingRequirementsFail();
    @DefaultMessage("Failed to create supplier")
    String purchError_CreateSupplierFail();
    @DefaultMessage("Requested order item doesn''t exist in database.")
    String purchError_OrderItemNotExists();
    @DefaultMessage("Failed to retrieve list of requirements for supplier")
    String purchError_RequirementFailToListBySupplier();
    @DefaultMessage("Failed to retrieve requested requirement")
    String purchError_RequirementFailToRetrieve();
    @DefaultMessage("Requested requirement doesn''t exist in database.")
    String purchError_RequirementNotExists();
    @DefaultMessage("Requested requirement [{0}] is not of the expected type {1}.")
    String purchError_RequirementNotExpectedType(String requirementId, String requirementTypeId);
    @DefaultMessage("Failed to transfer inventory from the requirement.")
    String purchError_RequirementNotTransferred();
    @DefaultMessage("Failed to update requirement status.")
    String purchError_RequirementNotUpdated();
    @DefaultMessage("Failed to update the estimated delivery date")
    String purchError_UpdateOrderItemEstimatedDeliveryDateFail();
    @DefaultMessage("Failed to update supplier:")
    String purchError_UpdateSupplierFail();
    @DefaultMessage("Est. Delivery Date")
    String purchEstDeliveryDate();
    @DefaultMessage("Estimated Delivery Dates Report")
    String purchEstDeliveryDateReportTitle();
    @DefaultMessage("Estimated Delivery Date")
    String purchEstimatedDeliveryDate();
    @DefaultMessage("Find Suppliers")
    String purchFindSuppliers();
    @DefaultMessage("Held Orders")
    String purchHeldOrders();
    @DefaultMessage("Requirements")
    String purchHomeRequirements();
    @DefaultMessage("Initial Manager")
    String purchInitialManager();
    @DefaultMessage("Invoice Supplies")
    String purchInvoiceSupplies();
    @DefaultMessage("Create Pending Internal Requirements?")
    String purchMrpCreatePendingManufacturingRequirements();
    @DefaultMessage("Create Transfer Requirements?")
    String purchMrpCreateTransferRequirements();
    @DefaultMessage("Inventory transfers {0} from {1} to {2} at {3}")
    String purchMrpInventoryTransferFromToAt(String inventoryTransferIds, String fromFacilityName, String toFacilityName, String transferTime);
    @DefaultMessage("Percentage of Sales Forecast to Use")
    String purchMrpPercentageOfSalesForecast();
    @DefaultMessage("Inventory Receipt Time Buffer")
    String purchMrpReceiptEventBuffer();
    @DefaultMessage("Default Years in Future for Sales Orders")
    String purchMrpSalesOrderDefaultYearsInFuture();
    @DefaultMessage("MRP Store Group")
    String purchMrpStoreGroup();
    @DefaultMessage("Inventory transfer requirement {0} from {1} to {2} at {3}")
    String purchMrpTransferRequirementFromToAt(String requirementId, String fromFacilityName, String toFacilityName, String transferTime);
    @DefaultMessage("PO {0} {1}")
    String purchNavHistoryOrder(String orderId, String orderName);
    @DefaultMessage("Net Quantity")
    String purchNetQuantity();
    @DefaultMessage("No open purchase orders found.")
    String purchNoOrdersFound();
    @DefaultMessage("Number of Approved Orders")
    String purchNumOrdersApproved();
    @DefaultMessage("Number of New Orders")
    String purchNumOrdersCreated();
    @DefaultMessage("Number of Orders on Hold")
    String purchNumOrdersHeld();
    @DefaultMessage("Number of New Production Requirements")
    String purchNumProductionRequirementsCreated();
    @DefaultMessage("Number of New Purchasing Requirements")
    String purchNumPurchasingRequirementsCreated();
    @DefaultMessage("Number of Approved Requirements")
    String purchNumRequirementsApproved();
    @DefaultMessage("# Products")
    String purchNumberProducts();
    @DefaultMessage("Open Orders")
    String purchOpenOrders();
    @DefaultMessage("Open Requirements")
    String purchOpenRequirements();
    @DefaultMessage("Allocated Orders")
    String purchOpenRequirementsAllocatedOrders();
    @DefaultMessage("Order All")
    String purchOrderAll();
    @DefaultMessage("Order Item Description")
    String purchOrderItemDescription();
    @DefaultMessage("Outsource a Task")
    String purchOutsourceRoutingTask();
    @DefaultMessage("Planning")
    String purchPlanning();
    @DefaultMessage("Primary Warehouse")
    String purchPrimaryWarehouse();
    @DefaultMessage("Purchases by Product")
    String purchPurchasesByProductReport();
    @DefaultMessage("Purchases by Supplier")
    String purchPurchasesBySupplierReport();
    @DefaultMessage("Only taking into account products where the Id matches")
    String purchReportFilteredByProductId();
    @DefaultMessage("Only showing products where the Supplier Id matches")
    String purchReportFilteredBySupplierId();
    @DefaultMessage("Req #{0} for {1}")
    String purchRequirementInHistory(String requirementId, String productId);
    @DefaultMessage("Run MRP")
    String purchRunMRP();
    @DefaultMessage("See All Delivery Dates")
    String purchSeeAllDeliveryDates();
    @DefaultMessage("Select Warehouse")
    String purchSelectWarehouse();
    @DefaultMessage("Set all to")
    String purchSetAllRowsToThisDate();
    @DefaultMessage("Supplier \"{0}\": {1} requirements have been canceled successfully.")
    String purchSuccess_CreatedProductionRunsFromPendingRequirementsSuccess(String supplierName, String numberOfRequirements);
    @DefaultMessage("Supplier \"{0}\": {1} requirements have been canceled successfully.")
    String purchSuccess_RequirementsBatchCancelSuccess(String supplierName, String numberOfRequirements);
    @DefaultMessage("Supplier Details")
    String purchSupplierDetails();
    @DefaultMessage("Supplier Name")
    String purchSupplierName();
    @DefaultMessage("Suppliers")
    String purchSuppliers();
    @DefaultMessage("Task")
    String purchTask();
    @DefaultMessage("Edit Supplier")
    String purchUpdateSupplier();
    @DefaultMessage("Agreement Details")
    String purchViewAgreement();
    @DefaultMessage("View MRP")
    String purchViewMRP();
    @DefaultMessage("Warehouses with Backups")
    String purchWarehousesWithBackups();
    @DefaultMessage("Opentaps Purchasing Login")
    String purchasingLoginGreeting();
    @DefaultMessage("Quote History")
    String quoteHistory();
    @DefaultMessage("Refresh")
    String refresh();
    @DefaultMessage("Damaged")
    String rejectionReason_description_SRJ_DAMAGED();
    @DefaultMessage("Not Ordered")
    String rejectionReason_description_SRJ_NOT_ORDERED();
    @DefaultMessage("Over Shipped")
    String rejectionReason_description_SRJ_OVER_SHIPPED();
    @DefaultMessage("Remove From Site")
    String removeFromSite();
    @DefaultMessage("Request History")
    String requestHistory();
    @DefaultMessage("Selectable Features")
    String selectableFeatures();
    @DefaultMessage("The server return Unknown request while accessing the {0}")
    String serverEmptyResponseError(String resource);
    @DefaultMessage("The server returned error {0} while accessing the {1}")
    String serverHttpError(String code, String resource);
    @DefaultMessage("Shark")
    String shark();
    @DefaultMessage("Shipment Items")
    String shipmentItems();
    @DefaultMessage("Drop Shipment")
    String shipmentType_description_DROP_SHIPMENT();
    @DefaultMessage("Incoming")
    String shipmentType_description_INCOMING_SHIPMENT();
    @DefaultMessage("Outgoing")
    String shipmentType_description_OUTGOING_SHIPMENT();
    @DefaultMessage("Purchase Return")
    String shipmentType_description_PURCHASE_RETURN();
    @DefaultMessage("Purchase Shipment")
    String shipmentType_description_PURCHASE_SHIPMENT();
    @DefaultMessage("Sales Return")
    String shipmentType_description_SALES_RETURN();
    @DefaultMessage("Sales Shipment")
    String shipmentType_description_SALES_SHIPMENT();
    @DefaultMessage("Transfer")
    String shipmentType_description_TRANSFER();
    @DefaultMessage("Shipping Dimensions and Weights:")
    String shippingDimensionsAndWeights();
    @DefaultMessage("Added product {0} to cart.")
    String shoppinglistevents_added_product_to_cart(String productId);
    @DefaultMessage("Cannot create new shopping list.")
    String shoppinglistevents_cannot_create_new_shopping_list();
    @DefaultMessage("Please choose a shopping list.")
    String shoppinglistevents_choose_shopping_list();
    @DefaultMessage("Error adding item to shopping list.")
    String shoppinglistevents_error_adding_item_to_shopping_list();
    @DefaultMessage("Error getting shopping list and items.")
    String shoppinglistevents_error_getting_shopping_list_and_items();
    @DefaultMessage("No items were added.")
    String shoppinglistevents_no_items_added();
    @DefaultMessage("Could NOT add product {0} to cart.")
    String shoppinglistevents_problem_adding_product_to_cart(String productId);
    @DefaultMessage("Please select item(s) to add to the shopping list.")
    String shoppinglistevents_select_items_to_add_to_list();
    @DefaultMessage("shoppingListId is a required parameter.")
    String shoppinglistevents_shoppingListId_is_required_parameter();
    @DefaultMessage("Standard Features")
    String standardFeatures();
    @DefaultMessage("State")
    String stateOrProvince();
    @DefaultMessage("Newsgroup")
    String subscriptionType_description_NEWSGROUP_SUBSCR();
    @DefaultMessage("Other")
    String subscriptionType_description_OTHER_SUBSCR();
    @DefaultMessage("Product Info")
    String subscriptionType_description_PRODUCT_INFO_SUBSCR();
    @DefaultMessage("Type text")
    String suggestEmpty();
    @DefaultMessage("Searching...")
    String suggestSearching();
    @DefaultMessage("Supplier Id")
    String supplierId();
    @DefaultMessage("Supplier List")
    String supplierList();
    @DefaultMessage("Supplier Name")
    String supplierName();
    @DefaultMessage("Agreement Termination")
    String termType_AGREEMENT_TERMINATIO();
    @DefaultMessage("Incoterm Cost and Freight")
    String termType_CFR();
    @DefaultMessage("Incoterm Cost, Insurance and Freight")
    String termType_CIF();
    @DefaultMessage("Incoterm Carriage and Insurance Paid to")
    String termType_CIP();
    @DefaultMessage("Clause For Renewal")
    String termType_CLAUSE_FOR_RENEWAL();
    @DefaultMessage("Commission")
    String termType_COMMISSION_TERM();
    @DefaultMessage("Incoterm Carriage Paid To")
    String termType_CPT();
    @DefaultMessage("Incoterm Delivered At Frontier")
    String termType_DAF();
    @DefaultMessage("Incoterm Delivered Duty Paid")
    String termType_DDP();
    @DefaultMessage("Incoterm Delivered Duty Unpaid")
    String termType_DDU();
    @DefaultMessage("Incoterm Delivered Ex Quay")
    String termType_DEQ();
    @DefaultMessage("Incoterm Delivered Ex Ship")
    String termType_DES();
    @DefaultMessage("Exclusive Relationship")
    String termType_EXCLUSIVE_RELATIONSH();
    @DefaultMessage("Incoterm Ex Works")
    String termType_EXW();
    @DefaultMessage("Incoterm Free Alongside Ship")
    String termType_FAS();
    @DefaultMessage("Incoterm Free Carrier")
    String termType_FCA();
    @DefaultMessage("Financial")
    String termType_FINANCIAL_TERM();
    @DefaultMessage("{0} Collection Penalty")
    String termType_FIN_COLLECT_TERM(String termValue);
    @DefaultMessage("Commission Term Fixed Per Unit")
    String termType_FIN_COMM_FIXED();
    @DefaultMessage("Commission Term Maximum Per Unit")
    String termType_FIN_COMM_MAX();
    @DefaultMessage("Commission Term Minimum Per Unit")
    String termType_FIN_COMM_MIN();
    @DefaultMessage("Commission Term Variable")
    String termType_FIN_COMM_VARIABLE();
    @DefaultMessage("{0}% Late Fee")
    String termType_FIN_LATE_FEE_TERM(String termValue);
    @DefaultMessage("Non-Returnable")
    String termType_FIN_NORTN_ITEM_TERM();
    @DefaultMessage("{0}% Discount if Paid in {1} Days")
    String termType_FIN_PAYMENT_DISC(String termValue, String termDays);
    @DefaultMessage("Net on Day {0} after Day {1}")
    String termType_FIN_PAYMENT_FIXDAY(String termValue, String minQuantity);
    @DefaultMessage("Net {0}")
    String termType_FIN_PAYMENT_TERM(String termDays);
    @DefaultMessage("Incoterm Free On Board")
    String termType_FOB();
    @DefaultMessage("Incentive")
    String termType_INCENTIVE();
    @DefaultMessage("Incoterm")
    String termType_INCO_TERM();
    @DefaultMessage("Indemnification")
    String termType_INDEMNIFICATION();
    @DefaultMessage("Legal")
    String termType_LEGAL_TERM();
    @DefaultMessage("Non-Compete")
    String termType_NON_COMPETE();
    @DefaultMessage("Other")
    String termType_OTHER_TERM();
    @DefaultMessage("Purchasing")
    String termType_PURCHASING();
    @DefaultMessage("Ship Via {0}")
    String termType_PURCH_FREIGHT(String textValue);
    @DefaultMessage("Customer ID {0}")
    String termType_PURCH_VENDOR_ID(String textValue);
    @DefaultMessage("Threshold")
    String termType_THRESHOLD();
    @DefaultMessage("Earn Commission Term")
    String termType_description_COMM_TIMING_AT();
    @DefaultMessage("Thru Time Period")
    String thruTimePeriod();
    @DefaultMessage("Time Period")
    String timePeriod();
    @DefaultMessage("There are currently no closed time periods.")
    String timePeriodMessage1();
    @DefaultMessage("The following time periods have been closed")
    String timePeriodMessage2();
    @DefaultMessage("Timesheet")
    String timesheet();
    @DefaultMessage("Create Timesheet")
    String timesheetCreate();
    @DefaultMessage("Hours")
    String timesheetHours();
    @DefaultMessage("My Time")
    String timesheetMyTime();
    @DefaultMessage("Quick Time Entry")
    String timesheetQuickTimeEntry();
    @DefaultMessage("Rate Type")
    String timesheetRateType();
    @DefaultMessage("Rates")
    String timesheetRates();
    @DefaultMessage("Time Entries")
    String timesheetTimeEntries();
    @DefaultMessage("Time Entry")
    String timesheetTimeEntry();
    @DefaultMessage("Timesheet ID")
    String timesheetTimesheetId();
    @DefaultMessage("To Name")
    String toName();
    @DefaultMessage("Transaction error creating quick add variant data: {0}.")
    String transaction_error_quick_add_variant_data(String errMessage);
    @DefaultMessage("Update Categories")
    String updateCategories();
    @DefaultMessage("Update Name")
    String updateName();
    @DefaultMessage("Update Shipping")
    String updateShipping();
    @DefaultMessage("Damaged")
    String varianceReason_description_VAR_DAMAGED();
    @DefaultMessage("Found")
    String varianceReason_description_VAR_FOUND();
    @DefaultMessage("Integration")
    String varianceReason_description_VAR_INTEGR();
    @DefaultMessage("Lost")
    String varianceReason_description_VAR_LOST();
    @DefaultMessage("Sample (Giveaway)")
    String varianceReason_description_VAR_SAMPLE();
    @DefaultMessage("Stolen")
    String varianceReason_description_VAR_STOLEN();
    @DefaultMessage("Entity error quick add variant data: {0}.")
    String variantevents_entity_error_quick_add_variant_data(String errMessage);
    @DefaultMessage("featureTypeSize is not a number: {0}.")
    String variantevents_featureTypeSize_not_number(String featureTypeSizeStr);
    @DefaultMessage("The productFeatureId for feature type number {0} was not found.")
    String variantevents_productFeatureId_for_feature_type_number_not_found(String i);
    @DefaultMessage("productId is required but missing.")
    String variantevents_productId_required_but_missing();
    @DefaultMessage("Product not found with ID: {0}.")
    String variantevents_product_not_found_with_ID(String productId);
    @DefaultMessage("Successfully created variant product with id: {0} (includes association, and standard features for the variant).")
    String variantevents_successfully_created_variant_product_with_id(String variantProductId);
    @DefaultMessage("variantProductId is required but missing, please enter an id for the new variant product.")
    String variantevents_variantProductId_required_but_missing_enter_an_id();
    @DefaultMessage("Vat Tax Authority Geo not set.")
    String vatTaxAuthGeoNotSet();
    @DefaultMessage("Vat Tax Auth Party not set.")
    String vatTaxAuthPartyNotSet();
    @DefaultMessage("Address Not Known Yet")
    String warehouseAddressUnknown();
    @DefaultMessage("Allocated To Orders")
    String warehouseAllocatedToOrders();
    @DefaultMessage("Apply Variance")
    String warehouseApplyVariance();
    @DefaultMessage("Assembly")
    String warehouseAssembly();
    @DefaultMessage("Open Back Orders")
    String warehouseBackOrderedItems();
    @DefaultMessage("Number of Back Orders")
    String warehouseBackOrderedOrderCount();
    @DefaultMessage("Number of Products Back Ordered")
    String warehouseBackOrderedProductCount();
    @DefaultMessage("This product is currently back ordered")
    String warehouseBackOrderedProductIsBackOrdered();
    @DefaultMessage("Back-Orders")
    String warehouseBackOrders();
    @DefaultMessage("Bar Code")
    String warehouseBarCode();
    @DefaultMessage("Bin")
    String warehouseBin();
    @DefaultMessage("Carrier/Shipment Method")
    String warehouseCarrierAndShipmentMethod();
    @DefaultMessage("Choose a Warehouse")
    String warehouseChooseWarehouse();
    @DefaultMessage("Clear Packed Items")
    String warehouseClearPackedItems();
    @DefaultMessage("Close")
    String warehouseClosePicklists();
    @DefaultMessage("Close")
    String warehouseCloseProductionRun();
    @DefaultMessage("Confirm Shipment and Print Labels")
    String warehouseConfirmShipmentAndPrintLabels();
    @DefaultMessage("Crating")
    String warehouseCrating();
    @DefaultMessage("Create and Print")
    String warehouseCreateAndPrint();
    @DefaultMessage("Create Inventory Transfers for Upcoming Production")
    String warehouseCreateInventoryTransfersForProduction();
    @DefaultMessage("Create New Lot")
    String warehouseCreateNewLot();
    @DefaultMessage("Create a New Warehouse")
    String warehouseCreateNewWarehouse();
    @DefaultMessage("Create Picklist")
    String warehouseCreatePicklist();
    @DefaultMessage("Create Production Run")
    String warehouseCreateProductionRun();
    @DefaultMessage("Production Transfers")
    String warehouseCreateProductionTransfers();
    @DefaultMessage("Create Reverse Assembly")
    String warehouseCreateReverseAssembly();
    @DefaultMessage("Current Back-Ordered Quantity")
    String warehouseCurrentBackOrderedQty();
    @DefaultMessage("Default Days to Ship")
    String warehouseDefaultDaysToShip();
    @DefaultMessage("Disassembly")
    String warehouseDisassembly();
    @DefaultMessage("Documents Available for Shipment")
    String warehouseDocumentsAvailableForShipment();
    @DefaultMessage("Edit Inventory Item")
    String warehouseEditInventoryItem();
    @DefaultMessage("Edit Lot")
    String warehouseEditLot();
    @DefaultMessage("Edit Production Run")
    String warehouseEditProductionRun();
    @DefaultMessage("Enter Task Details")
    String warehouseEnterTaskDetails();
    @DefaultMessage("warehouse.shipping.labels.printing.batchPrintingScreenLocation property is not configured in warehouse.properties")
    String warehouseErrorBatchPrintScreenNotConfigured();
    @DefaultMessage("You are not allowed to close the pick list {0}")
    String warehouseErrorClosePicklistNotAllowed(String picklistId);
    @DefaultMessage("PartyId {0} is not a valid carrier")
    String warehouseErrorInvalidCarrier(String carrierPartyId);
    @DefaultMessage("Picklist ID {0} cannot be closed: the pick list must be picked before it can be closed off.")
    String warehouseErrorInvalidPicklistStatus(String picklistId);
    @DefaultMessage("Inventory Item with ID {0} was not found")
    String warehouseErrorInventoryItemNotFound(String inventoryItemId);
    @DefaultMessage("Warning: This will cause QOH of product {0} to become negative")
    String warehouseErrorInventoryItemProductQOHUnderZero(String productId);
    @DefaultMessage("Quantity on hand for Inventory item with ID {0} would be less than zero")
    String warehouseErrorInventoryItemQOHUnderZero(String inventoryItemId);
    @DefaultMessage("ERROR: Lot with ID {0} not found")
    String warehouseErrorLotIdNotFound(String lotId);
    @DefaultMessage("Not setting currency for shipment {0}: No base currency defined for origin facility owner")
    String warehouseErrorNotSetCurrencyNoCurrency(String shipmentId);
    @DefaultMessage("Not setting currency for shipment {0}: No origin facility")
    String warehouseErrorNotSetCurrencyNoFacility(String shipmentId);
    @DefaultMessage("Not setting package value for shipmentPackageSeqId {0} shipment {1}: Unable to determine package value")
    String warehouseErrorNotSetPackageValueNoValue(String shipmentPackageSeqId, String shipmentId);
    @DefaultMessage("Not setting package value for shipmentPackageSeqId {0} shipment {1}: value is lower than warehouse.shipping.setIfHigherThanOrEqualTo in warehouse.properties")
    String warehouseErrorNotSetPackageValueTooLow(String shipmentPackageSeqId, String shipmentId);
    @DefaultMessage("Not setting package value for shipment {0}: No currency defined for shipment")
    String warehouseErrorNotSetPackageValuesNoCurrency(String shipmentId);
    @DefaultMessage("Not setting package value for shipment {0}: warehouse.shipping.setPackageInsuredValues is not true in warehouse.properties")
    String warehouseErrorNotSetPackageValuesTurnedOff(String shipmentId);
    @DefaultMessage("ERROR: Order with ID [{0}] and shipGroupSeqId [{1}] not found")
    String warehouseErrorOrderIdAndShipGroupSeqIdNotFound(String orderId, String shipGroupSeqId);
    @DefaultMessage("Order {0} is not approved")
    String warehouseErrorOrderNotApproved(String orderId);
    @DefaultMessage("Picklist ID {0} not found")
    String warehouseErrorPicklistNotFound(String picklistId);
    @DefaultMessage("ShipmentId {0} not found")
    String warehouseErrorShipmentNotFound(String shipmentId);
    @DefaultMessage("ShipmentId {0} is not packed")
    String warehouseErrorShipmentNotPacked(String shipmentId);
    @DefaultMessage("shipmentPackageSeqId {0} for shipmentId {1} not found")
    String warehouseErrorShipmentPackageNotFound(String shipmentPackageSeqId, String shipmentId);
    @DefaultMessage("Shipment {0} destination facility is not facility {1}")
    String warehouseErrorShipmentReceivedWrongFacility(String shipmentId, String facilityId);
    @DefaultMessage("ShipmentRouteSegmentId {0} for shipmentId {1} has already been started or voided")
    String warehouseErrorShipmentRouteSegmentAlreadyStarted(String shipmentRouteSegmentId, String shipmentId);
    @DefaultMessage("ShipmentRouteSegmentId {0} for shipmentId {1} not found")
    String warehouseErrorShipmentRouteSegmentNotFound(String shipmentRouteSegmentId, String shipmentId);
    @DefaultMessage("Cannot add routing task:")
    String warehouseError_CannotAddRoutingTask();
    @DefaultMessage("Cannot create production run:")
    String warehouseError_CannotCreateProductionRun();
    @DefaultMessage("Cannot find association type [{0}] between warehouse [{1}] and [{2}].")
    String warehouseError_CannotFindFacilityAssoc(String facilityAssocTypeId, String facilityId, String facilityIdTo);
    @DefaultMessage("Cannot find outsourced task with ID [{0}].")
    String warehouseError_CannotFindOutsourcedTask(String workEffortId);
    @DefaultMessage("Cannot find production run definition for product [{0}].")
    String warehouseError_CannotFindProductionRunTemplate(String productId);
    @DefaultMessage("This task is not running, so materials cannot be issued to this task.")
    String warehouseError_CannotIssueProductionRunTask();
    @DefaultMessage("Cannot outsource [{0}] because it is not a routing task.")
    String warehouseError_CannotOutsourceNonRoutingTask(String workEffortId);
    @DefaultMessage("Cannot outsource task:")
    String warehouseError_CannotOutsourceTask();
    @DefaultMessage("Cannot Revert Production Run [{0}]: there is no Parts.")
    String warehouseError_CannotRevertProductionRunThereIsNoParts(String workEffortId);
    @DefaultMessage("Cannot update production run:")
    String warehouseError_CannotUpdateProductionRun();
    @DefaultMessage("In order to get inventory trace log you have to provide either inventory item id or lot id")
    String warehouseError_MissingAttributesForTrace();
    @DefaultMessage("Please enter a product name or a supplier product name.")
    String warehouseError_MissingProductNameOrSupplierProductName();
    @DefaultMessage("Routing task with ID [{0}] not found.")
    String warehouseError_MissingRoutingTask(String workEffortId);
    @DefaultMessage("Cannot disassemble product [{0}]:  Production run [{1}] has no tasks defined.")
    String warehouseError_MissingRoutingTaskDisassemble(String productId, String productionRunId);
    @DefaultMessage("Order {0} Ship Group {1} does not have a known shipping address and cannot be packed.")
    String warehouseError_OrderHaveUnknownAddress(String orderId, String shipGroupSeqId);
    @DefaultMessage("Order # {0} is not approved for packing. {1}")
    String warehouseError_OrderNotApprovedPacking(String orderId, String orderStatus);
    @DefaultMessage("Its status is {0}.")
    String warehouseError_StatusIs(String status);
    @DefaultMessage("Find Inventory Item")
    String warehouseFindInventoryItem();
    @DefaultMessage("Find Lot")
    String warehouseFindLot();
    @DefaultMessage("Find Production Run")
    String warehouseFindProductionRun();
    @DefaultMessage("Find Shipment")
    String warehouseFindShipment();
    @DefaultMessage("Find Receipts")
    String warehouseFindShipmentReceipts();
    @DefaultMessage("Force Complete")
    String warehouseForceComplete();
    @DefaultMessage("Force Issue Additional Material")
    String warehouseForceIssueAdditionalMaterial();
    @DefaultMessage("From Warehouse")
    String warehouseFromWarehouse();
    @DefaultMessage("Fulfilled Back-Orders")
    String warehouseFulfilledBackOrders();
    @DefaultMessage("Handling")
    String warehouseHandling();
    @DefaultMessage("In orders")
    String warehouseInOrders();
    @DefaultMessage("Incoming Shipments")
    String warehouseIncomingShipments();
    @DefaultMessage("Insurance")
    String warehouseInsurance();
    @DefaultMessage("Inventory")
    String warehouseInventory();
    @DefaultMessage("Adjust Quantities")
    String warehouseInventoryAdjustQuantities();
    @DefaultMessage("Adjust Available/On Hand Quantities")
    String warehouseInventoryAdjustQuantitiesAvailableOnHand();
    @DefaultMessage("Inventory Item Reservations")
    String warehouseInventoryItemReservations();
    @DefaultMessage("Inventory Tracking")
    String warehouseInventoryTracking();
    @DefaultMessage("Transfer Inventory")
    String warehouseInventoryTransfer();
    @DefaultMessage("Issue Additional Material")
    String warehouseIssueAdditionalMaterial();
    @DefaultMessage("Items Already Packed")
    String warehouseItemsAlreadyPacked();
    @DefaultMessage("Items to be Packed")
    String warehouseItemsToBePacked();
    @DefaultMessage("Locations")
    String warehouseLocations();
    @DefaultMessage("Opentaps Warehouse Login")
    String warehouseLoginGreeting();
    @DefaultMessage("Lookup Lot(s)")
    String warehouseLookupLot();
    @DefaultMessage("Lot")
    String warehouseLot();
    @DefaultMessage("Lot Details")
    String warehouseLotDetails();
    @DefaultMessage("Lot/Serial #")
    String warehouseLotOrSerial();
    @DefaultMessage("Lots")
    String warehouseLots();
    @DefaultMessage("Manage Lots")
    String warehouseManageLots();
    @DefaultMessage("Manufacturing")
    String warehouseManufacturing();
    @DefaultMessage("Manufacturing Calendar")
    String warehouseManufacturingCalendar();
    @DefaultMessage("Fixed Assets")
    String warehouseManufacturingFixedAssets();
    @DefaultMessage("Items Manufactured")
    String warehouseManufacturingInventoryItemsManufactured();
    @DefaultMessage("Issue All Components")
    String warehouseManufacturingIssueAllComponents();
    @DefaultMessage("Materials")
    String warehouseManufacturingMaterials();
    @DefaultMessage("Manufacturing Queue")
    String warehouseManufacturingQueue();
    @DefaultMessage("Revert")
    String warehouseManufacturingRevert();
    @DefaultMessage("Tasks")
    String warehouseManufacturingTasks();
    @DefaultMessage("Mark As Shipped")
    String warehouseMarkAsShipped();
    @DefaultMessage("\"{0}\" inventory item")
    String warehouseNavHistoryInventoryItem(String productName);
    @DefaultMessage("Lot {0}")
    String warehouseNavHistoryLot(String lotId);
    @DefaultMessage("Shipment {0} from \"{1}\" to \"{2}\"")
    String warehouseNavHistoryShipment(String shipmentId, String fromParty, String toParty);
    @DefaultMessage("Order Net")
    String warehouseNetOrdered();
    @DefaultMessage("No outsourced tasks found for production run [{0}], not creating outsourced product requirements.")
    String warehouseNoOutsourcedRequirementsForProductionRun(String productionRunId);
    @DefaultMessage("No postal address on file.")
    String warehouseNoPostalAddress();
    @DefaultMessage("No printer configured for printing shipping label.")
    String warehouseNoPrinterForLabel();
    @DefaultMessage("# Orders")
    String warehouseNumberOfOrder();
    @DefaultMessage("Open Picklists")
    String warehouseOpenPicklists();
    @DefaultMessage("Carrier")
    String warehouseOrderCarrier();
    @DefaultMessage("Order Date")
    String warehouseOrderDate();
    @DefaultMessage("Ship By Date")
    String warehouseOrderShipByDate();
    @DefaultMessage("Order/ShipGroup")
    String warehouseOrderShipGroup();
    @DefaultMessage("Ship Group PDF")
    String warehouseOrderShipGroupPDF();
    @DefaultMessage("Shipping Method")
    String warehouseOrderShippingMethod();
    @DefaultMessage("Orders Ready to Pick")
    String warehouseOrdersReadyToPick();
    @DefaultMessage("Orders Ready to Ship")
    String warehouseOrdersReadyToShip();
    @DefaultMessage("Outgoing Shipments")
    String warehouseOutgoingShipments();
    @DefaultMessage("Outsourced product requirement for production run [{0}].")
    String warehouseOutsourcedRequirementDescription(String productionRunId);
    @DefaultMessage("Outsourced Task ID")
    String warehouseOutsourcedTaskId();
    @DefaultMessage("Pack")
    String warehousePack();
    @DefaultMessage("Pack Order")
    String warehousePackOrder();
    @DefaultMessage("Box Type")
    String warehousePackageBoxType();
    @DefaultMessage("Tracking Code")
    String warehousePackageTrackingCode();
    @DefaultMessage("Packages")
    String warehousePackages();
    @DefaultMessage("Packed")
    String warehousePacked();
    @DefaultMessage("Packing List")
    String warehousePackingList();
    @DefaultMessage("Physical Inventory Variances")
    String warehousePhysicalInventoryVariances();
    @DefaultMessage("Picklists to be Shipped")
    String warehousePickedPicklists();
    @DefaultMessage("Pickers")
    String warehousePickers();
    @DefaultMessage("Picklist Details")
    String warehousePicklistDetails();
    @DefaultMessage("The pick list has no items")
    String warehousePicklistEmpty();
    @DefaultMessage("Picklist [{0}]")
    String warehousePicklistHistory(String picklistId);
    @DefaultMessage("The pick list has been closed.")
    String warehousePicklistIsClosed();
    @DefaultMessage("Print Shipping Labels")
    String warehousePrintLabels();
    @DefaultMessage("Printer")
    String warehousePrinter();
    @DefaultMessage("Produced to Lots")
    String warehouseProducedToLot();
    @DefaultMessage("Product ID to disassemble")
    String warehouseProductIDToDisassemble();
    @DefaultMessage("Disc?")
    String warehouseProductSalesDiscontinued();
    @DefaultMessage("Production Facility")
    String warehouseProductionFacility();
    @DefaultMessage("Production Run #{0}")
    String warehouseProductionRunHistory(String productionRunId);
    @DefaultMessage("Production Run Id")
    String warehouseProductionRunId();
    @DefaultMessage("Confirmed Production Runs")
    String warehouseProductionRunsConfirmed();
    @DefaultMessage("New Production Runs")
    String warehouseProductionRunsCreated();
    @DefaultMessage("Active Production Runs")
    String warehouseProductionRunsRunning();
    @DefaultMessage("Scheduled Production Runs")
    String warehouseProductionRunsScheduled();
    @DefaultMessage("ATP/QOH")
    String warehouseQuantityATPQOH();
    @DefaultMessage("QOH")
    String warehouseQuantityQOH();
    @DefaultMessage("Qty Issued")
    String warehouseQuantityQtyIssued();
    @DefaultMessage("Qty Needed")
    String warehouseQuantityQtyNeeded();
    @DefaultMessage("Quantity to Disassemble")
    String warehouseQuantityToDisassemble();
    @DefaultMessage("Ready To Ship")
    String warehouseReadyToShip();
    @DefaultMessage("Receive & Close PO")
    String warehouseReceiveAndClosePO();
    @DefaultMessage("Receive & Keep Open")
    String warehouseReceiveAndKeepOpen();
    @DefaultMessage("Receive an Item")
    String warehouseReceiveInventoryItem();
    @DefaultMessage("Receive Outsourced PO")
    String warehouseReceiveOutsourcedPO();
    @DefaultMessage("Receive PO into Shipment")
    String warehouseReceivePOIntoShipment();
    @DefaultMessage("Receive Purchase Order")
    String warehouseReceivePurchaseOrder();
    @DefaultMessage("Received By")
    String warehouseReceivedByUserLogin();
    @DefaultMessage("Requested Inventory Transfers")
    String warehouseRequestedInventoryTransfers();
    @DefaultMessage("Reverse Assemblies")
    String warehouseReverseAssemblies();
    @DefaultMessage("Reverse Assembly")
    String warehouseReverseAssembly();
    @DefaultMessage("Running")
    String warehouseRunning();
    @DefaultMessage("Schedule a Shipment")
    String warehouseScheduleAShipment();
    @DefaultMessage("Batch Schedule Shipments")
    String warehouseScheduleShipments();
    @DefaultMessage("Schedule Shipment")
    String warehouseScheduleThisShipment();
    @DefaultMessage("Scheduled")
    String warehouseScheduled();
    @DefaultMessage("Serial Numbers")
    String warehouseSerialNumbers();
    @DefaultMessage("Shipment")
    String warehouseShipment();
    @DefaultMessage("Shipping")
    String warehouseShipping();
    @DefaultMessage("Show Allocated Orders Only?")
    String warehouseShowReceiptsWithAllocatedOrdersOnly();
    @DefaultMessage("Stock Moves")
    String warehouseStockMoves();
    @DefaultMessage("Required Stock Moves")
    String warehouseStockMovesRequired();
    @DefaultMessage("Supplier Product")
    String warehouseSupplierProduct();
    @DefaultMessage("Bill to Account #")
    String warehouseThirdPartyShippingAccount();
    @DefaultMessage("to Inventory Item Id")
    String warehouseToInventoryItemId();
    @DefaultMessage("Trace Backward")
    String warehouseTraceBackward();
    @DefaultMessage("Usages of the Inventory")
    String warehouseTraceDerivativeInventoryItems();
    @DefaultMessage("Trace Forward")
    String warehouseTraceForward();
    @DefaultMessage("Trace Inventory")
    String warehouseTraceInventory();
    @DefaultMessage("Level")
    String warehouseTraceLevel();
    @DefaultMessage("Sources of the Inventory")
    String warehouseTraceSourceInventoryItems();
    @DefaultMessage("Usage Type")
    String warehouseTraceUsageType();
    @DefaultMessage("Variance")
    String warehouseVariance();
    @DefaultMessage("Variance Reason")
    String warehouseVarianceReason();
    @DefaultMessage("View All Inventory Items")
    String warehouseViewAllInventoryItems();
    @DefaultMessage("View Shipment")
    String warehouseViewShipment();
    @DefaultMessage("View Warehouse")
    String warehouseViewWarehouse();
    @DefaultMessage("Warehouse Facility")
    String warehouseWarehouseFacility();
    @DefaultMessage("Bank Wire Fee")
    String warehouseWireFee();
    @DefaultMessage("WebTools")
    String webTools();
    @DefaultMessage("WorkEffort")
    String workEffort();
    @DefaultMessage("Accept&nbsp;Assignment")
    String workEffortAcceptAssignment();
    @DefaultMessage("Activity Detail")
    String workEffortActivityDetail();
    @DefaultMessage("Activity Name")
    String workEffortActivityName();
    @DefaultMessage("Activity Status")
    String workEffortActivityStatus();
    @DefaultMessage("Add New WorkEffort Child")
    String workEffortAddChild();
    @DefaultMessage("Add An Existing Task (WorkEffortId)&nbsp;")
    String workEffortAddExistingTask();
    @DefaultMessage("Add Existing WorkEffort Child")
    String workEffortAddExistingWorkEffortChild();
    @DefaultMessage("Add Good Standard")
    String workEffortAddGoodStandard();
    @DefaultMessage("Add Task")
    String workEffortAddTask();
    @DefaultMessage("All Phases")
    String workEffortAllPhases();
    @DefaultMessage("All Tasks")
    String workEffortAllTasks();
    @DefaultMessage("Any Assoc Type")
    String workEffortAnyAssocType();
    @DefaultMessage("This application is meant for those who maintain and use calendar events tasks and workflow activities")
    String workEffortApplicationEventsTasksWorkflowActivities();
    @DefaultMessage("Assigned Tasks")
    String workEffortAssignedTasks();
    @DefaultMessage("WorkEffort Association")
    String workEffortAssoc();
    @DefaultMessage("(associated from parent to child)")
    String workEffortAssociatedFromParentToChild();
    @DefaultMessage("Attender")
    String workEffortAttender();
    @DefaultMessage("Enter existing CommunicationEvent Id below")
    String workEffortBanner3();
    @DefaultMessage("OR add new CommunicationEvent data below to create new entity (leave CommunicationEvent Id empty)")
    String workEffortBanner4();
    @DefaultMessage("Enter existing Requirement Id below")
    String workEffortBanner5();
    @DefaultMessage("OR add new Requirement data below to create new entity (leave Requirement Id empty)")
    String workEffortBanner6();
    @DefaultMessage("Enter an existing workEffortId below,")
    String workEffortBannerAddWorkEffortAndAssoc1();
    @DefaultMessage("OR enter the WorkEffort Details below")
    String workEffortBannerAddWorkEffortAndAssoc2();
    @DefaultMessage("By Facility")
    String workEffortByFacility();
    @DefaultMessage("By Fixed Asset")
    String workEffortByFixedAsset();
    @DefaultMessage("By Party")
    String workEffortByPartyId();
    @DefaultMessage("Calendar")
    String workEffortCalendar();
    @DefaultMessage("Calendar Day View")
    String workEffortCalendarDayView();
    @DefaultMessage("Calendar Entries")
    String workEffortCalendarEntries();
    @DefaultMessage("Calendar Event")
    String workEffortCalendarEvent();
    @DefaultMessage("Calendar Event Contacts")
    String workEffortCalendarEventContacts();
    @DefaultMessage("Calendar Event Details")
    String workEffortCalendarEventDetails();
    @DefaultMessage("Calendar Event Roles")
    String workEffortCalendarEventRoles();
    @DefaultMessage("Calendar Month View")
    String workEffortCalendarMonthView();
    @DefaultMessage("Calendar Up-Coming Events View")
    String workEffortCalendarUpComingEventsView();
    @DefaultMessage("Calendar Week View")
    String workEffortCalendarWeekView();
    @DefaultMessage("Children")
    String workEffortChildren();
    @DefaultMessage("Communications")
    String workEffortCommEvents();
    @DefaultMessage("Comments")
    String workEffortComments();
    @DefaultMessage("OFBiz: WorkEffort Manager")
    String workEffortCompanyName();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String workEffortCompanySubtitle();
    @DefaultMessage("Contact Type")
    String workEffortContactType();
    @DefaultMessage("Create Work Effort")
    String workEffortCreate();
    @DefaultMessage("Security Error: to run this operation you must have the WORKEFFORTMGR_CREATE or WORKEFFORTMGR_ADMIN permission")
    String workEffortCreatePermissionError();
    @DefaultMessage("Created")
    String workEffortCreated();
    @DefaultMessage("Day View")
    String workEffortDayView();
    @DefaultMessage("Security Error: to run this operation you must have the WORKEFFORTMGR_DELETE or WORKEFFORTMGR_ADMIN permission")
    String workEffortDeletePermissionError();
    @DefaultMessage("Duplicate Work Effort")
    String workEffortDuplicateWorkEffort();
    @DefaultMessage("Email Address is missing")
    String workEffortEmailAddressIsMissing();
    @DefaultMessage("Email Address is not formatted correctly, must be like foo@bar.com")
    String workEffortEmailAddressNotFormatted();
    @DefaultMessage("ERROR: Could not find activity with ID")
    String workEffortErrorNotFindActivityId();
    @DefaultMessage("Error: Could not find Event with ID")
    String workEffortErrorNotFindEventId();
    @DefaultMessage("ERROR: Could not find task with ID")
    String workEffortErrorNotFindTaskId();
    @DefaultMessage("ERROR: You do not have permission to view this activity.This activity must belong to you or you must be an administrator")
    String workEffortErrorPermissionViewActivity();
    @DefaultMessage("ERROR: You do not have permission to view this event.This event must be long to you or you must be an administrator")
    String workEffortErrorPermissionViewEvent();
    @DefaultMessage("Est.Budget")
    String workEffortEstBudget();
    @DefaultMessage("Estimated Completion Date")
    String workEffortEstimatedCompletionDate();
    @DefaultMessage("Estimated Start Date")
    String workEffortEstimatedStartDate();
    @DefaultMessage("Estimated Budget")
    String workEffortEstmatedBudget();
    @DefaultMessage("Event")
    String workEffortEvent();
    @DefaultMessage("Event Name")
    String workEffortEventName();
    @DefaultMessage("Event Status")
    String workEffortEventStatus();
    @DefaultMessage("Expectation")
    String workEffortExpectation();
    @DefaultMessage("Failed to get calendar entries")
    String workEffortFailedCalendarEntries();
    @DefaultMessage("For Requirement")
    String workEffortForRequirement();
    @DefaultMessage("From Date is not a valid Date-Time.")
    String workEffortFromDateIsNotValid();
    @DefaultMessage("General")
    String workEffortGeneral();
    @DefaultMessage("Good Standard")
    String workEffortGoodStandard();
    @DefaultMessage("Work Effort ID is missing.")
    String workEffortIdMissing();
    @DefaultMessage("Include all Sub-WorkEfforts")
    String workEffortIncludeAllSubWorkEfforts();
    @DefaultMessage("Information")
    String workEffortInformation();
    @DefaultMessage("For something interesting make sure, you are logged in try : Username;Admin;Password Ofbiz")
    String workEffortInterestingSure();
    @DefaultMessage("Item")
    String workEffortItem();
    @DefaultMessage("Submitted Jobs")
    String workEffortJobList();
    @DefaultMessage("Keyword")
    String workEffortKeyword();
    @DefaultMessage("all words match")
    String workEffortKeywordAllWordsMatch();
    @DefaultMessage("WorkEffort - Keyword already exist")
    String workEffortKeywordAlreadyExist();
    @DefaultMessage("any word matches")
    String workEffortKeywordAnyWordMatches();
    @DefaultMessage("where")
    String workEffortKeywordWhere();
    @DefaultMessage("Keywords")
    String workEffortKeywords();
    @DefaultMessage("Last Modified")
    String workEffortLastModified();
    @DefaultMessage("Location")
    String workEffortLocation();
    @DefaultMessage("Lookup")
    String workEffortLookup();
    @DefaultMessage("Max Amount")
    String workEffortMaxAmount();
    @DefaultMessage("Month View")
    String workEffortMonthView();
    @DefaultMessage("Must RSVP")
    String workEffortMustRsvp();
    @DefaultMessage("My Current TaskList")
    String workEffortMyCurrentTaskList();
    @DefaultMessage("My Current Timesheets")
    String workEffortMyCurrentTimesheets();
    @DefaultMessage("My Rates")
    String workEffortMyRates();
    @DefaultMessage("My Request List")
    String workEffortMyRequestList();
    @DefaultMessage("My Status")
    String workEffortMyStatus();
    @DefaultMessage("My Timesheets")
    String workEffortMyTimesheets();
    @DefaultMessage("Name")
    String workEffortName();
    @DefaultMessage("Work Effort Name is missing.")
    String workEffortNameIsMissing();
    @DefaultMessage("New Event")
    String workEffortNewEvent();
    @DefaultMessage("New Note")
    String workEffortNewNote();
    @DefaultMessage("New Phase")
    String workEffortNewPhase();
    @DefaultMessage("New Project")
    String workEffortNewProject();
    @DefaultMessage("New Requirement")
    String workEffortNewRequirement();
    @DefaultMessage("New Task")
    String workEffortNewTask();
    @DefaultMessage("Next Day")
    String workEffortNextDay();
    @DefaultMessage("Next Month")
    String workEffortNextMonth();
    @DefaultMessage("Next Week")
    String workEffortNextWeek();
    @DefaultMessage("No Contact Information On File")
    String workEffortNoContactInformationOnFile();
    @DefaultMessage("No Events Found")
    String workEffortNoEventsFound();
    @DefaultMessage("No Items Created")
    String workEffortNoItemsCreated();
    @DefaultMessage("No Open Requirements Found")
    String workEffortNoOpenRequirementsFound();
    @DefaultMessage("No Request Found")
    String workEffortNoRequestFound();
    @DefaultMessage("No Requirements Created")
    String workEffortNoRequirementsCreated();
    @DefaultMessage("No Tasks currently associated with this Requirement")
    String workEffortNoTasksAssociatedRequirement();
    @DefaultMessage("Security Error: to run {0} you must be in {1} role with WorkEffort: {2}")
    String workEffortNotInRolePermissionError(String resourceDescription, String roleTypeId, String workEffortId);
    @DefaultMessage("Notes")
    String workEffortNotes();
    @DefaultMessage("WorkEffortOpenApplication")
    String workEffortOpenApplication();
    @DefaultMessage("Open Page In New Window")
    String workEffortOpenPageInNewWindow();
    @DefaultMessage("Orders")
    String workEffortOrderHeaders();
    @DefaultMessage("Organizer")
    String workEffortOrganizer();
    @DefaultMessage("Parties")
    String workEffortParties();
    @DefaultMessage("Party Id")
    String workEffortPartyId();
    @DefaultMessage("Password")
    String workEffortPassword();
    @DefaultMessage("Percent Complete")
    String workEffortPercentComplete();
    @DefaultMessage("Security Error: to run {0} you must have the WORKEFFORTMGR_{1} or WORKEFFORTMGR_ADMIN permission")
    String workEffortPermissionError(String resourceDescription, String mainAction);
    @DefaultMessage("Phase")
    String workEffortPhase();
    @DefaultMessage("Phase Status")
    String workEffortPhaseStatus();
    @DefaultMessage("PhaseTasks")
    String workEffortPhaseTasks();
    @DefaultMessage("Previous Day")
    String workEffortPreviousDay();
    @DefaultMessage("Previous Month")
    String workEffortPreviousMonth();
    @DefaultMessage("Previous Week")
    String workEffortPreviousWeek();
    @DefaultMessage("Priority")
    String workEffortPriority();
    @DefaultMessage("High")
    String workEffortPriorityHigh();
    @DefaultMessage("Low")
    String workEffortPriorityLow();
    @DefaultMessage("Product")
    String workEffortProduct();
    @DefaultMessage("ProductID")
    String workEffortProductId();
    @DefaultMessage("ProductID 1")
    String workEffortProductId1();
    @DefaultMessage("ProductID 2")
    String workEffortProductId2();
    @DefaultMessage("Project")
    String workEffortProject();
    @DefaultMessage("ProjectPhases")
    String workEffortProjectPhases();
    @DefaultMessage("Project Status")
    String workEffortProjectStatus();
    @DefaultMessage("Projects")
    String workEffortProjects();
    @DefaultMessage("Quantity")
    String workEffortQuantity();
    @DefaultMessage("Quote Items")
    String workEffortQuoteItems();
    @DefaultMessage("Quotes")
    String workEffortQuotes();
    @DefaultMessage("Registered User Login")
    String workEffortRegisteredUserLogin();
    @DefaultMessage("Related Summary")
    String workEffortRelatedSummary();
    @DefaultMessage("Request Items")
    String workEffortRequestItems();
    @DefaultMessage("Request List")
    String workEffortRequestList();
    @DefaultMessage("Request Manager")
    String workEffortRequestManager();
    @DefaultMessage("Request Name")
    String workEffortRequestName();
    @DefaultMessage("Request Taker")
    String workEffortRequestTaker();
    @DefaultMessage("Requesting Party")
    String workEffortRequestingParty();
    @DefaultMessage("Requests")
    String workEffortRequests();
    @DefaultMessage("Required By")
    String workEffortRequiredBy();
    @DefaultMessage("Required By Date")
    String workEffortRequiredByDate();
    @DefaultMessage("Required Date")
    String workEffortRequiredDate();
    @DefaultMessage("Requirement ID")
    String workEffortRequirementId();
    @DefaultMessage("Requirement List")
    String workEffortRequirementList();
    @DefaultMessage("Requirement Type")
    String workEffortRequirementType();
    @DefaultMessage("Requirements")
    String workEffortRequirements();
    @DefaultMessage("Requirements For Request Item")
    String workEffortRequirementsForRequestItem();
    @DefaultMessage("Response Required By")
    String workEffortResponseRequiredBy();
    @DefaultMessage("Result Of Lookup")
    String workEffortResultOfLookup();
    @DefaultMessage("Reviews")
    String workEffortReviews();
    @DefaultMessage("Revision")
    String workEffortRevision();
    @DefaultMessage("Search WorkEfforts")
    String workEffortSearchWorkEfforts();
    @DefaultMessage("Select an existing contact mechanism")
    String workEffortSelectContactMechanism();
    @DefaultMessage("Selected")
    String workEffortSelected();
    @DefaultMessage("Shopping List ID")
    String workEffortShopListId();
    @DefaultMessage("Shopping Lists")
    String workEffortShopLists();
    @DefaultMessage("Show Active")
    String workEffortShowActive();
    @DefaultMessage("Show All Notes")
    String workEffortShowAllNotes();
    @DefaultMessage("Show This Item''s Notes")
    String workEffortShowThisItemsNotes();
    @DefaultMessage("Status")
    String workEffortStatus();
    @DefaultMessage("Current Status ID is missing.")
    String workEffortStatusIdMissing();
    @DefaultMessage("Summary")
    String workEffortSummary();
    @DefaultMessage("Task")
    String workEffortTask();
    @DefaultMessage("TaskDetail")
    String workEffortTaskDetail();
    @DefaultMessage("TaskList")
    String workEffortTaskList();
    @DefaultMessage("TaskName")
    String workEffortTaskName();
    @DefaultMessage("TaskStatus")
    String workEffortTaskStatus();
    @DefaultMessage("Tasks")
    String workEffortTasks();
    @DefaultMessage("This Month")
    String workEffortThisMonth();
    @DefaultMessage("This Week")
    String workEffortThisWeek();
    @DefaultMessage("Bill From Party")
    String workEffortTimeBillFromParty();
    @DefaultMessage("Bill To Party")
    String workEffortTimeBillToParty();
    @DefaultMessage("Security Error: to run {0} you must be in {1} role with WorkEffort: {2}")
    String workEffortTimeSheetNotInRolePermissionError(String resourceDescription, String roleTypeId, String workEffortId);
    @DefaultMessage("Upcoming Events")
    String workEffortUpcomingEvents();
    @DefaultMessage("Security Error: to run this operation you must have the WORKEFFORTMGR_UPDATE or WORKEFFORTMGR_ADMIN permission")
    String workEffortUpdatePermissionError();
    @DefaultMessage("Username")
    String workEffortUsername();
    @DefaultMessage("You do not have permission to view this screen (WORKEFFORTMGR_VIEW needed)")
    String workEffortViewPermissionError();
    @DefaultMessage("ViewTasks / Edit")
    String workEffortViewTasksEdit();
    @DefaultMessage("Week View")
    String workEffortWeekView();
    @DefaultMessage("Welcome")
    String workEffortWelcome();
    @DefaultMessage("Work Effort")
    String workEffortWorkEffort();
    @DefaultMessage("WorkEffortAssocId already Exist")
    String workEffortWorkEffortAssocIdAlreadyExist();
    @DefaultMessage("WorkEffort - GoodStandard association already exist")
    String workEffortWorkEffortGoodStandardAlreadyExist();
    @DefaultMessage("WorkEffort Id")
    String workEffortWorkEffortId();
    @DefaultMessage("WorkEffort Id is empty")
    String workEffortWorkEffortIdEmpty();
    @DefaultMessage("WorkEffort Manager Application")
    String workEffortWorkEffortManagerApplication();
    @DefaultMessage("WorkEffort Manager Main Page")
    String workEffortWorkEffortManagerMainPage();
    @DefaultMessage("WorkEffort - Review already exist")
    String workEffortWorkEffortReviewAlreadyExist();
    @DefaultMessage("Work Efforts")
    String workEffortWorkEfforts();
    @DefaultMessage("Workflow activities assigned to user")
    String workEffortWorkflowActivitiesUser();
    @DefaultMessage("Workflow activities assigned to User Group")
    String workEffortWorkflowActivitiesUserGroup();
    @DefaultMessage("Workflow activities assigned to User Role")
    String workEffortWorkflowActivitiesUserRole();
    @DefaultMessage("Chinese")
    String zh();
    
    @DefaultMessage("Assigned To")
    String assignedTo();
    @DefaultMessage("Exchange Car")
    String crmExchangeCar();
    @DefaultMessage("Schedule Date")
    String crmScheduleDate();
    @DefaultMessage("Model Of Interest")
    String crmModelOfInterest();
    @DefaultMessage("Pink Card Number")
    String crmPinkCardNo();
    @DefaultMessage("Lead Details")
    String crmLeadDetais();
    @DefaultMessage("Test Drive")
    String crmTestDrive();
    @DefaultMessage("Quick Create Showroom Visit")
    String crmQuickCreateShowroomVisit();
    
    
    @DefaultMessage("Existing Account")
    String crmExistingAccount();
    @DefaultMessage("Car")
    String crmCar();
    @DefaultMessage("Driver")
    String crmDriver();
    @DefaultMessage( "Quick Create Test Drive")
    String crmQuickCreateTestDrive();
    @DefaultMessage( "Quick Create")
    String crmQuickCreate();
    @DefaultMessage( "Showroom Visit")
    String crmShowroomVisit();
    @DefaultMessage( "Showroom")
    String crmShowroom();
    
   
    
    
   
    
    
    
}
