package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity TrackingCode.
 */
@javax.persistence.Entity
@Table(name="TRACKING_CODE")
public class TrackingCode extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("trackingCodeId", "TRACKING_CODE_ID");
        fields.put("trackingCodeTypeId", "TRACKING_CODE_TYPE_ID");
        fields.put("marketingCampaignId", "MARKETING_CAMPAIGN_ID");
        fields.put("redirectUrl", "REDIRECT_URL");
        fields.put("overrideLogo", "OVERRIDE_LOGO");
        fields.put("overrideCss", "OVERRIDE_CSS");
        fields.put("prodCatalogId", "PROD_CATALOG_ID");
        fields.put("comments", "COMMENTS");
        fields.put("description", "DESCRIPTION");
        fields.put("trackableLifetime", "TRACKABLE_LIFETIME");
        fields.put("billableLifetime", "BILLABLE_LIFETIME");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("groupId", "GROUP_ID");
        fields.put("subgroupId", "SUBGROUP_ID");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("contactListId", "CONTACT_LIST_ID");
        fields.put("campaignListId", "CAMPAIGN_LIST_ID");
        fields.put("dnis", "DNIS");
fieldMapColumns.put("TrackingCode", fields);
}
  public static enum Fields implements EntityFieldInterface<TrackingCode> {
    trackingCodeId("trackingCodeId"),
    trackingCodeTypeId("trackingCodeTypeId"),
    marketingCampaignId("marketingCampaignId"),
    redirectUrl("redirectUrl"),
    overrideLogo("overrideLogo"),
    overrideCss("overrideCss"),
    prodCatalogId("prodCatalogId"),
    comments("comments"),
    description("description"),
    trackableLifetime("trackableLifetime"),
    billableLifetime("billableLifetime"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    groupId("groupId"),
    subgroupId("subgroupId"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    contactListId("contactListId"),
    campaignListId("campaignListId"),
    dnis("dnis");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="TrackingCode_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="TrackingCode_GEN")   
    @Id
    
    @Column(name="TRACKING_CODE_ID")
    private String trackingCodeId;
    
    @Column(name="TRACKING_CODE_TYPE_ID")
    private String trackingCodeTypeId;
    
    @Column(name="MARKETING_CAMPAIGN_ID")
    private String marketingCampaignId;
    
    @Column(name="REDIRECT_URL")
    private String redirectUrl;
    
    @Column(name="OVERRIDE_LOGO")
    private String overrideLogo;
    
    @Column(name="OVERRIDE_CSS")
    private String overrideCss;
    
    @Column(name="PROD_CATALOG_ID")
    private String prodCatalogId;
    
    @Column(name="COMMENTS")
    private String comments;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="TRACKABLE_LIFETIME")
    private Long trackableLifetime;
    
    @Column(name="BILLABLE_LIFETIME")
    private Long billableLifetime;
    
    @Column(name="FROM_DATE")
    private Timestamp fromDate;
    
    @Column(name="THRU_DATE")
    private Timestamp thruDate;
    
    @Column(name="GROUP_ID")
    private String groupId;
    
    @Column(name="SUBGROUP_ID")
    private String subgroupId;
    
    @Column(name="CREATED_DATE")
    private Timestamp createdDate;
    
    @Column(name="CREATED_BY_USER_LOGIN")
    private String createdByUserLogin;
    
    @Column(name="LAST_MODIFIED_DATE")
    private Timestamp lastModifiedDate;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="CONTACT_LIST_ID")
    private String contactListId;
    
    @Column(name="CAMPAIGN_LIST_ID")
    private String campaignListId;
    
    @Column(name="DNIS")
    private String dnis;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="MARKETING_CAMPAIGN_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private MarketingCampaign marketingCampaign = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="TRACKING_CODE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private TrackingCodeType trackingCodeType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CAMPAIGN_LIST_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private MarketingCampaignContactList marketingCampaignContactList = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_LIST_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactList contactList = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="TRACKING_CODE_ID")
    private List<TrackingCodeOrder> trackingCodeOrders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="TRACKING_CODE_ID")
    private List<TrackingCodeOrderReturn> trackingCodeOrderReturns = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="trackingCode", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="TRACKING_CODE_ID")
    private List<TrackingCodeVisit> trackingCodeVisits = null;

  /**
   * Default constructor.
   */
  public TrackingCode() {
      super();
      this.baseEntityName = "TrackingCode";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("trackingCodeId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public TrackingCode(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param trackingCodeId the trackingCodeId to set
     */
    public void setTrackingCodeId(String trackingCodeId) {
        this.trackingCodeId = trackingCodeId;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodeTypeId the trackingCodeTypeId to set
     */
    public void setTrackingCodeTypeId(String trackingCodeTypeId) {
        this.trackingCodeTypeId = trackingCodeTypeId;
    }
    /**
     * Auto generated value setter.
     * @param marketingCampaignId the marketingCampaignId to set
     */
    public void setMarketingCampaignId(String marketingCampaignId) {
        this.marketingCampaignId = marketingCampaignId;
    }
    /**
     * Auto generated value setter.
     * @param redirectUrl the redirectUrl to set
     */
    public void setRedirectUrl(String redirectUrl) {
        this.redirectUrl = redirectUrl;
    }
    /**
     * Auto generated value setter.
     * @param overrideLogo the overrideLogo to set
     */
    public void setOverrideLogo(String overrideLogo) {
        this.overrideLogo = overrideLogo;
    }
    /**
     * Auto generated value setter.
     * @param overrideCss the overrideCss to set
     */
    public void setOverrideCss(String overrideCss) {
        this.overrideCss = overrideCss;
    }
    /**
     * Auto generated value setter.
     * @param prodCatalogId the prodCatalogId to set
     */
    public void setProdCatalogId(String prodCatalogId) {
        this.prodCatalogId = prodCatalogId;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param trackableLifetime the trackableLifetime to set
     */
    public void setTrackableLifetime(Long trackableLifetime) {
        this.trackableLifetime = trackableLifetime;
    }
    /**
     * Auto generated value setter.
     * @param billableLifetime the billableLifetime to set
     */
    public void setBillableLifetime(Long billableLifetime) {
        this.billableLifetime = billableLifetime;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param groupId the groupId to set
     */
    public void setGroupId(String groupId) {
        this.groupId = groupId;
    }
    /**
     * Auto generated value setter.
     * @param subgroupId the subgroupId to set
     */
    public void setSubgroupId(String subgroupId) {
        this.subgroupId = subgroupId;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param contactListId the contactListId to set
     */
    public void setContactListId(String contactListId) {
        this.contactListId = contactListId;
    }
    /**
     * Auto generated value setter.
     * @param campaignListId the campaignListId to set
     */
    public void setCampaignListId(String campaignListId) {
        this.campaignListId = campaignListId;
    }
    /**
     * Auto generated value setter.
     * @param dnis the dnis to set
     */
    public void setDnis(String dnis) {
        this.dnis = dnis;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTrackingCodeId() {
        return this.trackingCodeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTrackingCodeTypeId() {
        return this.trackingCodeTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMarketingCampaignId() {
        return this.marketingCampaignId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRedirectUrl() {
        return this.redirectUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOverrideLogo() {
        return this.overrideLogo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOverrideCss() {
        return this.overrideCss;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProdCatalogId() {
        return this.prodCatalogId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getTrackableLifetime() {
        return this.trackableLifetime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getBillableLifetime() {
        return this.billableLifetime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGroupId() {
        return this.groupId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSubgroupId() {
        return this.subgroupId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactListId() {
        return this.contactListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCampaignListId() {
        return this.campaignListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDnis() {
        return this.dnis;
    }

    /**
     * Auto generated method that gets the related <code>MarketingCampaign</code> by the relation named <code>MarketingCampaign</code>.
     * @return the <code>MarketingCampaign</code>
     * @throws RepositoryException if an error occurs
     */
    public MarketingCampaign getMarketingCampaign() throws RepositoryException {
        if (this.marketingCampaign == null) {
            this.marketingCampaign = getRelatedOne(MarketingCampaign.class, "MarketingCampaign");
        }
        return this.marketingCampaign;
    }
    /**
     * Auto generated method that gets the related <code>TrackingCodeType</code> by the relation named <code>TrackingCodeType</code>.
     * @return the <code>TrackingCodeType</code>
     * @throws RepositoryException if an error occurs
     */
    public TrackingCodeType getTrackingCodeType() throws RepositoryException {
        if (this.trackingCodeType == null) {
            this.trackingCodeType = getRelatedOne(TrackingCodeType.class, "TrackingCodeType");
        }
        return this.trackingCodeType;
    }
    /**
     * Auto generated method that gets the related <code>MarketingCampaignContactList</code> by the relation named <code>MarketingCampaignContactList</code>.
     * @return the <code>MarketingCampaignContactList</code>
     * @throws RepositoryException if an error occurs
     */
    public MarketingCampaignContactList getMarketingCampaignContactList() throws RepositoryException {
        if (this.marketingCampaignContactList == null) {
            this.marketingCampaignContactList = getRelatedOne(MarketingCampaignContactList.class, "MarketingCampaignContactList");
        }
        return this.marketingCampaignContactList;
    }
    /**
     * Auto generated method that gets the related <code>ContactList</code> by the relation named <code>ContactList</code>.
     * @return the <code>ContactList</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactList getContactList() throws RepositoryException {
        if (this.contactList == null) {
            this.contactList = getRelatedOne(ContactList.class, "ContactList");
        }
        return this.contactList;
    }
    /**
     * Auto generated method that gets the related <code>TrackingCodeOrder</code> by the relation named <code>TrackingCodeOrder</code>.
     * @return the list of <code>TrackingCodeOrder</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TrackingCodeOrder> getTrackingCodeOrders() throws RepositoryException {
        if (this.trackingCodeOrders == null) {
            this.trackingCodeOrders = getRelated(TrackingCodeOrder.class, "TrackingCodeOrder");
        }
        return this.trackingCodeOrders;
    }
    /**
     * Auto generated method that gets the related <code>TrackingCodeOrderReturn</code> by the relation named <code>TrackingCodeOrderReturn</code>.
     * @return the list of <code>TrackingCodeOrderReturn</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TrackingCodeOrderReturn> getTrackingCodeOrderReturns() throws RepositoryException {
        if (this.trackingCodeOrderReturns == null) {
            this.trackingCodeOrderReturns = getRelated(TrackingCodeOrderReturn.class, "TrackingCodeOrderReturn");
        }
        return this.trackingCodeOrderReturns;
    }
    /**
     * Auto generated method that gets the related <code>TrackingCodeVisit</code> by the relation named <code>TrackingCodeVisit</code>.
     * @return the list of <code>TrackingCodeVisit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TrackingCodeVisit> getTrackingCodeVisits() throws RepositoryException {
        if (this.trackingCodeVisits == null) {
            this.trackingCodeVisits = getRelated(TrackingCodeVisit.class, "TrackingCodeVisit");
        }
        return this.trackingCodeVisits;
    }

    /**
     * Auto generated value setter.
     * @param marketingCampaign the marketingCampaign to set
    */
    public void setMarketingCampaign(MarketingCampaign marketingCampaign) {
        this.marketingCampaign = marketingCampaign;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodeType the trackingCodeType to set
    */
    public void setTrackingCodeType(TrackingCodeType trackingCodeType) {
        this.trackingCodeType = trackingCodeType;
    }
    /**
     * Auto generated value setter.
     * @param marketingCampaignContactList the marketingCampaignContactList to set
    */
    public void setMarketingCampaignContactList(MarketingCampaignContactList marketingCampaignContactList) {
        this.marketingCampaignContactList = marketingCampaignContactList;
    }
    /**
     * Auto generated value setter.
     * @param contactList the contactList to set
    */
    public void setContactList(ContactList contactList) {
        this.contactList = contactList;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodeOrders the trackingCodeOrders to set
    */
    public void setTrackingCodeOrders(List<TrackingCodeOrder> trackingCodeOrders) {
        this.trackingCodeOrders = trackingCodeOrders;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodeOrderReturns the trackingCodeOrderReturns to set
    */
    public void setTrackingCodeOrderReturns(List<TrackingCodeOrderReturn> trackingCodeOrderReturns) {
        this.trackingCodeOrderReturns = trackingCodeOrderReturns;
    }
    /**
     * Auto generated value setter.
     * @param trackingCodeVisits the trackingCodeVisits to set
    */
    public void setTrackingCodeVisits(List<TrackingCodeVisit> trackingCodeVisits) {
        this.trackingCodeVisits = trackingCodeVisits;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addTrackingCodeVisit(TrackingCodeVisit trackingCodeVisit) {
        if (this.trackingCodeVisits == null) {
            this.trackingCodeVisits = new ArrayList<TrackingCodeVisit>();
        }
        this.trackingCodeVisits.add(trackingCodeVisit);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeTrackingCodeVisit(TrackingCodeVisit trackingCodeVisit) {
        if (this.trackingCodeVisits == null) {
            return;
        }
        this.trackingCodeVisits.remove(trackingCodeVisit);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearTrackingCodeVisit() {
        if (this.trackingCodeVisits == null) {
            return;
        }
        this.trackingCodeVisits.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setTrackingCodeId((String) mapValue.get("trackingCodeId"));
        setTrackingCodeTypeId((String) mapValue.get("trackingCodeTypeId"));
        setMarketingCampaignId((String) mapValue.get("marketingCampaignId"));
        setRedirectUrl((String) mapValue.get("redirectUrl"));
        setOverrideLogo((String) mapValue.get("overrideLogo"));
        setOverrideCss((String) mapValue.get("overrideCss"));
        setProdCatalogId((String) mapValue.get("prodCatalogId"));
        setComments((String) mapValue.get("comments"));
        setDescription((String) mapValue.get("description"));
        setTrackableLifetime((Long) mapValue.get("trackableLifetime"));
        setBillableLifetime((Long) mapValue.get("billableLifetime"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setGroupId((String) mapValue.get("groupId"));
        setSubgroupId((String) mapValue.get("subgroupId"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setContactListId((String) mapValue.get("contactListId"));
        setCampaignListId((String) mapValue.get("campaignListId"));
        setDnis((String) mapValue.get("dnis"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("trackingCodeId", getTrackingCodeId());
        mapValue.put("trackingCodeTypeId", getTrackingCodeTypeId());
        mapValue.put("marketingCampaignId", getMarketingCampaignId());
        mapValue.put("redirectUrl", getRedirectUrl());
        mapValue.put("overrideLogo", getOverrideLogo());
        mapValue.put("overrideCss", getOverrideCss());
        mapValue.put("prodCatalogId", getProdCatalogId());
        mapValue.put("comments", getComments());
        mapValue.put("description", getDescription());
        mapValue.put("trackableLifetime", getTrackableLifetime());
        mapValue.put("billableLifetime", getBillableLifetime());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("groupId", getGroupId());
        mapValue.put("subgroupId", getSubgroupId());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("contactListId", getContactListId());
        mapValue.put("campaignListId", getCampaignListId());
        mapValue.put("dnis", getDnis());
        return mapValue;
    }


}
