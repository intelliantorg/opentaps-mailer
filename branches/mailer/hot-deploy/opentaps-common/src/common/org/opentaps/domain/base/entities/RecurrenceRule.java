package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity RecurrenceRule.
 */
@javax.persistence.Entity
@Table(name="RECURRENCE_RULE")
public class RecurrenceRule extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("recurrenceRuleId", "RECURRENCE_RULE_ID");
        fields.put("frequency", "FREQUENCY");
        fields.put("untilDateTime", "UNTIL_DATE_TIME");
        fields.put("countNumber", "COUNT_NUMBER");
        fields.put("intervalNumber", "INTERVAL_NUMBER");
        fields.put("bySecondList", "BY_SECOND_LIST");
        fields.put("byMinuteList", "BY_MINUTE_LIST");
        fields.put("byHourList", "BY_HOUR_LIST");
        fields.put("byDayList", "BY_DAY_LIST");
        fields.put("byMonthDayList", "BY_MONTH_DAY_LIST");
        fields.put("byYearDayList", "BY_YEAR_DAY_LIST");
        fields.put("byWeekNoList", "BY_WEEK_NO_LIST");
        fields.put("byMonthList", "BY_MONTH_LIST");
        fields.put("bySetPosList", "BY_SET_POS_LIST");
        fields.put("weekStart", "WEEK_START");
        fields.put("xName", "X_NAME");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("RecurrenceRule", fields);
}
  public static enum Fields implements EntityFieldInterface<RecurrenceRule> {
    recurrenceRuleId("recurrenceRuleId"),
    frequency("frequency"),
    untilDateTime("untilDateTime"),
    countNumber("countNumber"),
    intervalNumber("intervalNumber"),
    bySecondList("bySecondList"),
    byMinuteList("byMinuteList"),
    byHourList("byHourList"),
    byDayList("byDayList"),
    byMonthDayList("byMonthDayList"),
    byYearDayList("byYearDayList"),
    byWeekNoList("byWeekNoList"),
    byMonthList("byMonthList"),
    bySetPosList("bySetPosList"),
    weekStart("weekStart"),
    xName("xName"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="RecurrenceRule_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="RecurrenceRule_GEN")   
    @Id
    
    @Column(name="RECURRENCE_RULE_ID")
    private String recurrenceRuleId;
    
    @Column(name="FREQUENCY")
    private String frequency;
    
    @Column(name="UNTIL_DATE_TIME")
    private Timestamp untilDateTime;
    
    @Column(name="COUNT_NUMBER")
    private Long countNumber;
    
    @Column(name="INTERVAL_NUMBER")
    private Long intervalNumber;
    
    @Column(name="BY_SECOND_LIST")
    private String bySecondList;
    
    @Column(name="BY_MINUTE_LIST")
    private String byMinuteList;
    
    @Column(name="BY_HOUR_LIST")
    private String byHourList;
    
    @Column(name="BY_DAY_LIST")
    private String byDayList;
    
    @Column(name="BY_MONTH_DAY_LIST")
    private String byMonthDayList;
    
    @Column(name="BY_YEAR_DAY_LIST")
    private String byYearDayList;
    
    @Column(name="BY_WEEK_NO_LIST")
    private String byWeekNoList;
    
    @Column(name="BY_MONTH_LIST")
    private String byMonthList;
    
    @Column(name="BY_SET_POS_LIST")
    private String bySetPosList;
    
    @Column(name="WEEK_START")
    private String weekStart;
    
    @Column(name="X_NAME")
    private String xName;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="RECURRENCE_RULE_ID")
    private List<RecurrenceInfo> recurrenceInfoes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="EXCEPTION_RULE_ID")
    private List<RecurrenceInfo> exceptionRecurrenceInfoes = null;

  /**
   * Default constructor.
   */
  public RecurrenceRule() {
      super();
      this.baseEntityName = "RecurrenceRule";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("recurrenceRuleId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public RecurrenceRule(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param recurrenceRuleId the recurrenceRuleId to set
     */
    public void setRecurrenceRuleId(String recurrenceRuleId) {
        this.recurrenceRuleId = recurrenceRuleId;
    }
    /**
     * Auto generated value setter.
     * @param frequency the frequency to set
     */
    public void setFrequency(String frequency) {
        this.frequency = frequency;
    }
    /**
     * Auto generated value setter.
     * @param untilDateTime the untilDateTime to set
     */
    public void setUntilDateTime(Timestamp untilDateTime) {
        this.untilDateTime = untilDateTime;
    }
    /**
     * Auto generated value setter.
     * @param countNumber the countNumber to set
     */
    public void setCountNumber(Long countNumber) {
        this.countNumber = countNumber;
    }
    /**
     * Auto generated value setter.
     * @param intervalNumber the intervalNumber to set
     */
    public void setIntervalNumber(Long intervalNumber) {
        this.intervalNumber = intervalNumber;
    }
    /**
     * Auto generated value setter.
     * @param bySecondList the bySecondList to set
     */
    public void setBySecondList(String bySecondList) {
        this.bySecondList = bySecondList;
    }
    /**
     * Auto generated value setter.
     * @param byMinuteList the byMinuteList to set
     */
    public void setByMinuteList(String byMinuteList) {
        this.byMinuteList = byMinuteList;
    }
    /**
     * Auto generated value setter.
     * @param byHourList the byHourList to set
     */
    public void setByHourList(String byHourList) {
        this.byHourList = byHourList;
    }
    /**
     * Auto generated value setter.
     * @param byDayList the byDayList to set
     */
    public void setByDayList(String byDayList) {
        this.byDayList = byDayList;
    }
    /**
     * Auto generated value setter.
     * @param byMonthDayList the byMonthDayList to set
     */
    public void setByMonthDayList(String byMonthDayList) {
        this.byMonthDayList = byMonthDayList;
    }
    /**
     * Auto generated value setter.
     * @param byYearDayList the byYearDayList to set
     */
    public void setByYearDayList(String byYearDayList) {
        this.byYearDayList = byYearDayList;
    }
    /**
     * Auto generated value setter.
     * @param byWeekNoList the byWeekNoList to set
     */
    public void setByWeekNoList(String byWeekNoList) {
        this.byWeekNoList = byWeekNoList;
    }
    /**
     * Auto generated value setter.
     * @param byMonthList the byMonthList to set
     */
    public void setByMonthList(String byMonthList) {
        this.byMonthList = byMonthList;
    }
    /**
     * Auto generated value setter.
     * @param bySetPosList the bySetPosList to set
     */
    public void setBySetPosList(String bySetPosList) {
        this.bySetPosList = bySetPosList;
    }
    /**
     * Auto generated value setter.
     * @param weekStart the weekStart to set
     */
    public void setWeekStart(String weekStart) {
        this.weekStart = weekStart;
    }
    /**
     * Auto generated value setter.
     * @param xName the xName to set
     */
    public void setXName(String xName) {
        this.xName = xName;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRecurrenceRuleId() {
        return this.recurrenceRuleId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFrequency() {
        return this.frequency;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getUntilDateTime() {
        return this.untilDateTime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getCountNumber() {
        return this.countNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getIntervalNumber() {
        return this.intervalNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBySecondList() {
        return this.bySecondList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getByMinuteList() {
        return this.byMinuteList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getByHourList() {
        return this.byHourList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getByDayList() {
        return this.byDayList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getByMonthDayList() {
        return this.byMonthDayList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getByYearDayList() {
        return this.byYearDayList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getByWeekNoList() {
        return this.byWeekNoList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getByMonthList() {
        return this.byMonthList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBySetPosList() {
        return this.bySetPosList;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWeekStart() {
        return this.weekStart;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getXName() {
        return this.xName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>RecurrenceInfo</code> by the relation named <code>RecurrenceInfo</code>.
     * @return the list of <code>RecurrenceInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RecurrenceInfo> getRecurrenceInfoes() throws RepositoryException {
        if (this.recurrenceInfoes == null) {
            this.recurrenceInfoes = getRelated(RecurrenceInfo.class, "RecurrenceInfo");
        }
        return this.recurrenceInfoes;
    }
    /**
     * Auto generated method that gets the related <code>RecurrenceInfo</code> by the relation named <code>ExceptionRecurrenceInfo</code>.
     * @return the list of <code>RecurrenceInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RecurrenceInfo> getExceptionRecurrenceInfoes() throws RepositoryException {
        if (this.exceptionRecurrenceInfoes == null) {
            this.exceptionRecurrenceInfoes = getRelated(RecurrenceInfo.class, "ExceptionRecurrenceInfo");
        }
        return this.exceptionRecurrenceInfoes;
    }

    /**
     * Auto generated value setter.
     * @param recurrenceInfoes the recurrenceInfoes to set
    */
    public void setRecurrenceInfoes(List<RecurrenceInfo> recurrenceInfoes) {
        this.recurrenceInfoes = recurrenceInfoes;
    }
    /**
     * Auto generated value setter.
     * @param exceptionRecurrenceInfoes the exceptionRecurrenceInfoes to set
    */
    public void setExceptionRecurrenceInfoes(List<RecurrenceInfo> exceptionRecurrenceInfoes) {
        this.exceptionRecurrenceInfoes = exceptionRecurrenceInfoes;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setRecurrenceRuleId((String) mapValue.get("recurrenceRuleId"));
        setFrequency((String) mapValue.get("frequency"));
        setUntilDateTime((Timestamp) mapValue.get("untilDateTime"));
        setCountNumber((Long) mapValue.get("countNumber"));
        setIntervalNumber((Long) mapValue.get("intervalNumber"));
        setBySecondList((String) mapValue.get("bySecondList"));
        setByMinuteList((String) mapValue.get("byMinuteList"));
        setByHourList((String) mapValue.get("byHourList"));
        setByDayList((String) mapValue.get("byDayList"));
        setByMonthDayList((String) mapValue.get("byMonthDayList"));
        setByYearDayList((String) mapValue.get("byYearDayList"));
        setByWeekNoList((String) mapValue.get("byWeekNoList"));
        setByMonthList((String) mapValue.get("byMonthList"));
        setBySetPosList((String) mapValue.get("bySetPosList"));
        setWeekStart((String) mapValue.get("weekStart"));
        setXName((String) mapValue.get("xName"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("recurrenceRuleId", getRecurrenceRuleId());
        mapValue.put("frequency", getFrequency());
        mapValue.put("untilDateTime", getUntilDateTime());
        mapValue.put("countNumber", getCountNumber());
        mapValue.put("intervalNumber", getIntervalNumber());
        mapValue.put("bySecondList", getBySecondList());
        mapValue.put("byMinuteList", getByMinuteList());
        mapValue.put("byHourList", getByHourList());
        mapValue.put("byDayList", getByDayList());
        mapValue.put("byMonthDayList", getByMonthDayList());
        mapValue.put("byYearDayList", getByYearDayList());
        mapValue.put("byWeekNoList", getByWeekNoList());
        mapValue.put("byMonthList", getByMonthList());
        mapValue.put("bySetPosList", getBySetPosList());
        mapValue.put("weekStart", getWeekStart());
        mapValue.put("xName", getXName());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
