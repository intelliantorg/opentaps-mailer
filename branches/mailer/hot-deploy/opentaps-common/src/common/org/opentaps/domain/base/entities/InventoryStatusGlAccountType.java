package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity InventoryStatusGlAccountType.
 */
@javax.persistence.Entity
@Table(name="INV_STTS_GLACCT_TYPE")
@IdClass(InventoryStatusGlAccountTypePk.class)
public class InventoryStatusGlAccountType extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("statusIdFrom", "STATUS_ID_FROM");
        fields.put("statusIdTo", "STATUS_ID_TO");
        fields.put("debitGlAccountTypeId", "DEBIT_GL_ACCOUNT_TYPE_ID");
        fields.put("creditGlAccountTypeId", "CREDIT_GL_ACCOUNT_TYPE_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("InventoryStatusGlAccountType", fields);
}
  public static enum Fields implements EntityFieldInterface<InventoryStatusGlAccountType> {
    statusIdFrom("statusIdFrom"),
    statusIdTo("statusIdTo"),
    debitGlAccountTypeId("debitGlAccountTypeId"),
    creditGlAccountTypeId("creditGlAccountTypeId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="STATUS_ID_FROM")
    private String statusIdFrom;
    @Id
    
    @Column(name="STATUS_ID_TO")
    private String statusIdTo;
    
    @Column(name="DEBIT_GL_ACCOUNT_TYPE_ID")
    private String debitGlAccountTypeId;
    
    @Column(name="CREDIT_GL_ACCOUNT_TYPE_ID")
    private String creditGlAccountTypeId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID_FROM", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem fromStatusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID_TO", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem toStatusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="DEBIT_GL_ACCOUNT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private GlAccountType debitGlAccountType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CREDIT_GL_ACCOUNT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private GlAccountType creditGlAccountType = null;

  /**
   * Default constructor.
   */
  public InventoryStatusGlAccountType() {
      super();
      this.baseEntityName = "InventoryStatusGlAccountType";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("statusIdFrom");this.primaryKeyNames.add("statusIdTo");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public InventoryStatusGlAccountType(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param statusIdFrom the statusIdFrom to set
     */
    public void setStatusIdFrom(String statusIdFrom) {
        this.statusIdFrom = statusIdFrom;
    }
    /**
     * Auto generated value setter.
     * @param statusIdTo the statusIdTo to set
     */
    public void setStatusIdTo(String statusIdTo) {
        this.statusIdTo = statusIdTo;
    }
    /**
     * Auto generated value setter.
     * @param debitGlAccountTypeId the debitGlAccountTypeId to set
     */
    public void setDebitGlAccountTypeId(String debitGlAccountTypeId) {
        this.debitGlAccountTypeId = debitGlAccountTypeId;
    }
    /**
     * Auto generated value setter.
     * @param creditGlAccountTypeId the creditGlAccountTypeId to set
     */
    public void setCreditGlAccountTypeId(String creditGlAccountTypeId) {
        this.creditGlAccountTypeId = creditGlAccountTypeId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusIdFrom() {
        return this.statusIdFrom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusIdTo() {
        return this.statusIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDebitGlAccountTypeId() {
        return this.debitGlAccountTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreditGlAccountTypeId() {
        return this.creditGlAccountTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>FromStatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getFromStatusItem() throws RepositoryException {
        if (this.fromStatusItem == null) {
            this.fromStatusItem = getRelatedOne(StatusItem.class, "FromStatusItem");
        }
        return this.fromStatusItem;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>ToStatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getToStatusItem() throws RepositoryException {
        if (this.toStatusItem == null) {
            this.toStatusItem = getRelatedOne(StatusItem.class, "ToStatusItem");
        }
        return this.toStatusItem;
    }
    /**
     * Auto generated method that gets the related <code>GlAccountType</code> by the relation named <code>DebitGlAccountType</code>.
     * @return the <code>GlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public GlAccountType getDebitGlAccountType() throws RepositoryException {
        if (this.debitGlAccountType == null) {
            this.debitGlAccountType = getRelatedOne(GlAccountType.class, "DebitGlAccountType");
        }
        return this.debitGlAccountType;
    }
    /**
     * Auto generated method that gets the related <code>GlAccountType</code> by the relation named <code>CreditGlAccountType</code>.
     * @return the <code>GlAccountType</code>
     * @throws RepositoryException if an error occurs
     */
    public GlAccountType getCreditGlAccountType() throws RepositoryException {
        if (this.creditGlAccountType == null) {
            this.creditGlAccountType = getRelatedOne(GlAccountType.class, "CreditGlAccountType");
        }
        return this.creditGlAccountType;
    }

    /**
     * Auto generated value setter.
     * @param fromStatusItem the fromStatusItem to set
    */
    public void setFromStatusItem(StatusItem fromStatusItem) {
        this.fromStatusItem = fromStatusItem;
    }
    /**
     * Auto generated value setter.
     * @param toStatusItem the toStatusItem to set
    */
    public void setToStatusItem(StatusItem toStatusItem) {
        this.toStatusItem = toStatusItem;
    }
    /**
     * Auto generated value setter.
     * @param debitGlAccountType the debitGlAccountType to set
    */
    public void setDebitGlAccountType(GlAccountType debitGlAccountType) {
        this.debitGlAccountType = debitGlAccountType;
    }
    /**
     * Auto generated value setter.
     * @param creditGlAccountType the creditGlAccountType to set
    */
    public void setCreditGlAccountType(GlAccountType creditGlAccountType) {
        this.creditGlAccountType = creditGlAccountType;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setStatusIdFrom((String) mapValue.get("statusIdFrom"));
        setStatusIdTo((String) mapValue.get("statusIdTo"));
        setDebitGlAccountTypeId((String) mapValue.get("debitGlAccountTypeId"));
        setCreditGlAccountTypeId((String) mapValue.get("creditGlAccountTypeId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("statusIdFrom", getStatusIdFrom());
        mapValue.put("statusIdTo", getStatusIdTo());
        mapValue.put("debitGlAccountTypeId", getDebitGlAccountTypeId());
        mapValue.put("creditGlAccountTypeId", getCreditGlAccountTypeId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
