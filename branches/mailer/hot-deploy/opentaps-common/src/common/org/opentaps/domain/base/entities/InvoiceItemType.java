package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity InvoiceItemType.
 */
@javax.persistence.Entity
@Table(name="INVOICE_ITEM_TYPE")
public class InvoiceItemType extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("invoiceItemTypeId", "INVOICE_ITEM_TYPE_ID");
        fields.put("parentTypeId", "PARENT_TYPE_ID");
        fields.put("hasTable", "HAS_TABLE");
        fields.put("description", "DESCRIPTION");
        fields.put("defaultGlAccountId", "DEFAULT_GL_ACCOUNT_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("defaultSequenceNum", "DEFAULT_SEQUENCE_NUM");
fieldMapColumns.put("InvoiceItemType", fields);
}
  public static enum Fields implements EntityFieldInterface<InvoiceItemType> {
    invoiceItemTypeId("invoiceItemTypeId"),
    parentTypeId("parentTypeId"),
    hasTable("hasTable"),
    description("description"),
    defaultGlAccountId("defaultGlAccountId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    defaultSequenceNum("defaultSequenceNum");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="InvoiceItemType_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="InvoiceItemType_GEN")   
    @Id
    
    @Column(name="INVOICE_ITEM_TYPE_ID")
    private String invoiceItemTypeId;
    
    @Column(name="PARENT_TYPE_ID")
    private String parentTypeId;
    
    @Column(name="HAS_TABLE")
    private String hasTable;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="DEFAULT_GL_ACCOUNT_ID")
    private String defaultGlAccountId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="DEFAULT_SEQUENCE_NUM")
    private Long defaultSequenceNum;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private InvoiceItemType parentInvoiceItemType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="DEFAULT_GL_ACCOUNT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private GlAccount defaultGlAccount = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="fromInvoiceItemType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ITEM_TYPE_ID_FROM")
    private List<AgreementInvoiceItemType> fromAgreementInvoiceItemTypes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="toInvoiceItemType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ITEM_TYPE_ID_TO")
    private List<AgreementInvoiceItemType> toAgreementInvoiceItemTypes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ITEM_TYPE_ID")
    private List<AgreementTerm> agreementTerms = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ITEM_TYPE_ID")
    private List<InvoiceItem> invoiceItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_TYPE_ID")
    private List<InvoiceItemType> childInvoiceItemTypes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoiceItemType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ITEM_TYPE_ID")
    private List<InvoiceItemTypeAttr> invoiceItemTypeAttrs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoiceItemType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ITEM_TYPE_ID")
    private List<InvoiceItemTypeGlAccount> invoiceItemTypeGlAccounts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ITEM_TYPE_ID")
    private List<InvoiceItemTypeMap> invoiceItemTypeMaps = null;

  /**
   * Default constructor.
   */
  public InvoiceItemType() {
      super();
      this.baseEntityName = "InvoiceItemType";
      this.isView = false;
      this.resourceName = "AccountingEntityLabels";
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("invoiceItemTypeId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public InvoiceItemType(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param invoiceItemTypeId the invoiceItemTypeId to set
     */
    public void setInvoiceItemTypeId(String invoiceItemTypeId) {
        this.invoiceItemTypeId = invoiceItemTypeId;
    }
    /**
     * Auto generated value setter.
     * @param parentTypeId the parentTypeId to set
     */
    public void setParentTypeId(String parentTypeId) {
        this.parentTypeId = parentTypeId;
    }
    /**
     * Auto generated value setter.
     * @param hasTable the hasTable to set
     */
    public void setHasTable(String hasTable) {
        this.hasTable = hasTable;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param defaultGlAccountId the defaultGlAccountId to set
     */
    public void setDefaultGlAccountId(String defaultGlAccountId) {
        this.defaultGlAccountId = defaultGlAccountId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param defaultSequenceNum the defaultSequenceNum to set
     */
    public void setDefaultSequenceNum(Long defaultSequenceNum) {
        this.defaultSequenceNum = defaultSequenceNum;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceItemTypeId() {
        return this.invoiceItemTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParentTypeId() {
        return this.parentTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getHasTable() {
        return this.hasTable;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDefaultGlAccountId() {
        return this.defaultGlAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getDefaultSequenceNum() {
        return this.defaultSequenceNum;
    }

    /**
     * Auto generated method that gets the related <code>InvoiceItemType</code> by the relation named <code>ParentInvoiceItemType</code>.
     * @return the <code>InvoiceItemType</code>
     * @throws RepositoryException if an error occurs
     */
    public InvoiceItemType getParentInvoiceItemType() throws RepositoryException {
        if (this.parentInvoiceItemType == null) {
            this.parentInvoiceItemType = getRelatedOne(InvoiceItemType.class, "ParentInvoiceItemType");
        }
        return this.parentInvoiceItemType;
    }
    /**
     * Auto generated method that gets the related <code>GlAccount</code> by the relation named <code>DefaultGlAccount</code>.
     * @return the <code>GlAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public GlAccount getDefaultGlAccount() throws RepositoryException {
        if (this.defaultGlAccount == null) {
            this.defaultGlAccount = getRelatedOne(GlAccount.class, "DefaultGlAccount");
        }
        return this.defaultGlAccount;
    }
    /**
     * Auto generated method that gets the related <code>AgreementInvoiceItemType</code> by the relation named <code>FromAgreementInvoiceItemType</code>.
     * @return the list of <code>AgreementInvoiceItemType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementInvoiceItemType> getFromAgreementInvoiceItemTypes() throws RepositoryException {
        if (this.fromAgreementInvoiceItemTypes == null) {
            this.fromAgreementInvoiceItemTypes = getRelated(AgreementInvoiceItemType.class, "FromAgreementInvoiceItemType");
        }
        return this.fromAgreementInvoiceItemTypes;
    }
    /**
     * Auto generated method that gets the related <code>AgreementInvoiceItemType</code> by the relation named <code>ToAgreementInvoiceItemType</code>.
     * @return the list of <code>AgreementInvoiceItemType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementInvoiceItemType> getToAgreementInvoiceItemTypes() throws RepositoryException {
        if (this.toAgreementInvoiceItemTypes == null) {
            this.toAgreementInvoiceItemTypes = getRelated(AgreementInvoiceItemType.class, "ToAgreementInvoiceItemType");
        }
        return this.toAgreementInvoiceItemTypes;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTerm</code> by the relation named <code>AgreementTerm</code>.
     * @return the list of <code>AgreementTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTerm> getAgreementTerms() throws RepositoryException {
        if (this.agreementTerms == null) {
            this.agreementTerms = getRelated(AgreementTerm.class, "AgreementTerm");
        }
        return this.agreementTerms;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the list of <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItem> getInvoiceItems() throws RepositoryException {
        if (this.invoiceItems == null) {
            this.invoiceItems = getRelated(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItems;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItemType</code> by the relation named <code>ChildInvoiceItemType</code>.
     * @return the list of <code>InvoiceItemType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItemType> getChildInvoiceItemTypes() throws RepositoryException {
        if (this.childInvoiceItemTypes == null) {
            this.childInvoiceItemTypes = getRelated(InvoiceItemType.class, "ChildInvoiceItemType");
        }
        return this.childInvoiceItemTypes;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItemTypeAttr</code> by the relation named <code>InvoiceItemTypeAttr</code>.
     * @return the list of <code>InvoiceItemTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItemTypeAttr> getInvoiceItemTypeAttrs() throws RepositoryException {
        if (this.invoiceItemTypeAttrs == null) {
            this.invoiceItemTypeAttrs = getRelated(InvoiceItemTypeAttr.class, "InvoiceItemTypeAttr");
        }
        return this.invoiceItemTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItemTypeGlAccount</code> by the relation named <code>InvoiceItemTypeGlAccount</code>.
     * @return the list of <code>InvoiceItemTypeGlAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItemTypeGlAccount> getInvoiceItemTypeGlAccounts() throws RepositoryException {
        if (this.invoiceItemTypeGlAccounts == null) {
            this.invoiceItemTypeGlAccounts = getRelated(InvoiceItemTypeGlAccount.class, "InvoiceItemTypeGlAccount");
        }
        return this.invoiceItemTypeGlAccounts;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItemTypeMap</code> by the relation named <code>InvoiceItemTypeMap</code>.
     * @return the list of <code>InvoiceItemTypeMap</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItemTypeMap> getInvoiceItemTypeMaps() throws RepositoryException {
        if (this.invoiceItemTypeMaps == null) {
            this.invoiceItemTypeMaps = getRelated(InvoiceItemTypeMap.class, "InvoiceItemTypeMap");
        }
        return this.invoiceItemTypeMaps;
    }

    /**
     * Auto generated value setter.
     * @param parentInvoiceItemType the parentInvoiceItemType to set
    */
    public void setParentInvoiceItemType(InvoiceItemType parentInvoiceItemType) {
        this.parentInvoiceItemType = parentInvoiceItemType;
    }
    /**
     * Auto generated value setter.
     * @param defaultGlAccount the defaultGlAccount to set
    */
    public void setDefaultGlAccount(GlAccount defaultGlAccount) {
        this.defaultGlAccount = defaultGlAccount;
    }
    /**
     * Auto generated value setter.
     * @param fromAgreementInvoiceItemTypes the fromAgreementInvoiceItemTypes to set
    */
    public void setFromAgreementInvoiceItemTypes(List<AgreementInvoiceItemType> fromAgreementInvoiceItemTypes) {
        this.fromAgreementInvoiceItemTypes = fromAgreementInvoiceItemTypes;
    }
    /**
     * Auto generated value setter.
     * @param toAgreementInvoiceItemTypes the toAgreementInvoiceItemTypes to set
    */
    public void setToAgreementInvoiceItemTypes(List<AgreementInvoiceItemType> toAgreementInvoiceItemTypes) {
        this.toAgreementInvoiceItemTypes = toAgreementInvoiceItemTypes;
    }
    /**
     * Auto generated value setter.
     * @param agreementTerms the agreementTerms to set
    */
    public void setAgreementTerms(List<AgreementTerm> agreementTerms) {
        this.agreementTerms = agreementTerms;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItems the invoiceItems to set
    */
    public void setInvoiceItems(List<InvoiceItem> invoiceItems) {
        this.invoiceItems = invoiceItems;
    }
    /**
     * Auto generated value setter.
     * @param childInvoiceItemTypes the childInvoiceItemTypes to set
    */
    public void setChildInvoiceItemTypes(List<InvoiceItemType> childInvoiceItemTypes) {
        this.childInvoiceItemTypes = childInvoiceItemTypes;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItemTypeAttrs the invoiceItemTypeAttrs to set
    */
    public void setInvoiceItemTypeAttrs(List<InvoiceItemTypeAttr> invoiceItemTypeAttrs) {
        this.invoiceItemTypeAttrs = invoiceItemTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItemTypeGlAccounts the invoiceItemTypeGlAccounts to set
    */
    public void setInvoiceItemTypeGlAccounts(List<InvoiceItemTypeGlAccount> invoiceItemTypeGlAccounts) {
        this.invoiceItemTypeGlAccounts = invoiceItemTypeGlAccounts;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItemTypeMaps the invoiceItemTypeMaps to set
    */
    public void setInvoiceItemTypeMaps(List<InvoiceItemTypeMap> invoiceItemTypeMaps) {
        this.invoiceItemTypeMaps = invoiceItemTypeMaps;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addFromAgreementInvoiceItemType(AgreementInvoiceItemType fromAgreementInvoiceItemType) {
        if (this.fromAgreementInvoiceItemTypes == null) {
            this.fromAgreementInvoiceItemTypes = new ArrayList<AgreementInvoiceItemType>();
        }
        this.fromAgreementInvoiceItemTypes.add(fromAgreementInvoiceItemType);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFromAgreementInvoiceItemType(AgreementInvoiceItemType fromAgreementInvoiceItemType) {
        if (this.fromAgreementInvoiceItemTypes == null) {
            return;
        }
        this.fromAgreementInvoiceItemTypes.remove(fromAgreementInvoiceItemType);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFromAgreementInvoiceItemType() {
        if (this.fromAgreementInvoiceItemTypes == null) {
            return;
        }
        this.fromAgreementInvoiceItemTypes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addToAgreementInvoiceItemType(AgreementInvoiceItemType toAgreementInvoiceItemType) {
        if (this.toAgreementInvoiceItemTypes == null) {
            this.toAgreementInvoiceItemTypes = new ArrayList<AgreementInvoiceItemType>();
        }
        this.toAgreementInvoiceItemTypes.add(toAgreementInvoiceItemType);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeToAgreementInvoiceItemType(AgreementInvoiceItemType toAgreementInvoiceItemType) {
        if (this.toAgreementInvoiceItemTypes == null) {
            return;
        }
        this.toAgreementInvoiceItemTypes.remove(toAgreementInvoiceItemType);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearToAgreementInvoiceItemType() {
        if (this.toAgreementInvoiceItemTypes == null) {
            return;
        }
        this.toAgreementInvoiceItemTypes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceItemTypeAttr(InvoiceItemTypeAttr invoiceItemTypeAttr) {
        if (this.invoiceItemTypeAttrs == null) {
            this.invoiceItemTypeAttrs = new ArrayList<InvoiceItemTypeAttr>();
        }
        this.invoiceItemTypeAttrs.add(invoiceItemTypeAttr);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceItemTypeAttr(InvoiceItemTypeAttr invoiceItemTypeAttr) {
        if (this.invoiceItemTypeAttrs == null) {
            return;
        }
        this.invoiceItemTypeAttrs.remove(invoiceItemTypeAttr);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceItemTypeAttr() {
        if (this.invoiceItemTypeAttrs == null) {
            return;
        }
        this.invoiceItemTypeAttrs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceItemTypeGlAccount(InvoiceItemTypeGlAccount invoiceItemTypeGlAccount) {
        if (this.invoiceItemTypeGlAccounts == null) {
            this.invoiceItemTypeGlAccounts = new ArrayList<InvoiceItemTypeGlAccount>();
        }
        this.invoiceItemTypeGlAccounts.add(invoiceItemTypeGlAccount);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceItemTypeGlAccount(InvoiceItemTypeGlAccount invoiceItemTypeGlAccount) {
        if (this.invoiceItemTypeGlAccounts == null) {
            return;
        }
        this.invoiceItemTypeGlAccounts.remove(invoiceItemTypeGlAccount);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceItemTypeGlAccount() {
        if (this.invoiceItemTypeGlAccounts == null) {
            return;
        }
        this.invoiceItemTypeGlAccounts.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setInvoiceItemTypeId((String) mapValue.get("invoiceItemTypeId"));
        setParentTypeId((String) mapValue.get("parentTypeId"));
        setHasTable((String) mapValue.get("hasTable"));
        setDescription((String) mapValue.get("description"));
        setDefaultGlAccountId((String) mapValue.get("defaultGlAccountId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setDefaultSequenceNum((Long) mapValue.get("defaultSequenceNum"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("invoiceItemTypeId", getInvoiceItemTypeId());
        mapValue.put("parentTypeId", getParentTypeId());
        mapValue.put("hasTable", getHasTable());
        mapValue.put("description", getDescription());
        mapValue.put("defaultGlAccountId", getDefaultGlAccountId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("defaultSequenceNum", getDefaultSequenceNum());
        return mapValue;
    }


}
