package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity AgreementItem.
 */
@javax.persistence.Entity
@Table(name="AGREEMENT_ITEM")
@IdClass(AgreementItemPk.class)
public class AgreementItem extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("agreementId", "AGREEMENT_ID");
        fields.put("agreementItemSeqId", "AGREEMENT_ITEM_SEQ_ID");
        fields.put("agreementItemTypeId", "AGREEMENT_ITEM_TYPE_ID");
        fields.put("currencyUomId", "CURRENCY_UOM_ID");
        fields.put("agreementText", "AGREEMENT_TEXT");
        fields.put("agreementImage", "AGREEMENT_IMAGE");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("AgreementItem", fields);
}
  public static enum Fields implements EntityFieldInterface<AgreementItem> {
    agreementId("agreementId"),
    agreementItemSeqId("agreementItemSeqId"),
    agreementItemTypeId("agreementItemTypeId"),
    currencyUomId("currencyUomId"),
    agreementText("agreementText"),
    agreementImage("agreementImage"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="AGREEMENT_ID")
    private String agreementId;
    @Id
    
    @Column(name="AGREEMENT_ITEM_SEQ_ID")
    private String agreementItemSeqId;
    
    @Column(name="AGREEMENT_ITEM_TYPE_ID")
    private String agreementItemTypeId;
    
    @Column(name="CURRENCY_UOM_ID")
    private String currencyUomId;
    
    @Column(name="AGREEMENT_TEXT")
    private String agreementText;
    
    @Column(name="AGREEMENT_IMAGE")
    private byte[] agreementImage;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="AGREEMENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Agreement agreement = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="AGREEMENT_ITEM_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private AgreementItemType agreementItemType = null;
    private transient List<AgreementItemTypeAttr> agreementItemTypeAttrs = null;
    private transient List<Addendum> addendums = null;
    private transient List<AgreementCategoryAppl> agreementCategoryAppls = null;
    private transient List<AgreementGeographicalApplic> agreementGeographicalApplics = null;
    private transient List<AgreementItemAttribute> agreementItemAttributes = null;
    private transient List<AgreementPartyApplic> agreementPartyApplics = null;
    private transient List<AgreementProductAppl> agreementProductAppls = null;
    private transient List<AgreementPromoAppl> agreementPromoAppls = null;
    private transient List<AgreementTerm> agreementTerms = null;
    private transient List<AgreementWorkEffortAppl> agreementWorkEffortAppls = null;

  /**
   * Default constructor.
   */
  public AgreementItem() {
      super();
      this.baseEntityName = "AgreementItem";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("agreementId");this.primaryKeyNames.add("agreementItemSeqId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public AgreementItem(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param agreementId the agreementId to set
     */
    public void setAgreementId(String agreementId) {
        this.agreementId = agreementId;
    }
    /**
     * Auto generated value setter.
     * @param agreementItemSeqId the agreementItemSeqId to set
     */
    public void setAgreementItemSeqId(String agreementItemSeqId) {
        this.agreementItemSeqId = agreementItemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param agreementItemTypeId the agreementItemTypeId to set
     */
    public void setAgreementItemTypeId(String agreementItemTypeId) {
        this.agreementItemTypeId = agreementItemTypeId;
    }
    /**
     * Auto generated value setter.
     * @param currencyUomId the currencyUomId to set
     */
    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param agreementText the agreementText to set
     */
    public void setAgreementText(String agreementText) {
        this.agreementText = agreementText;
    }
    /**
     * Auto generated value setter.
     * @param agreementImage the agreementImage to set
     */
    public void setAgreementImage(byte[] agreementImage) {
        this.agreementImage = agreementImage;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAgreementId() {
        return this.agreementId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAgreementItemSeqId() {
        return this.agreementItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAgreementItemTypeId() {
        return this.agreementItemTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUomId() {
        return this.currencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAgreementText() {
        return this.agreementText;
    }
    /**
     * Auto generated value accessor.
     * @return <code>byte[]</code>
     */
    public byte[] getAgreementImage() {
        return this.agreementImage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Agreement</code> by the relation named <code>Agreement</code>.
     * @return the <code>Agreement</code>
     * @throws RepositoryException if an error occurs
     */
    public Agreement getAgreement() throws RepositoryException {
        if (this.agreement == null) {
            this.agreement = getRelatedOne(Agreement.class, "Agreement");
        }
        return this.agreement;
    }
    /**
     * Auto generated method that gets the related <code>AgreementItemType</code> by the relation named <code>AgreementItemType</code>.
     * @return the <code>AgreementItemType</code>
     * @throws RepositoryException if an error occurs
     */
    public AgreementItemType getAgreementItemType() throws RepositoryException {
        if (this.agreementItemType == null) {
            this.agreementItemType = getRelatedOne(AgreementItemType.class, "AgreementItemType");
        }
        return this.agreementItemType;
    }
    /**
     * Auto generated method that gets the related <code>AgreementItemTypeAttr</code> by the relation named <code>AgreementItemTypeAttr</code>.
     * @return the list of <code>AgreementItemTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementItemTypeAttr> getAgreementItemTypeAttrs() throws RepositoryException {
        if (this.agreementItemTypeAttrs == null) {
            this.agreementItemTypeAttrs = getRelated(AgreementItemTypeAttr.class, "AgreementItemTypeAttr");
        }
        return this.agreementItemTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>Addendum</code> by the relation named <code>Addendum</code>.
     * @return the list of <code>Addendum</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Addendum> getAddendums() throws RepositoryException {
        if (this.addendums == null) {
            this.addendums = getRelated(Addendum.class, "Addendum");
        }
        return this.addendums;
    }
    /**
     * Auto generated method that gets the related <code>AgreementCategoryAppl</code> by the relation named <code>AgreementCategoryAppl</code>.
     * @return the list of <code>AgreementCategoryAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementCategoryAppl> getAgreementCategoryAppls() throws RepositoryException {
        if (this.agreementCategoryAppls == null) {
            this.agreementCategoryAppls = getRelated(AgreementCategoryAppl.class, "AgreementCategoryAppl");
        }
        return this.agreementCategoryAppls;
    }
    /**
     * Auto generated method that gets the related <code>AgreementGeographicalApplic</code> by the relation named <code>AgreementGeographicalApplic</code>.
     * @return the list of <code>AgreementGeographicalApplic</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementGeographicalApplic> getAgreementGeographicalApplics() throws RepositoryException {
        if (this.agreementGeographicalApplics == null) {
            this.agreementGeographicalApplics = getRelated(AgreementGeographicalApplic.class, "AgreementGeographicalApplic");
        }
        return this.agreementGeographicalApplics;
    }
    /**
     * Auto generated method that gets the related <code>AgreementItemAttribute</code> by the relation named <code>AgreementItemAttribute</code>.
     * @return the list of <code>AgreementItemAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementItemAttribute> getAgreementItemAttributes() throws RepositoryException {
        if (this.agreementItemAttributes == null) {
            this.agreementItemAttributes = getRelated(AgreementItemAttribute.class, "AgreementItemAttribute");
        }
        return this.agreementItemAttributes;
    }
    /**
     * Auto generated method that gets the related <code>AgreementPartyApplic</code> by the relation named <code>AgreementPartyApplic</code>.
     * @return the list of <code>AgreementPartyApplic</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementPartyApplic> getAgreementPartyApplics() throws RepositoryException {
        if (this.agreementPartyApplics == null) {
            this.agreementPartyApplics = getRelated(AgreementPartyApplic.class, "AgreementPartyApplic");
        }
        return this.agreementPartyApplics;
    }
    /**
     * Auto generated method that gets the related <code>AgreementProductAppl</code> by the relation named <code>AgreementProductAppl</code>.
     * @return the list of <code>AgreementProductAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementProductAppl> getAgreementProductAppls() throws RepositoryException {
        if (this.agreementProductAppls == null) {
            this.agreementProductAppls = getRelated(AgreementProductAppl.class, "AgreementProductAppl");
        }
        return this.agreementProductAppls;
    }
    /**
     * Auto generated method that gets the related <code>AgreementPromoAppl</code> by the relation named <code>AgreementPromoAppl</code>.
     * @return the list of <code>AgreementPromoAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementPromoAppl> getAgreementPromoAppls() throws RepositoryException {
        if (this.agreementPromoAppls == null) {
            this.agreementPromoAppls = getRelated(AgreementPromoAppl.class, "AgreementPromoAppl");
        }
        return this.agreementPromoAppls;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTerm</code> by the relation named <code>AgreementTerm</code>.
     * @return the list of <code>AgreementTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTerm> getAgreementTerms() throws RepositoryException {
        if (this.agreementTerms == null) {
            this.agreementTerms = getRelated(AgreementTerm.class, "AgreementTerm");
        }
        return this.agreementTerms;
    }
    /**
     * Auto generated method that gets the related <code>AgreementWorkEffortAppl</code> by the relation named <code>AgreementWorkEffortAppl</code>.
     * @return the list of <code>AgreementWorkEffortAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementWorkEffortAppl> getAgreementWorkEffortAppls() throws RepositoryException {
        if (this.agreementWorkEffortAppls == null) {
            this.agreementWorkEffortAppls = getRelated(AgreementWorkEffortAppl.class, "AgreementWorkEffortAppl");
        }
        return this.agreementWorkEffortAppls;
    }

    /**
     * Auto generated value setter.
     * @param agreement the agreement to set
    */
    public void setAgreement(Agreement agreement) {
        this.agreement = agreement;
    }
    /**
     * Auto generated value setter.
     * @param agreementItemType the agreementItemType to set
    */
    public void setAgreementItemType(AgreementItemType agreementItemType) {
        this.agreementItemType = agreementItemType;
    }
    /**
     * Auto generated value setter.
     * @param agreementItemTypeAttrs the agreementItemTypeAttrs to set
    */
    public void setAgreementItemTypeAttrs(List<AgreementItemTypeAttr> agreementItemTypeAttrs) {
        this.agreementItemTypeAttrs = agreementItemTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param addendums the addendums to set
    */
    public void setAddendums(List<Addendum> addendums) {
        this.addendums = addendums;
    }
    /**
     * Auto generated value setter.
     * @param agreementCategoryAppls the agreementCategoryAppls to set
    */
    public void setAgreementCategoryAppls(List<AgreementCategoryAppl> agreementCategoryAppls) {
        this.agreementCategoryAppls = agreementCategoryAppls;
    }
    /**
     * Auto generated value setter.
     * @param agreementGeographicalApplics the agreementGeographicalApplics to set
    */
    public void setAgreementGeographicalApplics(List<AgreementGeographicalApplic> agreementGeographicalApplics) {
        this.agreementGeographicalApplics = agreementGeographicalApplics;
    }
    /**
     * Auto generated value setter.
     * @param agreementItemAttributes the agreementItemAttributes to set
    */
    public void setAgreementItemAttributes(List<AgreementItemAttribute> agreementItemAttributes) {
        this.agreementItemAttributes = agreementItemAttributes;
    }
    /**
     * Auto generated value setter.
     * @param agreementPartyApplics the agreementPartyApplics to set
    */
    public void setAgreementPartyApplics(List<AgreementPartyApplic> agreementPartyApplics) {
        this.agreementPartyApplics = agreementPartyApplics;
    }
    /**
     * Auto generated value setter.
     * @param agreementProductAppls the agreementProductAppls to set
    */
    public void setAgreementProductAppls(List<AgreementProductAppl> agreementProductAppls) {
        this.agreementProductAppls = agreementProductAppls;
    }
    /**
     * Auto generated value setter.
     * @param agreementPromoAppls the agreementPromoAppls to set
    */
    public void setAgreementPromoAppls(List<AgreementPromoAppl> agreementPromoAppls) {
        this.agreementPromoAppls = agreementPromoAppls;
    }
    /**
     * Auto generated value setter.
     * @param agreementTerms the agreementTerms to set
    */
    public void setAgreementTerms(List<AgreementTerm> agreementTerms) {
        this.agreementTerms = agreementTerms;
    }
    /**
     * Auto generated value setter.
     * @param agreementWorkEffortAppls the agreementWorkEffortAppls to set
    */
    public void setAgreementWorkEffortAppls(List<AgreementWorkEffortAppl> agreementWorkEffortAppls) {
        this.agreementWorkEffortAppls = agreementWorkEffortAppls;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setAgreementId((String) mapValue.get("agreementId"));
        setAgreementItemSeqId((String) mapValue.get("agreementItemSeqId"));
        setAgreementItemTypeId((String) mapValue.get("agreementItemTypeId"));
        setCurrencyUomId((String) mapValue.get("currencyUomId"));
        setAgreementText((String) mapValue.get("agreementText"));
        setAgreementImage((byte[]) mapValue.get("agreementImage"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("agreementId", getAgreementId());
        mapValue.put("agreementItemSeqId", getAgreementItemSeqId());
        mapValue.put("agreementItemTypeId", getAgreementItemTypeId());
        mapValue.put("currencyUomId", getCurrencyUomId());
        mapValue.put("agreementText", getAgreementText());
        mapValue.put("agreementImage", getAgreementImage());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
