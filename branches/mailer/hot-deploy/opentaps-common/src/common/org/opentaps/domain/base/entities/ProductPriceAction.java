package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity ProductPriceAction.
 */
@javax.persistence.Entity
@Table(name="PRODUCT_PRICE_ACTION")
@IdClass(ProductPriceActionPk.class)
public class ProductPriceAction extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productPriceRuleId", "PRODUCT_PRICE_RULE_ID");
        fields.put("productPriceActionSeqId", "PRODUCT_PRICE_ACTION_SEQ_ID");
        fields.put("productPriceActionTypeId", "PRODUCT_PRICE_ACTION_TYPE_ID");
        fields.put("amount", "AMOUNT");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ProductPriceAction", fields);
}
  public static enum Fields implements EntityFieldInterface<ProductPriceAction> {
    productPriceRuleId("productPriceRuleId"),
    productPriceActionSeqId("productPriceActionSeqId"),
    productPriceActionTypeId("productPriceActionTypeId"),
    amount("amount"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="PRODUCT_PRICE_RULE_ID")
    private String productPriceRuleId;
    @Id
    
    @Column(name="PRODUCT_PRICE_ACTION_SEQ_ID")
    private String productPriceActionSeqId;
    
    @Column(name="PRODUCT_PRICE_ACTION_TYPE_ID")
    private String productPriceActionTypeId;
    
    @Column(name="AMOUNT")
    private BigDecimal amount;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_PRICE_ACTION_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductPriceActionType productPriceActionType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_PRICE_RULE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ProductPriceRule productPriceRule = null;
    private transient List<OrderItemPriceInfo> orderItemPriceInfoes = null;

  /**
   * Default constructor.
   */
  public ProductPriceAction() {
      super();
      this.baseEntityName = "ProductPriceAction";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productPriceRuleId");this.primaryKeyNames.add("productPriceActionSeqId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProductPriceAction(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param productPriceRuleId the productPriceRuleId to set
     */
    public void setProductPriceRuleId(String productPriceRuleId) {
        this.productPriceRuleId = productPriceRuleId;
    }
    /**
     * Auto generated value setter.
     * @param productPriceActionSeqId the productPriceActionSeqId to set
     */
    public void setProductPriceActionSeqId(String productPriceActionSeqId) {
        this.productPriceActionSeqId = productPriceActionSeqId;
    }
    /**
     * Auto generated value setter.
     * @param productPriceActionTypeId the productPriceActionTypeId to set
     */
    public void setProductPriceActionTypeId(String productPriceActionTypeId) {
        this.productPriceActionTypeId = productPriceActionTypeId;
    }
    /**
     * Auto generated value setter.
     * @param amount the amount to set
     */
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductPriceRuleId() {
        return this.productPriceRuleId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductPriceActionSeqId() {
        return this.productPriceActionSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductPriceActionTypeId() {
        return this.productPriceActionTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getAmount() {
        return this.amount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>ProductPriceActionType</code> by the relation named <code>ProductPriceActionType</code>.
     * @return the <code>ProductPriceActionType</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductPriceActionType getProductPriceActionType() throws RepositoryException {
        if (this.productPriceActionType == null) {
            this.productPriceActionType = getRelatedOne(ProductPriceActionType.class, "ProductPriceActionType");
        }
        return this.productPriceActionType;
    }
    /**
     * Auto generated method that gets the related <code>ProductPriceRule</code> by the relation named <code>ProductPriceRule</code>.
     * @return the <code>ProductPriceRule</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductPriceRule getProductPriceRule() throws RepositoryException {
        if (this.productPriceRule == null) {
            this.productPriceRule = getRelatedOne(ProductPriceRule.class, "ProductPriceRule");
        }
        return this.productPriceRule;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemPriceInfo</code> by the relation named <code>OrderItemPriceInfo</code>.
     * @return the list of <code>OrderItemPriceInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemPriceInfo> getOrderItemPriceInfoes() throws RepositoryException {
        if (this.orderItemPriceInfoes == null) {
            this.orderItemPriceInfoes = getRelated(OrderItemPriceInfo.class, "OrderItemPriceInfo");
        }
        return this.orderItemPriceInfoes;
    }

    /**
     * Auto generated value setter.
     * @param productPriceActionType the productPriceActionType to set
    */
    public void setProductPriceActionType(ProductPriceActionType productPriceActionType) {
        this.productPriceActionType = productPriceActionType;
    }
    /**
     * Auto generated value setter.
     * @param productPriceRule the productPriceRule to set
    */
    public void setProductPriceRule(ProductPriceRule productPriceRule) {
        this.productPriceRule = productPriceRule;
    }
    /**
     * Auto generated value setter.
     * @param orderItemPriceInfoes the orderItemPriceInfoes to set
    */
    public void setOrderItemPriceInfoes(List<OrderItemPriceInfo> orderItemPriceInfoes) {
        this.orderItemPriceInfoes = orderItemPriceInfoes;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductPriceRuleId((String) mapValue.get("productPriceRuleId"));
        setProductPriceActionSeqId((String) mapValue.get("productPriceActionSeqId"));
        setProductPriceActionTypeId((String) mapValue.get("productPriceActionTypeId"));
        setAmount(convertToBigDecimal(mapValue.get("amount")));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productPriceRuleId", getProductPriceRuleId());
        mapValue.put("productPriceActionSeqId", getProductPriceActionSeqId());
        mapValue.put("productPriceActionTypeId", getProductPriceActionTypeId());
        mapValue.put("amount", getAmount());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
