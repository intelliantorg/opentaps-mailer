package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity WorkflowDataField.
 */
@javax.persistence.Entity
@Table(name="WORKFLOW_DATA_FIELD")
@IdClass(WorkflowDataFieldPk.class)
public class WorkflowDataField extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("packageId", "PACKAGE_ID");
        fields.put("packageVersion", "PACKAGE_VERSION");
        fields.put("processId", "PROCESS_ID");
        fields.put("processVersion", "PROCESS_VERSION");
        fields.put("dataFieldId", "DATA_FIELD_ID");
        fields.put("dataFieldName", "DATA_FIELD_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("initialValue", "INITIAL_VALUE");
        fields.put("lengthBytes", "LENGTH_BYTES");
        fields.put("dataTypeEnumId", "DATA_TYPE_ENUM_ID");
        fields.put("complexTypeInfoId", "COMPLEX_TYPE_INFO_ID");
        fields.put("isArray", "IS_ARRAY");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("WorkflowDataField", fields);
}
  public static enum Fields implements EntityFieldInterface<WorkflowDataField> {
    packageId("packageId"),
    packageVersion("packageVersion"),
    processId("processId"),
    processVersion("processVersion"),
    dataFieldId("dataFieldId"),
    dataFieldName("dataFieldName"),
    description("description"),
    initialValue("initialValue"),
    lengthBytes("lengthBytes"),
    dataTypeEnumId("dataTypeEnumId"),
    complexTypeInfoId("complexTypeInfoId"),
    isArray("isArray"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="PACKAGE_ID")
    private String packageId;
    @Id
    
    @Column(name="PACKAGE_VERSION")
    private String packageVersion;
    @Id
    
    @Column(name="PROCESS_ID")
    private String processId;
    @Id
    
    @Column(name="PROCESS_VERSION")
    private String processVersion;
    @Id
    
    @Column(name="DATA_FIELD_ID")
    private String dataFieldId;
    
    @Column(name="DATA_FIELD_NAME")
    private String dataFieldName;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="INITIAL_VALUE")
    private String initialValue;
    
    @Column(name="LENGTH_BYTES")
    private Long lengthBytes;
    
    @Column(name="DATA_TYPE_ENUM_ID")
    private String dataTypeEnumId;
    
    @Column(name="COMPLEX_TYPE_INFO_ID")
    private String complexTypeInfoId;
    
    @Column(name="IS_ARRAY")
    private String isArray;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="DATA_TYPE_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration dataTypeEnumeration = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="COMPLEX_TYPE_INFO_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private WorkflowComplexTypeInfo workflowComplexTypeInfo = null;
    private transient WorkflowPackage workflowPackage = null;
    private transient WorkflowProcess workflowProcess = null;

  /**
   * Default constructor.
   */
  public WorkflowDataField() {
      super();
      this.baseEntityName = "WorkflowDataField";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("packageId");this.primaryKeyNames.add("packageVersion");this.primaryKeyNames.add("processId");this.primaryKeyNames.add("processVersion");this.primaryKeyNames.add("dataFieldId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WorkflowDataField(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param packageId the packageId to set
     */
    public void setPackageId(String packageId) {
        this.packageId = packageId;
    }
    /**
     * Auto generated value setter.
     * @param packageVersion the packageVersion to set
     */
    public void setPackageVersion(String packageVersion) {
        this.packageVersion = packageVersion;
    }
    /**
     * Auto generated value setter.
     * @param processId the processId to set
     */
    public void setProcessId(String processId) {
        this.processId = processId;
    }
    /**
     * Auto generated value setter.
     * @param processVersion the processVersion to set
     */
    public void setProcessVersion(String processVersion) {
        this.processVersion = processVersion;
    }
    /**
     * Auto generated value setter.
     * @param dataFieldId the dataFieldId to set
     */
    public void setDataFieldId(String dataFieldId) {
        this.dataFieldId = dataFieldId;
    }
    /**
     * Auto generated value setter.
     * @param dataFieldName the dataFieldName to set
     */
    public void setDataFieldName(String dataFieldName) {
        this.dataFieldName = dataFieldName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param initialValue the initialValue to set
     */
    public void setInitialValue(String initialValue) {
        this.initialValue = initialValue;
    }
    /**
     * Auto generated value setter.
     * @param lengthBytes the lengthBytes to set
     */
    public void setLengthBytes(Long lengthBytes) {
        this.lengthBytes = lengthBytes;
    }
    /**
     * Auto generated value setter.
     * @param dataTypeEnumId the dataTypeEnumId to set
     */
    public void setDataTypeEnumId(String dataTypeEnumId) {
        this.dataTypeEnumId = dataTypeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param complexTypeInfoId the complexTypeInfoId to set
     */
    public void setComplexTypeInfoId(String complexTypeInfoId) {
        this.complexTypeInfoId = complexTypeInfoId;
    }
    /**
     * Auto generated value setter.
     * @param isArray the isArray to set
     */
    public void setIsArray(String isArray) {
        this.isArray = isArray;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPackageId() {
        return this.packageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPackageVersion() {
        return this.packageVersion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProcessId() {
        return this.processId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProcessVersion() {
        return this.processVersion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataFieldId() {
        return this.dataFieldId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataFieldName() {
        return this.dataFieldName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInitialValue() {
        return this.initialValue;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getLengthBytes() {
        return this.lengthBytes;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataTypeEnumId() {
        return this.dataTypeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComplexTypeInfoId() {
        return this.complexTypeInfoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsArray() {
        return this.isArray;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>DataTypeEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getDataTypeEnumeration() throws RepositoryException {
        if (this.dataTypeEnumeration == null) {
            this.dataTypeEnumeration = getRelatedOne(Enumeration.class, "DataTypeEnumeration");
        }
        return this.dataTypeEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowComplexTypeInfo</code> by the relation named <code>WorkflowComplexTypeInfo</code>.
     * @return the <code>WorkflowComplexTypeInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowComplexTypeInfo getWorkflowComplexTypeInfo() throws RepositoryException {
        if (this.workflowComplexTypeInfo == null) {
            this.workflowComplexTypeInfo = getRelatedOne(WorkflowComplexTypeInfo.class, "WorkflowComplexTypeInfo");
        }
        return this.workflowComplexTypeInfo;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowPackage</code> by the relation named <code>WorkflowPackage</code>.
     * @return the <code>WorkflowPackage</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowPackage getWorkflowPackage() throws RepositoryException {
        if (this.workflowPackage == null) {
            this.workflowPackage = getRelatedOne(WorkflowPackage.class, "WorkflowPackage");
        }
        return this.workflowPackage;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowProcess</code> by the relation named <code>WorkflowProcess</code>.
     * @return the <code>WorkflowProcess</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowProcess getWorkflowProcess() throws RepositoryException {
        if (this.workflowProcess == null) {
            this.workflowProcess = getRelatedOne(WorkflowProcess.class, "WorkflowProcess");
        }
        return this.workflowProcess;
    }

    /**
     * Auto generated value setter.
     * @param dataTypeEnumeration the dataTypeEnumeration to set
    */
    public void setDataTypeEnumeration(Enumeration dataTypeEnumeration) {
        this.dataTypeEnumeration = dataTypeEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param workflowComplexTypeInfo the workflowComplexTypeInfo to set
    */
    public void setWorkflowComplexTypeInfo(WorkflowComplexTypeInfo workflowComplexTypeInfo) {
        this.workflowComplexTypeInfo = workflowComplexTypeInfo;
    }
    /**
     * Auto generated value setter.
     * @param workflowPackage the workflowPackage to set
    */
    public void setWorkflowPackage(WorkflowPackage workflowPackage) {
        this.workflowPackage = workflowPackage;
    }
    /**
     * Auto generated value setter.
     * @param workflowProcess the workflowProcess to set
    */
    public void setWorkflowProcess(WorkflowProcess workflowProcess) {
        this.workflowProcess = workflowProcess;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPackageId((String) mapValue.get("packageId"));
        setPackageVersion((String) mapValue.get("packageVersion"));
        setProcessId((String) mapValue.get("processId"));
        setProcessVersion((String) mapValue.get("processVersion"));
        setDataFieldId((String) mapValue.get("dataFieldId"));
        setDataFieldName((String) mapValue.get("dataFieldName"));
        setDescription((String) mapValue.get("description"));
        setInitialValue((String) mapValue.get("initialValue"));
        setLengthBytes((Long) mapValue.get("lengthBytes"));
        setDataTypeEnumId((String) mapValue.get("dataTypeEnumId"));
        setComplexTypeInfoId((String) mapValue.get("complexTypeInfoId"));
        setIsArray((String) mapValue.get("isArray"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("packageId", getPackageId());
        mapValue.put("packageVersion", getPackageVersion());
        mapValue.put("processId", getProcessId());
        mapValue.put("processVersion", getProcessVersion());
        mapValue.put("dataFieldId", getDataFieldId());
        mapValue.put("dataFieldName", getDataFieldName());
        mapValue.put("description", getDescription());
        mapValue.put("initialValue", getInitialValue());
        mapValue.put("lengthBytes", getLengthBytes());
        mapValue.put("dataTypeEnumId", getDataTypeEnumId());
        mapValue.put("complexTypeInfoId", getComplexTypeInfoId());
        mapValue.put("isArray", getIsArray());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
