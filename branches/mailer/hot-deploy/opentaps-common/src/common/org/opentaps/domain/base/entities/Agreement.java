package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Agreement.
 */
@javax.persistence.Entity
@Table(name="AGREEMENT")
public class Agreement extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("agreementId", "AGREEMENT_ID");
        fields.put("productId", "PRODUCT_ID");
        fields.put("partyIdFrom", "PARTY_ID_FROM");
        fields.put("partyIdTo", "PARTY_ID_TO");
        fields.put("roleTypeIdFrom", "ROLE_TYPE_ID_FROM");
        fields.put("roleTypeIdTo", "ROLE_TYPE_ID_TO");
        fields.put("agreementTypeId", "AGREEMENT_TYPE_ID");
        fields.put("agreementDate", "AGREEMENT_DATE");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("description", "DESCRIPTION");
        fields.put("textData", "TEXT_DATA");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("statusId", "STATUS_ID");
        fields.put("defaultCurrencyUomId", "DEFAULT_CURRENCY_UOM_ID");
        fields.put("fromPartyClassGroupId", "FROM_PARTY_CLASS_GROUP_ID");
        fields.put("toPartyClassGroupId", "TO_PARTY_CLASS_GROUP_ID");
fieldMapColumns.put("Agreement", fields);
}
  public static enum Fields implements EntityFieldInterface<Agreement> {
    agreementId("agreementId"),
    productId("productId"),
    partyIdFrom("partyIdFrom"),
    partyIdTo("partyIdTo"),
    roleTypeIdFrom("roleTypeIdFrom"),
    roleTypeIdTo("roleTypeIdTo"),
    agreementTypeId("agreementTypeId"),
    agreementDate("agreementDate"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    description("description"),
    textData("textData"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    statusId("statusId"),
    defaultCurrencyUomId("defaultCurrencyUomId"),
    fromPartyClassGroupId("fromPartyClassGroupId"),
    toPartyClassGroupId("toPartyClassGroupId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Agreement_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Agreement_GEN")   
    @Id
    
    @Column(name="AGREEMENT_ID")
    private String agreementId;
    
    @Column(name="PRODUCT_ID")
    private String productId;
    
    @Column(name="PARTY_ID_FROM")
    private String partyIdFrom;
    
    @Column(name="PARTY_ID_TO")
    private String partyIdTo;
    
    @Column(name="ROLE_TYPE_ID_FROM")
    private String roleTypeIdFrom;
    
    @Column(name="ROLE_TYPE_ID_TO")
    private String roleTypeIdTo;
    
    @Column(name="AGREEMENT_TYPE_ID")
    private String agreementTypeId;
    
    @Column(name="AGREEMENT_DATE")
    private Timestamp agreementDate;
    
    @Column(name="FROM_DATE")
    private Timestamp fromDate;
    
    @Column(name="THRU_DATE")
    private Timestamp thruDate;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="TEXT_DATA")
    private String textData;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="STATUS_ID")
    private String statusId;
    
    @Column(name="DEFAULT_CURRENCY_UOM_ID")
    private String defaultCurrencyUomId;
    
    @Column(name="FROM_PARTY_CLASS_GROUP_ID")
    private String fromPartyClassGroupId;
    
    @Column(name="TO_PARTY_CLASS_GROUP_ID")
    private String toPartyClassGroupId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Product product = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID_FROM", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party fromParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ROLE_TYPE_ID_FROM", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private RoleType fromRoleType = null;
    private transient PartyRole fromPartyRole = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID_TO", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party toParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ROLE_TYPE_ID_TO", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private RoleType toRoleType = null;
    private transient PartyRole toPartyRole = null;
    private transient List<PartyRelationship> partyRelationships = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="AGREEMENT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private AgreementType agreementType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="AGREEMENT_TYPE_ID")
    private List<AgreementTypeAttr> agreementTypeAttrs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem statusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="FROM_PARTY_CLASS_GROUP_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private PartyClassificationGroup fromPartyClassificationGroup = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="TO_PARTY_CLASS_GROUP_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private PartyClassificationGroup toPartyClassificationGroup = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="AGREEMENT_ID")
    private List<Addendum> addendums = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementAttribute> agreementAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementCategoryAppl> agreementCategoryAppls = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementGeographicalApplic> agreementGeographicalApplics = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementItem> agreementItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementPartyApplic> agreementPartyApplics = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementProductAppl> agreementProductAppls = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementPromoAppl> agreementPromoAppls = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementRole> agreementRoles = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementTerm> agreementTerms = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementTermBilling> agreementTermBillings = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="agreement", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="AGREEMENT_ID")
    private List<AgreementWorkEffortAppl> agreementWorkEffortAppls = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="AGREEMENT_ID")
    private List<InvoiceItemAssoc> invoiceItemAssocs = null;

  /**
   * Default constructor.
   */
  public Agreement() {
      super();
      this.baseEntityName = "Agreement";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("agreementId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Agreement(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param agreementId the agreementId to set
     */
    public void setAgreementId(String agreementId) {
        this.agreementId = agreementId;
    }
    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param partyIdFrom the partyIdFrom to set
     */
    public void setPartyIdFrom(String partyIdFrom) {
        this.partyIdFrom = partyIdFrom;
    }
    /**
     * Auto generated value setter.
     * @param partyIdTo the partyIdTo to set
     */
    public void setPartyIdTo(String partyIdTo) {
        this.partyIdTo = partyIdTo;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeIdFrom the roleTypeIdFrom to set
     */
    public void setRoleTypeIdFrom(String roleTypeIdFrom) {
        this.roleTypeIdFrom = roleTypeIdFrom;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeIdTo the roleTypeIdTo to set
     */
    public void setRoleTypeIdTo(String roleTypeIdTo) {
        this.roleTypeIdTo = roleTypeIdTo;
    }
    /**
     * Auto generated value setter.
     * @param agreementTypeId the agreementTypeId to set
     */
    public void setAgreementTypeId(String agreementTypeId) {
        this.agreementTypeId = agreementTypeId;
    }
    /**
     * Auto generated value setter.
     * @param agreementDate the agreementDate to set
     */
    public void setAgreementDate(Timestamp agreementDate) {
        this.agreementDate = agreementDate;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param textData the textData to set
     */
    public void setTextData(String textData) {
        this.textData = textData;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param defaultCurrencyUomId the defaultCurrencyUomId to set
     */
    public void setDefaultCurrencyUomId(String defaultCurrencyUomId) {
        this.defaultCurrencyUomId = defaultCurrencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param fromPartyClassGroupId the fromPartyClassGroupId to set
     */
    public void setFromPartyClassGroupId(String fromPartyClassGroupId) {
        this.fromPartyClassGroupId = fromPartyClassGroupId;
    }
    /**
     * Auto generated value setter.
     * @param toPartyClassGroupId the toPartyClassGroupId to set
     */
    public void setToPartyClassGroupId(String toPartyClassGroupId) {
        this.toPartyClassGroupId = toPartyClassGroupId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAgreementId() {
        return this.agreementId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyIdFrom() {
        return this.partyIdFrom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyIdTo() {
        return this.partyIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeIdFrom() {
        return this.roleTypeIdFrom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeIdTo() {
        return this.roleTypeIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAgreementTypeId() {
        return this.agreementTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getAgreementDate() {
        return this.agreementDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTextData() {
        return this.textData;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDefaultCurrencyUomId() {
        return this.defaultCurrencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFromPartyClassGroupId() {
        return this.fromPartyClassGroupId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getToPartyClassGroupId() {
        return this.toPartyClassGroupId;
    }

    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>Product</code>.
     * @return the <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public Product getProduct() throws RepositoryException {
        if (this.product == null) {
            this.product = getRelatedOne(Product.class, "Product");
        }
        return this.product;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>FromParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getFromParty() throws RepositoryException {
        if (this.fromParty == null) {
            this.fromParty = getRelatedOne(Party.class, "FromParty");
        }
        return this.fromParty;
    }
    /**
     * Auto generated method that gets the related <code>RoleType</code> by the relation named <code>FromRoleType</code>.
     * @return the <code>RoleType</code>
     * @throws RepositoryException if an error occurs
     */
    public RoleType getFromRoleType() throws RepositoryException {
        if (this.fromRoleType == null) {
            this.fromRoleType = getRelatedOne(RoleType.class, "FromRoleType");
        }
        return this.fromRoleType;
    }
    /**
     * Auto generated method that gets the related <code>PartyRole</code> by the relation named <code>FromPartyRole</code>.
     * @return the <code>PartyRole</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyRole getFromPartyRole() throws RepositoryException {
        if (this.fromPartyRole == null) {
            this.fromPartyRole = getRelatedOne(PartyRole.class, "FromPartyRole");
        }
        return this.fromPartyRole;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>ToParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getToParty() throws RepositoryException {
        if (this.toParty == null) {
            this.toParty = getRelatedOne(Party.class, "ToParty");
        }
        return this.toParty;
    }
    /**
     * Auto generated method that gets the related <code>RoleType</code> by the relation named <code>ToRoleType</code>.
     * @return the <code>RoleType</code>
     * @throws RepositoryException if an error occurs
     */
    public RoleType getToRoleType() throws RepositoryException {
        if (this.toRoleType == null) {
            this.toRoleType = getRelatedOne(RoleType.class, "ToRoleType");
        }
        return this.toRoleType;
    }
    /**
     * Auto generated method that gets the related <code>PartyRole</code> by the relation named <code>ToPartyRole</code>.
     * @return the <code>PartyRole</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyRole getToPartyRole() throws RepositoryException {
        if (this.toPartyRole == null) {
            this.toPartyRole = getRelatedOne(PartyRole.class, "ToPartyRole");
        }
        return this.toPartyRole;
    }
    /**
     * Auto generated method that gets the related <code>PartyRelationship</code> by the relation named <code>PartyRelationship</code>.
     * @return the list of <code>PartyRelationship</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyRelationship> getPartyRelationships() throws RepositoryException {
        if (this.partyRelationships == null) {
            this.partyRelationships = getRelated(PartyRelationship.class, "PartyRelationship");
        }
        return this.partyRelationships;
    }
    /**
     * Auto generated method that gets the related <code>AgreementType</code> by the relation named <code>AgreementType</code>.
     * @return the <code>AgreementType</code>
     * @throws RepositoryException if an error occurs
     */
    public AgreementType getAgreementType() throws RepositoryException {
        if (this.agreementType == null) {
            this.agreementType = getRelatedOne(AgreementType.class, "AgreementType");
        }
        return this.agreementType;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTypeAttr</code> by the relation named <code>AgreementTypeAttr</code>.
     * @return the list of <code>AgreementTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTypeAttr> getAgreementTypeAttrs() throws RepositoryException {
        if (this.agreementTypeAttrs == null) {
            this.agreementTypeAttrs = getRelated(AgreementTypeAttr.class, "AgreementTypeAttr");
        }
        return this.agreementTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>PartyClassificationGroup</code> by the relation named <code>FromPartyClassificationGroup</code>.
     * @return the <code>PartyClassificationGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyClassificationGroup getFromPartyClassificationGroup() throws RepositoryException {
        if (this.fromPartyClassificationGroup == null) {
            this.fromPartyClassificationGroup = getRelatedOne(PartyClassificationGroup.class, "FromPartyClassificationGroup");
        }
        return this.fromPartyClassificationGroup;
    }
    /**
     * Auto generated method that gets the related <code>PartyClassificationGroup</code> by the relation named <code>ToPartyClassificationGroup</code>.
     * @return the <code>PartyClassificationGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyClassificationGroup getToPartyClassificationGroup() throws RepositoryException {
        if (this.toPartyClassificationGroup == null) {
            this.toPartyClassificationGroup = getRelatedOne(PartyClassificationGroup.class, "ToPartyClassificationGroup");
        }
        return this.toPartyClassificationGroup;
    }
    /**
     * Auto generated method that gets the related <code>Addendum</code> by the relation named <code>Addendum</code>.
     * @return the list of <code>Addendum</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Addendum> getAddendums() throws RepositoryException {
        if (this.addendums == null) {
            this.addendums = getRelated(Addendum.class, "Addendum");
        }
        return this.addendums;
    }
    /**
     * Auto generated method that gets the related <code>AgreementAttribute</code> by the relation named <code>AgreementAttribute</code>.
     * @return the list of <code>AgreementAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementAttribute> getAgreementAttributes() throws RepositoryException {
        if (this.agreementAttributes == null) {
            this.agreementAttributes = getRelated(AgreementAttribute.class, "AgreementAttribute");
        }
        return this.agreementAttributes;
    }
    /**
     * Auto generated method that gets the related <code>AgreementCategoryAppl</code> by the relation named <code>AgreementCategoryAppl</code>.
     * @return the list of <code>AgreementCategoryAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementCategoryAppl> getAgreementCategoryAppls() throws RepositoryException {
        if (this.agreementCategoryAppls == null) {
            this.agreementCategoryAppls = getRelated(AgreementCategoryAppl.class, "AgreementCategoryAppl");
        }
        return this.agreementCategoryAppls;
    }
    /**
     * Auto generated method that gets the related <code>AgreementGeographicalApplic</code> by the relation named <code>AgreementGeographicalApplic</code>.
     * @return the list of <code>AgreementGeographicalApplic</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementGeographicalApplic> getAgreementGeographicalApplics() throws RepositoryException {
        if (this.agreementGeographicalApplics == null) {
            this.agreementGeographicalApplics = getRelated(AgreementGeographicalApplic.class, "AgreementGeographicalApplic");
        }
        return this.agreementGeographicalApplics;
    }
    /**
     * Auto generated method that gets the related <code>AgreementItem</code> by the relation named <code>AgreementItem</code>.
     * @return the list of <code>AgreementItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementItem> getAgreementItems() throws RepositoryException {
        if (this.agreementItems == null) {
            this.agreementItems = getRelated(AgreementItem.class, "AgreementItem");
        }
        return this.agreementItems;
    }
    /**
     * Auto generated method that gets the related <code>AgreementPartyApplic</code> by the relation named <code>AgreementPartyApplic</code>.
     * @return the list of <code>AgreementPartyApplic</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementPartyApplic> getAgreementPartyApplics() throws RepositoryException {
        if (this.agreementPartyApplics == null) {
            this.agreementPartyApplics = getRelated(AgreementPartyApplic.class, "AgreementPartyApplic");
        }
        return this.agreementPartyApplics;
    }
    /**
     * Auto generated method that gets the related <code>AgreementProductAppl</code> by the relation named <code>AgreementProductAppl</code>.
     * @return the list of <code>AgreementProductAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementProductAppl> getAgreementProductAppls() throws RepositoryException {
        if (this.agreementProductAppls == null) {
            this.agreementProductAppls = getRelated(AgreementProductAppl.class, "AgreementProductAppl");
        }
        return this.agreementProductAppls;
    }
    /**
     * Auto generated method that gets the related <code>AgreementPromoAppl</code> by the relation named <code>AgreementPromoAppl</code>.
     * @return the list of <code>AgreementPromoAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementPromoAppl> getAgreementPromoAppls() throws RepositoryException {
        if (this.agreementPromoAppls == null) {
            this.agreementPromoAppls = getRelated(AgreementPromoAppl.class, "AgreementPromoAppl");
        }
        return this.agreementPromoAppls;
    }
    /**
     * Auto generated method that gets the related <code>AgreementRole</code> by the relation named <code>AgreementRole</code>.
     * @return the list of <code>AgreementRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementRole> getAgreementRoles() throws RepositoryException {
        if (this.agreementRoles == null) {
            this.agreementRoles = getRelated(AgreementRole.class, "AgreementRole");
        }
        return this.agreementRoles;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTerm</code> by the relation named <code>AgreementTerm</code>.
     * @return the list of <code>AgreementTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTerm> getAgreementTerms() throws RepositoryException {
        if (this.agreementTerms == null) {
            this.agreementTerms = getRelated(AgreementTerm.class, "AgreementTerm");
        }
        return this.agreementTerms;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTermBilling</code> by the relation named <code>AgreementTermBilling</code>.
     * @return the list of <code>AgreementTermBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTermBilling> getAgreementTermBillings() throws RepositoryException {
        if (this.agreementTermBillings == null) {
            this.agreementTermBillings = getRelated(AgreementTermBilling.class, "AgreementTermBilling");
        }
        return this.agreementTermBillings;
    }
    /**
     * Auto generated method that gets the related <code>AgreementWorkEffortAppl</code> by the relation named <code>AgreementWorkEffortAppl</code>.
     * @return the list of <code>AgreementWorkEffortAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementWorkEffortAppl> getAgreementWorkEffortAppls() throws RepositoryException {
        if (this.agreementWorkEffortAppls == null) {
            this.agreementWorkEffortAppls = getRelated(AgreementWorkEffortAppl.class, "AgreementWorkEffortAppl");
        }
        return this.agreementWorkEffortAppls;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItemAssoc</code> by the relation named <code>InvoiceItemAssoc</code>.
     * @return the list of <code>InvoiceItemAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItemAssoc> getInvoiceItemAssocs() throws RepositoryException {
        if (this.invoiceItemAssocs == null) {
            this.invoiceItemAssocs = getRelated(InvoiceItemAssoc.class, "InvoiceItemAssoc");
        }
        return this.invoiceItemAssocs;
    }

    /**
     * Auto generated value setter.
     * @param product the product to set
    */
    public void setProduct(Product product) {
        this.product = product;
    }
    /**
     * Auto generated value setter.
     * @param fromParty the fromParty to set
    */
    public void setFromParty(Party fromParty) {
        this.fromParty = fromParty;
    }
    /**
     * Auto generated value setter.
     * @param fromRoleType the fromRoleType to set
    */
    public void setFromRoleType(RoleType fromRoleType) {
        this.fromRoleType = fromRoleType;
    }
    /**
     * Auto generated value setter.
     * @param fromPartyRole the fromPartyRole to set
    */
    public void setFromPartyRole(PartyRole fromPartyRole) {
        this.fromPartyRole = fromPartyRole;
    }
    /**
     * Auto generated value setter.
     * @param toParty the toParty to set
    */
    public void setToParty(Party toParty) {
        this.toParty = toParty;
    }
    /**
     * Auto generated value setter.
     * @param toRoleType the toRoleType to set
    */
    public void setToRoleType(RoleType toRoleType) {
        this.toRoleType = toRoleType;
    }
    /**
     * Auto generated value setter.
     * @param toPartyRole the toPartyRole to set
    */
    public void setToPartyRole(PartyRole toPartyRole) {
        this.toPartyRole = toPartyRole;
    }
    /**
     * Auto generated value setter.
     * @param partyRelationships the partyRelationships to set
    */
    public void setPartyRelationships(List<PartyRelationship> partyRelationships) {
        this.partyRelationships = partyRelationships;
    }
    /**
     * Auto generated value setter.
     * @param agreementType the agreementType to set
    */
    public void setAgreementType(AgreementType agreementType) {
        this.agreementType = agreementType;
    }
    /**
     * Auto generated value setter.
     * @param agreementTypeAttrs the agreementTypeAttrs to set
    */
    public void setAgreementTypeAttrs(List<AgreementTypeAttr> agreementTypeAttrs) {
        this.agreementTypeAttrs = agreementTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param fromPartyClassificationGroup the fromPartyClassificationGroup to set
    */
    public void setFromPartyClassificationGroup(PartyClassificationGroup fromPartyClassificationGroup) {
        this.fromPartyClassificationGroup = fromPartyClassificationGroup;
    }
    /**
     * Auto generated value setter.
     * @param toPartyClassificationGroup the toPartyClassificationGroup to set
    */
    public void setToPartyClassificationGroup(PartyClassificationGroup toPartyClassificationGroup) {
        this.toPartyClassificationGroup = toPartyClassificationGroup;
    }
    /**
     * Auto generated value setter.
     * @param addendums the addendums to set
    */
    public void setAddendums(List<Addendum> addendums) {
        this.addendums = addendums;
    }
    /**
     * Auto generated value setter.
     * @param agreementAttributes the agreementAttributes to set
    */
    public void setAgreementAttributes(List<AgreementAttribute> agreementAttributes) {
        this.agreementAttributes = agreementAttributes;
    }
    /**
     * Auto generated value setter.
     * @param agreementCategoryAppls the agreementCategoryAppls to set
    */
    public void setAgreementCategoryAppls(List<AgreementCategoryAppl> agreementCategoryAppls) {
        this.agreementCategoryAppls = agreementCategoryAppls;
    }
    /**
     * Auto generated value setter.
     * @param agreementGeographicalApplics the agreementGeographicalApplics to set
    */
    public void setAgreementGeographicalApplics(List<AgreementGeographicalApplic> agreementGeographicalApplics) {
        this.agreementGeographicalApplics = agreementGeographicalApplics;
    }
    /**
     * Auto generated value setter.
     * @param agreementItems the agreementItems to set
    */
    public void setAgreementItems(List<AgreementItem> agreementItems) {
        this.agreementItems = agreementItems;
    }
    /**
     * Auto generated value setter.
     * @param agreementPartyApplics the agreementPartyApplics to set
    */
    public void setAgreementPartyApplics(List<AgreementPartyApplic> agreementPartyApplics) {
        this.agreementPartyApplics = agreementPartyApplics;
    }
    /**
     * Auto generated value setter.
     * @param agreementProductAppls the agreementProductAppls to set
    */
    public void setAgreementProductAppls(List<AgreementProductAppl> agreementProductAppls) {
        this.agreementProductAppls = agreementProductAppls;
    }
    /**
     * Auto generated value setter.
     * @param agreementPromoAppls the agreementPromoAppls to set
    */
    public void setAgreementPromoAppls(List<AgreementPromoAppl> agreementPromoAppls) {
        this.agreementPromoAppls = agreementPromoAppls;
    }
    /**
     * Auto generated value setter.
     * @param agreementRoles the agreementRoles to set
    */
    public void setAgreementRoles(List<AgreementRole> agreementRoles) {
        this.agreementRoles = agreementRoles;
    }
    /**
     * Auto generated value setter.
     * @param agreementTerms the agreementTerms to set
    */
    public void setAgreementTerms(List<AgreementTerm> agreementTerms) {
        this.agreementTerms = agreementTerms;
    }
    /**
     * Auto generated value setter.
     * @param agreementTermBillings the agreementTermBillings to set
    */
    public void setAgreementTermBillings(List<AgreementTermBilling> agreementTermBillings) {
        this.agreementTermBillings = agreementTermBillings;
    }
    /**
     * Auto generated value setter.
     * @param agreementWorkEffortAppls the agreementWorkEffortAppls to set
    */
    public void setAgreementWorkEffortAppls(List<AgreementWorkEffortAppl> agreementWorkEffortAppls) {
        this.agreementWorkEffortAppls = agreementWorkEffortAppls;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItemAssocs the invoiceItemAssocs to set
    */
    public void setInvoiceItemAssocs(List<InvoiceItemAssoc> invoiceItemAssocs) {
        this.invoiceItemAssocs = invoiceItemAssocs;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementAttribute(AgreementAttribute agreementAttribute) {
        if (this.agreementAttributes == null) {
            this.agreementAttributes = new ArrayList<AgreementAttribute>();
        }
        this.agreementAttributes.add(agreementAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementAttribute(AgreementAttribute agreementAttribute) {
        if (this.agreementAttributes == null) {
            return;
        }
        this.agreementAttributes.remove(agreementAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementAttribute() {
        if (this.agreementAttributes == null) {
            return;
        }
        this.agreementAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementCategoryAppl(AgreementCategoryAppl agreementCategoryAppl) {
        if (this.agreementCategoryAppls == null) {
            this.agreementCategoryAppls = new ArrayList<AgreementCategoryAppl>();
        }
        this.agreementCategoryAppls.add(agreementCategoryAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementCategoryAppl(AgreementCategoryAppl agreementCategoryAppl) {
        if (this.agreementCategoryAppls == null) {
            return;
        }
        this.agreementCategoryAppls.remove(agreementCategoryAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementCategoryAppl() {
        if (this.agreementCategoryAppls == null) {
            return;
        }
        this.agreementCategoryAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementGeographicalApplic(AgreementGeographicalApplic agreementGeographicalApplic) {
        if (this.agreementGeographicalApplics == null) {
            this.agreementGeographicalApplics = new ArrayList<AgreementGeographicalApplic>();
        }
        this.agreementGeographicalApplics.add(agreementGeographicalApplic);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementGeographicalApplic(AgreementGeographicalApplic agreementGeographicalApplic) {
        if (this.agreementGeographicalApplics == null) {
            return;
        }
        this.agreementGeographicalApplics.remove(agreementGeographicalApplic);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementGeographicalApplic() {
        if (this.agreementGeographicalApplics == null) {
            return;
        }
        this.agreementGeographicalApplics.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementItem(AgreementItem agreementItem) {
        if (this.agreementItems == null) {
            this.agreementItems = new ArrayList<AgreementItem>();
        }
        this.agreementItems.add(agreementItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementItem(AgreementItem agreementItem) {
        if (this.agreementItems == null) {
            return;
        }
        this.agreementItems.remove(agreementItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementItem() {
        if (this.agreementItems == null) {
            return;
        }
        this.agreementItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementPartyApplic(AgreementPartyApplic agreementPartyApplic) {
        if (this.agreementPartyApplics == null) {
            this.agreementPartyApplics = new ArrayList<AgreementPartyApplic>();
        }
        this.agreementPartyApplics.add(agreementPartyApplic);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementPartyApplic(AgreementPartyApplic agreementPartyApplic) {
        if (this.agreementPartyApplics == null) {
            return;
        }
        this.agreementPartyApplics.remove(agreementPartyApplic);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementPartyApplic() {
        if (this.agreementPartyApplics == null) {
            return;
        }
        this.agreementPartyApplics.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementProductAppl(AgreementProductAppl agreementProductAppl) {
        if (this.agreementProductAppls == null) {
            this.agreementProductAppls = new ArrayList<AgreementProductAppl>();
        }
        this.agreementProductAppls.add(agreementProductAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementProductAppl(AgreementProductAppl agreementProductAppl) {
        if (this.agreementProductAppls == null) {
            return;
        }
        this.agreementProductAppls.remove(agreementProductAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementProductAppl() {
        if (this.agreementProductAppls == null) {
            return;
        }
        this.agreementProductAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementPromoAppl(AgreementPromoAppl agreementPromoAppl) {
        if (this.agreementPromoAppls == null) {
            this.agreementPromoAppls = new ArrayList<AgreementPromoAppl>();
        }
        this.agreementPromoAppls.add(agreementPromoAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementPromoAppl(AgreementPromoAppl agreementPromoAppl) {
        if (this.agreementPromoAppls == null) {
            return;
        }
        this.agreementPromoAppls.remove(agreementPromoAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementPromoAppl() {
        if (this.agreementPromoAppls == null) {
            return;
        }
        this.agreementPromoAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementRole(AgreementRole agreementRole) {
        if (this.agreementRoles == null) {
            this.agreementRoles = new ArrayList<AgreementRole>();
        }
        this.agreementRoles.add(agreementRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementRole(AgreementRole agreementRole) {
        if (this.agreementRoles == null) {
            return;
        }
        this.agreementRoles.remove(agreementRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementRole() {
        if (this.agreementRoles == null) {
            return;
        }
        this.agreementRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementWorkEffortAppl(AgreementWorkEffortAppl agreementWorkEffortAppl) {
        if (this.agreementWorkEffortAppls == null) {
            this.agreementWorkEffortAppls = new ArrayList<AgreementWorkEffortAppl>();
        }
        this.agreementWorkEffortAppls.add(agreementWorkEffortAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementWorkEffortAppl(AgreementWorkEffortAppl agreementWorkEffortAppl) {
        if (this.agreementWorkEffortAppls == null) {
            return;
        }
        this.agreementWorkEffortAppls.remove(agreementWorkEffortAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementWorkEffortAppl() {
        if (this.agreementWorkEffortAppls == null) {
            return;
        }
        this.agreementWorkEffortAppls.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setAgreementId((String) mapValue.get("agreementId"));
        setProductId((String) mapValue.get("productId"));
        setPartyIdFrom((String) mapValue.get("partyIdFrom"));
        setPartyIdTo((String) mapValue.get("partyIdTo"));
        setRoleTypeIdFrom((String) mapValue.get("roleTypeIdFrom"));
        setRoleTypeIdTo((String) mapValue.get("roleTypeIdTo"));
        setAgreementTypeId((String) mapValue.get("agreementTypeId"));
        setAgreementDate((Timestamp) mapValue.get("agreementDate"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setDescription((String) mapValue.get("description"));
        setTextData((String) mapValue.get("textData"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setStatusId((String) mapValue.get("statusId"));
        setDefaultCurrencyUomId((String) mapValue.get("defaultCurrencyUomId"));
        setFromPartyClassGroupId((String) mapValue.get("fromPartyClassGroupId"));
        setToPartyClassGroupId((String) mapValue.get("toPartyClassGroupId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("agreementId", getAgreementId());
        mapValue.put("productId", getProductId());
        mapValue.put("partyIdFrom", getPartyIdFrom());
        mapValue.put("partyIdTo", getPartyIdTo());
        mapValue.put("roleTypeIdFrom", getRoleTypeIdFrom());
        mapValue.put("roleTypeIdTo", getRoleTypeIdTo());
        mapValue.put("agreementTypeId", getAgreementTypeId());
        mapValue.put("agreementDate", getAgreementDate());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("description", getDescription());
        mapValue.put("textData", getTextData());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("statusId", getStatusId());
        mapValue.put("defaultCurrencyUomId", getDefaultCurrencyUomId());
        mapValue.put("fromPartyClassGroupId", getFromPartyClassGroupId());
        mapValue.put("toPartyClassGroupId", getToPartyClassGroupId());
        return mapValue;
    }


}
