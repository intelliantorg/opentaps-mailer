package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity GlReconciliationEntry.
 */
@javax.persistence.Entity
@Table(name="GL_RECONCILIATION_ENTRY")
@IdClass(GlReconciliationEntryPk.class)
public class GlReconciliationEntry extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("glReconciliationId", "GL_RECONCILIATION_ID");
        fields.put("acctgTransId", "ACCTG_TRANS_ID");
        fields.put("acctgTransEntrySeqId", "ACCTG_TRANS_ENTRY_SEQ_ID");
        fields.put("reconciledAmount", "RECONCILED_AMOUNT");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("GlReconciliationEntry", fields);
}
  public static enum Fields implements EntityFieldInterface<GlReconciliationEntry> {
    glReconciliationId("glReconciliationId"),
    acctgTransId("acctgTransId"),
    acctgTransEntrySeqId("acctgTransEntrySeqId"),
    reconciledAmount("reconciledAmount"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="GL_RECONCILIATION_ID")
    private String glReconciliationId;
    @Id
    
    @Column(name="ACCTG_TRANS_ID")
    private String acctgTransId;
    @Id
    
    @Column(name="ACCTG_TRANS_ENTRY_SEQ_ID")
    private String acctgTransEntrySeqId;
    
    @Column(name="RECONCILED_AMOUNT")
    private BigDecimal reconciledAmount;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="GL_RECONCILIATION_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private GlReconciliation glReconciliation = null;
    private transient AcctgTransEntry acctgTransEntry = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ACCTG_TRANS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private AcctgTrans acctgTrans = null;

  /**
   * Default constructor.
   */
  public GlReconciliationEntry() {
      super();
      this.baseEntityName = "GlReconciliationEntry";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("glReconciliationId");this.primaryKeyNames.add("acctgTransId");this.primaryKeyNames.add("acctgTransEntrySeqId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public GlReconciliationEntry(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param glReconciliationId the glReconciliationId to set
     */
    public void setGlReconciliationId(String glReconciliationId) {
        this.glReconciliationId = glReconciliationId;
    }
    /**
     * Auto generated value setter.
     * @param acctgTransId the acctgTransId to set
     */
    public void setAcctgTransId(String acctgTransId) {
        this.acctgTransId = acctgTransId;
    }
    /**
     * Auto generated value setter.
     * @param acctgTransEntrySeqId the acctgTransEntrySeqId to set
     */
    public void setAcctgTransEntrySeqId(String acctgTransEntrySeqId) {
        this.acctgTransEntrySeqId = acctgTransEntrySeqId;
    }
    /**
     * Auto generated value setter.
     * @param reconciledAmount the reconciledAmount to set
     */
    public void setReconciledAmount(BigDecimal reconciledAmount) {
        this.reconciledAmount = reconciledAmount;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGlReconciliationId() {
        return this.glReconciliationId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTransId() {
        return this.acctgTransId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTransEntrySeqId() {
        return this.acctgTransEntrySeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getReconciledAmount() {
        return this.reconciledAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>GlReconciliation</code> by the relation named <code>GlReconciliation</code>.
     * @return the <code>GlReconciliation</code>
     * @throws RepositoryException if an error occurs
     */
    public GlReconciliation getGlReconciliation() throws RepositoryException {
        if (this.glReconciliation == null) {
            this.glReconciliation = getRelatedOne(GlReconciliation.class, "GlReconciliation");
        }
        return this.glReconciliation;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTransEntry</code> by the relation named <code>AcctgTransEntry</code>.
     * @return the <code>AcctgTransEntry</code>
     * @throws RepositoryException if an error occurs
     */
    public AcctgTransEntry getAcctgTransEntry() throws RepositoryException {
        if (this.acctgTransEntry == null) {
            this.acctgTransEntry = getRelatedOne(AcctgTransEntry.class, "AcctgTransEntry");
        }
        return this.acctgTransEntry;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTrans</code> by the relation named <code>AcctgTrans</code>.
     * @return the <code>AcctgTrans</code>
     * @throws RepositoryException if an error occurs
     */
    public AcctgTrans getAcctgTrans() throws RepositoryException {
        if (this.acctgTrans == null) {
            this.acctgTrans = getRelatedOne(AcctgTrans.class, "AcctgTrans");
        }
        return this.acctgTrans;
    }

    /**
     * Auto generated value setter.
     * @param glReconciliation the glReconciliation to set
    */
    public void setGlReconciliation(GlReconciliation glReconciliation) {
        this.glReconciliation = glReconciliation;
    }
    /**
     * Auto generated value setter.
     * @param acctgTransEntry the acctgTransEntry to set
    */
    public void setAcctgTransEntry(AcctgTransEntry acctgTransEntry) {
        this.acctgTransEntry = acctgTransEntry;
    }
    /**
     * Auto generated value setter.
     * @param acctgTrans the acctgTrans to set
    */
    public void setAcctgTrans(AcctgTrans acctgTrans) {
        this.acctgTrans = acctgTrans;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setGlReconciliationId((String) mapValue.get("glReconciliationId"));
        setAcctgTransId((String) mapValue.get("acctgTransId"));
        setAcctgTransEntrySeqId((String) mapValue.get("acctgTransEntrySeqId"));
        setReconciledAmount(convertToBigDecimal(mapValue.get("reconciledAmount")));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("glReconciliationId", getGlReconciliationId());
        mapValue.put("acctgTransId", getAcctgTransId());
        mapValue.put("acctgTransEntrySeqId", getAcctgTransEntrySeqId());
        mapValue.put("reconciledAmount", getReconciledAmount());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
