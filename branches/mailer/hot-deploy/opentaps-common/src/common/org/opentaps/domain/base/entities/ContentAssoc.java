package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ContentAssoc.
 */
@javax.persistence.Entity
@Table(name="CONTENT_ASSOC")
@IdClass(ContentAssocPk.class)
public class ContentAssoc extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("contentId", "CONTENT_ID");
        fields.put("contentIdTo", "CONTENT_ID_TO");
        fields.put("contentAssocTypeId", "CONTENT_ASSOC_TYPE_ID");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("contentAssocPredicateId", "CONTENT_ASSOC_PREDICATE_ID");
        fields.put("dataSourceId", "DATA_SOURCE_ID");
        fields.put("sequenceNum", "SEQUENCE_NUM");
        fields.put("mapKey", "MAP_KEY");
        fields.put("upperCoordinate", "UPPER_COORDINATE");
        fields.put("leftCoordinate", "LEFT_COORDINATE");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ContentAssoc", fields);
}
  public static enum Fields implements EntityFieldInterface<ContentAssoc> {
    contentId("contentId"),
    contentIdTo("contentIdTo"),
    contentAssocTypeId("contentAssocTypeId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    contentAssocPredicateId("contentAssocPredicateId"),
    dataSourceId("dataSourceId"),
    sequenceNum("sequenceNum"),
    mapKey("mapKey"),
    upperCoordinate("upperCoordinate"),
    leftCoordinate("leftCoordinate"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    @Column(name="CONTENT_ID")
    private String contentId;
    @Id
    
    @Column(name="CONTENT_ID_TO")
    private String contentIdTo;
    @Id
    
    @Column(name="CONTENT_ASSOC_TYPE_ID")
    private String contentAssocTypeId;
    @Id
    
    @Column(name="FROM_DATE")
    private Timestamp fromDate;
    
    @Column(name="THRU_DATE")
    private Timestamp thruDate;
    
    @Column(name="CONTENT_ASSOC_PREDICATE_ID")
    private String contentAssocPredicateId;
    
    @Column(name="DATA_SOURCE_ID")
    private String dataSourceId;
    
    @Column(name="SEQUENCE_NUM")
    private Long sequenceNum;
    
    @Column(name="MAP_KEY")
    private String mapKey;
    
    @Column(name="UPPER_COORDINATE")
    private Long upperCoordinate;
    
    @Column(name="LEFT_COORDINATE")
    private Long leftCoordinate;
    
    @Column(name="CREATED_DATE")
    private Timestamp createdDate;
    
    @Column(name="CREATED_BY_USER_LOGIN")
    private String createdByUserLogin;
    
    @Column(name="LAST_MODIFIED_DATE")
    private Timestamp lastModifiedDate;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Content fromContent = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ID_TO", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Content toContent = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ASSOC_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContentAssocType contentAssocType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY_USER_LOGIN", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin relatedCreatedByUserLogin = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="LAST_MODIFIED_BY_USER_LOGIN", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin relatedLastModifiedByUserLogin = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTENT_ASSOC_PREDICATE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContentAssocPredicate contentAssocPredicate = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="DATA_SOURCE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private DataSource dataSource = null;

  /**
   * Default constructor.
   */
  public ContentAssoc() {
      super();
      this.baseEntityName = "ContentAssoc";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("contentId");this.primaryKeyNames.add("contentIdTo");this.primaryKeyNames.add("contentAssocTypeId");this.primaryKeyNames.add("fromDate");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ContentAssoc(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param contentId the contentId to set
     */
    public void setContentId(String contentId) {
        this.contentId = contentId;
    }
    /**
     * Auto generated value setter.
     * @param contentIdTo the contentIdTo to set
     */
    public void setContentIdTo(String contentIdTo) {
        this.contentIdTo = contentIdTo;
    }
    /**
     * Auto generated value setter.
     * @param contentAssocTypeId the contentAssocTypeId to set
     */
    public void setContentAssocTypeId(String contentAssocTypeId) {
        this.contentAssocTypeId = contentAssocTypeId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param contentAssocPredicateId the contentAssocPredicateId to set
     */
    public void setContentAssocPredicateId(String contentAssocPredicateId) {
        this.contentAssocPredicateId = contentAssocPredicateId;
    }
    /**
     * Auto generated value setter.
     * @param dataSourceId the dataSourceId to set
     */
    public void setDataSourceId(String dataSourceId) {
        this.dataSourceId = dataSourceId;
    }
    /**
     * Auto generated value setter.
     * @param sequenceNum the sequenceNum to set
     */
    public void setSequenceNum(Long sequenceNum) {
        this.sequenceNum = sequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param mapKey the mapKey to set
     */
    public void setMapKey(String mapKey) {
        this.mapKey = mapKey;
    }
    /**
     * Auto generated value setter.
     * @param upperCoordinate the upperCoordinate to set
     */
    public void setUpperCoordinate(Long upperCoordinate) {
        this.upperCoordinate = upperCoordinate;
    }
    /**
     * Auto generated value setter.
     * @param leftCoordinate the leftCoordinate to set
     */
    public void setLeftCoordinate(Long leftCoordinate) {
        this.leftCoordinate = leftCoordinate;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentId() {
        return this.contentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentIdTo() {
        return this.contentIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentAssocTypeId() {
        return this.contentAssocTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentAssocPredicateId() {
        return this.contentAssocPredicateId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataSourceId() {
        return this.dataSourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getSequenceNum() {
        return this.sequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMapKey() {
        return this.mapKey;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getUpperCoordinate() {
        return this.upperCoordinate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getLeftCoordinate() {
        return this.leftCoordinate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>FromContent</code>.
     * @return the <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public Content getFromContent() throws RepositoryException {
        if (this.fromContent == null) {
            this.fromContent = getRelatedOne(Content.class, "FromContent");
        }
        return this.fromContent;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>ToContent</code>.
     * @return the <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public Content getToContent() throws RepositoryException {
        if (this.toContent == null) {
            this.toContent = getRelatedOne(Content.class, "ToContent");
        }
        return this.toContent;
    }
    /**
     * Auto generated method that gets the related <code>ContentAssocType</code> by the relation named <code>ContentAssocType</code>.
     * @return the <code>ContentAssocType</code>
     * @throws RepositoryException if an error occurs
     */
    public ContentAssocType getContentAssocType() throws RepositoryException {
        if (this.contentAssocType == null) {
            this.contentAssocType = getRelatedOne(ContentAssocType.class, "ContentAssocType");
        }
        return this.contentAssocType;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>CreatedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedCreatedByUserLogin() throws RepositoryException {
        if (this.relatedCreatedByUserLogin == null) {
            this.relatedCreatedByUserLogin = getRelatedOne(UserLogin.class, "CreatedByUserLogin");
        }
        return this.relatedCreatedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>LastModifiedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedLastModifiedByUserLogin() throws RepositoryException {
        if (this.relatedLastModifiedByUserLogin == null) {
            this.relatedLastModifiedByUserLogin = getRelatedOne(UserLogin.class, "LastModifiedByUserLogin");
        }
        return this.relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>ContentAssocPredicate</code> by the relation named <code>ContentAssocPredicate</code>.
     * @return the <code>ContentAssocPredicate</code>
     * @throws RepositoryException if an error occurs
     */
    public ContentAssocPredicate getContentAssocPredicate() throws RepositoryException {
        if (this.contentAssocPredicate == null) {
            this.contentAssocPredicate = getRelatedOne(ContentAssocPredicate.class, "ContentAssocPredicate");
        }
        return this.contentAssocPredicate;
    }
    /**
     * Auto generated method that gets the related <code>DataSource</code> by the relation named <code>DataSource</code>.
     * @return the <code>DataSource</code>
     * @throws RepositoryException if an error occurs
     */
    public DataSource getDataSource() throws RepositoryException {
        if (this.dataSource == null) {
            this.dataSource = getRelatedOne(DataSource.class, "DataSource");
        }
        return this.dataSource;
    }

    /**
     * Auto generated value setter.
     * @param fromContent the fromContent to set
    */
    public void setFromContent(Content fromContent) {
        this.fromContent = fromContent;
    }
    /**
     * Auto generated value setter.
     * @param toContent the toContent to set
    */
    public void setToContent(Content toContent) {
        this.toContent = toContent;
    }
    /**
     * Auto generated value setter.
     * @param contentAssocType the contentAssocType to set
    */
    public void setContentAssocType(ContentAssocType contentAssocType) {
        this.contentAssocType = contentAssocType;
    }
    /**
     * Auto generated value setter.
     * @param relatedCreatedByUserLogin the relatedCreatedByUserLogin to set
    */
    public void setRelatedCreatedByUserLogin(UserLogin relatedCreatedByUserLogin) {
        this.relatedCreatedByUserLogin = relatedCreatedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param relatedLastModifiedByUserLogin the relatedLastModifiedByUserLogin to set
    */
    public void setRelatedLastModifiedByUserLogin(UserLogin relatedLastModifiedByUserLogin) {
        this.relatedLastModifiedByUserLogin = relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param contentAssocPredicate the contentAssocPredicate to set
    */
    public void setContentAssocPredicate(ContentAssocPredicate contentAssocPredicate) {
        this.contentAssocPredicate = contentAssocPredicate;
    }
    /**
     * Auto generated value setter.
     * @param dataSource the dataSource to set
    */
    public void setDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setContentId((String) mapValue.get("contentId"));
        setContentIdTo((String) mapValue.get("contentIdTo"));
        setContentAssocTypeId((String) mapValue.get("contentAssocTypeId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setContentAssocPredicateId((String) mapValue.get("contentAssocPredicateId"));
        setDataSourceId((String) mapValue.get("dataSourceId"));
        setSequenceNum((Long) mapValue.get("sequenceNum"));
        setMapKey((String) mapValue.get("mapKey"));
        setUpperCoordinate((Long) mapValue.get("upperCoordinate"));
        setLeftCoordinate((Long) mapValue.get("leftCoordinate"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("contentId", getContentId());
        mapValue.put("contentIdTo", getContentIdTo());
        mapValue.put("contentAssocTypeId", getContentAssocTypeId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("contentAssocPredicateId", getContentAssocPredicateId());
        mapValue.put("dataSourceId", getDataSourceId());
        mapValue.put("sequenceNum", getSequenceNum());
        mapValue.put("mapKey", getMapKey());
        mapValue.put("upperCoordinate", getUpperCoordinate());
        mapValue.put("leftCoordinate", getLeftCoordinate());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
