package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity InvoiceTerm.
 */
@javax.persistence.Entity
@Table(name="INVOICE_TERM")
public class InvoiceTerm extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("invoiceTermId", "INVOICE_TERM_ID");
        fields.put("termTypeId", "TERM_TYPE_ID");
        fields.put("invoiceId", "INVOICE_ID");
        fields.put("invoiceItemSeqId", "INVOICE_ITEM_SEQ_ID");
        fields.put("termValue", "TERM_VALUE");
        fields.put("termDays", "TERM_DAYS");
        fields.put("textValue", "TEXT_VALUE");
        fields.put("description", "DESCRIPTION");
        fields.put("uomId", "UOM_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("minQuantity", "MIN_QUANTITY");
        fields.put("maxQuantity", "MAX_QUANTITY");
fieldMapColumns.put("InvoiceTerm", fields);
}
  public static enum Fields implements EntityFieldInterface<InvoiceTerm> {
    invoiceTermId("invoiceTermId"),
    termTypeId("termTypeId"),
    invoiceId("invoiceId"),
    invoiceItemSeqId("invoiceItemSeqId"),
    termValue("termValue"),
    termDays("termDays"),
    textValue("textValue"),
    description("description"),
    uomId("uomId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    minQuantity("minQuantity"),
    maxQuantity("maxQuantity");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="InvoiceTerm_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="InvoiceTerm_GEN")   
    @Id
    
    @Column(name="INVOICE_TERM_ID")
    private String invoiceTermId;
    
    @Column(name="TERM_TYPE_ID")
    private String termTypeId;
    
    @Column(name="INVOICE_ID")
    private String invoiceId;
    
    @Column(name="INVOICE_ITEM_SEQ_ID")
    private String invoiceItemSeqId;
    
    @Column(name="TERM_VALUE")
    private BigDecimal termValue;
    
    @Column(name="TERM_DAYS")
    private Long termDays;
    
    @Column(name="TEXT_VALUE")
    private String textValue;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="UOM_ID")
    private String uomId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="MIN_QUANTITY")
    private BigDecimal minQuantity;
    
    @Column(name="MAX_QUANTITY")
    private BigDecimal maxQuantity;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="TERM_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private TermType termType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Invoice invoice = null;
    private transient InvoiceItem invoiceItem = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoiceTerm", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_TERM_ID")
    private List<InvoiceTermAttribute> invoiceTermAttributes = null;

  /**
   * Default constructor.
   */
  public InvoiceTerm() {
      super();
      this.baseEntityName = "InvoiceTerm";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("invoiceTermId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public InvoiceTerm(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param invoiceTermId the invoiceTermId to set
     */
    public void setInvoiceTermId(String invoiceTermId) {
        this.invoiceTermId = invoiceTermId;
    }
    /**
     * Auto generated value setter.
     * @param termTypeId the termTypeId to set
     */
    public void setTermTypeId(String termTypeId) {
        this.termTypeId = termTypeId;
    }
    /**
     * Auto generated value setter.
     * @param invoiceId the invoiceId to set
     */
    public void setInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItemSeqId the invoiceItemSeqId to set
     */
    public void setInvoiceItemSeqId(String invoiceItemSeqId) {
        this.invoiceItemSeqId = invoiceItemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param termValue the termValue to set
     */
    public void setTermValue(BigDecimal termValue) {
        this.termValue = termValue;
    }
    /**
     * Auto generated value setter.
     * @param termDays the termDays to set
     */
    public void setTermDays(Long termDays) {
        this.termDays = termDays;
    }
    /**
     * Auto generated value setter.
     * @param textValue the textValue to set
     */
    public void setTextValue(String textValue) {
        this.textValue = textValue;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param uomId the uomId to set
     */
    public void setUomId(String uomId) {
        this.uomId = uomId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param minQuantity the minQuantity to set
     */
    public void setMinQuantity(BigDecimal minQuantity) {
        this.minQuantity = minQuantity;
    }
    /**
     * Auto generated value setter.
     * @param maxQuantity the maxQuantity to set
     */
    public void setMaxQuantity(BigDecimal maxQuantity) {
        this.maxQuantity = maxQuantity;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceTermId() {
        return this.invoiceTermId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTermTypeId() {
        return this.termTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceId() {
        return this.invoiceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceItemSeqId() {
        return this.invoiceItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getTermValue() {
        return this.termValue;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getTermDays() {
        return this.termDays;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTextValue() {
        return this.textValue;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUomId() {
        return this.uomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMinQuantity() {
        return this.minQuantity;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMaxQuantity() {
        return this.maxQuantity;
    }

    /**
     * Auto generated method that gets the related <code>TermType</code> by the relation named <code>TermType</code>.
     * @return the <code>TermType</code>
     * @throws RepositoryException if an error occurs
     */
    public TermType getTermType() throws RepositoryException {
        if (this.termType == null) {
            this.termType = getRelatedOne(TermType.class, "TermType");
        }
        return this.termType;
    }
    /**
     * Auto generated method that gets the related <code>Invoice</code> by the relation named <code>Invoice</code>.
     * @return the <code>Invoice</code>
     * @throws RepositoryException if an error occurs
     */
    public Invoice getInvoice() throws RepositoryException {
        if (this.invoice == null) {
            this.invoice = getRelatedOne(Invoice.class, "Invoice");
        }
        return this.invoice;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public InvoiceItem getInvoiceItem() throws RepositoryException {
        if (this.invoiceItem == null) {
            this.invoiceItem = getRelatedOne(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItem;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceTermAttribute</code> by the relation named <code>InvoiceTermAttribute</code>.
     * @return the list of <code>InvoiceTermAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceTermAttribute> getInvoiceTermAttributes() throws RepositoryException {
        if (this.invoiceTermAttributes == null) {
            this.invoiceTermAttributes = getRelated(InvoiceTermAttribute.class, "InvoiceTermAttribute");
        }
        return this.invoiceTermAttributes;
    }

    /**
     * Auto generated value setter.
     * @param termType the termType to set
    */
    public void setTermType(TermType termType) {
        this.termType = termType;
    }
    /**
     * Auto generated value setter.
     * @param invoice the invoice to set
    */
    public void setInvoice(Invoice invoice) {
        this.invoice = invoice;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItem the invoiceItem to set
    */
    public void setInvoiceItem(InvoiceItem invoiceItem) {
        this.invoiceItem = invoiceItem;
    }
    /**
     * Auto generated value setter.
     * @param invoiceTermAttributes the invoiceTermAttributes to set
    */
    public void setInvoiceTermAttributes(List<InvoiceTermAttribute> invoiceTermAttributes) {
        this.invoiceTermAttributes = invoiceTermAttributes;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceTermAttribute(InvoiceTermAttribute invoiceTermAttribute) {
        if (this.invoiceTermAttributes == null) {
            this.invoiceTermAttributes = new ArrayList<InvoiceTermAttribute>();
        }
        this.invoiceTermAttributes.add(invoiceTermAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceTermAttribute(InvoiceTermAttribute invoiceTermAttribute) {
        if (this.invoiceTermAttributes == null) {
            return;
        }
        this.invoiceTermAttributes.remove(invoiceTermAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceTermAttribute() {
        if (this.invoiceTermAttributes == null) {
            return;
        }
        this.invoiceTermAttributes.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setInvoiceTermId((String) mapValue.get("invoiceTermId"));
        setTermTypeId((String) mapValue.get("termTypeId"));
        setInvoiceId((String) mapValue.get("invoiceId"));
        setInvoiceItemSeqId((String) mapValue.get("invoiceItemSeqId"));
        setTermValue(convertToBigDecimal(mapValue.get("termValue")));
        setTermDays((Long) mapValue.get("termDays"));
        setTextValue((String) mapValue.get("textValue"));
        setDescription((String) mapValue.get("description"));
        setUomId((String) mapValue.get("uomId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setMinQuantity(convertToBigDecimal(mapValue.get("minQuantity")));
        setMaxQuantity(convertToBigDecimal(mapValue.get("maxQuantity")));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("invoiceTermId", getInvoiceTermId());
        mapValue.put("termTypeId", getTermTypeId());
        mapValue.put("invoiceId", getInvoiceId());
        mapValue.put("invoiceItemSeqId", getInvoiceItemSeqId());
        mapValue.put("termValue", getTermValue());
        mapValue.put("termDays", getTermDays());
        mapValue.put("textValue", getTextValue());
        mapValue.put("description", getDescription());
        mapValue.put("uomId", getUomId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("minQuantity", getMinQuantity());
        mapValue.put("maxQuantity", getMaxQuantity());
        return mapValue;
    }


}
