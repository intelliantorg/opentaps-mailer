package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ContactMech.
 */
@javax.persistence.Entity
@Table(name="CONTACT_MECH")
public class ContactMech extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("contactMechId", "CONTACT_MECH_ID");
        fields.put("contactMechTypeId", "CONTACT_MECH_TYPE_ID");
        fields.put("infoString", "INFO_STRING");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ContactMech", fields);
}
  public static enum Fields implements EntityFieldInterface<ContactMech> {
    contactMechId("contactMechId"),
    contactMechTypeId("contactMechTypeId"),
    infoString("infoString"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="ContactMech_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="ContactMech_GEN")   
    @Id
    
    @Column(name="CONTACT_MECH_ID")
    private String contactMechId;
    
    @Column(name="CONTACT_MECH_TYPE_ID")
    private String contactMechTypeId;
    
    @Column(name="INFO_STRING")
    private String infoString;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactMechType contactMechType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_TYPE_ID")
    private List<ContactMechTypeAttr> contactMechTypeAttrs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<BillingAccount> billingAccounts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID_FROM")
    private List<CommunicationEvent> fromCommunicationEvents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID_TO")
    private List<CommunicationEvent> toCommunicationEvents = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<CommunicationEventRole> communicationEventRoles = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<ContactListCommStatus> contactListCommStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PREFERRED_CONTACT_MECH_ID")
    private List<ContactListParty> preferredContactListPartys = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<ContactMechAttribute> contactMechAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="fromContactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID_FROM")
    private List<ContactMechLink> fromContactMechLinks = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="toContactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID_TO")
    private List<ContactMechLink> toContactMechLinks = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<CreditCard> creditCards = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="FULFILL_CONTACT_MECH_ID")
    private List<CustRequest> fulfillCustRequests = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<EftAccount> eftAccounts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<FacilityContactMech> facilityContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<FacilityContactMechPurpose> facilityContactMechPurposes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<GiftCard> giftCards = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<Invoice> invoices = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<InvoiceContactMech> invoiceContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<OrderContactMech> orderContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<OrderItemContactMech> orderItemContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<OrderItemShipGroup> orderItemShipGroups = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="TELECOM_CONTACT_MECH_ID")
    private List<OrderItemShipGroup> telecomOrderItemShipGroups = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<PartyContactMech> partyContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<PartyContactMechPurpose> partyContactMechPurposes = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_POSTAL_ADDRESS_ID")
    private List<PartySupplementalData> contactMechPostalAddressPartySupplementalDatas = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_TELECOM_NUMBER_ID")
    private List<PartySupplementalData> contactMechTelecomNumberPartySupplementalDatas = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRIMARY_EMAIL_ID")
    private List<PartySupplementalData> contactMechEmailPartySupplementalDatas = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private PostalAddress postalAddress = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<RespondingParty> respondingPartys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_CONTACT_MECH_ID")
    private List<ReturnHeader> returnHeaders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_PHONE_CONTACT_MECH_ID")
    private List<ReturnHeader> originPhoneReturnHeaders = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_BY_IP_CONTACT_MECH_ID")
    private List<ServerHit> idByIpServerHits = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="REF_BY_WEB_CONTACT_MECH_ID")
    private List<ServerHit> refByWebServerHits = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_CONTACT_MECH_ID")
    private List<Shipment> originShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="DESTINATION_CONTACT_MECH_ID")
    private List<Shipment> destShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<ShipmentContactMech> shipmentContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_CONTACT_MECH_ID")
    private List<ShipmentRouteSegment> originShipmentRouteSegments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="DEST_CONTACT_MECH_ID")
    private List<ShipmentRouteSegment> destShipmentRouteSegments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<ShoppingList> shoppingLists = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<Subscription> subscriptions = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private TelecomNumber telecomNumber = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<Visit> visits = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contactMech", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="CONTACT_MECH_ID")
    private List<WorkEffortContactMech> workEffortContactMeches = null;

  /**
   * Default constructor.
   */
  public ContactMech() {
      super();
      this.baseEntityName = "ContactMech";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("contactMechId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ContactMech(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param contactMechId the contactMechId to set
     */
    public void setContactMechId(String contactMechId) {
        this.contactMechId = contactMechId;
    }
    /**
     * Auto generated value setter.
     * @param contactMechTypeId the contactMechTypeId to set
     */
    public void setContactMechTypeId(String contactMechTypeId) {
        this.contactMechTypeId = contactMechTypeId;
    }
    /**
     * Auto generated value setter.
     * @param infoString the infoString to set
     */
    public void setInfoString(String infoString) {
        this.infoString = infoString;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechId() {
        return this.contactMechId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechTypeId() {
        return this.contactMechTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInfoString() {
        return this.infoString;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>ContactMechType</code> by the relation named <code>ContactMechType</code>.
     * @return the <code>ContactMechType</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMechType getContactMechType() throws RepositoryException {
        if (this.contactMechType == null) {
            this.contactMechType = getRelatedOne(ContactMechType.class, "ContactMechType");
        }
        return this.contactMechType;
    }
    /**
     * Auto generated method that gets the related <code>ContactMechTypeAttr</code> by the relation named <code>ContactMechTypeAttr</code>.
     * @return the list of <code>ContactMechTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactMechTypeAttr> getContactMechTypeAttrs() throws RepositoryException {
        if (this.contactMechTypeAttrs == null) {
            this.contactMechTypeAttrs = getRelated(ContactMechTypeAttr.class, "ContactMechTypeAttr");
        }
        return this.contactMechTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>BillingAccount</code> by the relation named <code>BillingAccount</code>.
     * @return the list of <code>BillingAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BillingAccount> getBillingAccounts() throws RepositoryException {
        if (this.billingAccounts == null) {
            this.billingAccounts = getRelated(BillingAccount.class, "BillingAccount");
        }
        return this.billingAccounts;
    }
    /**
     * Auto generated method that gets the related <code>CommunicationEvent</code> by the relation named <code>FromCommunicationEvent</code>.
     * @return the list of <code>CommunicationEvent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommunicationEvent> getFromCommunicationEvents() throws RepositoryException {
        if (this.fromCommunicationEvents == null) {
            this.fromCommunicationEvents = getRelated(CommunicationEvent.class, "FromCommunicationEvent");
        }
        return this.fromCommunicationEvents;
    }
    /**
     * Auto generated method that gets the related <code>CommunicationEvent</code> by the relation named <code>ToCommunicationEvent</code>.
     * @return the list of <code>CommunicationEvent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommunicationEvent> getToCommunicationEvents() throws RepositoryException {
        if (this.toCommunicationEvents == null) {
            this.toCommunicationEvents = getRelated(CommunicationEvent.class, "ToCommunicationEvent");
        }
        return this.toCommunicationEvents;
    }
    /**
     * Auto generated method that gets the related <code>CommunicationEventRole</code> by the relation named <code>CommunicationEventRole</code>.
     * @return the list of <code>CommunicationEventRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommunicationEventRole> getCommunicationEventRoles() throws RepositoryException {
        if (this.communicationEventRoles == null) {
            this.communicationEventRoles = getRelated(CommunicationEventRole.class, "CommunicationEventRole");
        }
        return this.communicationEventRoles;
    }
    /**
     * Auto generated method that gets the related <code>ContactListCommStatus</code> by the relation named <code>ContactListCommStatus</code>.
     * @return the list of <code>ContactListCommStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactListCommStatus> getContactListCommStatuses() throws RepositoryException {
        if (this.contactListCommStatuses == null) {
            this.contactListCommStatuses = getRelated(ContactListCommStatus.class, "ContactListCommStatus");
        }
        return this.contactListCommStatuses;
    }
    /**
     * Auto generated method that gets the related <code>ContactListParty</code> by the relation named <code>PreferredContactListParty</code>.
     * @return the list of <code>ContactListParty</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactListParty> getPreferredContactListPartys() throws RepositoryException {
        if (this.preferredContactListPartys == null) {
            this.preferredContactListPartys = getRelated(ContactListParty.class, "PreferredContactListParty");
        }
        return this.preferredContactListPartys;
    }
    /**
     * Auto generated method that gets the related <code>ContactMechAttribute</code> by the relation named <code>ContactMechAttribute</code>.
     * @return the list of <code>ContactMechAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactMechAttribute> getContactMechAttributes() throws RepositoryException {
        if (this.contactMechAttributes == null) {
            this.contactMechAttributes = getRelated(ContactMechAttribute.class, "ContactMechAttribute");
        }
        return this.contactMechAttributes;
    }
    /**
     * Auto generated method that gets the related <code>ContactMechLink</code> by the relation named <code>FromContactMechLink</code>.
     * @return the list of <code>ContactMechLink</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactMechLink> getFromContactMechLinks() throws RepositoryException {
        if (this.fromContactMechLinks == null) {
            this.fromContactMechLinks = getRelated(ContactMechLink.class, "FromContactMechLink");
        }
        return this.fromContactMechLinks;
    }
    /**
     * Auto generated method that gets the related <code>ContactMechLink</code> by the relation named <code>ToContactMechLink</code>.
     * @return the list of <code>ContactMechLink</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactMechLink> getToContactMechLinks() throws RepositoryException {
        if (this.toContactMechLinks == null) {
            this.toContactMechLinks = getRelated(ContactMechLink.class, "ToContactMechLink");
        }
        return this.toContactMechLinks;
    }
    /**
     * Auto generated method that gets the related <code>CreditCard</code> by the relation named <code>CreditCard</code>.
     * @return the list of <code>CreditCard</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CreditCard> getCreditCards() throws RepositoryException {
        if (this.creditCards == null) {
            this.creditCards = getRelated(CreditCard.class, "CreditCard");
        }
        return this.creditCards;
    }
    /**
     * Auto generated method that gets the related <code>CustRequest</code> by the relation named <code>FulfillCustRequest</code>.
     * @return the list of <code>CustRequest</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequest> getFulfillCustRequests() throws RepositoryException {
        if (this.fulfillCustRequests == null) {
            this.fulfillCustRequests = getRelated(CustRequest.class, "FulfillCustRequest");
        }
        return this.fulfillCustRequests;
    }
    /**
     * Auto generated method that gets the related <code>EftAccount</code> by the relation named <code>EftAccount</code>.
     * @return the list of <code>EftAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EftAccount> getEftAccounts() throws RepositoryException {
        if (this.eftAccounts == null) {
            this.eftAccounts = getRelated(EftAccount.class, "EftAccount");
        }
        return this.eftAccounts;
    }
    /**
     * Auto generated method that gets the related <code>FacilityContactMech</code> by the relation named <code>FacilityContactMech</code>.
     * @return the list of <code>FacilityContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FacilityContactMech> getFacilityContactMeches() throws RepositoryException {
        if (this.facilityContactMeches == null) {
            this.facilityContactMeches = getRelated(FacilityContactMech.class, "FacilityContactMech");
        }
        return this.facilityContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>FacilityContactMechPurpose</code> by the relation named <code>FacilityContactMechPurpose</code>.
     * @return the list of <code>FacilityContactMechPurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FacilityContactMechPurpose> getFacilityContactMechPurposes() throws RepositoryException {
        if (this.facilityContactMechPurposes == null) {
            this.facilityContactMechPurposes = getRelated(FacilityContactMechPurpose.class, "FacilityContactMechPurpose");
        }
        return this.facilityContactMechPurposes;
    }
    /**
     * Auto generated method that gets the related <code>GiftCard</code> by the relation named <code>GiftCard</code>.
     * @return the list of <code>GiftCard</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GiftCard> getGiftCards() throws RepositoryException {
        if (this.giftCards == null) {
            this.giftCards = getRelated(GiftCard.class, "GiftCard");
        }
        return this.giftCards;
    }
    /**
     * Auto generated method that gets the related <code>Invoice</code> by the relation named <code>Invoice</code>.
     * @return the list of <code>Invoice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Invoice> getInvoices() throws RepositoryException {
        if (this.invoices == null) {
            this.invoices = getRelated(Invoice.class, "Invoice");
        }
        return this.invoices;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceContactMech</code> by the relation named <code>InvoiceContactMech</code>.
     * @return the list of <code>InvoiceContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceContactMech> getInvoiceContactMeches() throws RepositoryException {
        if (this.invoiceContactMeches == null) {
            this.invoiceContactMeches = getRelated(InvoiceContactMech.class, "InvoiceContactMech");
        }
        return this.invoiceContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderContactMech</code> by the relation named <code>OrderContactMech</code>.
     * @return the list of <code>OrderContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderContactMech> getOrderContactMeches() throws RepositoryException {
        if (this.orderContactMeches == null) {
            this.orderContactMeches = getRelated(OrderContactMech.class, "OrderContactMech");
        }
        return this.orderContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemContactMech</code> by the relation named <code>OrderItemContactMech</code>.
     * @return the list of <code>OrderItemContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemContactMech> getOrderItemContactMeches() throws RepositoryException {
        if (this.orderItemContactMeches == null) {
            this.orderItemContactMeches = getRelated(OrderItemContactMech.class, "OrderItemContactMech");
        }
        return this.orderItemContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroup</code> by the relation named <code>OrderItemShipGroup</code>.
     * @return the list of <code>OrderItemShipGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemShipGroup> getOrderItemShipGroups() throws RepositoryException {
        if (this.orderItemShipGroups == null) {
            this.orderItemShipGroups = getRelated(OrderItemShipGroup.class, "OrderItemShipGroup");
        }
        return this.orderItemShipGroups;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroup</code> by the relation named <code>TelecomOrderItemShipGroup</code>.
     * @return the list of <code>OrderItemShipGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemShipGroup> getTelecomOrderItemShipGroups() throws RepositoryException {
        if (this.telecomOrderItemShipGroups == null) {
            this.telecomOrderItemShipGroups = getRelated(OrderItemShipGroup.class, "TelecomOrderItemShipGroup");
        }
        return this.telecomOrderItemShipGroups;
    }
    /**
     * Auto generated method that gets the related <code>PartyContactMech</code> by the relation named <code>PartyContactMech</code>.
     * @return the list of <code>PartyContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContactMech> getPartyContactMeches() throws RepositoryException {
        if (this.partyContactMeches == null) {
            this.partyContactMeches = getRelated(PartyContactMech.class, "PartyContactMech");
        }
        return this.partyContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>PartyContactMechPurpose</code> by the relation named <code>PartyContactMechPurpose</code>.
     * @return the list of <code>PartyContactMechPurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContactMechPurpose> getPartyContactMechPurposes() throws RepositoryException {
        if (this.partyContactMechPurposes == null) {
            this.partyContactMechPurposes = getRelated(PartyContactMechPurpose.class, "PartyContactMechPurpose");
        }
        return this.partyContactMechPurposes;
    }
    /**
     * Auto generated method that gets the related <code>PartySupplementalData</code> by the relation named <code>ContactMechPostalAddressPartySupplementalData</code>.
     * @return the list of <code>PartySupplementalData</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartySupplementalData> getContactMechPostalAddressPartySupplementalDatas() throws RepositoryException {
        if (this.contactMechPostalAddressPartySupplementalDatas == null) {
            this.contactMechPostalAddressPartySupplementalDatas = getRelated(PartySupplementalData.class, "ContactMechPostalAddressPartySupplementalData");
        }
        return this.contactMechPostalAddressPartySupplementalDatas;
    }
    /**
     * Auto generated method that gets the related <code>PartySupplementalData</code> by the relation named <code>ContactMechTelecomNumberPartySupplementalData</code>.
     * @return the list of <code>PartySupplementalData</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartySupplementalData> getContactMechTelecomNumberPartySupplementalDatas() throws RepositoryException {
        if (this.contactMechTelecomNumberPartySupplementalDatas == null) {
            this.contactMechTelecomNumberPartySupplementalDatas = getRelated(PartySupplementalData.class, "ContactMechTelecomNumberPartySupplementalData");
        }
        return this.contactMechTelecomNumberPartySupplementalDatas;
    }
    /**
     * Auto generated method that gets the related <code>PartySupplementalData</code> by the relation named <code>ContactMechEmailPartySupplementalData</code>.
     * @return the list of <code>PartySupplementalData</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartySupplementalData> getContactMechEmailPartySupplementalDatas() throws RepositoryException {
        if (this.contactMechEmailPartySupplementalDatas == null) {
            this.contactMechEmailPartySupplementalDatas = getRelated(PartySupplementalData.class, "ContactMechEmailPartySupplementalData");
        }
        return this.contactMechEmailPartySupplementalDatas;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddress</code> by the relation named <code>PostalAddress</code>.
     * @return the <code>PostalAddress</code>
     * @throws RepositoryException if an error occurs
     */
    public PostalAddress getPostalAddress() throws RepositoryException {
        if (this.postalAddress == null) {
            this.postalAddress = getRelatedOne(PostalAddress.class, "PostalAddress");
        }
        return this.postalAddress;
    }
    /**
     * Auto generated method that gets the related <code>RespondingParty</code> by the relation named <code>RespondingParty</code>.
     * @return the list of <code>RespondingParty</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RespondingParty> getRespondingPartys() throws RepositoryException {
        if (this.respondingPartys == null) {
            this.respondingPartys = getRelated(RespondingParty.class, "RespondingParty");
        }
        return this.respondingPartys;
    }
    /**
     * Auto generated method that gets the related <code>ReturnHeader</code> by the relation named <code>ReturnHeader</code>.
     * @return the list of <code>ReturnHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnHeader> getReturnHeaders() throws RepositoryException {
        if (this.returnHeaders == null) {
            this.returnHeaders = getRelated(ReturnHeader.class, "ReturnHeader");
        }
        return this.returnHeaders;
    }
    /**
     * Auto generated method that gets the related <code>ReturnHeader</code> by the relation named <code>OriginPhoneReturnHeader</code>.
     * @return the list of <code>ReturnHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnHeader> getOriginPhoneReturnHeaders() throws RepositoryException {
        if (this.originPhoneReturnHeaders == null) {
            this.originPhoneReturnHeaders = getRelated(ReturnHeader.class, "OriginPhoneReturnHeader");
        }
        return this.originPhoneReturnHeaders;
    }
    /**
     * Auto generated method that gets the related <code>ServerHit</code> by the relation named <code>IdByIpServerHit</code>.
     * @return the list of <code>ServerHit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServerHit> getIdByIpServerHits() throws RepositoryException {
        if (this.idByIpServerHits == null) {
            this.idByIpServerHits = getRelated(ServerHit.class, "IdByIpServerHit");
        }
        return this.idByIpServerHits;
    }
    /**
     * Auto generated method that gets the related <code>ServerHit</code> by the relation named <code>RefByWebServerHit</code>.
     * @return the list of <code>ServerHit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServerHit> getRefByWebServerHits() throws RepositoryException {
        if (this.refByWebServerHits == null) {
            this.refByWebServerHits = getRelated(ServerHit.class, "RefByWebServerHit");
        }
        return this.refByWebServerHits;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>OriginShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getOriginShipments() throws RepositoryException {
        if (this.originShipments == null) {
            this.originShipments = getRelated(Shipment.class, "OriginShipment");
        }
        return this.originShipments;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>DestShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getDestShipments() throws RepositoryException {
        if (this.destShipments == null) {
            this.destShipments = getRelated(Shipment.class, "DestShipment");
        }
        return this.destShipments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentContactMech</code> by the relation named <code>ShipmentContactMech</code>.
     * @return the list of <code>ShipmentContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentContactMech> getShipmentContactMeches() throws RepositoryException {
        if (this.shipmentContactMeches == null) {
            this.shipmentContactMeches = getRelated(ShipmentContactMech.class, "ShipmentContactMech");
        }
        return this.shipmentContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentRouteSegment</code> by the relation named <code>OriginShipmentRouteSegment</code>.
     * @return the list of <code>ShipmentRouteSegment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentRouteSegment> getOriginShipmentRouteSegments() throws RepositoryException {
        if (this.originShipmentRouteSegments == null) {
            this.originShipmentRouteSegments = getRelated(ShipmentRouteSegment.class, "OriginShipmentRouteSegment");
        }
        return this.originShipmentRouteSegments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentRouteSegment</code> by the relation named <code>DestShipmentRouteSegment</code>.
     * @return the list of <code>ShipmentRouteSegment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentRouteSegment> getDestShipmentRouteSegments() throws RepositoryException {
        if (this.destShipmentRouteSegments == null) {
            this.destShipmentRouteSegments = getRelated(ShipmentRouteSegment.class, "DestShipmentRouteSegment");
        }
        return this.destShipmentRouteSegments;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingList</code> by the relation named <code>ShoppingList</code>.
     * @return the list of <code>ShoppingList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingList> getShoppingLists() throws RepositoryException {
        if (this.shoppingLists == null) {
            this.shoppingLists = getRelated(ShoppingList.class, "ShoppingList");
        }
        return this.shoppingLists;
    }
    /**
     * Auto generated method that gets the related <code>Subscription</code> by the relation named <code>Subscription</code>.
     * @return the list of <code>Subscription</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Subscription> getSubscriptions() throws RepositoryException {
        if (this.subscriptions == null) {
            this.subscriptions = getRelated(Subscription.class, "Subscription");
        }
        return this.subscriptions;
    }
    /**
     * Auto generated method that gets the related <code>TelecomNumber</code> by the relation named <code>TelecomNumber</code>.
     * @return the <code>TelecomNumber</code>
     * @throws RepositoryException if an error occurs
     */
    public TelecomNumber getTelecomNumber() throws RepositoryException {
        if (this.telecomNumber == null) {
            this.telecomNumber = getRelatedOne(TelecomNumber.class, "TelecomNumber");
        }
        return this.telecomNumber;
    }
    /**
     * Auto generated method that gets the related <code>Visit</code> by the relation named <code>Visit</code>.
     * @return the list of <code>Visit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Visit> getVisits() throws RepositoryException {
        if (this.visits == null) {
            this.visits = getRelated(Visit.class, "Visit");
        }
        return this.visits;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortContactMech</code> by the relation named <code>WorkEffortContactMech</code>.
     * @return the list of <code>WorkEffortContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortContactMech> getWorkEffortContactMeches() throws RepositoryException {
        if (this.workEffortContactMeches == null) {
            this.workEffortContactMeches = getRelated(WorkEffortContactMech.class, "WorkEffortContactMech");
        }
        return this.workEffortContactMeches;
    }

    /**
     * Auto generated value setter.
     * @param contactMechType the contactMechType to set
    */
    public void setContactMechType(ContactMechType contactMechType) {
        this.contactMechType = contactMechType;
    }
    /**
     * Auto generated value setter.
     * @param contactMechTypeAttrs the contactMechTypeAttrs to set
    */
    public void setContactMechTypeAttrs(List<ContactMechTypeAttr> contactMechTypeAttrs) {
        this.contactMechTypeAttrs = contactMechTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param billingAccounts the billingAccounts to set
    */
    public void setBillingAccounts(List<BillingAccount> billingAccounts) {
        this.billingAccounts = billingAccounts;
    }
    /**
     * Auto generated value setter.
     * @param fromCommunicationEvents the fromCommunicationEvents to set
    */
    public void setFromCommunicationEvents(List<CommunicationEvent> fromCommunicationEvents) {
        this.fromCommunicationEvents = fromCommunicationEvents;
    }
    /**
     * Auto generated value setter.
     * @param toCommunicationEvents the toCommunicationEvents to set
    */
    public void setToCommunicationEvents(List<CommunicationEvent> toCommunicationEvents) {
        this.toCommunicationEvents = toCommunicationEvents;
    }
    /**
     * Auto generated value setter.
     * @param communicationEventRoles the communicationEventRoles to set
    */
    public void setCommunicationEventRoles(List<CommunicationEventRole> communicationEventRoles) {
        this.communicationEventRoles = communicationEventRoles;
    }
    /**
     * Auto generated value setter.
     * @param contactListCommStatuses the contactListCommStatuses to set
    */
    public void setContactListCommStatuses(List<ContactListCommStatus> contactListCommStatuses) {
        this.contactListCommStatuses = contactListCommStatuses;
    }
    /**
     * Auto generated value setter.
     * @param preferredContactListPartys the preferredContactListPartys to set
    */
    public void setPreferredContactListPartys(List<ContactListParty> preferredContactListPartys) {
        this.preferredContactListPartys = preferredContactListPartys;
    }
    /**
     * Auto generated value setter.
     * @param contactMechAttributes the contactMechAttributes to set
    */
    public void setContactMechAttributes(List<ContactMechAttribute> contactMechAttributes) {
        this.contactMechAttributes = contactMechAttributes;
    }
    /**
     * Auto generated value setter.
     * @param fromContactMechLinks the fromContactMechLinks to set
    */
    public void setFromContactMechLinks(List<ContactMechLink> fromContactMechLinks) {
        this.fromContactMechLinks = fromContactMechLinks;
    }
    /**
     * Auto generated value setter.
     * @param toContactMechLinks the toContactMechLinks to set
    */
    public void setToContactMechLinks(List<ContactMechLink> toContactMechLinks) {
        this.toContactMechLinks = toContactMechLinks;
    }
    /**
     * Auto generated value setter.
     * @param creditCards the creditCards to set
    */
    public void setCreditCards(List<CreditCard> creditCards) {
        this.creditCards = creditCards;
    }
    /**
     * Auto generated value setter.
     * @param fulfillCustRequests the fulfillCustRequests to set
    */
    public void setFulfillCustRequests(List<CustRequest> fulfillCustRequests) {
        this.fulfillCustRequests = fulfillCustRequests;
    }
    /**
     * Auto generated value setter.
     * @param eftAccounts the eftAccounts to set
    */
    public void setEftAccounts(List<EftAccount> eftAccounts) {
        this.eftAccounts = eftAccounts;
    }
    /**
     * Auto generated value setter.
     * @param facilityContactMeches the facilityContactMeches to set
    */
    public void setFacilityContactMeches(List<FacilityContactMech> facilityContactMeches) {
        this.facilityContactMeches = facilityContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param facilityContactMechPurposes the facilityContactMechPurposes to set
    */
    public void setFacilityContactMechPurposes(List<FacilityContactMechPurpose> facilityContactMechPurposes) {
        this.facilityContactMechPurposes = facilityContactMechPurposes;
    }
    /**
     * Auto generated value setter.
     * @param giftCards the giftCards to set
    */
    public void setGiftCards(List<GiftCard> giftCards) {
        this.giftCards = giftCards;
    }
    /**
     * Auto generated value setter.
     * @param invoices the invoices to set
    */
    public void setInvoices(List<Invoice> invoices) {
        this.invoices = invoices;
    }
    /**
     * Auto generated value setter.
     * @param invoiceContactMeches the invoiceContactMeches to set
    */
    public void setInvoiceContactMeches(List<InvoiceContactMech> invoiceContactMeches) {
        this.invoiceContactMeches = invoiceContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderContactMeches the orderContactMeches to set
    */
    public void setOrderContactMeches(List<OrderContactMech> orderContactMeches) {
        this.orderContactMeches = orderContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderItemContactMeches the orderItemContactMeches to set
    */
    public void setOrderItemContactMeches(List<OrderItemContactMech> orderItemContactMeches) {
        this.orderItemContactMeches = orderItemContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGroups the orderItemShipGroups to set
    */
    public void setOrderItemShipGroups(List<OrderItemShipGroup> orderItemShipGroups) {
        this.orderItemShipGroups = orderItemShipGroups;
    }
    /**
     * Auto generated value setter.
     * @param telecomOrderItemShipGroups the telecomOrderItemShipGroups to set
    */
    public void setTelecomOrderItemShipGroups(List<OrderItemShipGroup> telecomOrderItemShipGroups) {
        this.telecomOrderItemShipGroups = telecomOrderItemShipGroups;
    }
    /**
     * Auto generated value setter.
     * @param partyContactMeches the partyContactMeches to set
    */
    public void setPartyContactMeches(List<PartyContactMech> partyContactMeches) {
        this.partyContactMeches = partyContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param partyContactMechPurposes the partyContactMechPurposes to set
    */
    public void setPartyContactMechPurposes(List<PartyContactMechPurpose> partyContactMechPurposes) {
        this.partyContactMechPurposes = partyContactMechPurposes;
    }
    /**
     * Auto generated value setter.
     * @param contactMechPostalAddressPartySupplementalDatas the contactMechPostalAddressPartySupplementalDatas to set
    */
    public void setContactMechPostalAddressPartySupplementalDatas(List<PartySupplementalData> contactMechPostalAddressPartySupplementalDatas) {
        this.contactMechPostalAddressPartySupplementalDatas = contactMechPostalAddressPartySupplementalDatas;
    }
    /**
     * Auto generated value setter.
     * @param contactMechTelecomNumberPartySupplementalDatas the contactMechTelecomNumberPartySupplementalDatas to set
    */
    public void setContactMechTelecomNumberPartySupplementalDatas(List<PartySupplementalData> contactMechTelecomNumberPartySupplementalDatas) {
        this.contactMechTelecomNumberPartySupplementalDatas = contactMechTelecomNumberPartySupplementalDatas;
    }
    /**
     * Auto generated value setter.
     * @param contactMechEmailPartySupplementalDatas the contactMechEmailPartySupplementalDatas to set
    */
    public void setContactMechEmailPartySupplementalDatas(List<PartySupplementalData> contactMechEmailPartySupplementalDatas) {
        this.contactMechEmailPartySupplementalDatas = contactMechEmailPartySupplementalDatas;
    }
    /**
     * Auto generated value setter.
     * @param postalAddress the postalAddress to set
    */
    public void setPostalAddress(PostalAddress postalAddress) {
        this.postalAddress = postalAddress;
    }
    /**
     * Auto generated value setter.
     * @param respondingPartys the respondingPartys to set
    */
    public void setRespondingPartys(List<RespondingParty> respondingPartys) {
        this.respondingPartys = respondingPartys;
    }
    /**
     * Auto generated value setter.
     * @param returnHeaders the returnHeaders to set
    */
    public void setReturnHeaders(List<ReturnHeader> returnHeaders) {
        this.returnHeaders = returnHeaders;
    }
    /**
     * Auto generated value setter.
     * @param originPhoneReturnHeaders the originPhoneReturnHeaders to set
    */
    public void setOriginPhoneReturnHeaders(List<ReturnHeader> originPhoneReturnHeaders) {
        this.originPhoneReturnHeaders = originPhoneReturnHeaders;
    }
    /**
     * Auto generated value setter.
     * @param idByIpServerHits the idByIpServerHits to set
    */
    public void setIdByIpServerHits(List<ServerHit> idByIpServerHits) {
        this.idByIpServerHits = idByIpServerHits;
    }
    /**
     * Auto generated value setter.
     * @param refByWebServerHits the refByWebServerHits to set
    */
    public void setRefByWebServerHits(List<ServerHit> refByWebServerHits) {
        this.refByWebServerHits = refByWebServerHits;
    }
    /**
     * Auto generated value setter.
     * @param originShipments the originShipments to set
    */
    public void setOriginShipments(List<Shipment> originShipments) {
        this.originShipments = originShipments;
    }
    /**
     * Auto generated value setter.
     * @param destShipments the destShipments to set
    */
    public void setDestShipments(List<Shipment> destShipments) {
        this.destShipments = destShipments;
    }
    /**
     * Auto generated value setter.
     * @param shipmentContactMeches the shipmentContactMeches to set
    */
    public void setShipmentContactMeches(List<ShipmentContactMech> shipmentContactMeches) {
        this.shipmentContactMeches = shipmentContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param originShipmentRouteSegments the originShipmentRouteSegments to set
    */
    public void setOriginShipmentRouteSegments(List<ShipmentRouteSegment> originShipmentRouteSegments) {
        this.originShipmentRouteSegments = originShipmentRouteSegments;
    }
    /**
     * Auto generated value setter.
     * @param destShipmentRouteSegments the destShipmentRouteSegments to set
    */
    public void setDestShipmentRouteSegments(List<ShipmentRouteSegment> destShipmentRouteSegments) {
        this.destShipmentRouteSegments = destShipmentRouteSegments;
    }
    /**
     * Auto generated value setter.
     * @param shoppingLists the shoppingLists to set
    */
    public void setShoppingLists(List<ShoppingList> shoppingLists) {
        this.shoppingLists = shoppingLists;
    }
    /**
     * Auto generated value setter.
     * @param subscriptions the subscriptions to set
    */
    public void setSubscriptions(List<Subscription> subscriptions) {
        this.subscriptions = subscriptions;
    }
    /**
     * Auto generated value setter.
     * @param telecomNumber the telecomNumber to set
    */
    public void setTelecomNumber(TelecomNumber telecomNumber) {
        this.telecomNumber = telecomNumber;
    }
    /**
     * Auto generated value setter.
     * @param visits the visits to set
    */
    public void setVisits(List<Visit> visits) {
        this.visits = visits;
    }
    /**
     * Auto generated value setter.
     * @param workEffortContactMeches the workEffortContactMeches to set
    */
    public void setWorkEffortContactMeches(List<WorkEffortContactMech> workEffortContactMeches) {
        this.workEffortContactMeches = workEffortContactMeches;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addContactListCommStatuse(ContactListCommStatus contactListCommStatuse) {
        if (this.contactListCommStatuses == null) {
            this.contactListCommStatuses = new ArrayList<ContactListCommStatus>();
        }
        this.contactListCommStatuses.add(contactListCommStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContactListCommStatuse(ContactListCommStatus contactListCommStatuse) {
        if (this.contactListCommStatuses == null) {
            return;
        }
        this.contactListCommStatuses.remove(contactListCommStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContactListCommStatuse() {
        if (this.contactListCommStatuses == null) {
            return;
        }
        this.contactListCommStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addContactMechAttribute(ContactMechAttribute contactMechAttribute) {
        if (this.contactMechAttributes == null) {
            this.contactMechAttributes = new ArrayList<ContactMechAttribute>();
        }
        this.contactMechAttributes.add(contactMechAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeContactMechAttribute(ContactMechAttribute contactMechAttribute) {
        if (this.contactMechAttributes == null) {
            return;
        }
        this.contactMechAttributes.remove(contactMechAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearContactMechAttribute() {
        if (this.contactMechAttributes == null) {
            return;
        }
        this.contactMechAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFromContactMechLink(ContactMechLink fromContactMechLink) {
        if (this.fromContactMechLinks == null) {
            this.fromContactMechLinks = new ArrayList<ContactMechLink>();
        }
        this.fromContactMechLinks.add(fromContactMechLink);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFromContactMechLink(ContactMechLink fromContactMechLink) {
        if (this.fromContactMechLinks == null) {
            return;
        }
        this.fromContactMechLinks.remove(fromContactMechLink);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFromContactMechLink() {
        if (this.fromContactMechLinks == null) {
            return;
        }
        this.fromContactMechLinks.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addToContactMechLink(ContactMechLink toContactMechLink) {
        if (this.toContactMechLinks == null) {
            this.toContactMechLinks = new ArrayList<ContactMechLink>();
        }
        this.toContactMechLinks.add(toContactMechLink);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeToContactMechLink(ContactMechLink toContactMechLink) {
        if (this.toContactMechLinks == null) {
            return;
        }
        this.toContactMechLinks.remove(toContactMechLink);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearToContactMechLink() {
        if (this.toContactMechLinks == null) {
            return;
        }
        this.toContactMechLinks.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFacilityContactMeche(FacilityContactMech facilityContactMeche) {
        if (this.facilityContactMeches == null) {
            this.facilityContactMeches = new ArrayList<FacilityContactMech>();
        }
        this.facilityContactMeches.add(facilityContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFacilityContactMeche(FacilityContactMech facilityContactMeche) {
        if (this.facilityContactMeches == null) {
            return;
        }
        this.facilityContactMeches.remove(facilityContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFacilityContactMeche() {
        if (this.facilityContactMeches == null) {
            return;
        }
        this.facilityContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFacilityContactMechPurpose(FacilityContactMechPurpose facilityContactMechPurpose) {
        if (this.facilityContactMechPurposes == null) {
            this.facilityContactMechPurposes = new ArrayList<FacilityContactMechPurpose>();
        }
        this.facilityContactMechPurposes.add(facilityContactMechPurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFacilityContactMechPurpose(FacilityContactMechPurpose facilityContactMechPurpose) {
        if (this.facilityContactMechPurposes == null) {
            return;
        }
        this.facilityContactMechPurposes.remove(facilityContactMechPurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFacilityContactMechPurpose() {
        if (this.facilityContactMechPurposes == null) {
            return;
        }
        this.facilityContactMechPurposes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceContactMeche(InvoiceContactMech invoiceContactMeche) {
        if (this.invoiceContactMeches == null) {
            this.invoiceContactMeches = new ArrayList<InvoiceContactMech>();
        }
        this.invoiceContactMeches.add(invoiceContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceContactMeche(InvoiceContactMech invoiceContactMeche) {
        if (this.invoiceContactMeches == null) {
            return;
        }
        this.invoiceContactMeches.remove(invoiceContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceContactMeche() {
        if (this.invoiceContactMeches == null) {
            return;
        }
        this.invoiceContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderContactMeche(OrderContactMech orderContactMeche) {
        if (this.orderContactMeches == null) {
            this.orderContactMeches = new ArrayList<OrderContactMech>();
        }
        this.orderContactMeches.add(orderContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderContactMeche(OrderContactMech orderContactMeche) {
        if (this.orderContactMeches == null) {
            return;
        }
        this.orderContactMeches.remove(orderContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderContactMeche() {
        if (this.orderContactMeches == null) {
            return;
        }
        this.orderContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyContactMeche(PartyContactMech partyContactMeche) {
        if (this.partyContactMeches == null) {
            this.partyContactMeches = new ArrayList<PartyContactMech>();
        }
        this.partyContactMeches.add(partyContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyContactMeche(PartyContactMech partyContactMeche) {
        if (this.partyContactMeches == null) {
            return;
        }
        this.partyContactMeches.remove(partyContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyContactMeche() {
        if (this.partyContactMeches == null) {
            return;
        }
        this.partyContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPartyContactMechPurpose(PartyContactMechPurpose partyContactMechPurpose) {
        if (this.partyContactMechPurposes == null) {
            this.partyContactMechPurposes = new ArrayList<PartyContactMechPurpose>();
        }
        this.partyContactMechPurposes.add(partyContactMechPurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePartyContactMechPurpose(PartyContactMechPurpose partyContactMechPurpose) {
        if (this.partyContactMechPurposes == null) {
            return;
        }
        this.partyContactMechPurposes.remove(partyContactMechPurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPartyContactMechPurpose() {
        if (this.partyContactMechPurposes == null) {
            return;
        }
        this.partyContactMechPurposes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortContactMeche(WorkEffortContactMech workEffortContactMeche) {
        if (this.workEffortContactMeches == null) {
            this.workEffortContactMeches = new ArrayList<WorkEffortContactMech>();
        }
        this.workEffortContactMeches.add(workEffortContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortContactMeche(WorkEffortContactMech workEffortContactMeche) {
        if (this.workEffortContactMeches == null) {
            return;
        }
        this.workEffortContactMeches.remove(workEffortContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortContactMeche() {
        if (this.workEffortContactMeches == null) {
            return;
        }
        this.workEffortContactMeches.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setContactMechId((String) mapValue.get("contactMechId"));
        setContactMechTypeId((String) mapValue.get("contactMechTypeId"));
        setInfoString((String) mapValue.get("infoString"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("contactMechId", getContactMechId());
        mapValue.put("contactMechTypeId", getContactMechTypeId());
        mapValue.put("infoString", getInfoString());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
