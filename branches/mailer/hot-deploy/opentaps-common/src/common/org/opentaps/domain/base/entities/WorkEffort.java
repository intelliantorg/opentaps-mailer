package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity WorkEffort.
 */
@javax.persistence.Entity
@Table(name="WORK_EFFORT")
public class WorkEffort extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("workEffortId", "WORK_EFFORT_ID");
        fields.put("workEffortTypeId", "WORK_EFFORT_TYPE_ID");
        fields.put("currentStatusId", "CURRENT_STATUS_ID");
        fields.put("lastStatusUpdate", "LAST_STATUS_UPDATE");
        fields.put("workEffortPurposeTypeId", "WORK_EFFORT_PURPOSE_TYPE_ID");
        fields.put("workEffortParentId", "WORK_EFFORT_PARENT_ID");
        fields.put("workflowPackageId", "WORKFLOW_PACKAGE_ID");
        fields.put("workflowPackageVersion", "WORKFLOW_PACKAGE_VERSION");
        fields.put("workflowProcessId", "WORKFLOW_PROCESS_ID");
        fields.put("workflowProcessVersion", "WORKFLOW_PROCESS_VERSION");
        fields.put("workflowActivityId", "WORKFLOW_ACTIVITY_ID");
        fields.put("scopeEnumId", "SCOPE_ENUM_ID");
        fields.put("priority", "PRIORITY");
        fields.put("percentComplete", "PERCENT_COMPLETE");
        fields.put("workEffortName", "WORK_EFFORT_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("locationDesc", "LOCATION_DESC");
        fields.put("estimatedStartDate", "ESTIMATED_START_DATE");
        fields.put("estimatedCompletionDate", "ESTIMATED_COMPLETION_DATE");
        fields.put("actualStartDate", "ACTUAL_START_DATE");
        fields.put("actualCompletionDate", "ACTUAL_COMPLETION_DATE");
        fields.put("estimatedMilliSeconds", "ESTIMATED_MILLI_SECONDS");
        fields.put("estimatedSetupMillis", "ESTIMATED_SETUP_MILLIS");
        fields.put("estimateCalcMethod", "ESTIMATE_CALC_METHOD");
        fields.put("actualMilliSeconds", "ACTUAL_MILLI_SECONDS");
        fields.put("actualSetupMillis", "ACTUAL_SETUP_MILLIS");
        fields.put("totalMilliSecondsAllowed", "TOTAL_MILLI_SECONDS_ALLOWED");
        fields.put("totalMoneyAllowed", "TOTAL_MONEY_ALLOWED");
        fields.put("moneyUomId", "MONEY_UOM_ID");
        fields.put("specialTerms", "SPECIAL_TERMS");
        fields.put("timeTransparency", "TIME_TRANSPARENCY");
        fields.put("universalId", "UNIVERSAL_ID");
        fields.put("sourceReferenceId", "SOURCE_REFERENCE_ID");
        fields.put("fixedAssetId", "FIXED_ASSET_ID");
        fields.put("facilityId", "FACILITY_ID");
        fields.put("infoUrl", "INFO_URL");
        fields.put("recurrenceInfoId", "RECURRENCE_INFO_ID");
        fields.put("runtimeDataId", "RUNTIME_DATA_ID");
        fields.put("noteId", "NOTE_ID");
        fields.put("serviceLoaderName", "SERVICE_LOADER_NAME");
        fields.put("quantityToProduce", "QUANTITY_TO_PRODUCE");
        fields.put("quantityProduced", "QUANTITY_PRODUCED");
        fields.put("quantityRejected", "QUANTITY_REJECTED");
        fields.put("reservPersons", "RESERV_PERSONS");
        fields.put("reserv2ndPPPerc", "RESERV2ND_P_P_PERC");
        fields.put("reservNthPPPerc", "RESERV_NTH_P_P_PERC");
        fields.put("revisionNumber", "REVISION_NUMBER");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("WorkEffort", fields);
}
  public static enum Fields implements EntityFieldInterface<WorkEffort> {
    workEffortId("workEffortId"),
    workEffortTypeId("workEffortTypeId"),
    currentStatusId("currentStatusId"),
    lastStatusUpdate("lastStatusUpdate"),
    workEffortPurposeTypeId("workEffortPurposeTypeId"),
    workEffortParentId("workEffortParentId"),
    workflowPackageId("workflowPackageId"),
    workflowPackageVersion("workflowPackageVersion"),
    workflowProcessId("workflowProcessId"),
    workflowProcessVersion("workflowProcessVersion"),
    workflowActivityId("workflowActivityId"),
    scopeEnumId("scopeEnumId"),
    priority("priority"),
    percentComplete("percentComplete"),
    workEffortName("workEffortName"),
    description("description"),
    locationDesc("locationDesc"),
    estimatedStartDate("estimatedStartDate"),
    estimatedCompletionDate("estimatedCompletionDate"),
    actualStartDate("actualStartDate"),
    actualCompletionDate("actualCompletionDate"),
    estimatedMilliSeconds("estimatedMilliSeconds"),
    estimatedSetupMillis("estimatedSetupMillis"),
    estimateCalcMethod("estimateCalcMethod"),
    actualMilliSeconds("actualMilliSeconds"),
    actualSetupMillis("actualSetupMillis"),
    totalMilliSecondsAllowed("totalMilliSecondsAllowed"),
    totalMoneyAllowed("totalMoneyAllowed"),
    moneyUomId("moneyUomId"),
    specialTerms("specialTerms"),
    timeTransparency("timeTransparency"),
    universalId("universalId"),
    sourceReferenceId("sourceReferenceId"),
    fixedAssetId("fixedAssetId"),
    facilityId("facilityId"),
    infoUrl("infoUrl"),
    recurrenceInfoId("recurrenceInfoId"),
    runtimeDataId("runtimeDataId"),
    noteId("noteId"),
    serviceLoaderName("serviceLoaderName"),
    quantityToProduce("quantityToProduce"),
    quantityProduced("quantityProduced"),
    quantityRejected("quantityRejected"),
    reservPersons("reservPersons"),
    reserv2ndPPPerc("reserv2ndPPPerc"),
    reservNthPPPerc("reservNthPPPerc"),
    revisionNumber("revisionNumber"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="WorkEffort_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="WorkEffort_GEN")   
    @Id
    
    @Column(name="WORK_EFFORT_ID")
    private String workEffortId;
    
    @Column(name="WORK_EFFORT_TYPE_ID")
    private String workEffortTypeId;
    
    @Column(name="CURRENT_STATUS_ID")
    private String currentStatusId;
    
    @Column(name="LAST_STATUS_UPDATE")
    private Timestamp lastStatusUpdate;
    
    @Column(name="WORK_EFFORT_PURPOSE_TYPE_ID")
    private String workEffortPurposeTypeId;
    
    @Column(name="WORK_EFFORT_PARENT_ID")
    private String workEffortParentId;
    
    @Column(name="WORKFLOW_PACKAGE_ID")
    private String workflowPackageId;
    
    @Column(name="WORKFLOW_PACKAGE_VERSION")
    private String workflowPackageVersion;
    
    @Column(name="WORKFLOW_PROCESS_ID")
    private String workflowProcessId;
    
    @Column(name="WORKFLOW_PROCESS_VERSION")
    private String workflowProcessVersion;
    
    @Column(name="WORKFLOW_ACTIVITY_ID")
    private String workflowActivityId;
    
    @Column(name="SCOPE_ENUM_ID")
    private String scopeEnumId;
    
    @Column(name="PRIORITY")
    private Long priority;
    
    @Column(name="PERCENT_COMPLETE")
    private Long percentComplete;
    
    @Column(name="WORK_EFFORT_NAME")
    private String workEffortName;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="LOCATION_DESC")
    private String locationDesc;
    
    @Column(name="ESTIMATED_START_DATE")
    private Timestamp estimatedStartDate;
    
    @Column(name="ESTIMATED_COMPLETION_DATE")
    private Timestamp estimatedCompletionDate;
    
    @Column(name="ACTUAL_START_DATE")
    private Timestamp actualStartDate;
    
    @Column(name="ACTUAL_COMPLETION_DATE")
    private Timestamp actualCompletionDate;
    
    @Column(name="ESTIMATED_MILLI_SECONDS")
    private BigDecimal estimatedMilliSeconds;
    
    @Column(name="ESTIMATED_SETUP_MILLIS")
    private BigDecimal estimatedSetupMillis;
    
    @Column(name="ESTIMATE_CALC_METHOD")
    private String estimateCalcMethod;
    
    @Column(name="ACTUAL_MILLI_SECONDS")
    private BigDecimal actualMilliSeconds;
    
    @Column(name="ACTUAL_SETUP_MILLIS")
    private BigDecimal actualSetupMillis;
    
    @Column(name="TOTAL_MILLI_SECONDS_ALLOWED")
    private BigDecimal totalMilliSecondsAllowed;
    
    @Column(name="TOTAL_MONEY_ALLOWED")
    private BigDecimal totalMoneyAllowed;
    
    @Column(name="MONEY_UOM_ID")
    private String moneyUomId;
    
    @Column(name="SPECIAL_TERMS")
    private String specialTerms;
    
    @Column(name="TIME_TRANSPARENCY")
    private Long timeTransparency;
    
    @Column(name="UNIVERSAL_ID")
    private String universalId;
    
    @Column(name="SOURCE_REFERENCE_ID")
    private String sourceReferenceId;
    
    @Column(name="FIXED_ASSET_ID")
    private String fixedAssetId;
    
    @Column(name="FACILITY_ID")
    private String facilityId;
    
    @Column(name="INFO_URL")
    private String infoUrl;
    
    @Column(name="RECURRENCE_INFO_ID")
    private String recurrenceInfoId;
    
    @Column(name="RUNTIME_DATA_ID")
    private String runtimeDataId;
    
    @Column(name="NOTE_ID")
    private String noteId;
    
    @Column(name="SERVICE_LOADER_NAME")
    private String serviceLoaderName;
    
    @Column(name="QUANTITY_TO_PRODUCE")
    private BigDecimal quantityToProduce;
    
    @Column(name="QUANTITY_PRODUCED")
    private BigDecimal quantityProduced;
    
    @Column(name="QUANTITY_REJECTED")
    private BigDecimal quantityRejected;
    
    @Column(name="RESERV_PERSONS")
    private BigDecimal reservPersons;
    
    @Column(name="RESERV2ND_P_P_PERC")
    private BigDecimal reserv2ndPPPerc;
    
    @Column(name="RESERV_NTH_P_P_PERC")
    private BigDecimal reservNthPPPerc;
    
    @Column(name="REVISION_NUMBER")
    private Long revisionNumber;
    
    @Column(name="CREATED_DATE")
    private Timestamp createdDate;
    
    @Column(name="CREATED_BY_USER_LOGIN")
    private String createdByUserLogin;
    
    @Column(name="LAST_MODIFIED_DATE")
    private Timestamp lastModifiedDate;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private WorkEffortType workEffortType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_PURPOSE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private WorkEffortPurposeType workEffortPurposeType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_PARENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private WorkEffort parentWorkEffort = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_TYPE_ID")
    private List<WorkEffortTypeAttr> workEffortTypeAttrs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CURRENT_STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem currentStatusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SCOPE_ENUM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Enumeration scopeEnumeration = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="FIXED_ASSET_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private FixedAsset fixedAsset = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="FACILITY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Facility facility = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="MONEY_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom moneyUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="RECURRENCE_INFO_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private RecurrenceInfo recurrenceInfo = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="RUNTIME_DATA_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private RuntimeData runtimeData = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="NOTE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private NoteData noteData = null;
    private transient WorkflowPackage workflowPackage = null;
    private transient WorkflowProcess workflowProcess = null;
    private transient WorkflowActivity workflowActivity = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ESTIMATE_CALC_METHOD", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private CustomMethod customMethod = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<AcctgTrans> acctgTranses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<AgreementWorkEffortAppl> agreementWorkEffortAppls = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<CommunicationEventWorkEff> communicationEventWorkEffs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<CostComponent> costComponents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<CustRequestItemWorkEffort> custRequestItemWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<CustRequestWorkEffort> custRequestWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SCHEDULE_WORK_EFFORT_ID")
    private List<FixedAssetMaint> scheduleFixedAssetMaints = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<InventoryItemDetail> inventoryItemDetails = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<OrderHeaderWorkEffort> orderHeaderWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ROUTING_WORK_EFFORT_ID")
    private List<ProductAssoc> routingProductAssocs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="SPECIFIC_ROUTING_WORK_EFFORT_ID")
    private List<ProductAssoc> productAssocs = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="MAINT_TEMPLATE_WORK_EFFORT_ID")
    private List<ProductMaint> maintTemplateProductMaints = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<QuoteItem> quoteItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<QuoteWorkEffort> quoteWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<SalesOpportunityWorkEffort> salesOpportunityWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ESTIMATED_SHIP_WORK_EFF_ID")
    private List<Shipment> estimatedShipShipments = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ESTIMATED_ARRIVAL_WORK_EFF_ID")
    private List<Shipment> estimatedArrivalShipments = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<ShoppingListWorkEffort> shoppingListWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<TimeEntry> timeEntrys = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="WORK_EFFORT_PARENT_ID")
    private List<WorkEffort> childWorkEfforts = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortAssignmentRate> workEffortAssignmentRates = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="fromWorkEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID_FROM")
    private List<WorkEffortAssoc> fromWorkEffortAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="toWorkEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID_TO")
    private List<WorkEffortAssoc> toWorkEffortAssocs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortAttribute> workEffortAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortBilling> workEffortBillings = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortContactMech> workEffortContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortContent> workEffortContents = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortCostCalc> workEffortCostCalcs = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortDeliverableProd> workEffortDeliverableProds = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortFixedAssetAssign> workEffortFixedAssetAssigns = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortFixedAssetStd> workEffortFixedAssetStds = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortGoodStandard> workEffortGoodStandards = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortInventoryAssign> workEffortInventoryAssigns = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortInventoryProduced> workEffortInventoryProduceds = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortKeyword> workEffortKeywords = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortNote> workEffortNotes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortPartyAssignment> workEffortPartyAssignments = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortReview> workEffortReviews = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortSkillStandard> workEffortSkillStandards = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkEffortStatus> workEffortStatuses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PROCESS_WORK_EFFORT_ID")
    private List<WorkEffortTransBox> workEffortTransBoxes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkOrderItemFulfillment> workOrderItemFulfillments = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="workEffort", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="WORK_EFFORT_ID")
    private List<WorkRequirementFulfillment> workRequirementFulfillments = null;

  /**
   * Default constructor.
   */
  public WorkEffort() {
      super();
      this.baseEntityName = "WorkEffort";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("workEffortId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WorkEffort(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param workEffortId the workEffortId to set
     */
    public void setWorkEffortId(String workEffortId) {
        this.workEffortId = workEffortId;
    }
    /**
     * Auto generated value setter.
     * @param workEffortTypeId the workEffortTypeId to set
     */
    public void setWorkEffortTypeId(String workEffortTypeId) {
        this.workEffortTypeId = workEffortTypeId;
    }
    /**
     * Auto generated value setter.
     * @param currentStatusId the currentStatusId to set
     */
    public void setCurrentStatusId(String currentStatusId) {
        this.currentStatusId = currentStatusId;
    }
    /**
     * Auto generated value setter.
     * @param lastStatusUpdate the lastStatusUpdate to set
     */
    public void setLastStatusUpdate(Timestamp lastStatusUpdate) {
        this.lastStatusUpdate = lastStatusUpdate;
    }
    /**
     * Auto generated value setter.
     * @param workEffortPurposeTypeId the workEffortPurposeTypeId to set
     */
    public void setWorkEffortPurposeTypeId(String workEffortPurposeTypeId) {
        this.workEffortPurposeTypeId = workEffortPurposeTypeId;
    }
    /**
     * Auto generated value setter.
     * @param workEffortParentId the workEffortParentId to set
     */
    public void setWorkEffortParentId(String workEffortParentId) {
        this.workEffortParentId = workEffortParentId;
    }
    /**
     * Auto generated value setter.
     * @param workflowPackageId the workflowPackageId to set
     */
    public void setWorkflowPackageId(String workflowPackageId) {
        this.workflowPackageId = workflowPackageId;
    }
    /**
     * Auto generated value setter.
     * @param workflowPackageVersion the workflowPackageVersion to set
     */
    public void setWorkflowPackageVersion(String workflowPackageVersion) {
        this.workflowPackageVersion = workflowPackageVersion;
    }
    /**
     * Auto generated value setter.
     * @param workflowProcessId the workflowProcessId to set
     */
    public void setWorkflowProcessId(String workflowProcessId) {
        this.workflowProcessId = workflowProcessId;
    }
    /**
     * Auto generated value setter.
     * @param workflowProcessVersion the workflowProcessVersion to set
     */
    public void setWorkflowProcessVersion(String workflowProcessVersion) {
        this.workflowProcessVersion = workflowProcessVersion;
    }
    /**
     * Auto generated value setter.
     * @param workflowActivityId the workflowActivityId to set
     */
    public void setWorkflowActivityId(String workflowActivityId) {
        this.workflowActivityId = workflowActivityId;
    }
    /**
     * Auto generated value setter.
     * @param scopeEnumId the scopeEnumId to set
     */
    public void setScopeEnumId(String scopeEnumId) {
        this.scopeEnumId = scopeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param priority the priority to set
     */
    public void setPriority(Long priority) {
        this.priority = priority;
    }
    /**
     * Auto generated value setter.
     * @param percentComplete the percentComplete to set
     */
    public void setPercentComplete(Long percentComplete) {
        this.percentComplete = percentComplete;
    }
    /**
     * Auto generated value setter.
     * @param workEffortName the workEffortName to set
     */
    public void setWorkEffortName(String workEffortName) {
        this.workEffortName = workEffortName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param locationDesc the locationDesc to set
     */
    public void setLocationDesc(String locationDesc) {
        this.locationDesc = locationDesc;
    }
    /**
     * Auto generated value setter.
     * @param estimatedStartDate the estimatedStartDate to set
     */
    public void setEstimatedStartDate(Timestamp estimatedStartDate) {
        this.estimatedStartDate = estimatedStartDate;
    }
    /**
     * Auto generated value setter.
     * @param estimatedCompletionDate the estimatedCompletionDate to set
     */
    public void setEstimatedCompletionDate(Timestamp estimatedCompletionDate) {
        this.estimatedCompletionDate = estimatedCompletionDate;
    }
    /**
     * Auto generated value setter.
     * @param actualStartDate the actualStartDate to set
     */
    public void setActualStartDate(Timestamp actualStartDate) {
        this.actualStartDate = actualStartDate;
    }
    /**
     * Auto generated value setter.
     * @param actualCompletionDate the actualCompletionDate to set
     */
    public void setActualCompletionDate(Timestamp actualCompletionDate) {
        this.actualCompletionDate = actualCompletionDate;
    }
    /**
     * Auto generated value setter.
     * @param estimatedMilliSeconds the estimatedMilliSeconds to set
     */
    public void setEstimatedMilliSeconds(BigDecimal estimatedMilliSeconds) {
        this.estimatedMilliSeconds = estimatedMilliSeconds;
    }
    /**
     * Auto generated value setter.
     * @param estimatedSetupMillis the estimatedSetupMillis to set
     */
    public void setEstimatedSetupMillis(BigDecimal estimatedSetupMillis) {
        this.estimatedSetupMillis = estimatedSetupMillis;
    }
    /**
     * Auto generated value setter.
     * @param estimateCalcMethod the estimateCalcMethod to set
     */
    public void setEstimateCalcMethod(String estimateCalcMethod) {
        this.estimateCalcMethod = estimateCalcMethod;
    }
    /**
     * Auto generated value setter.
     * @param actualMilliSeconds the actualMilliSeconds to set
     */
    public void setActualMilliSeconds(BigDecimal actualMilliSeconds) {
        this.actualMilliSeconds = actualMilliSeconds;
    }
    /**
     * Auto generated value setter.
     * @param actualSetupMillis the actualSetupMillis to set
     */
    public void setActualSetupMillis(BigDecimal actualSetupMillis) {
        this.actualSetupMillis = actualSetupMillis;
    }
    /**
     * Auto generated value setter.
     * @param totalMilliSecondsAllowed the totalMilliSecondsAllowed to set
     */
    public void setTotalMilliSecondsAllowed(BigDecimal totalMilliSecondsAllowed) {
        this.totalMilliSecondsAllowed = totalMilliSecondsAllowed;
    }
    /**
     * Auto generated value setter.
     * @param totalMoneyAllowed the totalMoneyAllowed to set
     */
    public void setTotalMoneyAllowed(BigDecimal totalMoneyAllowed) {
        this.totalMoneyAllowed = totalMoneyAllowed;
    }
    /**
     * Auto generated value setter.
     * @param moneyUomId the moneyUomId to set
     */
    public void setMoneyUomId(String moneyUomId) {
        this.moneyUomId = moneyUomId;
    }
    /**
     * Auto generated value setter.
     * @param specialTerms the specialTerms to set
     */
    public void setSpecialTerms(String specialTerms) {
        this.specialTerms = specialTerms;
    }
    /**
     * Auto generated value setter.
     * @param timeTransparency the timeTransparency to set
     */
    public void setTimeTransparency(Long timeTransparency) {
        this.timeTransparency = timeTransparency;
    }
    /**
     * Auto generated value setter.
     * @param universalId the universalId to set
     */
    public void setUniversalId(String universalId) {
        this.universalId = universalId;
    }
    /**
     * Auto generated value setter.
     * @param sourceReferenceId the sourceReferenceId to set
     */
    public void setSourceReferenceId(String sourceReferenceId) {
        this.sourceReferenceId = sourceReferenceId;
    }
    /**
     * Auto generated value setter.
     * @param fixedAssetId the fixedAssetId to set
     */
    public void setFixedAssetId(String fixedAssetId) {
        this.fixedAssetId = fixedAssetId;
    }
    /**
     * Auto generated value setter.
     * @param facilityId the facilityId to set
     */
    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }
    /**
     * Auto generated value setter.
     * @param infoUrl the infoUrl to set
     */
    public void setInfoUrl(String infoUrl) {
        this.infoUrl = infoUrl;
    }
    /**
     * Auto generated value setter.
     * @param recurrenceInfoId the recurrenceInfoId to set
     */
    public void setRecurrenceInfoId(String recurrenceInfoId) {
        this.recurrenceInfoId = recurrenceInfoId;
    }
    /**
     * Auto generated value setter.
     * @param runtimeDataId the runtimeDataId to set
     */
    public void setRuntimeDataId(String runtimeDataId) {
        this.runtimeDataId = runtimeDataId;
    }
    /**
     * Auto generated value setter.
     * @param noteId the noteId to set
     */
    public void setNoteId(String noteId) {
        this.noteId = noteId;
    }
    /**
     * Auto generated value setter.
     * @param serviceLoaderName the serviceLoaderName to set
     */
    public void setServiceLoaderName(String serviceLoaderName) {
        this.serviceLoaderName = serviceLoaderName;
    }
    /**
     * Auto generated value setter.
     * @param quantityToProduce the quantityToProduce to set
     */
    public void setQuantityToProduce(BigDecimal quantityToProduce) {
        this.quantityToProduce = quantityToProduce;
    }
    /**
     * Auto generated value setter.
     * @param quantityProduced the quantityProduced to set
     */
    public void setQuantityProduced(BigDecimal quantityProduced) {
        this.quantityProduced = quantityProduced;
    }
    /**
     * Auto generated value setter.
     * @param quantityRejected the quantityRejected to set
     */
    public void setQuantityRejected(BigDecimal quantityRejected) {
        this.quantityRejected = quantityRejected;
    }
    /**
     * Auto generated value setter.
     * @param reservPersons the reservPersons to set
     */
    public void setReservPersons(BigDecimal reservPersons) {
        this.reservPersons = reservPersons;
    }
    /**
     * Auto generated value setter.
     * @param reserv2ndPPPerc the reserv2ndPPPerc to set
     */
    public void setReserv2ndPPPerc(BigDecimal reserv2ndPPPerc) {
        this.reserv2ndPPPerc = reserv2ndPPPerc;
    }
    /**
     * Auto generated value setter.
     * @param reservNthPPPerc the reservNthPPPerc to set
     */
    public void setReservNthPPPerc(BigDecimal reservNthPPPerc) {
        this.reservNthPPPerc = reservNthPPPerc;
    }
    /**
     * Auto generated value setter.
     * @param revisionNumber the revisionNumber to set
     */
    public void setRevisionNumber(Long revisionNumber) {
        this.revisionNumber = revisionNumber;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortId() {
        return this.workEffortId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortTypeId() {
        return this.workEffortTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrentStatusId() {
        return this.currentStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastStatusUpdate() {
        return this.lastStatusUpdate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortPurposeTypeId() {
        return this.workEffortPurposeTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortParentId() {
        return this.workEffortParentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkflowPackageId() {
        return this.workflowPackageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkflowPackageVersion() {
        return this.workflowPackageVersion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkflowProcessId() {
        return this.workflowProcessId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkflowProcessVersion() {
        return this.workflowProcessVersion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkflowActivityId() {
        return this.workflowActivityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getScopeEnumId() {
        return this.scopeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getPriority() {
        return this.priority;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getPercentComplete() {
        return this.percentComplete;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortName() {
        return this.workEffortName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLocationDesc() {
        return this.locationDesc;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getEstimatedStartDate() {
        return this.estimatedStartDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getEstimatedCompletionDate() {
        return this.estimatedCompletionDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getActualStartDate() {
        return this.actualStartDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getActualCompletionDate() {
        return this.actualCompletionDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getEstimatedMilliSeconds() {
        return this.estimatedMilliSeconds;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getEstimatedSetupMillis() {
        return this.estimatedSetupMillis;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEstimateCalcMethod() {
        return this.estimateCalcMethod;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getActualMilliSeconds() {
        return this.actualMilliSeconds;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getActualSetupMillis() {
        return this.actualSetupMillis;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getTotalMilliSecondsAllowed() {
        return this.totalMilliSecondsAllowed;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getTotalMoneyAllowed() {
        return this.totalMoneyAllowed;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMoneyUomId() {
        return this.moneyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSpecialTerms() {
        return this.specialTerms;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getTimeTransparency() {
        return this.timeTransparency;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUniversalId() {
        return this.universalId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSourceReferenceId() {
        return this.sourceReferenceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFixedAssetId() {
        return this.fixedAssetId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFacilityId() {
        return this.facilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInfoUrl() {
        return this.infoUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRecurrenceInfoId() {
        return this.recurrenceInfoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRuntimeDataId() {
        return this.runtimeDataId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNoteId() {
        return this.noteId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServiceLoaderName() {
        return this.serviceLoaderName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantityToProduce() {
        return this.quantityToProduce;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantityProduced() {
        return this.quantityProduced;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantityRejected() {
        return this.quantityRejected;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getReservPersons() {
        return this.reservPersons;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getReserv2ndPPPerc() {
        return this.reserv2ndPPPerc;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getReservNthPPPerc() {
        return this.reservNthPPPerc;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getRevisionNumber() {
        return this.revisionNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>WorkEffortType</code> by the relation named <code>WorkEffortType</code>.
     * @return the <code>WorkEffortType</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkEffortType getWorkEffortType() throws RepositoryException {
        if (this.workEffortType == null) {
            this.workEffortType = getRelatedOne(WorkEffortType.class, "WorkEffortType");
        }
        return this.workEffortType;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortPurposeType</code> by the relation named <code>WorkEffortPurposeType</code>.
     * @return the <code>WorkEffortPurposeType</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkEffortPurposeType getWorkEffortPurposeType() throws RepositoryException {
        if (this.workEffortPurposeType == null) {
            this.workEffortPurposeType = getRelatedOne(WorkEffortPurposeType.class, "WorkEffortPurposeType");
        }
        return this.workEffortPurposeType;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>ParentWorkEffort</code>.
     * @return the <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkEffort getParentWorkEffort() throws RepositoryException {
        if (this.parentWorkEffort == null) {
            this.parentWorkEffort = getRelatedOne(WorkEffort.class, "ParentWorkEffort");
        }
        return this.parentWorkEffort;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortTypeAttr</code> by the relation named <code>WorkEffortTypeAttr</code>.
     * @return the list of <code>WorkEffortTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortTypeAttr> getWorkEffortTypeAttrs() throws RepositoryException {
        if (this.workEffortTypeAttrs == null) {
            this.workEffortTypeAttrs = getRelated(WorkEffortTypeAttr.class, "WorkEffortTypeAttr");
        }
        return this.workEffortTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>CurrentStatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getCurrentStatusItem() throws RepositoryException {
        if (this.currentStatusItem == null) {
            this.currentStatusItem = getRelatedOne(StatusItem.class, "CurrentStatusItem");
        }
        return this.currentStatusItem;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>ScopeEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getScopeEnumeration() throws RepositoryException {
        if (this.scopeEnumeration == null) {
            this.scopeEnumeration = getRelatedOne(Enumeration.class, "ScopeEnumeration");
        }
        return this.scopeEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>FixedAsset</code> by the relation named <code>FixedAsset</code>.
     * @return the <code>FixedAsset</code>
     * @throws RepositoryException if an error occurs
     */
    public FixedAsset getFixedAsset() throws RepositoryException {
        if (this.fixedAsset == null) {
            this.fixedAsset = getRelatedOne(FixedAsset.class, "FixedAsset");
        }
        return this.fixedAsset;
    }
    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>Facility</code>.
     * @return the <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public Facility getFacility() throws RepositoryException {
        if (this.facility == null) {
            this.facility = getRelatedOne(Facility.class, "Facility");
        }
        return this.facility;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>MoneyUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getMoneyUom() throws RepositoryException {
        if (this.moneyUom == null) {
            this.moneyUom = getRelatedOne(Uom.class, "MoneyUom");
        }
        return this.moneyUom;
    }
    /**
     * Auto generated method that gets the related <code>RecurrenceInfo</code> by the relation named <code>RecurrenceInfo</code>.
     * @return the <code>RecurrenceInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public RecurrenceInfo getRecurrenceInfo() throws RepositoryException {
        if (this.recurrenceInfo == null) {
            this.recurrenceInfo = getRelatedOne(RecurrenceInfo.class, "RecurrenceInfo");
        }
        return this.recurrenceInfo;
    }
    /**
     * Auto generated method that gets the related <code>RuntimeData</code> by the relation named <code>RuntimeData</code>.
     * @return the <code>RuntimeData</code>
     * @throws RepositoryException if an error occurs
     */
    public RuntimeData getRuntimeData() throws RepositoryException {
        if (this.runtimeData == null) {
            this.runtimeData = getRelatedOne(RuntimeData.class, "RuntimeData");
        }
        return this.runtimeData;
    }
    /**
     * Auto generated method that gets the related <code>NoteData</code> by the relation named <code>NoteData</code>.
     * @return the <code>NoteData</code>
     * @throws RepositoryException if an error occurs
     */
    public NoteData getNoteData() throws RepositoryException {
        if (this.noteData == null) {
            this.noteData = getRelatedOne(NoteData.class, "NoteData");
        }
        return this.noteData;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowPackage</code> by the relation named <code>WorkflowPackage</code>.
     * @return the <code>WorkflowPackage</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowPackage getWorkflowPackage() throws RepositoryException {
        if (this.workflowPackage == null) {
            this.workflowPackage = getRelatedOne(WorkflowPackage.class, "WorkflowPackage");
        }
        return this.workflowPackage;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowProcess</code> by the relation named <code>WorkflowProcess</code>.
     * @return the <code>WorkflowProcess</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowProcess getWorkflowProcess() throws RepositoryException {
        if (this.workflowProcess == null) {
            this.workflowProcess = getRelatedOne(WorkflowProcess.class, "WorkflowProcess");
        }
        return this.workflowProcess;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowActivity</code> by the relation named <code>WorkflowActivity</code>.
     * @return the <code>WorkflowActivity</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowActivity getWorkflowActivity() throws RepositoryException {
        if (this.workflowActivity == null) {
            this.workflowActivity = getRelatedOne(WorkflowActivity.class, "WorkflowActivity");
        }
        return this.workflowActivity;
    }
    /**
     * Auto generated method that gets the related <code>CustomMethod</code> by the relation named <code>CustomMethod</code>.
     * @return the <code>CustomMethod</code>
     * @throws RepositoryException if an error occurs
     */
    public CustomMethod getCustomMethod() throws RepositoryException {
        if (this.customMethod == null) {
            this.customMethod = getRelatedOne(CustomMethod.class, "CustomMethod");
        }
        return this.customMethod;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTrans</code> by the relation named <code>AcctgTrans</code>.
     * @return the list of <code>AcctgTrans</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTrans> getAcctgTranses() throws RepositoryException {
        if (this.acctgTranses == null) {
            this.acctgTranses = getRelated(AcctgTrans.class, "AcctgTrans");
        }
        return this.acctgTranses;
    }
    /**
     * Auto generated method that gets the related <code>AgreementWorkEffortAppl</code> by the relation named <code>AgreementWorkEffortAppl</code>.
     * @return the list of <code>AgreementWorkEffortAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementWorkEffortAppl> getAgreementWorkEffortAppls() throws RepositoryException {
        if (this.agreementWorkEffortAppls == null) {
            this.agreementWorkEffortAppls = getRelated(AgreementWorkEffortAppl.class, "AgreementWorkEffortAppl");
        }
        return this.agreementWorkEffortAppls;
    }
    /**
     * Auto generated method that gets the related <code>CommunicationEventWorkEff</code> by the relation named <code>CommunicationEventWorkEff</code>.
     * @return the list of <code>CommunicationEventWorkEff</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CommunicationEventWorkEff> getCommunicationEventWorkEffs() throws RepositoryException {
        if (this.communicationEventWorkEffs == null) {
            this.communicationEventWorkEffs = getRelated(CommunicationEventWorkEff.class, "CommunicationEventWorkEff");
        }
        return this.communicationEventWorkEffs;
    }
    /**
     * Auto generated method that gets the related <code>CostComponent</code> by the relation named <code>CostComponent</code>.
     * @return the list of <code>CostComponent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponent> getCostComponents() throws RepositoryException {
        if (this.costComponents == null) {
            this.costComponents = getRelated(CostComponent.class, "CostComponent");
        }
        return this.costComponents;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestItemWorkEffort</code> by the relation named <code>CustRequestItemWorkEffort</code>.
     * @return the list of <code>CustRequestItemWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestItemWorkEffort> getCustRequestItemWorkEfforts() throws RepositoryException {
        if (this.custRequestItemWorkEfforts == null) {
            this.custRequestItemWorkEfforts = getRelated(CustRequestItemWorkEffort.class, "CustRequestItemWorkEffort");
        }
        return this.custRequestItemWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>CustRequestWorkEffort</code> by the relation named <code>CustRequestWorkEffort</code>.
     * @return the list of <code>CustRequestWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequestWorkEffort> getCustRequestWorkEfforts() throws RepositoryException {
        if (this.custRequestWorkEfforts == null) {
            this.custRequestWorkEfforts = getRelated(CustRequestWorkEffort.class, "CustRequestWorkEffort");
        }
        return this.custRequestWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>FixedAssetMaint</code> by the relation named <code>ScheduleFixedAssetMaint</code>.
     * @return the list of <code>FixedAssetMaint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAssetMaint> getScheduleFixedAssetMaints() throws RepositoryException {
        if (this.scheduleFixedAssetMaints == null) {
            this.scheduleFixedAssetMaints = getRelated(FixedAssetMaint.class, "ScheduleFixedAssetMaint");
        }
        return this.scheduleFixedAssetMaints;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemDetail</code> by the relation named <code>InventoryItemDetail</code>.
     * @return the list of <code>InventoryItemDetail</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemDetail> getInventoryItemDetails() throws RepositoryException {
        if (this.inventoryItemDetails == null) {
            this.inventoryItemDetails = getRelated(InventoryItemDetail.class, "InventoryItemDetail");
        }
        return this.inventoryItemDetails;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeaderWorkEffort</code> by the relation named <code>OrderHeaderWorkEffort</code>.
     * @return the list of <code>OrderHeaderWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeaderWorkEffort> getOrderHeaderWorkEfforts() throws RepositoryException {
        if (this.orderHeaderWorkEfforts == null) {
            this.orderHeaderWorkEfforts = getRelated(OrderHeaderWorkEffort.class, "OrderHeaderWorkEffort");
        }
        return this.orderHeaderWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>ProductAssoc</code> by the relation named <code>RoutingProductAssoc</code>.
     * @return the list of <code>ProductAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductAssoc> getRoutingProductAssocs() throws RepositoryException {
        if (this.routingProductAssocs == null) {
            this.routingProductAssocs = getRelated(ProductAssoc.class, "RoutingProductAssoc");
        }
        return this.routingProductAssocs;
    }
    /**
     * Auto generated method that gets the related <code>ProductAssoc</code> by the relation named <code>ProductAssoc</code>.
     * @return the list of <code>ProductAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductAssoc> getProductAssocs() throws RepositoryException {
        if (this.productAssocs == null) {
            this.productAssocs = getRelated(ProductAssoc.class, "ProductAssoc");
        }
        return this.productAssocs;
    }
    /**
     * Auto generated method that gets the related <code>ProductMaint</code> by the relation named <code>MaintTemplateProductMaint</code>.
     * @return the list of <code>ProductMaint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductMaint> getMaintTemplateProductMaints() throws RepositoryException {
        if (this.maintTemplateProductMaints == null) {
            this.maintTemplateProductMaints = getRelated(ProductMaint.class, "MaintTemplateProductMaint");
        }
        return this.maintTemplateProductMaints;
    }
    /**
     * Auto generated method that gets the related <code>QuoteItem</code> by the relation named <code>QuoteItem</code>.
     * @return the list of <code>QuoteItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteItem> getQuoteItems() throws RepositoryException {
        if (this.quoteItems == null) {
            this.quoteItems = getRelated(QuoteItem.class, "QuoteItem");
        }
        return this.quoteItems;
    }
    /**
     * Auto generated method that gets the related <code>QuoteWorkEffort</code> by the relation named <code>QuoteWorkEffort</code>.
     * @return the list of <code>QuoteWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteWorkEffort> getQuoteWorkEfforts() throws RepositoryException {
        if (this.quoteWorkEfforts == null) {
            this.quoteWorkEfforts = getRelated(QuoteWorkEffort.class, "QuoteWorkEffort");
        }
        return this.quoteWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>SalesOpportunityWorkEffort</code> by the relation named <code>SalesOpportunityWorkEffort</code>.
     * @return the list of <code>SalesOpportunityWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesOpportunityWorkEffort> getSalesOpportunityWorkEfforts() throws RepositoryException {
        if (this.salesOpportunityWorkEfforts == null) {
            this.salesOpportunityWorkEfforts = getRelated(SalesOpportunityWorkEffort.class, "SalesOpportunityWorkEffort");
        }
        return this.salesOpportunityWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>EstimatedShipShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getEstimatedShipShipments() throws RepositoryException {
        if (this.estimatedShipShipments == null) {
            this.estimatedShipShipments = getRelated(Shipment.class, "EstimatedShipShipment");
        }
        return this.estimatedShipShipments;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>EstimatedArrivalShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getEstimatedArrivalShipments() throws RepositoryException {
        if (this.estimatedArrivalShipments == null) {
            this.estimatedArrivalShipments = getRelated(Shipment.class, "EstimatedArrivalShipment");
        }
        return this.estimatedArrivalShipments;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingListWorkEffort</code> by the relation named <code>ShoppingListWorkEffort</code>.
     * @return the list of <code>ShoppingListWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingListWorkEffort> getShoppingListWorkEfforts() throws RepositoryException {
        if (this.shoppingListWorkEfforts == null) {
            this.shoppingListWorkEfforts = getRelated(ShoppingListWorkEffort.class, "ShoppingListWorkEffort");
        }
        return this.shoppingListWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>TimeEntry</code> by the relation named <code>TimeEntry</code>.
     * @return the list of <code>TimeEntry</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TimeEntry> getTimeEntrys() throws RepositoryException {
        if (this.timeEntrys == null) {
            this.timeEntrys = getRelated(TimeEntry.class, "TimeEntry");
        }
        return this.timeEntrys;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>ChildWorkEffort</code>.
     * @return the list of <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffort> getChildWorkEfforts() throws RepositoryException {
        if (this.childWorkEfforts == null) {
            this.childWorkEfforts = getRelated(WorkEffort.class, "ChildWorkEffort");
        }
        return this.childWorkEfforts;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortAssignmentRate</code> by the relation named <code>WorkEffortAssignmentRate</code>.
     * @return the list of <code>WorkEffortAssignmentRate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortAssignmentRate> getWorkEffortAssignmentRates() throws RepositoryException {
        if (this.workEffortAssignmentRates == null) {
            this.workEffortAssignmentRates = getRelated(WorkEffortAssignmentRate.class, "WorkEffortAssignmentRate");
        }
        return this.workEffortAssignmentRates;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortAssoc</code> by the relation named <code>FromWorkEffortAssoc</code>.
     * @return the list of <code>WorkEffortAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortAssoc> getFromWorkEffortAssocs() throws RepositoryException {
        if (this.fromWorkEffortAssocs == null) {
            this.fromWorkEffortAssocs = getRelated(WorkEffortAssoc.class, "FromWorkEffortAssoc");
        }
        return this.fromWorkEffortAssocs;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortAssoc</code> by the relation named <code>ToWorkEffortAssoc</code>.
     * @return the list of <code>WorkEffortAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortAssoc> getToWorkEffortAssocs() throws RepositoryException {
        if (this.toWorkEffortAssocs == null) {
            this.toWorkEffortAssocs = getRelated(WorkEffortAssoc.class, "ToWorkEffortAssoc");
        }
        return this.toWorkEffortAssocs;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortAttribute</code> by the relation named <code>WorkEffortAttribute</code>.
     * @return the list of <code>WorkEffortAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortAttribute> getWorkEffortAttributes() throws RepositoryException {
        if (this.workEffortAttributes == null) {
            this.workEffortAttributes = getRelated(WorkEffortAttribute.class, "WorkEffortAttribute");
        }
        return this.workEffortAttributes;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortBilling</code> by the relation named <code>WorkEffortBilling</code>.
     * @return the list of <code>WorkEffortBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortBilling> getWorkEffortBillings() throws RepositoryException {
        if (this.workEffortBillings == null) {
            this.workEffortBillings = getRelated(WorkEffortBilling.class, "WorkEffortBilling");
        }
        return this.workEffortBillings;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortContactMech</code> by the relation named <code>WorkEffortContactMech</code>.
     * @return the list of <code>WorkEffortContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortContactMech> getWorkEffortContactMeches() throws RepositoryException {
        if (this.workEffortContactMeches == null) {
            this.workEffortContactMeches = getRelated(WorkEffortContactMech.class, "WorkEffortContactMech");
        }
        return this.workEffortContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortContent</code> by the relation named <code>WorkEffortContent</code>.
     * @return the list of <code>WorkEffortContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortContent> getWorkEffortContents() throws RepositoryException {
        if (this.workEffortContents == null) {
            this.workEffortContents = getRelated(WorkEffortContent.class, "WorkEffortContent");
        }
        return this.workEffortContents;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortCostCalc</code> by the relation named <code>WorkEffortCostCalc</code>.
     * @return the list of <code>WorkEffortCostCalc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortCostCalc> getWorkEffortCostCalcs() throws RepositoryException {
        if (this.workEffortCostCalcs == null) {
            this.workEffortCostCalcs = getRelated(WorkEffortCostCalc.class, "WorkEffortCostCalc");
        }
        return this.workEffortCostCalcs;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortDeliverableProd</code> by the relation named <code>WorkEffortDeliverableProd</code>.
     * @return the list of <code>WorkEffortDeliverableProd</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortDeliverableProd> getWorkEffortDeliverableProds() throws RepositoryException {
        if (this.workEffortDeliverableProds == null) {
            this.workEffortDeliverableProds = getRelated(WorkEffortDeliverableProd.class, "WorkEffortDeliverableProd");
        }
        return this.workEffortDeliverableProds;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortFixedAssetAssign</code> by the relation named <code>WorkEffortFixedAssetAssign</code>.
     * @return the list of <code>WorkEffortFixedAssetAssign</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortFixedAssetAssign> getWorkEffortFixedAssetAssigns() throws RepositoryException {
        if (this.workEffortFixedAssetAssigns == null) {
            this.workEffortFixedAssetAssigns = getRelated(WorkEffortFixedAssetAssign.class, "WorkEffortFixedAssetAssign");
        }
        return this.workEffortFixedAssetAssigns;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortFixedAssetStd</code> by the relation named <code>WorkEffortFixedAssetStd</code>.
     * @return the list of <code>WorkEffortFixedAssetStd</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortFixedAssetStd> getWorkEffortFixedAssetStds() throws RepositoryException {
        if (this.workEffortFixedAssetStds == null) {
            this.workEffortFixedAssetStds = getRelated(WorkEffortFixedAssetStd.class, "WorkEffortFixedAssetStd");
        }
        return this.workEffortFixedAssetStds;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortGoodStandard</code> by the relation named <code>WorkEffortGoodStandard</code>.
     * @return the list of <code>WorkEffortGoodStandard</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortGoodStandard> getWorkEffortGoodStandards() throws RepositoryException {
        if (this.workEffortGoodStandards == null) {
            this.workEffortGoodStandards = getRelated(WorkEffortGoodStandard.class, "WorkEffortGoodStandard");
        }
        return this.workEffortGoodStandards;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortInventoryAssign</code> by the relation named <code>WorkEffortInventoryAssign</code>.
     * @return the list of <code>WorkEffortInventoryAssign</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortInventoryAssign> getWorkEffortInventoryAssigns() throws RepositoryException {
        if (this.workEffortInventoryAssigns == null) {
            this.workEffortInventoryAssigns = getRelated(WorkEffortInventoryAssign.class, "WorkEffortInventoryAssign");
        }
        return this.workEffortInventoryAssigns;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortInventoryProduced</code> by the relation named <code>WorkEffortInventoryProduced</code>.
     * @return the list of <code>WorkEffortInventoryProduced</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortInventoryProduced> getWorkEffortInventoryProduceds() throws RepositoryException {
        if (this.workEffortInventoryProduceds == null) {
            this.workEffortInventoryProduceds = getRelated(WorkEffortInventoryProduced.class, "WorkEffortInventoryProduced");
        }
        return this.workEffortInventoryProduceds;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortKeyword</code> by the relation named <code>WorkEffortKeyword</code>.
     * @return the list of <code>WorkEffortKeyword</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortKeyword> getWorkEffortKeywords() throws RepositoryException {
        if (this.workEffortKeywords == null) {
            this.workEffortKeywords = getRelated(WorkEffortKeyword.class, "WorkEffortKeyword");
        }
        return this.workEffortKeywords;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortNote</code> by the relation named <code>WorkEffortNote</code>.
     * @return the list of <code>WorkEffortNote</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortNote> getWorkEffortNotes() throws RepositoryException {
        if (this.workEffortNotes == null) {
            this.workEffortNotes = getRelated(WorkEffortNote.class, "WorkEffortNote");
        }
        return this.workEffortNotes;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortPartyAssignment</code> by the relation named <code>WorkEffortPartyAssignment</code>.
     * @return the list of <code>WorkEffortPartyAssignment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortPartyAssignment> getWorkEffortPartyAssignments() throws RepositoryException {
        if (this.workEffortPartyAssignments == null) {
            this.workEffortPartyAssignments = getRelated(WorkEffortPartyAssignment.class, "WorkEffortPartyAssignment");
        }
        return this.workEffortPartyAssignments;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortReview</code> by the relation named <code>WorkEffortReview</code>.
     * @return the list of <code>WorkEffortReview</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortReview> getWorkEffortReviews() throws RepositoryException {
        if (this.workEffortReviews == null) {
            this.workEffortReviews = getRelated(WorkEffortReview.class, "WorkEffortReview");
        }
        return this.workEffortReviews;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortSkillStandard</code> by the relation named <code>WorkEffortSkillStandard</code>.
     * @return the list of <code>WorkEffortSkillStandard</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortSkillStandard> getWorkEffortSkillStandards() throws RepositoryException {
        if (this.workEffortSkillStandards == null) {
            this.workEffortSkillStandards = getRelated(WorkEffortSkillStandard.class, "WorkEffortSkillStandard");
        }
        return this.workEffortSkillStandards;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortStatus</code> by the relation named <code>WorkEffortStatus</code>.
     * @return the list of <code>WorkEffortStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortStatus> getWorkEffortStatuses() throws RepositoryException {
        if (this.workEffortStatuses == null) {
            this.workEffortStatuses = getRelated(WorkEffortStatus.class, "WorkEffortStatus");
        }
        return this.workEffortStatuses;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortTransBox</code> by the relation named <code>WorkEffortTransBox</code>.
     * @return the list of <code>WorkEffortTransBox</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortTransBox> getWorkEffortTransBoxes() throws RepositoryException {
        if (this.workEffortTransBoxes == null) {
            this.workEffortTransBoxes = getRelated(WorkEffortTransBox.class, "WorkEffortTransBox");
        }
        return this.workEffortTransBoxes;
    }
    /**
     * Auto generated method that gets the related <code>WorkOrderItemFulfillment</code> by the relation named <code>WorkOrderItemFulfillment</code>.
     * @return the list of <code>WorkOrderItemFulfillment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkOrderItemFulfillment> getWorkOrderItemFulfillments() throws RepositoryException {
        if (this.workOrderItemFulfillments == null) {
            this.workOrderItemFulfillments = getRelated(WorkOrderItemFulfillment.class, "WorkOrderItemFulfillment");
        }
        return this.workOrderItemFulfillments;
    }
    /**
     * Auto generated method that gets the related <code>WorkRequirementFulfillment</code> by the relation named <code>WorkRequirementFulfillment</code>.
     * @return the list of <code>WorkRequirementFulfillment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkRequirementFulfillment> getWorkRequirementFulfillments() throws RepositoryException {
        if (this.workRequirementFulfillments == null) {
            this.workRequirementFulfillments = getRelated(WorkRequirementFulfillment.class, "WorkRequirementFulfillment");
        }
        return this.workRequirementFulfillments;
    }

    /**
     * Auto generated value setter.
     * @param workEffortType the workEffortType to set
    */
    public void setWorkEffortType(WorkEffortType workEffortType) {
        this.workEffortType = workEffortType;
    }
    /**
     * Auto generated value setter.
     * @param workEffortPurposeType the workEffortPurposeType to set
    */
    public void setWorkEffortPurposeType(WorkEffortPurposeType workEffortPurposeType) {
        this.workEffortPurposeType = workEffortPurposeType;
    }
    /**
     * Auto generated value setter.
     * @param parentWorkEffort the parentWorkEffort to set
    */
    public void setParentWorkEffort(WorkEffort parentWorkEffort) {
        this.parentWorkEffort = parentWorkEffort;
    }
    /**
     * Auto generated value setter.
     * @param workEffortTypeAttrs the workEffortTypeAttrs to set
    */
    public void setWorkEffortTypeAttrs(List<WorkEffortTypeAttr> workEffortTypeAttrs) {
        this.workEffortTypeAttrs = workEffortTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param currentStatusItem the currentStatusItem to set
    */
    public void setCurrentStatusItem(StatusItem currentStatusItem) {
        this.currentStatusItem = currentStatusItem;
    }
    /**
     * Auto generated value setter.
     * @param scopeEnumeration the scopeEnumeration to set
    */
    public void setScopeEnumeration(Enumeration scopeEnumeration) {
        this.scopeEnumeration = scopeEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param fixedAsset the fixedAsset to set
    */
    public void setFixedAsset(FixedAsset fixedAsset) {
        this.fixedAsset = fixedAsset;
    }
    /**
     * Auto generated value setter.
     * @param facility the facility to set
    */
    public void setFacility(Facility facility) {
        this.facility = facility;
    }
    /**
     * Auto generated value setter.
     * @param moneyUom the moneyUom to set
    */
    public void setMoneyUom(Uom moneyUom) {
        this.moneyUom = moneyUom;
    }
    /**
     * Auto generated value setter.
     * @param recurrenceInfo the recurrenceInfo to set
    */
    public void setRecurrenceInfo(RecurrenceInfo recurrenceInfo) {
        this.recurrenceInfo = recurrenceInfo;
    }
    /**
     * Auto generated value setter.
     * @param runtimeData the runtimeData to set
    */
    public void setRuntimeData(RuntimeData runtimeData) {
        this.runtimeData = runtimeData;
    }
    /**
     * Auto generated value setter.
     * @param noteData the noteData to set
    */
    public void setNoteData(NoteData noteData) {
        this.noteData = noteData;
    }
    /**
     * Auto generated value setter.
     * @param workflowPackage the workflowPackage to set
    */
    public void setWorkflowPackage(WorkflowPackage workflowPackage) {
        this.workflowPackage = workflowPackage;
    }
    /**
     * Auto generated value setter.
     * @param workflowProcess the workflowProcess to set
    */
    public void setWorkflowProcess(WorkflowProcess workflowProcess) {
        this.workflowProcess = workflowProcess;
    }
    /**
     * Auto generated value setter.
     * @param workflowActivity the workflowActivity to set
    */
    public void setWorkflowActivity(WorkflowActivity workflowActivity) {
        this.workflowActivity = workflowActivity;
    }
    /**
     * Auto generated value setter.
     * @param customMethod the customMethod to set
    */
    public void setCustomMethod(CustomMethod customMethod) {
        this.customMethod = customMethod;
    }
    /**
     * Auto generated value setter.
     * @param acctgTranses the acctgTranses to set
    */
    public void setAcctgTranses(List<AcctgTrans> acctgTranses) {
        this.acctgTranses = acctgTranses;
    }
    /**
     * Auto generated value setter.
     * @param agreementWorkEffortAppls the agreementWorkEffortAppls to set
    */
    public void setAgreementWorkEffortAppls(List<AgreementWorkEffortAppl> agreementWorkEffortAppls) {
        this.agreementWorkEffortAppls = agreementWorkEffortAppls;
    }
    /**
     * Auto generated value setter.
     * @param communicationEventWorkEffs the communicationEventWorkEffs to set
    */
    public void setCommunicationEventWorkEffs(List<CommunicationEventWorkEff> communicationEventWorkEffs) {
        this.communicationEventWorkEffs = communicationEventWorkEffs;
    }
    /**
     * Auto generated value setter.
     * @param costComponents the costComponents to set
    */
    public void setCostComponents(List<CostComponent> costComponents) {
        this.costComponents = costComponents;
    }
    /**
     * Auto generated value setter.
     * @param custRequestItemWorkEfforts the custRequestItemWorkEfforts to set
    */
    public void setCustRequestItemWorkEfforts(List<CustRequestItemWorkEffort> custRequestItemWorkEfforts) {
        this.custRequestItemWorkEfforts = custRequestItemWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param custRequestWorkEfforts the custRequestWorkEfforts to set
    */
    public void setCustRequestWorkEfforts(List<CustRequestWorkEffort> custRequestWorkEfforts) {
        this.custRequestWorkEfforts = custRequestWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param scheduleFixedAssetMaints the scheduleFixedAssetMaints to set
    */
    public void setScheduleFixedAssetMaints(List<FixedAssetMaint> scheduleFixedAssetMaints) {
        this.scheduleFixedAssetMaints = scheduleFixedAssetMaints;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemDetails the inventoryItemDetails to set
    */
    public void setInventoryItemDetails(List<InventoryItemDetail> inventoryItemDetails) {
        this.inventoryItemDetails = inventoryItemDetails;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaderWorkEfforts the orderHeaderWorkEfforts to set
    */
    public void setOrderHeaderWorkEfforts(List<OrderHeaderWorkEffort> orderHeaderWorkEfforts) {
        this.orderHeaderWorkEfforts = orderHeaderWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param routingProductAssocs the routingProductAssocs to set
    */
    public void setRoutingProductAssocs(List<ProductAssoc> routingProductAssocs) {
        this.routingProductAssocs = routingProductAssocs;
    }
    /**
     * Auto generated value setter.
     * @param productAssocs the productAssocs to set
    */
    public void setProductAssocs(List<ProductAssoc> productAssocs) {
        this.productAssocs = productAssocs;
    }
    /**
     * Auto generated value setter.
     * @param maintTemplateProductMaints the maintTemplateProductMaints to set
    */
    public void setMaintTemplateProductMaints(List<ProductMaint> maintTemplateProductMaints) {
        this.maintTemplateProductMaints = maintTemplateProductMaints;
    }
    /**
     * Auto generated value setter.
     * @param quoteItems the quoteItems to set
    */
    public void setQuoteItems(List<QuoteItem> quoteItems) {
        this.quoteItems = quoteItems;
    }
    /**
     * Auto generated value setter.
     * @param quoteWorkEfforts the quoteWorkEfforts to set
    */
    public void setQuoteWorkEfforts(List<QuoteWorkEffort> quoteWorkEfforts) {
        this.quoteWorkEfforts = quoteWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param salesOpportunityWorkEfforts the salesOpportunityWorkEfforts to set
    */
    public void setSalesOpportunityWorkEfforts(List<SalesOpportunityWorkEffort> salesOpportunityWorkEfforts) {
        this.salesOpportunityWorkEfforts = salesOpportunityWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param estimatedShipShipments the estimatedShipShipments to set
    */
    public void setEstimatedShipShipments(List<Shipment> estimatedShipShipments) {
        this.estimatedShipShipments = estimatedShipShipments;
    }
    /**
     * Auto generated value setter.
     * @param estimatedArrivalShipments the estimatedArrivalShipments to set
    */
    public void setEstimatedArrivalShipments(List<Shipment> estimatedArrivalShipments) {
        this.estimatedArrivalShipments = estimatedArrivalShipments;
    }
    /**
     * Auto generated value setter.
     * @param shoppingListWorkEfforts the shoppingListWorkEfforts to set
    */
    public void setShoppingListWorkEfforts(List<ShoppingListWorkEffort> shoppingListWorkEfforts) {
        this.shoppingListWorkEfforts = shoppingListWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param timeEntrys the timeEntrys to set
    */
    public void setTimeEntrys(List<TimeEntry> timeEntrys) {
        this.timeEntrys = timeEntrys;
    }
    /**
     * Auto generated value setter.
     * @param childWorkEfforts the childWorkEfforts to set
    */
    public void setChildWorkEfforts(List<WorkEffort> childWorkEfforts) {
        this.childWorkEfforts = childWorkEfforts;
    }
    /**
     * Auto generated value setter.
     * @param workEffortAssignmentRates the workEffortAssignmentRates to set
    */
    public void setWorkEffortAssignmentRates(List<WorkEffortAssignmentRate> workEffortAssignmentRates) {
        this.workEffortAssignmentRates = workEffortAssignmentRates;
    }
    /**
     * Auto generated value setter.
     * @param fromWorkEffortAssocs the fromWorkEffortAssocs to set
    */
    public void setFromWorkEffortAssocs(List<WorkEffortAssoc> fromWorkEffortAssocs) {
        this.fromWorkEffortAssocs = fromWorkEffortAssocs;
    }
    /**
     * Auto generated value setter.
     * @param toWorkEffortAssocs the toWorkEffortAssocs to set
    */
    public void setToWorkEffortAssocs(List<WorkEffortAssoc> toWorkEffortAssocs) {
        this.toWorkEffortAssocs = toWorkEffortAssocs;
    }
    /**
     * Auto generated value setter.
     * @param workEffortAttributes the workEffortAttributes to set
    */
    public void setWorkEffortAttributes(List<WorkEffortAttribute> workEffortAttributes) {
        this.workEffortAttributes = workEffortAttributes;
    }
    /**
     * Auto generated value setter.
     * @param workEffortBillings the workEffortBillings to set
    */
    public void setWorkEffortBillings(List<WorkEffortBilling> workEffortBillings) {
        this.workEffortBillings = workEffortBillings;
    }
    /**
     * Auto generated value setter.
     * @param workEffortContactMeches the workEffortContactMeches to set
    */
    public void setWorkEffortContactMeches(List<WorkEffortContactMech> workEffortContactMeches) {
        this.workEffortContactMeches = workEffortContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param workEffortContents the workEffortContents to set
    */
    public void setWorkEffortContents(List<WorkEffortContent> workEffortContents) {
        this.workEffortContents = workEffortContents;
    }
    /**
     * Auto generated value setter.
     * @param workEffortCostCalcs the workEffortCostCalcs to set
    */
    public void setWorkEffortCostCalcs(List<WorkEffortCostCalc> workEffortCostCalcs) {
        this.workEffortCostCalcs = workEffortCostCalcs;
    }
    /**
     * Auto generated value setter.
     * @param workEffortDeliverableProds the workEffortDeliverableProds to set
    */
    public void setWorkEffortDeliverableProds(List<WorkEffortDeliverableProd> workEffortDeliverableProds) {
        this.workEffortDeliverableProds = workEffortDeliverableProds;
    }
    /**
     * Auto generated value setter.
     * @param workEffortFixedAssetAssigns the workEffortFixedAssetAssigns to set
    */
    public void setWorkEffortFixedAssetAssigns(List<WorkEffortFixedAssetAssign> workEffortFixedAssetAssigns) {
        this.workEffortFixedAssetAssigns = workEffortFixedAssetAssigns;
    }
    /**
     * Auto generated value setter.
     * @param workEffortFixedAssetStds the workEffortFixedAssetStds to set
    */
    public void setWorkEffortFixedAssetStds(List<WorkEffortFixedAssetStd> workEffortFixedAssetStds) {
        this.workEffortFixedAssetStds = workEffortFixedAssetStds;
    }
    /**
     * Auto generated value setter.
     * @param workEffortGoodStandards the workEffortGoodStandards to set
    */
    public void setWorkEffortGoodStandards(List<WorkEffortGoodStandard> workEffortGoodStandards) {
        this.workEffortGoodStandards = workEffortGoodStandards;
    }
    /**
     * Auto generated value setter.
     * @param workEffortInventoryAssigns the workEffortInventoryAssigns to set
    */
    public void setWorkEffortInventoryAssigns(List<WorkEffortInventoryAssign> workEffortInventoryAssigns) {
        this.workEffortInventoryAssigns = workEffortInventoryAssigns;
    }
    /**
     * Auto generated value setter.
     * @param workEffortInventoryProduceds the workEffortInventoryProduceds to set
    */
    public void setWorkEffortInventoryProduceds(List<WorkEffortInventoryProduced> workEffortInventoryProduceds) {
        this.workEffortInventoryProduceds = workEffortInventoryProduceds;
    }
    /**
     * Auto generated value setter.
     * @param workEffortKeywords the workEffortKeywords to set
    */
    public void setWorkEffortKeywords(List<WorkEffortKeyword> workEffortKeywords) {
        this.workEffortKeywords = workEffortKeywords;
    }
    /**
     * Auto generated value setter.
     * @param workEffortNotes the workEffortNotes to set
    */
    public void setWorkEffortNotes(List<WorkEffortNote> workEffortNotes) {
        this.workEffortNotes = workEffortNotes;
    }
    /**
     * Auto generated value setter.
     * @param workEffortPartyAssignments the workEffortPartyAssignments to set
    */
    public void setWorkEffortPartyAssignments(List<WorkEffortPartyAssignment> workEffortPartyAssignments) {
        this.workEffortPartyAssignments = workEffortPartyAssignments;
    }
    /**
     * Auto generated value setter.
     * @param workEffortReviews the workEffortReviews to set
    */
    public void setWorkEffortReviews(List<WorkEffortReview> workEffortReviews) {
        this.workEffortReviews = workEffortReviews;
    }
    /**
     * Auto generated value setter.
     * @param workEffortSkillStandards the workEffortSkillStandards to set
    */
    public void setWorkEffortSkillStandards(List<WorkEffortSkillStandard> workEffortSkillStandards) {
        this.workEffortSkillStandards = workEffortSkillStandards;
    }
    /**
     * Auto generated value setter.
     * @param workEffortStatuses the workEffortStatuses to set
    */
    public void setWorkEffortStatuses(List<WorkEffortStatus> workEffortStatuses) {
        this.workEffortStatuses = workEffortStatuses;
    }
    /**
     * Auto generated value setter.
     * @param workEffortTransBoxes the workEffortTransBoxes to set
    */
    public void setWorkEffortTransBoxes(List<WorkEffortTransBox> workEffortTransBoxes) {
        this.workEffortTransBoxes = workEffortTransBoxes;
    }
    /**
     * Auto generated value setter.
     * @param workOrderItemFulfillments the workOrderItemFulfillments to set
    */
    public void setWorkOrderItemFulfillments(List<WorkOrderItemFulfillment> workOrderItemFulfillments) {
        this.workOrderItemFulfillments = workOrderItemFulfillments;
    }
    /**
     * Auto generated value setter.
     * @param workRequirementFulfillments the workRequirementFulfillments to set
    */
    public void setWorkRequirementFulfillments(List<WorkRequirementFulfillment> workRequirementFulfillments) {
        this.workRequirementFulfillments = workRequirementFulfillments;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementWorkEffortAppl(AgreementWorkEffortAppl agreementWorkEffortAppl) {
        if (this.agreementWorkEffortAppls == null) {
            this.agreementWorkEffortAppls = new ArrayList<AgreementWorkEffortAppl>();
        }
        this.agreementWorkEffortAppls.add(agreementWorkEffortAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementWorkEffortAppl(AgreementWorkEffortAppl agreementWorkEffortAppl) {
        if (this.agreementWorkEffortAppls == null) {
            return;
        }
        this.agreementWorkEffortAppls.remove(agreementWorkEffortAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementWorkEffortAppl() {
        if (this.agreementWorkEffortAppls == null) {
            return;
        }
        this.agreementWorkEffortAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCommunicationEventWorkEff(CommunicationEventWorkEff communicationEventWorkEff) {
        if (this.communicationEventWorkEffs == null) {
            this.communicationEventWorkEffs = new ArrayList<CommunicationEventWorkEff>();
        }
        this.communicationEventWorkEffs.add(communicationEventWorkEff);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCommunicationEventWorkEff(CommunicationEventWorkEff communicationEventWorkEff) {
        if (this.communicationEventWorkEffs == null) {
            return;
        }
        this.communicationEventWorkEffs.remove(communicationEventWorkEff);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCommunicationEventWorkEff() {
        if (this.communicationEventWorkEffs == null) {
            return;
        }
        this.communicationEventWorkEffs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestItemWorkEffort(CustRequestItemWorkEffort custRequestItemWorkEffort) {
        if (this.custRequestItemWorkEfforts == null) {
            this.custRequestItemWorkEfforts = new ArrayList<CustRequestItemWorkEffort>();
        }
        this.custRequestItemWorkEfforts.add(custRequestItemWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestItemWorkEffort(CustRequestItemWorkEffort custRequestItemWorkEffort) {
        if (this.custRequestItemWorkEfforts == null) {
            return;
        }
        this.custRequestItemWorkEfforts.remove(custRequestItemWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestItemWorkEffort() {
        if (this.custRequestItemWorkEfforts == null) {
            return;
        }
        this.custRequestItemWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCustRequestWorkEffort(CustRequestWorkEffort custRequestWorkEffort) {
        if (this.custRequestWorkEfforts == null) {
            this.custRequestWorkEfforts = new ArrayList<CustRequestWorkEffort>();
        }
        this.custRequestWorkEfforts.add(custRequestWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCustRequestWorkEffort(CustRequestWorkEffort custRequestWorkEffort) {
        if (this.custRequestWorkEfforts == null) {
            return;
        }
        this.custRequestWorkEfforts.remove(custRequestWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCustRequestWorkEffort() {
        if (this.custRequestWorkEfforts == null) {
            return;
        }
        this.custRequestWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderHeaderWorkEffort(OrderHeaderWorkEffort orderHeaderWorkEffort) {
        if (this.orderHeaderWorkEfforts == null) {
            this.orderHeaderWorkEfforts = new ArrayList<OrderHeaderWorkEffort>();
        }
        this.orderHeaderWorkEfforts.add(orderHeaderWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderHeaderWorkEffort(OrderHeaderWorkEffort orderHeaderWorkEffort) {
        if (this.orderHeaderWorkEfforts == null) {
            return;
        }
        this.orderHeaderWorkEfforts.remove(orderHeaderWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderHeaderWorkEffort() {
        if (this.orderHeaderWorkEfforts == null) {
            return;
        }
        this.orderHeaderWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addQuoteWorkEffort(QuoteWorkEffort quoteWorkEffort) {
        if (this.quoteWorkEfforts == null) {
            this.quoteWorkEfforts = new ArrayList<QuoteWorkEffort>();
        }
        this.quoteWorkEfforts.add(quoteWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeQuoteWorkEffort(QuoteWorkEffort quoteWorkEffort) {
        if (this.quoteWorkEfforts == null) {
            return;
        }
        this.quoteWorkEfforts.remove(quoteWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearQuoteWorkEffort() {
        if (this.quoteWorkEfforts == null) {
            return;
        }
        this.quoteWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addSalesOpportunityWorkEffort(SalesOpportunityWorkEffort salesOpportunityWorkEffort) {
        if (this.salesOpportunityWorkEfforts == null) {
            this.salesOpportunityWorkEfforts = new ArrayList<SalesOpportunityWorkEffort>();
        }
        this.salesOpportunityWorkEfforts.add(salesOpportunityWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeSalesOpportunityWorkEffort(SalesOpportunityWorkEffort salesOpportunityWorkEffort) {
        if (this.salesOpportunityWorkEfforts == null) {
            return;
        }
        this.salesOpportunityWorkEfforts.remove(salesOpportunityWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearSalesOpportunityWorkEffort() {
        if (this.salesOpportunityWorkEfforts == null) {
            return;
        }
        this.salesOpportunityWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addShoppingListWorkEffort(ShoppingListWorkEffort shoppingListWorkEffort) {
        if (this.shoppingListWorkEfforts == null) {
            this.shoppingListWorkEfforts = new ArrayList<ShoppingListWorkEffort>();
        }
        this.shoppingListWorkEfforts.add(shoppingListWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeShoppingListWorkEffort(ShoppingListWorkEffort shoppingListWorkEffort) {
        if (this.shoppingListWorkEfforts == null) {
            return;
        }
        this.shoppingListWorkEfforts.remove(shoppingListWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearShoppingListWorkEffort() {
        if (this.shoppingListWorkEfforts == null) {
            return;
        }
        this.shoppingListWorkEfforts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortAssignmentRate(WorkEffortAssignmentRate workEffortAssignmentRate) {
        if (this.workEffortAssignmentRates == null) {
            this.workEffortAssignmentRates = new ArrayList<WorkEffortAssignmentRate>();
        }
        this.workEffortAssignmentRates.add(workEffortAssignmentRate);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortAssignmentRate(WorkEffortAssignmentRate workEffortAssignmentRate) {
        if (this.workEffortAssignmentRates == null) {
            return;
        }
        this.workEffortAssignmentRates.remove(workEffortAssignmentRate);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortAssignmentRate() {
        if (this.workEffortAssignmentRates == null) {
            return;
        }
        this.workEffortAssignmentRates.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addFromWorkEffortAssoc(WorkEffortAssoc fromWorkEffortAssoc) {
        if (this.fromWorkEffortAssocs == null) {
            this.fromWorkEffortAssocs = new ArrayList<WorkEffortAssoc>();
        }
        this.fromWorkEffortAssocs.add(fromWorkEffortAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeFromWorkEffortAssoc(WorkEffortAssoc fromWorkEffortAssoc) {
        if (this.fromWorkEffortAssocs == null) {
            return;
        }
        this.fromWorkEffortAssocs.remove(fromWorkEffortAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearFromWorkEffortAssoc() {
        if (this.fromWorkEffortAssocs == null) {
            return;
        }
        this.fromWorkEffortAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addToWorkEffortAssoc(WorkEffortAssoc toWorkEffortAssoc) {
        if (this.toWorkEffortAssocs == null) {
            this.toWorkEffortAssocs = new ArrayList<WorkEffortAssoc>();
        }
        this.toWorkEffortAssocs.add(toWorkEffortAssoc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeToWorkEffortAssoc(WorkEffortAssoc toWorkEffortAssoc) {
        if (this.toWorkEffortAssocs == null) {
            return;
        }
        this.toWorkEffortAssocs.remove(toWorkEffortAssoc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearToWorkEffortAssoc() {
        if (this.toWorkEffortAssocs == null) {
            return;
        }
        this.toWorkEffortAssocs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortAttribute(WorkEffortAttribute workEffortAttribute) {
        if (this.workEffortAttributes == null) {
            this.workEffortAttributes = new ArrayList<WorkEffortAttribute>();
        }
        this.workEffortAttributes.add(workEffortAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortAttribute(WorkEffortAttribute workEffortAttribute) {
        if (this.workEffortAttributes == null) {
            return;
        }
        this.workEffortAttributes.remove(workEffortAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortAttribute() {
        if (this.workEffortAttributes == null) {
            return;
        }
        this.workEffortAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortBilling(WorkEffortBilling workEffortBilling) {
        if (this.workEffortBillings == null) {
            this.workEffortBillings = new ArrayList<WorkEffortBilling>();
        }
        this.workEffortBillings.add(workEffortBilling);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortBilling(WorkEffortBilling workEffortBilling) {
        if (this.workEffortBillings == null) {
            return;
        }
        this.workEffortBillings.remove(workEffortBilling);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortBilling() {
        if (this.workEffortBillings == null) {
            return;
        }
        this.workEffortBillings.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortContactMeche(WorkEffortContactMech workEffortContactMeche) {
        if (this.workEffortContactMeches == null) {
            this.workEffortContactMeches = new ArrayList<WorkEffortContactMech>();
        }
        this.workEffortContactMeches.add(workEffortContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortContactMeche(WorkEffortContactMech workEffortContactMeche) {
        if (this.workEffortContactMeches == null) {
            return;
        }
        this.workEffortContactMeches.remove(workEffortContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortContactMeche() {
        if (this.workEffortContactMeches == null) {
            return;
        }
        this.workEffortContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortContent(WorkEffortContent workEffortContent) {
        if (this.workEffortContents == null) {
            this.workEffortContents = new ArrayList<WorkEffortContent>();
        }
        this.workEffortContents.add(workEffortContent);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortContent(WorkEffortContent workEffortContent) {
        if (this.workEffortContents == null) {
            return;
        }
        this.workEffortContents.remove(workEffortContent);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortContent() {
        if (this.workEffortContents == null) {
            return;
        }
        this.workEffortContents.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortCostCalc(WorkEffortCostCalc workEffortCostCalc) {
        if (this.workEffortCostCalcs == null) {
            this.workEffortCostCalcs = new ArrayList<WorkEffortCostCalc>();
        }
        this.workEffortCostCalcs.add(workEffortCostCalc);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortCostCalc(WorkEffortCostCalc workEffortCostCalc) {
        if (this.workEffortCostCalcs == null) {
            return;
        }
        this.workEffortCostCalcs.remove(workEffortCostCalc);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortCostCalc() {
        if (this.workEffortCostCalcs == null) {
            return;
        }
        this.workEffortCostCalcs.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortDeliverableProd(WorkEffortDeliverableProd workEffortDeliverableProd) {
        if (this.workEffortDeliverableProds == null) {
            this.workEffortDeliverableProds = new ArrayList<WorkEffortDeliverableProd>();
        }
        this.workEffortDeliverableProds.add(workEffortDeliverableProd);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortDeliverableProd(WorkEffortDeliverableProd workEffortDeliverableProd) {
        if (this.workEffortDeliverableProds == null) {
            return;
        }
        this.workEffortDeliverableProds.remove(workEffortDeliverableProd);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortDeliverableProd() {
        if (this.workEffortDeliverableProds == null) {
            return;
        }
        this.workEffortDeliverableProds.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortFixedAssetAssign(WorkEffortFixedAssetAssign workEffortFixedAssetAssign) {
        if (this.workEffortFixedAssetAssigns == null) {
            this.workEffortFixedAssetAssigns = new ArrayList<WorkEffortFixedAssetAssign>();
        }
        this.workEffortFixedAssetAssigns.add(workEffortFixedAssetAssign);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortFixedAssetAssign(WorkEffortFixedAssetAssign workEffortFixedAssetAssign) {
        if (this.workEffortFixedAssetAssigns == null) {
            return;
        }
        this.workEffortFixedAssetAssigns.remove(workEffortFixedAssetAssign);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortFixedAssetAssign() {
        if (this.workEffortFixedAssetAssigns == null) {
            return;
        }
        this.workEffortFixedAssetAssigns.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortFixedAssetStd(WorkEffortFixedAssetStd workEffortFixedAssetStd) {
        if (this.workEffortFixedAssetStds == null) {
            this.workEffortFixedAssetStds = new ArrayList<WorkEffortFixedAssetStd>();
        }
        this.workEffortFixedAssetStds.add(workEffortFixedAssetStd);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortFixedAssetStd(WorkEffortFixedAssetStd workEffortFixedAssetStd) {
        if (this.workEffortFixedAssetStds == null) {
            return;
        }
        this.workEffortFixedAssetStds.remove(workEffortFixedAssetStd);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortFixedAssetStd() {
        if (this.workEffortFixedAssetStds == null) {
            return;
        }
        this.workEffortFixedAssetStds.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortGoodStandard(WorkEffortGoodStandard workEffortGoodStandard) {
        if (this.workEffortGoodStandards == null) {
            this.workEffortGoodStandards = new ArrayList<WorkEffortGoodStandard>();
        }
        this.workEffortGoodStandards.add(workEffortGoodStandard);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortGoodStandard(WorkEffortGoodStandard workEffortGoodStandard) {
        if (this.workEffortGoodStandards == null) {
            return;
        }
        this.workEffortGoodStandards.remove(workEffortGoodStandard);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortGoodStandard() {
        if (this.workEffortGoodStandards == null) {
            return;
        }
        this.workEffortGoodStandards.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortInventoryAssign(WorkEffortInventoryAssign workEffortInventoryAssign) {
        if (this.workEffortInventoryAssigns == null) {
            this.workEffortInventoryAssigns = new ArrayList<WorkEffortInventoryAssign>();
        }
        this.workEffortInventoryAssigns.add(workEffortInventoryAssign);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortInventoryAssign(WorkEffortInventoryAssign workEffortInventoryAssign) {
        if (this.workEffortInventoryAssigns == null) {
            return;
        }
        this.workEffortInventoryAssigns.remove(workEffortInventoryAssign);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortInventoryAssign() {
        if (this.workEffortInventoryAssigns == null) {
            return;
        }
        this.workEffortInventoryAssigns.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortInventoryProduced(WorkEffortInventoryProduced workEffortInventoryProduced) {
        if (this.workEffortInventoryProduceds == null) {
            this.workEffortInventoryProduceds = new ArrayList<WorkEffortInventoryProduced>();
        }
        this.workEffortInventoryProduceds.add(workEffortInventoryProduced);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortInventoryProduced(WorkEffortInventoryProduced workEffortInventoryProduced) {
        if (this.workEffortInventoryProduceds == null) {
            return;
        }
        this.workEffortInventoryProduceds.remove(workEffortInventoryProduced);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortInventoryProduced() {
        if (this.workEffortInventoryProduceds == null) {
            return;
        }
        this.workEffortInventoryProduceds.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortKeyword(WorkEffortKeyword workEffortKeyword) {
        if (this.workEffortKeywords == null) {
            this.workEffortKeywords = new ArrayList<WorkEffortKeyword>();
        }
        this.workEffortKeywords.add(workEffortKeyword);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortKeyword(WorkEffortKeyword workEffortKeyword) {
        if (this.workEffortKeywords == null) {
            return;
        }
        this.workEffortKeywords.remove(workEffortKeyword);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortKeyword() {
        if (this.workEffortKeywords == null) {
            return;
        }
        this.workEffortKeywords.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortNote(WorkEffortNote workEffortNote) {
        if (this.workEffortNotes == null) {
            this.workEffortNotes = new ArrayList<WorkEffortNote>();
        }
        this.workEffortNotes.add(workEffortNote);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortNote(WorkEffortNote workEffortNote) {
        if (this.workEffortNotes == null) {
            return;
        }
        this.workEffortNotes.remove(workEffortNote);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortNote() {
        if (this.workEffortNotes == null) {
            return;
        }
        this.workEffortNotes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortPartyAssignment(WorkEffortPartyAssignment workEffortPartyAssignment) {
        if (this.workEffortPartyAssignments == null) {
            this.workEffortPartyAssignments = new ArrayList<WorkEffortPartyAssignment>();
        }
        this.workEffortPartyAssignments.add(workEffortPartyAssignment);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortPartyAssignment(WorkEffortPartyAssignment workEffortPartyAssignment) {
        if (this.workEffortPartyAssignments == null) {
            return;
        }
        this.workEffortPartyAssignments.remove(workEffortPartyAssignment);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortPartyAssignment() {
        if (this.workEffortPartyAssignments == null) {
            return;
        }
        this.workEffortPartyAssignments.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortReview(WorkEffortReview workEffortReview) {
        if (this.workEffortReviews == null) {
            this.workEffortReviews = new ArrayList<WorkEffortReview>();
        }
        this.workEffortReviews.add(workEffortReview);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortReview(WorkEffortReview workEffortReview) {
        if (this.workEffortReviews == null) {
            return;
        }
        this.workEffortReviews.remove(workEffortReview);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortReview() {
        if (this.workEffortReviews == null) {
            return;
        }
        this.workEffortReviews.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortSkillStandard(WorkEffortSkillStandard workEffortSkillStandard) {
        if (this.workEffortSkillStandards == null) {
            this.workEffortSkillStandards = new ArrayList<WorkEffortSkillStandard>();
        }
        this.workEffortSkillStandards.add(workEffortSkillStandard);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortSkillStandard(WorkEffortSkillStandard workEffortSkillStandard) {
        if (this.workEffortSkillStandards == null) {
            return;
        }
        this.workEffortSkillStandards.remove(workEffortSkillStandard);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortSkillStandard() {
        if (this.workEffortSkillStandards == null) {
            return;
        }
        this.workEffortSkillStandards.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortStatuse(WorkEffortStatus workEffortStatuse) {
        if (this.workEffortStatuses == null) {
            this.workEffortStatuses = new ArrayList<WorkEffortStatus>();
        }
        this.workEffortStatuses.add(workEffortStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortStatuse(WorkEffortStatus workEffortStatuse) {
        if (this.workEffortStatuses == null) {
            return;
        }
        this.workEffortStatuses.remove(workEffortStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortStatuse() {
        if (this.workEffortStatuses == null) {
            return;
        }
        this.workEffortStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortTransBoxe(WorkEffortTransBox workEffortTransBoxe) {
        if (this.workEffortTransBoxes == null) {
            this.workEffortTransBoxes = new ArrayList<WorkEffortTransBox>();
        }
        this.workEffortTransBoxes.add(workEffortTransBoxe);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortTransBoxe(WorkEffortTransBox workEffortTransBoxe) {
        if (this.workEffortTransBoxes == null) {
            return;
        }
        this.workEffortTransBoxes.remove(workEffortTransBoxe);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortTransBoxe() {
        if (this.workEffortTransBoxes == null) {
            return;
        }
        this.workEffortTransBoxes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkOrderItemFulfillment(WorkOrderItemFulfillment workOrderItemFulfillment) {
        if (this.workOrderItemFulfillments == null) {
            this.workOrderItemFulfillments = new ArrayList<WorkOrderItemFulfillment>();
        }
        this.workOrderItemFulfillments.add(workOrderItemFulfillment);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkOrderItemFulfillment(WorkOrderItemFulfillment workOrderItemFulfillment) {
        if (this.workOrderItemFulfillments == null) {
            return;
        }
        this.workOrderItemFulfillments.remove(workOrderItemFulfillment);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkOrderItemFulfillment() {
        if (this.workOrderItemFulfillments == null) {
            return;
        }
        this.workOrderItemFulfillments.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkRequirementFulfillment(WorkRequirementFulfillment workRequirementFulfillment) {
        if (this.workRequirementFulfillments == null) {
            this.workRequirementFulfillments = new ArrayList<WorkRequirementFulfillment>();
        }
        this.workRequirementFulfillments.add(workRequirementFulfillment);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkRequirementFulfillment(WorkRequirementFulfillment workRequirementFulfillment) {
        if (this.workRequirementFulfillments == null) {
            return;
        }
        this.workRequirementFulfillments.remove(workRequirementFulfillment);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkRequirementFulfillment() {
        if (this.workRequirementFulfillments == null) {
            return;
        }
        this.workRequirementFulfillments.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setWorkEffortId((String) mapValue.get("workEffortId"));
        setWorkEffortTypeId((String) mapValue.get("workEffortTypeId"));
        setCurrentStatusId((String) mapValue.get("currentStatusId"));
        setLastStatusUpdate((Timestamp) mapValue.get("lastStatusUpdate"));
        setWorkEffortPurposeTypeId((String) mapValue.get("workEffortPurposeTypeId"));
        setWorkEffortParentId((String) mapValue.get("workEffortParentId"));
        setWorkflowPackageId((String) mapValue.get("workflowPackageId"));
        setWorkflowPackageVersion((String) mapValue.get("workflowPackageVersion"));
        setWorkflowProcessId((String) mapValue.get("workflowProcessId"));
        setWorkflowProcessVersion((String) mapValue.get("workflowProcessVersion"));
        setWorkflowActivityId((String) mapValue.get("workflowActivityId"));
        setScopeEnumId((String) mapValue.get("scopeEnumId"));
        setPriority((Long) mapValue.get("priority"));
        setPercentComplete((Long) mapValue.get("percentComplete"));
        setWorkEffortName((String) mapValue.get("workEffortName"));
        setDescription((String) mapValue.get("description"));
        setLocationDesc((String) mapValue.get("locationDesc"));
        setEstimatedStartDate((Timestamp) mapValue.get("estimatedStartDate"));
        setEstimatedCompletionDate((Timestamp) mapValue.get("estimatedCompletionDate"));
        setActualStartDate((Timestamp) mapValue.get("actualStartDate"));
        setActualCompletionDate((Timestamp) mapValue.get("actualCompletionDate"));
        setEstimatedMilliSeconds(convertToBigDecimal(mapValue.get("estimatedMilliSeconds")));
        setEstimatedSetupMillis(convertToBigDecimal(mapValue.get("estimatedSetupMillis")));
        setEstimateCalcMethod((String) mapValue.get("estimateCalcMethod"));
        setActualMilliSeconds(convertToBigDecimal(mapValue.get("actualMilliSeconds")));
        setActualSetupMillis(convertToBigDecimal(mapValue.get("actualSetupMillis")));
        setTotalMilliSecondsAllowed(convertToBigDecimal(mapValue.get("totalMilliSecondsAllowed")));
        setTotalMoneyAllowed(convertToBigDecimal(mapValue.get("totalMoneyAllowed")));
        setMoneyUomId((String) mapValue.get("moneyUomId"));
        setSpecialTerms((String) mapValue.get("specialTerms"));
        setTimeTransparency((Long) mapValue.get("timeTransparency"));
        setUniversalId((String) mapValue.get("universalId"));
        setSourceReferenceId((String) mapValue.get("sourceReferenceId"));
        setFixedAssetId((String) mapValue.get("fixedAssetId"));
        setFacilityId((String) mapValue.get("facilityId"));
        setInfoUrl((String) mapValue.get("infoUrl"));
        setRecurrenceInfoId((String) mapValue.get("recurrenceInfoId"));
        setRuntimeDataId((String) mapValue.get("runtimeDataId"));
        setNoteId((String) mapValue.get("noteId"));
        setServiceLoaderName((String) mapValue.get("serviceLoaderName"));
        setQuantityToProduce(convertToBigDecimal(mapValue.get("quantityToProduce")));
        setQuantityProduced(convertToBigDecimal(mapValue.get("quantityProduced")));
        setQuantityRejected(convertToBigDecimal(mapValue.get("quantityRejected")));
        setReservPersons(convertToBigDecimal(mapValue.get("reservPersons")));
        setReserv2ndPPPerc(convertToBigDecimal(mapValue.get("reserv2ndPPPerc")));
        setReservNthPPPerc(convertToBigDecimal(mapValue.get("reservNthPPPerc")));
        setRevisionNumber((Long) mapValue.get("revisionNumber"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("workEffortId", getWorkEffortId());
        mapValue.put("workEffortTypeId", getWorkEffortTypeId());
        mapValue.put("currentStatusId", getCurrentStatusId());
        mapValue.put("lastStatusUpdate", getLastStatusUpdate());
        mapValue.put("workEffortPurposeTypeId", getWorkEffortPurposeTypeId());
        mapValue.put("workEffortParentId", getWorkEffortParentId());
        mapValue.put("workflowPackageId", getWorkflowPackageId());
        mapValue.put("workflowPackageVersion", getWorkflowPackageVersion());
        mapValue.put("workflowProcessId", getWorkflowProcessId());
        mapValue.put("workflowProcessVersion", getWorkflowProcessVersion());
        mapValue.put("workflowActivityId", getWorkflowActivityId());
        mapValue.put("scopeEnumId", getScopeEnumId());
        mapValue.put("priority", getPriority());
        mapValue.put("percentComplete", getPercentComplete());
        mapValue.put("workEffortName", getWorkEffortName());
        mapValue.put("description", getDescription());
        mapValue.put("locationDesc", getLocationDesc());
        mapValue.put("estimatedStartDate", getEstimatedStartDate());
        mapValue.put("estimatedCompletionDate", getEstimatedCompletionDate());
        mapValue.put("actualStartDate", getActualStartDate());
        mapValue.put("actualCompletionDate", getActualCompletionDate());
        mapValue.put("estimatedMilliSeconds", getEstimatedMilliSeconds());
        mapValue.put("estimatedSetupMillis", getEstimatedSetupMillis());
        mapValue.put("estimateCalcMethod", getEstimateCalcMethod());
        mapValue.put("actualMilliSeconds", getActualMilliSeconds());
        mapValue.put("actualSetupMillis", getActualSetupMillis());
        mapValue.put("totalMilliSecondsAllowed", getTotalMilliSecondsAllowed());
        mapValue.put("totalMoneyAllowed", getTotalMoneyAllowed());
        mapValue.put("moneyUomId", getMoneyUomId());
        mapValue.put("specialTerms", getSpecialTerms());
        mapValue.put("timeTransparency", getTimeTransparency());
        mapValue.put("universalId", getUniversalId());
        mapValue.put("sourceReferenceId", getSourceReferenceId());
        mapValue.put("fixedAssetId", getFixedAssetId());
        mapValue.put("facilityId", getFacilityId());
        mapValue.put("infoUrl", getInfoUrl());
        mapValue.put("recurrenceInfoId", getRecurrenceInfoId());
        mapValue.put("runtimeDataId", getRuntimeDataId());
        mapValue.put("noteId", getNoteId());
        mapValue.put("serviceLoaderName", getServiceLoaderName());
        mapValue.put("quantityToProduce", getQuantityToProduce());
        mapValue.put("quantityProduced", getQuantityProduced());
        mapValue.put("quantityRejected", getQuantityRejected());
        mapValue.put("reservPersons", getReservPersons());
        mapValue.put("reserv2ndPPPerc", getReserv2ndPPPerc());
        mapValue.put("reservNthPPPerc", getReservNthPPPerc());
        mapValue.put("revisionNumber", getRevisionNumber());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
