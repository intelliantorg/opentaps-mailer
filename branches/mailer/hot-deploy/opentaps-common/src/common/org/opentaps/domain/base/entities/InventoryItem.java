package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity InventoryItem.
 */
@javax.persistence.Entity
@Table(name="INVENTORY_ITEM")
public class InventoryItem extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("inventoryItemId", "INVENTORY_ITEM_ID");
        fields.put("inventoryItemTypeId", "INVENTORY_ITEM_TYPE_ID");
        fields.put("productId", "PRODUCT_ID");
        fields.put("partyId", "PARTY_ID");
        fields.put("ownerPartyId", "OWNER_PARTY_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("datetimeReceived", "DATETIME_RECEIVED");
        fields.put("datetimeManufactured", "DATETIME_MANUFACTURED");
        fields.put("expireDate", "EXPIRE_DATE");
        fields.put("facilityId", "FACILITY_ID");
        fields.put("containerId", "CONTAINER_ID");
        fields.put("lotId", "LOT_ID");
        fields.put("uomId", "UOM_ID");
        fields.put("binNumber", "BIN_NUMBER");
        fields.put("locationSeqId", "LOCATION_SEQ_ID");
        fields.put("comments", "COMMENTS");
        fields.put("quantityOnHandTotal", "QUANTITY_ON_HAND_TOTAL");
        fields.put("availableToPromiseTotal", "AVAILABLE_TO_PROMISE_TOTAL");
        fields.put("oldQuantityOnHand", "QUANTITY_ON_HAND");
        fields.put("oldAvailableToPromise", "AVAILABLE_TO_PROMISE");
        fields.put("serialNumber", "SERIAL_NUMBER");
        fields.put("softIdentifier", "SOFT_IDENTIFIER");
        fields.put("activationNumber", "ACTIVATION_NUMBER");
        fields.put("activationValidThru", "ACTIVATION_VALID_THRU");
        fields.put("unitCost", "UNIT_COST");
        fields.put("currencyUomId", "CURRENCY_UOM_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("acctgTagEnumId1", "ACCTG_TAG_ENUM_ID1");
        fields.put("acctgTagEnumId2", "ACCTG_TAG_ENUM_ID2");
        fields.put("acctgTagEnumId3", "ACCTG_TAG_ENUM_ID3");
        fields.put("acctgTagEnumId4", "ACCTG_TAG_ENUM_ID4");
        fields.put("acctgTagEnumId5", "ACCTG_TAG_ENUM_ID5");
        fields.put("acctgTagEnumId6", "ACCTG_TAG_ENUM_ID6");
        fields.put("acctgTagEnumId7", "ACCTG_TAG_ENUM_ID7");
        fields.put("acctgTagEnumId8", "ACCTG_TAG_ENUM_ID8");
        fields.put("acctgTagEnumId9", "ACCTG_TAG_ENUM_ID9");
        fields.put("acctgTagEnumId10", "ACCTG_TAG_ENUM_ID10");
        fields.put("parentInventoryItemId", "PARENT_INVENTORY_ITEM_ID");
fieldMapColumns.put("InventoryItem", fields);
}
  public static enum Fields implements EntityFieldInterface<InventoryItem> {
    inventoryItemId("inventoryItemId"),
    inventoryItemTypeId("inventoryItemTypeId"),
    productId("productId"),
    partyId("partyId"),
    ownerPartyId("ownerPartyId"),
    statusId("statusId"),
    datetimeReceived("datetimeReceived"),
    datetimeManufactured("datetimeManufactured"),
    expireDate("expireDate"),
    facilityId("facilityId"),
    containerId("containerId"),
    lotId("lotId"),
    uomId("uomId"),
    binNumber("binNumber"),
    locationSeqId("locationSeqId"),
    comments("comments"),
    quantityOnHandTotal("quantityOnHandTotal"),
    availableToPromiseTotal("availableToPromiseTotal"),
    oldQuantityOnHand("oldQuantityOnHand"),
    oldAvailableToPromise("oldAvailableToPromise"),
    serialNumber("serialNumber"),
    softIdentifier("softIdentifier"),
    activationNumber("activationNumber"),
    activationValidThru("activationValidThru"),
    unitCost("unitCost"),
    currencyUomId("currencyUomId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    acctgTagEnumId1("acctgTagEnumId1"),
    acctgTagEnumId2("acctgTagEnumId2"),
    acctgTagEnumId3("acctgTagEnumId3"),
    acctgTagEnumId4("acctgTagEnumId4"),
    acctgTagEnumId5("acctgTagEnumId5"),
    acctgTagEnumId6("acctgTagEnumId6"),
    acctgTagEnumId7("acctgTagEnumId7"),
    acctgTagEnumId8("acctgTagEnumId8"),
    acctgTagEnumId9("acctgTagEnumId9"),
    acctgTagEnumId10("acctgTagEnumId10"),
    parentInventoryItemId("parentInventoryItemId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="InventoryItem_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="InventoryItem_GEN")   
    @Id
    
    @Column(name="INVENTORY_ITEM_ID")
    private String inventoryItemId;
    
    @Column(name="INVENTORY_ITEM_TYPE_ID")
    private String inventoryItemTypeId;
    
    @Column(name="PRODUCT_ID")
    private String productId;
    
    @Column(name="PARTY_ID")
    private String partyId;
    
    @Column(name="OWNER_PARTY_ID")
    private String ownerPartyId;
    
    @Column(name="STATUS_ID")
    private String statusId;
    
    @Column(name="DATETIME_RECEIVED")
    private Timestamp datetimeReceived;
    
    @Column(name="DATETIME_MANUFACTURED")
    private Timestamp datetimeManufactured;
    
    @Column(name="EXPIRE_DATE")
    private Timestamp expireDate;
    
    @Column(name="FACILITY_ID")
    private String facilityId;
    
    @Column(name="CONTAINER_ID")
    private String containerId;
    
    @Column(name="LOT_ID")
    private String lotId;
    
    @Column(name="UOM_ID")
    private String uomId;
    
    @Column(name="BIN_NUMBER")
    private String binNumber;
    
    @Column(name="LOCATION_SEQ_ID")
    private String locationSeqId;
    
    @Column(name="COMMENTS")
    private String comments;
    
    @Column(name="QUANTITY_ON_HAND_TOTAL")
    private BigDecimal quantityOnHandTotal;
    
    @Column(name="AVAILABLE_TO_PROMISE_TOTAL")
    private BigDecimal availableToPromiseTotal;
    
    @Column(name="QUANTITY_ON_HAND")
    private BigDecimal oldQuantityOnHand;
    
    @Column(name="AVAILABLE_TO_PROMISE")
    private BigDecimal oldAvailableToPromise;
    
    @Column(name="SERIAL_NUMBER")
    private String serialNumber;
    
    @Column(name="SOFT_IDENTIFIER")
    private String softIdentifier;
    
    @Column(name="ACTIVATION_NUMBER")
    private String activationNumber;
    
    @Column(name="ACTIVATION_VALID_THRU")
    private Timestamp activationValidThru;
    
    @Column(name="UNIT_COST")
    private BigDecimal unitCost;
    
    @Column(name="CURRENCY_UOM_ID")
    private String currencyUomId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="ACCTG_TAG_ENUM_ID1")
    private String acctgTagEnumId1;
    
    @Column(name="ACCTG_TAG_ENUM_ID2")
    private String acctgTagEnumId2;
    
    @Column(name="ACCTG_TAG_ENUM_ID3")
    private String acctgTagEnumId3;
    
    @Column(name="ACCTG_TAG_ENUM_ID4")
    private String acctgTagEnumId4;
    
    @Column(name="ACCTG_TAG_ENUM_ID5")
    private String acctgTagEnumId5;
    
    @Column(name="ACCTG_TAG_ENUM_ID6")
    private String acctgTagEnumId6;
    
    @Column(name="ACCTG_TAG_ENUM_ID7")
    private String acctgTagEnumId7;
    
    @Column(name="ACCTG_TAG_ENUM_ID8")
    private String acctgTagEnumId8;
    
    @Column(name="ACCTG_TAG_ENUM_ID9")
    private String acctgTagEnumId9;
    
    @Column(name="ACCTG_TAG_ENUM_ID10")
    private String acctgTagEnumId10;
    
    @Column(name="PARENT_INVENTORY_ITEM_ID")
    private String parentInventoryItemId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private InventoryItemType inventoryItemType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_TYPE_ID")
    private List<InventoryItemTypeAttr> inventoryItemTypeAttrs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Product product = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party party = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="OWNER_PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party ownerParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem statusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="FACILITY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Facility facility = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTAINER_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Container container = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="LOT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Lot lot = null;
    private transient ProductFacility productFacility = null;
    private transient FacilityLocation facilityLocation = null;
    private transient ProductFacilityLocation productFacilityLocation = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom uom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CURRENCY_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom currencyUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_INVENTORY_ITEM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private InventoryItem inventoryItem = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<AcctgTrans> acctgTranses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InventoryItemAttribute> inventoryItemAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InventoryItemDetail> inventoryItemDetails = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InventoryItemStatus> inventoryItemStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InventoryItemTrace> inventoryItemTraces = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InventoryItemTraceDetail> inventoryItemTraceDetails = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="TO_INVENTORY_ITEM_ID")
    private List<InventoryItemTraceDetail> toInventoryItemTraceDetails = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InventoryItemValueHistory> inventoryItemValueHistorys = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InventoryItemVariance> inventoryItemVariances = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InventoryTransfer> inventoryTransfers = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<InvoiceItem> invoiceItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<ItemIssuance> itemIssuances = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<OldOrderItemInventoryRes> oldOrderItemInventoryReses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<OrderItemShipGrpInvRes> orderItemShipGrpInvReses = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<PicklistItem> picklistItems = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<ShipmentReceipt> shipmentReceipts = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<Subscription> subscriptions = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<WorkEffortInventoryAssign> workEffortInventoryAssigns = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryItem", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVENTORY_ITEM_ID")
    private List<WorkEffortInventoryProduced> workEffortInventoryProduceds = null;

  /**
   * Default constructor.
   */
  public InventoryItem() {
      super();
      this.baseEntityName = "InventoryItem";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("inventoryItemId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public InventoryItem(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param inventoryItemId the inventoryItemId to set
     */
    public void setInventoryItemId(String inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemTypeId the inventoryItemTypeId to set
     */
    public void setInventoryItemTypeId(String inventoryItemTypeId) {
        this.inventoryItemTypeId = inventoryItemTypeId;
    }
    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param ownerPartyId the ownerPartyId to set
     */
    public void setOwnerPartyId(String ownerPartyId) {
        this.ownerPartyId = ownerPartyId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param datetimeReceived the datetimeReceived to set
     */
    public void setDatetimeReceived(Timestamp datetimeReceived) {
        this.datetimeReceived = datetimeReceived;
    }
    /**
     * Auto generated value setter.
     * @param datetimeManufactured the datetimeManufactured to set
     */
    public void setDatetimeManufactured(Timestamp datetimeManufactured) {
        this.datetimeManufactured = datetimeManufactured;
    }
    /**
     * Auto generated value setter.
     * @param expireDate the expireDate to set
     */
    public void setExpireDate(Timestamp expireDate) {
        this.expireDate = expireDate;
    }
    /**
     * Auto generated value setter.
     * @param facilityId the facilityId to set
     */
    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }
    /**
     * Auto generated value setter.
     * @param containerId the containerId to set
     */
    public void setContainerId(String containerId) {
        this.containerId = containerId;
    }
    /**
     * Auto generated value setter.
     * @param lotId the lotId to set
     */
    public void setLotId(String lotId) {
        this.lotId = lotId;
    }
    /**
     * Auto generated value setter.
     * @param uomId the uomId to set
     */
    public void setUomId(String uomId) {
        this.uomId = uomId;
    }
    /**
     * Auto generated value setter.
     * @param binNumber the binNumber to set
     */
    public void setBinNumber(String binNumber) {
        this.binNumber = binNumber;
    }
    /**
     * Auto generated value setter.
     * @param locationSeqId the locationSeqId to set
     */
    public void setLocationSeqId(String locationSeqId) {
        this.locationSeqId = locationSeqId;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param quantityOnHandTotal the quantityOnHandTotal to set
     */
    public void setQuantityOnHandTotal(BigDecimal quantityOnHandTotal) {
        this.quantityOnHandTotal = quantityOnHandTotal;
    }
    /**
     * Auto generated value setter.
     * @param availableToPromiseTotal the availableToPromiseTotal to set
     */
    public void setAvailableToPromiseTotal(BigDecimal availableToPromiseTotal) {
        this.availableToPromiseTotal = availableToPromiseTotal;
    }
    /**
     * Auto generated value setter.
     * @param oldQuantityOnHand the oldQuantityOnHand to set
     */
    public void setOldQuantityOnHand(BigDecimal oldQuantityOnHand) {
        this.oldQuantityOnHand = oldQuantityOnHand;
    }
    /**
     * Auto generated value setter.
     * @param oldAvailableToPromise the oldAvailableToPromise to set
     */
    public void setOldAvailableToPromise(BigDecimal oldAvailableToPromise) {
        this.oldAvailableToPromise = oldAvailableToPromise;
    }
    /**
     * Auto generated value setter.
     * @param serialNumber the serialNumber to set
     */
    public void setSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
    }
    /**
     * Auto generated value setter.
     * @param softIdentifier the softIdentifier to set
     */
    public void setSoftIdentifier(String softIdentifier) {
        this.softIdentifier = softIdentifier;
    }
    /**
     * Auto generated value setter.
     * @param activationNumber the activationNumber to set
     */
    public void setActivationNumber(String activationNumber) {
        this.activationNumber = activationNumber;
    }
    /**
     * Auto generated value setter.
     * @param activationValidThru the activationValidThru to set
     */
    public void setActivationValidThru(Timestamp activationValidThru) {
        this.activationValidThru = activationValidThru;
    }
    /**
     * Auto generated value setter.
     * @param unitCost the unitCost to set
     */
    public void setUnitCost(BigDecimal unitCost) {
        this.unitCost = unitCost;
    }
    /**
     * Auto generated value setter.
     * @param currencyUomId the currencyUomId to set
     */
    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId1 the acctgTagEnumId1 to set
     */
    public void setAcctgTagEnumId1(String acctgTagEnumId1) {
        this.acctgTagEnumId1 = acctgTagEnumId1;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId2 the acctgTagEnumId2 to set
     */
    public void setAcctgTagEnumId2(String acctgTagEnumId2) {
        this.acctgTagEnumId2 = acctgTagEnumId2;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId3 the acctgTagEnumId3 to set
     */
    public void setAcctgTagEnumId3(String acctgTagEnumId3) {
        this.acctgTagEnumId3 = acctgTagEnumId3;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId4 the acctgTagEnumId4 to set
     */
    public void setAcctgTagEnumId4(String acctgTagEnumId4) {
        this.acctgTagEnumId4 = acctgTagEnumId4;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId5 the acctgTagEnumId5 to set
     */
    public void setAcctgTagEnumId5(String acctgTagEnumId5) {
        this.acctgTagEnumId5 = acctgTagEnumId5;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId6 the acctgTagEnumId6 to set
     */
    public void setAcctgTagEnumId6(String acctgTagEnumId6) {
        this.acctgTagEnumId6 = acctgTagEnumId6;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId7 the acctgTagEnumId7 to set
     */
    public void setAcctgTagEnumId7(String acctgTagEnumId7) {
        this.acctgTagEnumId7 = acctgTagEnumId7;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId8 the acctgTagEnumId8 to set
     */
    public void setAcctgTagEnumId8(String acctgTagEnumId8) {
        this.acctgTagEnumId8 = acctgTagEnumId8;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId9 the acctgTagEnumId9 to set
     */
    public void setAcctgTagEnumId9(String acctgTagEnumId9) {
        this.acctgTagEnumId9 = acctgTagEnumId9;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId10 the acctgTagEnumId10 to set
     */
    public void setAcctgTagEnumId10(String acctgTagEnumId10) {
        this.acctgTagEnumId10 = acctgTagEnumId10;
    }
    /**
     * Auto generated value setter.
     * @param parentInventoryItemId the parentInventoryItemId to set
     */
    public void setParentInventoryItemId(String parentInventoryItemId) {
        this.parentInventoryItemId = parentInventoryItemId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInventoryItemId() {
        return this.inventoryItemId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInventoryItemTypeId() {
        return this.inventoryItemTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOwnerPartyId() {
        return this.ownerPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getDatetimeReceived() {
        return this.datetimeReceived;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getDatetimeManufactured() {
        return this.datetimeManufactured;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getExpireDate() {
        return this.expireDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFacilityId() {
        return this.facilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContainerId() {
        return this.containerId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLotId() {
        return this.lotId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUomId() {
        return this.uomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBinNumber() {
        return this.binNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLocationSeqId() {
        return this.locationSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantityOnHandTotal() {
        return this.quantityOnHandTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getAvailableToPromiseTotal() {
        return this.availableToPromiseTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOldQuantityOnHand() {
        return this.oldQuantityOnHand;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOldAvailableToPromise() {
        return this.oldAvailableToPromise;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSerialNumber() {
        return this.serialNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSoftIdentifier() {
        return this.softIdentifier;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getActivationNumber() {
        return this.activationNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getActivationValidThru() {
        return this.activationValidThru;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getUnitCost() {
        return this.unitCost;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUomId() {
        return this.currencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId1() {
        return this.acctgTagEnumId1;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId2() {
        return this.acctgTagEnumId2;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId3() {
        return this.acctgTagEnumId3;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId4() {
        return this.acctgTagEnumId4;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId5() {
        return this.acctgTagEnumId5;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId6() {
        return this.acctgTagEnumId6;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId7() {
        return this.acctgTagEnumId7;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId8() {
        return this.acctgTagEnumId8;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId9() {
        return this.acctgTagEnumId9;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId10() {
        return this.acctgTagEnumId10;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParentInventoryItemId() {
        return this.parentInventoryItemId;
    }

    /**
     * Auto generated method that gets the related <code>InventoryItemType</code> by the relation named <code>InventoryItemType</code>.
     * @return the <code>InventoryItemType</code>
     * @throws RepositoryException if an error occurs
     */
    public InventoryItemType getInventoryItemType() throws RepositoryException {
        if (this.inventoryItemType == null) {
            this.inventoryItemType = getRelatedOne(InventoryItemType.class, "InventoryItemType");
        }
        return this.inventoryItemType;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemTypeAttr</code> by the relation named <code>InventoryItemTypeAttr</code>.
     * @return the list of <code>InventoryItemTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemTypeAttr> getInventoryItemTypeAttrs() throws RepositoryException {
        if (this.inventoryItemTypeAttrs == null) {
            this.inventoryItemTypeAttrs = getRelated(InventoryItemTypeAttr.class, "InventoryItemTypeAttr");
        }
        return this.inventoryItemTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>Product</code>.
     * @return the <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public Product getProduct() throws RepositoryException {
        if (this.product == null) {
            this.product = getRelatedOne(Product.class, "Product");
        }
        return this.product;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>OwnerParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getOwnerParty() throws RepositoryException {
        if (this.ownerParty == null) {
            this.ownerParty = getRelatedOne(Party.class, "OwnerParty");
        }
        return this.ownerParty;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>Facility</code>.
     * @return the <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public Facility getFacility() throws RepositoryException {
        if (this.facility == null) {
            this.facility = getRelatedOne(Facility.class, "Facility");
        }
        return this.facility;
    }
    /**
     * Auto generated method that gets the related <code>Container</code> by the relation named <code>Container</code>.
     * @return the <code>Container</code>
     * @throws RepositoryException if an error occurs
     */
    public Container getContainer() throws RepositoryException {
        if (this.container == null) {
            this.container = getRelatedOne(Container.class, "Container");
        }
        return this.container;
    }
    /**
     * Auto generated method that gets the related <code>Lot</code> by the relation named <code>Lot</code>.
     * @return the <code>Lot</code>
     * @throws RepositoryException if an error occurs
     */
    public Lot getLot() throws RepositoryException {
        if (this.lot == null) {
            this.lot = getRelatedOne(Lot.class, "Lot");
        }
        return this.lot;
    }
    /**
     * Auto generated method that gets the related <code>ProductFacility</code> by the relation named <code>ProductFacility</code>.
     * @return the <code>ProductFacility</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductFacility getProductFacility() throws RepositoryException {
        if (this.productFacility == null) {
            this.productFacility = getRelatedOne(ProductFacility.class, "ProductFacility");
        }
        return this.productFacility;
    }
    /**
     * Auto generated method that gets the related <code>FacilityLocation</code> by the relation named <code>FacilityLocation</code>.
     * @return the <code>FacilityLocation</code>
     * @throws RepositoryException if an error occurs
     */
    public FacilityLocation getFacilityLocation() throws RepositoryException {
        if (this.facilityLocation == null) {
            this.facilityLocation = getRelatedOne(FacilityLocation.class, "FacilityLocation");
        }
        return this.facilityLocation;
    }
    /**
     * Auto generated method that gets the related <code>ProductFacilityLocation</code> by the relation named <code>ProductFacilityLocation</code>.
     * @return the <code>ProductFacilityLocation</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductFacilityLocation getProductFacilityLocation() throws RepositoryException {
        if (this.productFacilityLocation == null) {
            this.productFacilityLocation = getRelatedOne(ProductFacilityLocation.class, "ProductFacilityLocation");
        }
        return this.productFacilityLocation;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>Uom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getUom() throws RepositoryException {
        if (this.uom == null) {
            this.uom = getRelatedOne(Uom.class, "Uom");
        }
        return this.uom;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>CurrencyUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getCurrencyUom() throws RepositoryException {
        if (this.currencyUom == null) {
            this.currencyUom = getRelatedOne(Uom.class, "CurrencyUom");
        }
        return this.currencyUom;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItem</code> by the relation named <code>InventoryItem</code>.
     * @return the <code>InventoryItem</code>
     * @throws RepositoryException if an error occurs
     */
    public InventoryItem getInventoryItem() throws RepositoryException {
        if (this.inventoryItem == null) {
            this.inventoryItem = getRelatedOne(InventoryItem.class, "InventoryItem");
        }
        return this.inventoryItem;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTrans</code> by the relation named <code>AcctgTrans</code>.
     * @return the list of <code>AcctgTrans</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTrans> getAcctgTranses() throws RepositoryException {
        if (this.acctgTranses == null) {
            this.acctgTranses = getRelated(AcctgTrans.class, "AcctgTrans");
        }
        return this.acctgTranses;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemAttribute</code> by the relation named <code>InventoryItemAttribute</code>.
     * @return the list of <code>InventoryItemAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemAttribute> getInventoryItemAttributes() throws RepositoryException {
        if (this.inventoryItemAttributes == null) {
            this.inventoryItemAttributes = getRelated(InventoryItemAttribute.class, "InventoryItemAttribute");
        }
        return this.inventoryItemAttributes;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemDetail</code> by the relation named <code>InventoryItemDetail</code>.
     * @return the list of <code>InventoryItemDetail</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemDetail> getInventoryItemDetails() throws RepositoryException {
        if (this.inventoryItemDetails == null) {
            this.inventoryItemDetails = getRelated(InventoryItemDetail.class, "InventoryItemDetail");
        }
        return this.inventoryItemDetails;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemStatus</code> by the relation named <code>InventoryItemStatus</code>.
     * @return the list of <code>InventoryItemStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemStatus> getInventoryItemStatuses() throws RepositoryException {
        if (this.inventoryItemStatuses == null) {
            this.inventoryItemStatuses = getRelated(InventoryItemStatus.class, "InventoryItemStatus");
        }
        return this.inventoryItemStatuses;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemTrace</code> by the relation named <code>InventoryItemTrace</code>.
     * @return the list of <code>InventoryItemTrace</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemTrace> getInventoryItemTraces() throws RepositoryException {
        if (this.inventoryItemTraces == null) {
            this.inventoryItemTraces = getRelated(InventoryItemTrace.class, "InventoryItemTrace");
        }
        return this.inventoryItemTraces;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemTraceDetail</code> by the relation named <code>InventoryItemTraceDetail</code>.
     * @return the list of <code>InventoryItemTraceDetail</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemTraceDetail> getInventoryItemTraceDetails() throws RepositoryException {
        if (this.inventoryItemTraceDetails == null) {
            this.inventoryItemTraceDetails = getRelated(InventoryItemTraceDetail.class, "InventoryItemTraceDetail");
        }
        return this.inventoryItemTraceDetails;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemTraceDetail</code> by the relation named <code>ToInventoryItemTraceDetail</code>.
     * @return the list of <code>InventoryItemTraceDetail</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemTraceDetail> getToInventoryItemTraceDetails() throws RepositoryException {
        if (this.toInventoryItemTraceDetails == null) {
            this.toInventoryItemTraceDetails = getRelated(InventoryItemTraceDetail.class, "ToInventoryItemTraceDetail");
        }
        return this.toInventoryItemTraceDetails;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemValueHistory</code> by the relation named <code>InventoryItemValueHistory</code>.
     * @return the list of <code>InventoryItemValueHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemValueHistory> getInventoryItemValueHistorys() throws RepositoryException {
        if (this.inventoryItemValueHistorys == null) {
            this.inventoryItemValueHistorys = getRelated(InventoryItemValueHistory.class, "InventoryItemValueHistory");
        }
        return this.inventoryItemValueHistorys;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemVariance</code> by the relation named <code>InventoryItemVariance</code>.
     * @return the list of <code>InventoryItemVariance</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemVariance> getInventoryItemVariances() throws RepositoryException {
        if (this.inventoryItemVariances == null) {
            this.inventoryItemVariances = getRelated(InventoryItemVariance.class, "InventoryItemVariance");
        }
        return this.inventoryItemVariances;
    }
    /**
     * Auto generated method that gets the related <code>InventoryTransfer</code> by the relation named <code>InventoryTransfer</code>.
     * @return the list of <code>InventoryTransfer</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryTransfer> getInventoryTransfers() throws RepositoryException {
        if (this.inventoryTransfers == null) {
            this.inventoryTransfers = getRelated(InventoryTransfer.class, "InventoryTransfer");
        }
        return this.inventoryTransfers;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the list of <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItem> getInvoiceItems() throws RepositoryException {
        if (this.invoiceItems == null) {
            this.invoiceItems = getRelated(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItems;
    }
    /**
     * Auto generated method that gets the related <code>ItemIssuance</code> by the relation named <code>ItemIssuance</code>.
     * @return the list of <code>ItemIssuance</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ItemIssuance> getItemIssuances() throws RepositoryException {
        if (this.itemIssuances == null) {
            this.itemIssuances = getRelated(ItemIssuance.class, "ItemIssuance");
        }
        return this.itemIssuances;
    }
    /**
     * Auto generated method that gets the related <code>OldOrderItemInventoryRes</code> by the relation named <code>OldOrderItemInventoryRes</code>.
     * @return the list of <code>OldOrderItemInventoryRes</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldOrderItemInventoryRes> getOldOrderItemInventoryReses() throws RepositoryException {
        if (this.oldOrderItemInventoryReses == null) {
            this.oldOrderItemInventoryReses = getRelated(OldOrderItemInventoryRes.class, "OldOrderItemInventoryRes");
        }
        return this.oldOrderItemInventoryReses;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGrpInvRes</code> by the relation named <code>OrderItemShipGrpInvRes</code>.
     * @return the list of <code>OrderItemShipGrpInvRes</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemShipGrpInvRes> getOrderItemShipGrpInvReses() throws RepositoryException {
        if (this.orderItemShipGrpInvReses == null) {
            this.orderItemShipGrpInvReses = getRelated(OrderItemShipGrpInvRes.class, "OrderItemShipGrpInvRes");
        }
        return this.orderItemShipGrpInvReses;
    }
    /**
     * Auto generated method that gets the related <code>PicklistItem</code> by the relation named <code>PicklistItem</code>.
     * @return the list of <code>PicklistItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistItem> getPicklistItems() throws RepositoryException {
        if (this.picklistItems == null) {
            this.picklistItems = getRelated(PicklistItem.class, "PicklistItem");
        }
        return this.picklistItems;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentReceipt</code> by the relation named <code>ShipmentReceipt</code>.
     * @return the list of <code>ShipmentReceipt</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentReceipt> getShipmentReceipts() throws RepositoryException {
        if (this.shipmentReceipts == null) {
            this.shipmentReceipts = getRelated(ShipmentReceipt.class, "ShipmentReceipt");
        }
        return this.shipmentReceipts;
    }
    /**
     * Auto generated method that gets the related <code>Subscription</code> by the relation named <code>Subscription</code>.
     * @return the list of <code>Subscription</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Subscription> getSubscriptions() throws RepositoryException {
        if (this.subscriptions == null) {
            this.subscriptions = getRelated(Subscription.class, "Subscription");
        }
        return this.subscriptions;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortInventoryAssign</code> by the relation named <code>WorkEffortInventoryAssign</code>.
     * @return the list of <code>WorkEffortInventoryAssign</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortInventoryAssign> getWorkEffortInventoryAssigns() throws RepositoryException {
        if (this.workEffortInventoryAssigns == null) {
            this.workEffortInventoryAssigns = getRelated(WorkEffortInventoryAssign.class, "WorkEffortInventoryAssign");
        }
        return this.workEffortInventoryAssigns;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortInventoryProduced</code> by the relation named <code>WorkEffortInventoryProduced</code>.
     * @return the list of <code>WorkEffortInventoryProduced</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortInventoryProduced> getWorkEffortInventoryProduceds() throws RepositoryException {
        if (this.workEffortInventoryProduceds == null) {
            this.workEffortInventoryProduceds = getRelated(WorkEffortInventoryProduced.class, "WorkEffortInventoryProduced");
        }
        return this.workEffortInventoryProduceds;
    }

    /**
     * Auto generated value setter.
     * @param inventoryItemType the inventoryItemType to set
    */
    public void setInventoryItemType(InventoryItemType inventoryItemType) {
        this.inventoryItemType = inventoryItemType;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemTypeAttrs the inventoryItemTypeAttrs to set
    */
    public void setInventoryItemTypeAttrs(List<InventoryItemTypeAttr> inventoryItemTypeAttrs) {
        this.inventoryItemTypeAttrs = inventoryItemTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param product the product to set
    */
    public void setProduct(Product product) {
        this.product = product;
    }
    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param ownerParty the ownerParty to set
    */
    public void setOwnerParty(Party ownerParty) {
        this.ownerParty = ownerParty;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param facility the facility to set
    */
    public void setFacility(Facility facility) {
        this.facility = facility;
    }
    /**
     * Auto generated value setter.
     * @param container the container to set
    */
    public void setContainer(Container container) {
        this.container = container;
    }
    /**
     * Auto generated value setter.
     * @param lot the lot to set
    */
    public void setLot(Lot lot) {
        this.lot = lot;
    }
    /**
     * Auto generated value setter.
     * @param productFacility the productFacility to set
    */
    public void setProductFacility(ProductFacility productFacility) {
        this.productFacility = productFacility;
    }
    /**
     * Auto generated value setter.
     * @param facilityLocation the facilityLocation to set
    */
    public void setFacilityLocation(FacilityLocation facilityLocation) {
        this.facilityLocation = facilityLocation;
    }
    /**
     * Auto generated value setter.
     * @param productFacilityLocation the productFacilityLocation to set
    */
    public void setProductFacilityLocation(ProductFacilityLocation productFacilityLocation) {
        this.productFacilityLocation = productFacilityLocation;
    }
    /**
     * Auto generated value setter.
     * @param uom the uom to set
    */
    public void setUom(Uom uom) {
        this.uom = uom;
    }
    /**
     * Auto generated value setter.
     * @param currencyUom the currencyUom to set
    */
    public void setCurrencyUom(Uom currencyUom) {
        this.currencyUom = currencyUom;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItem the inventoryItem to set
    */
    public void setInventoryItem(InventoryItem inventoryItem) {
        this.inventoryItem = inventoryItem;
    }
    /**
     * Auto generated value setter.
     * @param acctgTranses the acctgTranses to set
    */
    public void setAcctgTranses(List<AcctgTrans> acctgTranses) {
        this.acctgTranses = acctgTranses;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemAttributes the inventoryItemAttributes to set
    */
    public void setInventoryItemAttributes(List<InventoryItemAttribute> inventoryItemAttributes) {
        this.inventoryItemAttributes = inventoryItemAttributes;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemDetails the inventoryItemDetails to set
    */
    public void setInventoryItemDetails(List<InventoryItemDetail> inventoryItemDetails) {
        this.inventoryItemDetails = inventoryItemDetails;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemStatuses the inventoryItemStatuses to set
    */
    public void setInventoryItemStatuses(List<InventoryItemStatus> inventoryItemStatuses) {
        this.inventoryItemStatuses = inventoryItemStatuses;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemTraces the inventoryItemTraces to set
    */
    public void setInventoryItemTraces(List<InventoryItemTrace> inventoryItemTraces) {
        this.inventoryItemTraces = inventoryItemTraces;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemTraceDetails the inventoryItemTraceDetails to set
    */
    public void setInventoryItemTraceDetails(List<InventoryItemTraceDetail> inventoryItemTraceDetails) {
        this.inventoryItemTraceDetails = inventoryItemTraceDetails;
    }
    /**
     * Auto generated value setter.
     * @param toInventoryItemTraceDetails the toInventoryItemTraceDetails to set
    */
    public void setToInventoryItemTraceDetails(List<InventoryItemTraceDetail> toInventoryItemTraceDetails) {
        this.toInventoryItemTraceDetails = toInventoryItemTraceDetails;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemValueHistorys the inventoryItemValueHistorys to set
    */
    public void setInventoryItemValueHistorys(List<InventoryItemValueHistory> inventoryItemValueHistorys) {
        this.inventoryItemValueHistorys = inventoryItemValueHistorys;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemVariances the inventoryItemVariances to set
    */
    public void setInventoryItemVariances(List<InventoryItemVariance> inventoryItemVariances) {
        this.inventoryItemVariances = inventoryItemVariances;
    }
    /**
     * Auto generated value setter.
     * @param inventoryTransfers the inventoryTransfers to set
    */
    public void setInventoryTransfers(List<InventoryTransfer> inventoryTransfers) {
        this.inventoryTransfers = inventoryTransfers;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItems the invoiceItems to set
    */
    public void setInvoiceItems(List<InvoiceItem> invoiceItems) {
        this.invoiceItems = invoiceItems;
    }
    /**
     * Auto generated value setter.
     * @param itemIssuances the itemIssuances to set
    */
    public void setItemIssuances(List<ItemIssuance> itemIssuances) {
        this.itemIssuances = itemIssuances;
    }
    /**
     * Auto generated value setter.
     * @param oldOrderItemInventoryReses the oldOrderItemInventoryReses to set
    */
    public void setOldOrderItemInventoryReses(List<OldOrderItemInventoryRes> oldOrderItemInventoryReses) {
        this.oldOrderItemInventoryReses = oldOrderItemInventoryReses;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGrpInvReses the orderItemShipGrpInvReses to set
    */
    public void setOrderItemShipGrpInvReses(List<OrderItemShipGrpInvRes> orderItemShipGrpInvReses) {
        this.orderItemShipGrpInvReses = orderItemShipGrpInvReses;
    }
    /**
     * Auto generated value setter.
     * @param picklistItems the picklistItems to set
    */
    public void setPicklistItems(List<PicklistItem> picklistItems) {
        this.picklistItems = picklistItems;
    }
    /**
     * Auto generated value setter.
     * @param shipmentReceipts the shipmentReceipts to set
    */
    public void setShipmentReceipts(List<ShipmentReceipt> shipmentReceipts) {
        this.shipmentReceipts = shipmentReceipts;
    }
    /**
     * Auto generated value setter.
     * @param subscriptions the subscriptions to set
    */
    public void setSubscriptions(List<Subscription> subscriptions) {
        this.subscriptions = subscriptions;
    }
    /**
     * Auto generated value setter.
     * @param workEffortInventoryAssigns the workEffortInventoryAssigns to set
    */
    public void setWorkEffortInventoryAssigns(List<WorkEffortInventoryAssign> workEffortInventoryAssigns) {
        this.workEffortInventoryAssigns = workEffortInventoryAssigns;
    }
    /**
     * Auto generated value setter.
     * @param workEffortInventoryProduceds the workEffortInventoryProduceds to set
    */
    public void setWorkEffortInventoryProduceds(List<WorkEffortInventoryProduced> workEffortInventoryProduceds) {
        this.workEffortInventoryProduceds = workEffortInventoryProduceds;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addInventoryItemAttribute(InventoryItemAttribute inventoryItemAttribute) {
        if (this.inventoryItemAttributes == null) {
            this.inventoryItemAttributes = new ArrayList<InventoryItemAttribute>();
        }
        this.inventoryItemAttributes.add(inventoryItemAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInventoryItemAttribute(InventoryItemAttribute inventoryItemAttribute) {
        if (this.inventoryItemAttributes == null) {
            return;
        }
        this.inventoryItemAttributes.remove(inventoryItemAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInventoryItemAttribute() {
        if (this.inventoryItemAttributes == null) {
            return;
        }
        this.inventoryItemAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInventoryItemDetail(InventoryItemDetail inventoryItemDetail) {
        if (this.inventoryItemDetails == null) {
            this.inventoryItemDetails = new ArrayList<InventoryItemDetail>();
        }
        this.inventoryItemDetails.add(inventoryItemDetail);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInventoryItemDetail(InventoryItemDetail inventoryItemDetail) {
        if (this.inventoryItemDetails == null) {
            return;
        }
        this.inventoryItemDetails.remove(inventoryItemDetail);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInventoryItemDetail() {
        if (this.inventoryItemDetails == null) {
            return;
        }
        this.inventoryItemDetails.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInventoryItemStatuse(InventoryItemStatus inventoryItemStatuse) {
        if (this.inventoryItemStatuses == null) {
            this.inventoryItemStatuses = new ArrayList<InventoryItemStatus>();
        }
        this.inventoryItemStatuses.add(inventoryItemStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInventoryItemStatuse(InventoryItemStatus inventoryItemStatuse) {
        if (this.inventoryItemStatuses == null) {
            return;
        }
        this.inventoryItemStatuses.remove(inventoryItemStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInventoryItemStatuse() {
        if (this.inventoryItemStatuses == null) {
            return;
        }
        this.inventoryItemStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInventoryItemVariance(InventoryItemVariance inventoryItemVariance) {
        if (this.inventoryItemVariances == null) {
            this.inventoryItemVariances = new ArrayList<InventoryItemVariance>();
        }
        this.inventoryItemVariances.add(inventoryItemVariance);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInventoryItemVariance(InventoryItemVariance inventoryItemVariance) {
        if (this.inventoryItemVariances == null) {
            return;
        }
        this.inventoryItemVariances.remove(inventoryItemVariance);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInventoryItemVariance() {
        if (this.inventoryItemVariances == null) {
            return;
        }
        this.inventoryItemVariances.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOldOrderItemInventoryRese(OldOrderItemInventoryRes oldOrderItemInventoryRese) {
        if (this.oldOrderItemInventoryReses == null) {
            this.oldOrderItemInventoryReses = new ArrayList<OldOrderItemInventoryRes>();
        }
        this.oldOrderItemInventoryReses.add(oldOrderItemInventoryRese);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOldOrderItemInventoryRese(OldOrderItemInventoryRes oldOrderItemInventoryRese) {
        if (this.oldOrderItemInventoryReses == null) {
            return;
        }
        this.oldOrderItemInventoryReses.remove(oldOrderItemInventoryRese);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOldOrderItemInventoryRese() {
        if (this.oldOrderItemInventoryReses == null) {
            return;
        }
        this.oldOrderItemInventoryReses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemShipGrpInvRese(OrderItemShipGrpInvRes orderItemShipGrpInvRese) {
        if (this.orderItemShipGrpInvReses == null) {
            this.orderItemShipGrpInvReses = new ArrayList<OrderItemShipGrpInvRes>();
        }
        this.orderItemShipGrpInvReses.add(orderItemShipGrpInvRese);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemShipGrpInvRese(OrderItemShipGrpInvRes orderItemShipGrpInvRese) {
        if (this.orderItemShipGrpInvReses == null) {
            return;
        }
        this.orderItemShipGrpInvReses.remove(orderItemShipGrpInvRese);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemShipGrpInvRese() {
        if (this.orderItemShipGrpInvReses == null) {
            return;
        }
        this.orderItemShipGrpInvReses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPicklistItem(PicklistItem picklistItem) {
        if (this.picklistItems == null) {
            this.picklistItems = new ArrayList<PicklistItem>();
        }
        this.picklistItems.add(picklistItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePicklistItem(PicklistItem picklistItem) {
        if (this.picklistItems == null) {
            return;
        }
        this.picklistItems.remove(picklistItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPicklistItem() {
        if (this.picklistItems == null) {
            return;
        }
        this.picklistItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortInventoryAssign(WorkEffortInventoryAssign workEffortInventoryAssign) {
        if (this.workEffortInventoryAssigns == null) {
            this.workEffortInventoryAssigns = new ArrayList<WorkEffortInventoryAssign>();
        }
        this.workEffortInventoryAssigns.add(workEffortInventoryAssign);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortInventoryAssign(WorkEffortInventoryAssign workEffortInventoryAssign) {
        if (this.workEffortInventoryAssigns == null) {
            return;
        }
        this.workEffortInventoryAssigns.remove(workEffortInventoryAssign);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortInventoryAssign() {
        if (this.workEffortInventoryAssigns == null) {
            return;
        }
        this.workEffortInventoryAssigns.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortInventoryProduced(WorkEffortInventoryProduced workEffortInventoryProduced) {
        if (this.workEffortInventoryProduceds == null) {
            this.workEffortInventoryProduceds = new ArrayList<WorkEffortInventoryProduced>();
        }
        this.workEffortInventoryProduceds.add(workEffortInventoryProduced);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortInventoryProduced(WorkEffortInventoryProduced workEffortInventoryProduced) {
        if (this.workEffortInventoryProduceds == null) {
            return;
        }
        this.workEffortInventoryProduceds.remove(workEffortInventoryProduced);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortInventoryProduced() {
        if (this.workEffortInventoryProduceds == null) {
            return;
        }
        this.workEffortInventoryProduceds.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setInventoryItemId((String) mapValue.get("inventoryItemId"));
        setInventoryItemTypeId((String) mapValue.get("inventoryItemTypeId"));
        setProductId((String) mapValue.get("productId"));
        setPartyId((String) mapValue.get("partyId"));
        setOwnerPartyId((String) mapValue.get("ownerPartyId"));
        setStatusId((String) mapValue.get("statusId"));
        setDatetimeReceived((Timestamp) mapValue.get("datetimeReceived"));
        setDatetimeManufactured((Timestamp) mapValue.get("datetimeManufactured"));
        setExpireDate((Timestamp) mapValue.get("expireDate"));
        setFacilityId((String) mapValue.get("facilityId"));
        setContainerId((String) mapValue.get("containerId"));
        setLotId((String) mapValue.get("lotId"));
        setUomId((String) mapValue.get("uomId"));
        setBinNumber((String) mapValue.get("binNumber"));
        setLocationSeqId((String) mapValue.get("locationSeqId"));
        setComments((String) mapValue.get("comments"));
        setQuantityOnHandTotal(convertToBigDecimal(mapValue.get("quantityOnHandTotal")));
        setAvailableToPromiseTotal(convertToBigDecimal(mapValue.get("availableToPromiseTotal")));
        setOldQuantityOnHand(convertToBigDecimal(mapValue.get("oldQuantityOnHand")));
        setOldAvailableToPromise(convertToBigDecimal(mapValue.get("oldAvailableToPromise")));
        setSerialNumber((String) mapValue.get("serialNumber"));
        setSoftIdentifier((String) mapValue.get("softIdentifier"));
        setActivationNumber((String) mapValue.get("activationNumber"));
        setActivationValidThru((Timestamp) mapValue.get("activationValidThru"));
        setUnitCost(convertToBigDecimal(mapValue.get("unitCost")));
        setCurrencyUomId((String) mapValue.get("currencyUomId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setAcctgTagEnumId1((String) mapValue.get("acctgTagEnumId1"));
        setAcctgTagEnumId2((String) mapValue.get("acctgTagEnumId2"));
        setAcctgTagEnumId3((String) mapValue.get("acctgTagEnumId3"));
        setAcctgTagEnumId4((String) mapValue.get("acctgTagEnumId4"));
        setAcctgTagEnumId5((String) mapValue.get("acctgTagEnumId5"));
        setAcctgTagEnumId6((String) mapValue.get("acctgTagEnumId6"));
        setAcctgTagEnumId7((String) mapValue.get("acctgTagEnumId7"));
        setAcctgTagEnumId8((String) mapValue.get("acctgTagEnumId8"));
        setAcctgTagEnumId9((String) mapValue.get("acctgTagEnumId9"));
        setAcctgTagEnumId10((String) mapValue.get("acctgTagEnumId10"));
        setParentInventoryItemId((String) mapValue.get("parentInventoryItemId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("inventoryItemId", getInventoryItemId());
        mapValue.put("inventoryItemTypeId", getInventoryItemTypeId());
        mapValue.put("productId", getProductId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("ownerPartyId", getOwnerPartyId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("datetimeReceived", getDatetimeReceived());
        mapValue.put("datetimeManufactured", getDatetimeManufactured());
        mapValue.put("expireDate", getExpireDate());
        mapValue.put("facilityId", getFacilityId());
        mapValue.put("containerId", getContainerId());
        mapValue.put("lotId", getLotId());
        mapValue.put("uomId", getUomId());
        mapValue.put("binNumber", getBinNumber());
        mapValue.put("locationSeqId", getLocationSeqId());
        mapValue.put("comments", getComments());
        mapValue.put("quantityOnHandTotal", getQuantityOnHandTotal());
        mapValue.put("availableToPromiseTotal", getAvailableToPromiseTotal());
        mapValue.put("oldQuantityOnHand", getOldQuantityOnHand());
        mapValue.put("oldAvailableToPromise", getOldAvailableToPromise());
        mapValue.put("serialNumber", getSerialNumber());
        mapValue.put("softIdentifier", getSoftIdentifier());
        mapValue.put("activationNumber", getActivationNumber());
        mapValue.put("activationValidThru", getActivationValidThru());
        mapValue.put("unitCost", getUnitCost());
        mapValue.put("currencyUomId", getCurrencyUomId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("acctgTagEnumId1", getAcctgTagEnumId1());
        mapValue.put("acctgTagEnumId2", getAcctgTagEnumId2());
        mapValue.put("acctgTagEnumId3", getAcctgTagEnumId3());
        mapValue.put("acctgTagEnumId4", getAcctgTagEnumId4());
        mapValue.put("acctgTagEnumId5", getAcctgTagEnumId5());
        mapValue.put("acctgTagEnumId6", getAcctgTagEnumId6());
        mapValue.put("acctgTagEnumId7", getAcctgTagEnumId7());
        mapValue.put("acctgTagEnumId8", getAcctgTagEnumId8());
        mapValue.put("acctgTagEnumId9", getAcctgTagEnumId9());
        mapValue.put("acctgTagEnumId10", getAcctgTagEnumId10());
        mapValue.put("parentInventoryItemId", getParentInventoryItemId());
        return mapValue;
    }


}
