package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity X509IssuerProvision.
 */
@javax.persistence.Entity
@Table(name="X509_ISSUER_PROVISION")
public class X509IssuerProvision extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("certProvisionId", "CERT_PROVISION_ID");
        fields.put("commonName", "COMMON_NAME");
        fields.put("organizationalUnit", "ORGANIZATIONAL_UNIT");
        fields.put("organizationName", "ORGANIZATION_NAME");
        fields.put("cityLocality", "CITY_LOCALITY");
        fields.put("stateProvince", "STATE_PROVINCE");
        fields.put("country", "COUNTRY");
        fields.put("serialNumber", "SERIAL_NUMBER");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("X509IssuerProvision", fields);
}
  public static enum Fields implements EntityFieldInterface<X509IssuerProvision> {
    certProvisionId("certProvisionId"),
    commonName("commonName"),
    organizationalUnit("organizationalUnit"),
    organizationName("organizationName"),
    cityLocality("cityLocality"),
    stateProvince("stateProvince"),
    country("country"),
    serialNumber("serialNumber"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="X509IssuerProvision_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="X509IssuerProvision_GEN")   
    @Id
    
    @Column(name="CERT_PROVISION_ID")
    private String certProvisionId;
    
    @Column(name="COMMON_NAME")
    private String commonName;
    
    @Column(name="ORGANIZATIONAL_UNIT")
    private String organizationalUnit;
    
    @Column(name="ORGANIZATION_NAME")
    private String organizationName;
    
    @Column(name="CITY_LOCALITY")
    private String cityLocality;
    
    @Column(name="STATE_PROVINCE")
    private String stateProvince;
    
    @Column(name="COUNTRY")
    private String country;
    
    @Column(name="SERIAL_NUMBER")
    private String serialNumber;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;

  /**
   * Default constructor.
   */
  public X509IssuerProvision() {
      super();
      this.baseEntityName = "X509IssuerProvision";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("certProvisionId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public X509IssuerProvision(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param certProvisionId the certProvisionId to set
     */
    public void setCertProvisionId(String certProvisionId) {
        this.certProvisionId = certProvisionId;
    }
    /**
     * Auto generated value setter.
     * @param commonName the commonName to set
     */
    public void setCommonName(String commonName) {
        this.commonName = commonName;
    }
    /**
     * Auto generated value setter.
     * @param organizationalUnit the organizationalUnit to set
     */
    public void setOrganizationalUnit(String organizationalUnit) {
        this.organizationalUnit = organizationalUnit;
    }
    /**
     * Auto generated value setter.
     * @param organizationName the organizationName to set
     */
    public void setOrganizationName(String organizationName) {
        this.organizationName = organizationName;
    }
    /**
     * Auto generated value setter.
     * @param cityLocality the cityLocality to set
     */
    public void setCityLocality(String cityLocality) {
        this.cityLocality = cityLocality;
    }
    /**
     * Auto generated value setter.
     * @param stateProvince the stateProvince to set
     */
    public void setStateProvince(String stateProvince) {
        this.stateProvince = stateProvince;
    }
    /**
     * Auto generated value setter.
     * @param country the country to set
     */
    public void setCountry(String country) {
        this.country = country;
    }
    /**
     * Auto generated value setter.
     * @param serialNumber the serialNumber to set
     */
    public void setSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCertProvisionId() {
        return this.certProvisionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCommonName() {
        return this.commonName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrganizationalUnit() {
        return this.organizationalUnit;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrganizationName() {
        return this.organizationName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCityLocality() {
        return this.cityLocality;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStateProvince() {
        return this.stateProvince;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCountry() {
        return this.country;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSerialNumber() {
        return this.serialNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setCertProvisionId((String) mapValue.get("certProvisionId"));
        setCommonName((String) mapValue.get("commonName"));
        setOrganizationalUnit((String) mapValue.get("organizationalUnit"));
        setOrganizationName((String) mapValue.get("organizationName"));
        setCityLocality((String) mapValue.get("cityLocality"));
        setStateProvince((String) mapValue.get("stateProvince"));
        setCountry((String) mapValue.get("country"));
        setSerialNumber((String) mapValue.get("serialNumber"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("certProvisionId", getCertProvisionId());
        mapValue.put("commonName", getCommonName());
        mapValue.put("organizationalUnit", getOrganizationalUnit());
        mapValue.put("organizationName", getOrganizationName());
        mapValue.put("cityLocality", getCityLocality());
        mapValue.put("stateProvince", getStateProvince());
        mapValue.put("country", getCountry());
        mapValue.put("serialNumber", getSerialNumber());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
