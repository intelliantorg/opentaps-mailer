package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Picklist.
 */
@javax.persistence.Entity
@Table(name="PICKLIST")
public class Picklist extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("picklistId", "PICKLIST_ID");
        fields.put("description", "DESCRIPTION");
        fields.put("facilityId", "FACILITY_ID");
        fields.put("shipmentMethodTypeId", "SHIPMENT_METHOD_TYPE_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("picklistDate", "PICKLIST_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("Picklist", fields);
}
  public static enum Fields implements EntityFieldInterface<Picklist> {
    picklistId("picklistId"),
    description("description"),
    facilityId("facilityId"),
    shipmentMethodTypeId("shipmentMethodTypeId"),
    statusId("statusId"),
    picklistDate("picklistDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Picklist_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Picklist_GEN")   
    @Id
    
    @Column(name="PICKLIST_ID")
    private String picklistId;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="FACILITY_ID")
    private String facilityId;
    
    @Column(name="SHIPMENT_METHOD_TYPE_ID")
    private String shipmentMethodTypeId;
    
    @Column(name="STATUS_ID")
    private String statusId;
    
    @Column(name="PICKLIST_DATE")
    private Timestamp picklistDate;
    
    @Column(name="CREATED_BY_USER_LOGIN")
    private String createdByUserLogin;
    
    @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
    private String lastModifiedByUserLogin;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="FACILITY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Facility facility = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SHIPMENT_METHOD_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ShipmentMethodType shipmentMethodType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem statusItem = null;
    private transient List<StatusValidChangeToDetail> statusValidChangeToDetails = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PICKLIST_ID")
    private List<PicklistBin> picklistBins = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="picklist", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PICKLIST_ID")
    private List<PicklistRole> picklistRoles = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="picklist", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PICKLIST_ID")
    private List<PicklistStatusHistory> picklistStatusHistorys = null;

  /**
   * Default constructor.
   */
  public Picklist() {
      super();
      this.baseEntityName = "Picklist";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("picklistId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Picklist(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param picklistId the picklistId to set
     */
    public void setPicklistId(String picklistId) {
        this.picklistId = picklistId;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param facilityId the facilityId to set
     */
    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }
    /**
     * Auto generated value setter.
     * @param shipmentMethodTypeId the shipmentMethodTypeId to set
     */
    public void setShipmentMethodTypeId(String shipmentMethodTypeId) {
        this.shipmentMethodTypeId = shipmentMethodTypeId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param picklistDate the picklistDate to set
     */
    public void setPicklistDate(Timestamp picklistDate) {
        this.picklistDate = picklistDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPicklistId() {
        return this.picklistId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFacilityId() {
        return this.facilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShipmentMethodTypeId() {
        return this.shipmentMethodTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getPicklistDate() {
        return this.picklistDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>Facility</code>.
     * @return the <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public Facility getFacility() throws RepositoryException {
        if (this.facility == null) {
            this.facility = getRelatedOne(Facility.class, "Facility");
        }
        return this.facility;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentMethodType</code> by the relation named <code>ShipmentMethodType</code>.
     * @return the <code>ShipmentMethodType</code>
     * @throws RepositoryException if an error occurs
     */
    public ShipmentMethodType getShipmentMethodType() throws RepositoryException {
        if (this.shipmentMethodType == null) {
            this.shipmentMethodType = getRelatedOne(ShipmentMethodType.class, "ShipmentMethodType");
        }
        return this.shipmentMethodType;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>StatusValidChangeToDetail</code> by the relation named <code>StatusValidChangeToDetail</code>.
     * @return the list of <code>StatusValidChangeToDetail</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends StatusValidChangeToDetail> getStatusValidChangeToDetails() throws RepositoryException {
        if (this.statusValidChangeToDetails == null) {
            this.statusValidChangeToDetails = getRelated(StatusValidChangeToDetail.class, "StatusValidChangeToDetail");
        }
        return this.statusValidChangeToDetails;
    }
    /**
     * Auto generated method that gets the related <code>PicklistBin</code> by the relation named <code>PicklistBin</code>.
     * @return the list of <code>PicklistBin</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistBin> getPicklistBins() throws RepositoryException {
        if (this.picklistBins == null) {
            this.picklistBins = getRelated(PicklistBin.class, "PicklistBin");
        }
        return this.picklistBins;
    }
    /**
     * Auto generated method that gets the related <code>PicklistRole</code> by the relation named <code>PicklistRole</code>.
     * @return the list of <code>PicklistRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistRole> getPicklistRoles() throws RepositoryException {
        if (this.picklistRoles == null) {
            this.picklistRoles = getRelated(PicklistRole.class, "PicklistRole");
        }
        return this.picklistRoles;
    }
    /**
     * Auto generated method that gets the related <code>PicklistStatusHistory</code> by the relation named <code>PicklistStatusHistory</code>.
     * @return the list of <code>PicklistStatusHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistStatusHistory> getPicklistStatusHistorys() throws RepositoryException {
        if (this.picklistStatusHistorys == null) {
            this.picklistStatusHistorys = getRelated(PicklistStatusHistory.class, "PicklistStatusHistory");
        }
        return this.picklistStatusHistorys;
    }

    /**
     * Auto generated value setter.
     * @param facility the facility to set
    */
    public void setFacility(Facility facility) {
        this.facility = facility;
    }
    /**
     * Auto generated value setter.
     * @param shipmentMethodType the shipmentMethodType to set
    */
    public void setShipmentMethodType(ShipmentMethodType shipmentMethodType) {
        this.shipmentMethodType = shipmentMethodType;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param statusValidChangeToDetails the statusValidChangeToDetails to set
    */
    public void setStatusValidChangeToDetails(List<StatusValidChangeToDetail> statusValidChangeToDetails) {
        this.statusValidChangeToDetails = statusValidChangeToDetails;
    }
    /**
     * Auto generated value setter.
     * @param picklistBins the picklistBins to set
    */
    public void setPicklistBins(List<PicklistBin> picklistBins) {
        this.picklistBins = picklistBins;
    }
    /**
     * Auto generated value setter.
     * @param picklistRoles the picklistRoles to set
    */
    public void setPicklistRoles(List<PicklistRole> picklistRoles) {
        this.picklistRoles = picklistRoles;
    }
    /**
     * Auto generated value setter.
     * @param picklistStatusHistorys the picklistStatusHistorys to set
    */
    public void setPicklistStatusHistorys(List<PicklistStatusHistory> picklistStatusHistorys) {
        this.picklistStatusHistorys = picklistStatusHistorys;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addPicklistRole(PicklistRole picklistRole) {
        if (this.picklistRoles == null) {
            this.picklistRoles = new ArrayList<PicklistRole>();
        }
        this.picklistRoles.add(picklistRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePicklistRole(PicklistRole picklistRole) {
        if (this.picklistRoles == null) {
            return;
        }
        this.picklistRoles.remove(picklistRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPicklistRole() {
        if (this.picklistRoles == null) {
            return;
        }
        this.picklistRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPicklistStatusHistory(PicklistStatusHistory picklistStatusHistory) {
        if (this.picklistStatusHistorys == null) {
            this.picklistStatusHistorys = new ArrayList<PicklistStatusHistory>();
        }
        this.picklistStatusHistorys.add(picklistStatusHistory);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePicklistStatusHistory(PicklistStatusHistory picklistStatusHistory) {
        if (this.picklistStatusHistorys == null) {
            return;
        }
        this.picklistStatusHistorys.remove(picklistStatusHistory);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPicklistStatusHistory() {
        if (this.picklistStatusHistorys == null) {
            return;
        }
        this.picklistStatusHistorys.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPicklistId((String) mapValue.get("picklistId"));
        setDescription((String) mapValue.get("description"));
        setFacilityId((String) mapValue.get("facilityId"));
        setShipmentMethodTypeId((String) mapValue.get("shipmentMethodTypeId"));
        setStatusId((String) mapValue.get("statusId"));
        setPicklistDate((Timestamp) mapValue.get("picklistDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("picklistId", getPicklistId());
        mapValue.put("description", getDescription());
        mapValue.put("facilityId", getFacilityId());
        mapValue.put("shipmentMethodTypeId", getShipmentMethodTypeId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("picklistDate", getPicklistDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
