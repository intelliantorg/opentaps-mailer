package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ProductPriceRule.
 */
@javax.persistence.Entity
@Table(name="PRODUCT_PRICE_RULE")
public class ProductPriceRule extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productPriceRuleId", "PRODUCT_PRICE_RULE_ID");
        fields.put("ruleName", "RULE_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("isSale", "IS_SALE");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ProductPriceRule", fields);
}
  public static enum Fields implements EntityFieldInterface<ProductPriceRule> {
    productPriceRuleId("productPriceRuleId"),
    ruleName("ruleName"),
    description("description"),
    isSale("isSale"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="ProductPriceRule_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="ProductPriceRule_GEN")   
    @Id
    
    @Column(name="PRODUCT_PRICE_RULE_ID")
    private String productPriceRuleId;
    
    @Column(name="RULE_NAME")
    private String ruleName;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="IS_SALE")
    private String isSale;
    
    @Column(name="FROM_DATE")
    private Timestamp fromDate;
    
    @Column(name="THRU_DATE")
    private Timestamp thruDate;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productPriceRule", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_PRICE_RULE_ID")
    private List<MarketingCampaignPrice> marketingCampaignPrices = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_PRICE_RULE_ID")
    private List<OrderItemPriceInfo> orderItemPriceInfoes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productPriceRule", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_PRICE_RULE_ID")
    private List<ProductPriceAction> productPriceActions = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="productPriceRule", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="PRODUCT_PRICE_RULE_ID")
    private List<ProductPriceCond> productPriceConds = null;

  /**
   * Default constructor.
   */
  public ProductPriceRule() {
      super();
      this.baseEntityName = "ProductPriceRule";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productPriceRuleId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProductPriceRule(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param productPriceRuleId the productPriceRuleId to set
     */
    public void setProductPriceRuleId(String productPriceRuleId) {
        this.productPriceRuleId = productPriceRuleId;
    }
    /**
     * Auto generated value setter.
     * @param ruleName the ruleName to set
     */
    public void setRuleName(String ruleName) {
        this.ruleName = ruleName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param isSale the isSale to set
     */
    public void setIsSale(String isSale) {
        this.isSale = isSale;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductPriceRuleId() {
        return this.productPriceRuleId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRuleName() {
        return this.ruleName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsSale() {
        return this.isSale;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>MarketingCampaignPrice</code> by the relation named <code>MarketingCampaignPrice</code>.
     * @return the list of <code>MarketingCampaignPrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends MarketingCampaignPrice> getMarketingCampaignPrices() throws RepositoryException {
        if (this.marketingCampaignPrices == null) {
            this.marketingCampaignPrices = getRelated(MarketingCampaignPrice.class, "MarketingCampaignPrice");
        }
        return this.marketingCampaignPrices;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemPriceInfo</code> by the relation named <code>OrderItemPriceInfo</code>.
     * @return the list of <code>OrderItemPriceInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemPriceInfo> getOrderItemPriceInfoes() throws RepositoryException {
        if (this.orderItemPriceInfoes == null) {
            this.orderItemPriceInfoes = getRelated(OrderItemPriceInfo.class, "OrderItemPriceInfo");
        }
        return this.orderItemPriceInfoes;
    }
    /**
     * Auto generated method that gets the related <code>ProductPriceAction</code> by the relation named <code>ProductPriceAction</code>.
     * @return the list of <code>ProductPriceAction</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPriceAction> getProductPriceActions() throws RepositoryException {
        if (this.productPriceActions == null) {
            this.productPriceActions = getRelated(ProductPriceAction.class, "ProductPriceAction");
        }
        return this.productPriceActions;
    }
    /**
     * Auto generated method that gets the related <code>ProductPriceCond</code> by the relation named <code>ProductPriceCond</code>.
     * @return the list of <code>ProductPriceCond</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPriceCond> getProductPriceConds() throws RepositoryException {
        if (this.productPriceConds == null) {
            this.productPriceConds = getRelated(ProductPriceCond.class, "ProductPriceCond");
        }
        return this.productPriceConds;
    }

    /**
     * Auto generated value setter.
     * @param marketingCampaignPrices the marketingCampaignPrices to set
    */
    public void setMarketingCampaignPrices(List<MarketingCampaignPrice> marketingCampaignPrices) {
        this.marketingCampaignPrices = marketingCampaignPrices;
    }
    /**
     * Auto generated value setter.
     * @param orderItemPriceInfoes the orderItemPriceInfoes to set
    */
    public void setOrderItemPriceInfoes(List<OrderItemPriceInfo> orderItemPriceInfoes) {
        this.orderItemPriceInfoes = orderItemPriceInfoes;
    }
    /**
     * Auto generated value setter.
     * @param productPriceActions the productPriceActions to set
    */
    public void setProductPriceActions(List<ProductPriceAction> productPriceActions) {
        this.productPriceActions = productPriceActions;
    }
    /**
     * Auto generated value setter.
     * @param productPriceConds the productPriceConds to set
    */
    public void setProductPriceConds(List<ProductPriceCond> productPriceConds) {
        this.productPriceConds = productPriceConds;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addMarketingCampaignPrice(MarketingCampaignPrice marketingCampaignPrice) {
        if (this.marketingCampaignPrices == null) {
            this.marketingCampaignPrices = new ArrayList<MarketingCampaignPrice>();
        }
        this.marketingCampaignPrices.add(marketingCampaignPrice);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeMarketingCampaignPrice(MarketingCampaignPrice marketingCampaignPrice) {
        if (this.marketingCampaignPrices == null) {
            return;
        }
        this.marketingCampaignPrices.remove(marketingCampaignPrice);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearMarketingCampaignPrice() {
        if (this.marketingCampaignPrices == null) {
            return;
        }
        this.marketingCampaignPrices.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPriceAction(ProductPriceAction productPriceAction) {
        if (this.productPriceActions == null) {
            this.productPriceActions = new ArrayList<ProductPriceAction>();
        }
        this.productPriceActions.add(productPriceAction);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPriceAction(ProductPriceAction productPriceAction) {
        if (this.productPriceActions == null) {
            return;
        }
        this.productPriceActions.remove(productPriceAction);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPriceAction() {
        if (this.productPriceActions == null) {
            return;
        }
        this.productPriceActions.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPriceCond(ProductPriceCond productPriceCond) {
        if (this.productPriceConds == null) {
            this.productPriceConds = new ArrayList<ProductPriceCond>();
        }
        this.productPriceConds.add(productPriceCond);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPriceCond(ProductPriceCond productPriceCond) {
        if (this.productPriceConds == null) {
            return;
        }
        this.productPriceConds.remove(productPriceCond);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPriceCond() {
        if (this.productPriceConds == null) {
            return;
        }
        this.productPriceConds.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductPriceRuleId((String) mapValue.get("productPriceRuleId"));
        setRuleName((String) mapValue.get("ruleName"));
        setDescription((String) mapValue.get("description"));
        setIsSale((String) mapValue.get("isSale"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productPriceRuleId", getProductPriceRuleId());
        mapValue.put("ruleName", getRuleName());
        mapValue.put("description", getDescription());
        mapValue.put("isSale", getIsSale());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
