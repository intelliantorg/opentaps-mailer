package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity LockboxBatch.
 */
@javax.persistence.Entity
@Table(name="LOCKBOX_BATCH")
public class LockboxBatch extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("lockboxBatchId", "LOCKBOX_BATCH_ID");
        fields.put("batchId", "BATCH_ID");
        fields.put("fileHashMark", "FILE_HASH_MARK");
        fields.put("datetimeEntered", "DATETIME_ENTERED");
        fields.put("batchCount", "BATCH_COUNT");
        fields.put("batchAmount", "BATCH_AMOUNT");
        fields.put("outstandingAmount", "OUTSTANDING_AMOUNT");
        fields.put("createdByUserLoginId", "CREATED_BY_USER_LOGIN_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("LockboxBatch", fields);
}
  public static enum Fields implements EntityFieldInterface<LockboxBatch> {
    lockboxBatchId("lockboxBatchId"),
    batchId("batchId"),
    fileHashMark("fileHashMark"),
    datetimeEntered("datetimeEntered"),
    batchCount("batchCount"),
    batchAmount("batchAmount"),
    outstandingAmount("outstandingAmount"),
    createdByUserLoginId("createdByUserLoginId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="LockboxBatch_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="LockboxBatch_GEN")   
    @Id
    
    @Column(name="LOCKBOX_BATCH_ID")
    private String lockboxBatchId;
    
    @Column(name="BATCH_ID")
    private String batchId;
    
    @Column(name="FILE_HASH_MARK")
    private String fileHashMark;
    
    @Column(name="DATETIME_ENTERED")
    private Timestamp datetimeEntered;
    
    @Column(name="BATCH_COUNT")
    private Long batchCount;
    
    @Column(name="BATCH_AMOUNT")
    private BigDecimal batchAmount;
    
    @Column(name="OUTSTANDING_AMOUNT")
    private BigDecimal outstandingAmount;
    
    @Column(name="CREATED_BY_USER_LOGIN_ID")
    private String createdByUserLoginId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY_USER_LOGIN_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin userLogin = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="lockboxBatch", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="LOCKBOX_BATCH_ID")
    private List<LockboxBatchItem> lockboxBatchItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="lockboxBatch", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="LOCKBOX_BATCH_ID")
    private List<LockboxBatchItemDetail> lockboxBatchItemDetails = null;

  /**
   * Default constructor.
   */
  public LockboxBatch() {
      super();
      this.baseEntityName = "LockboxBatch";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("lockboxBatchId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public LockboxBatch(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param lockboxBatchId the lockboxBatchId to set
     */
    public void setLockboxBatchId(String lockboxBatchId) {
        this.lockboxBatchId = lockboxBatchId;
    }
    /**
     * Auto generated value setter.
     * @param batchId the batchId to set
     */
    public void setBatchId(String batchId) {
        this.batchId = batchId;
    }
    /**
     * Auto generated value setter.
     * @param fileHashMark the fileHashMark to set
     */
    public void setFileHashMark(String fileHashMark) {
        this.fileHashMark = fileHashMark;
    }
    /**
     * Auto generated value setter.
     * @param datetimeEntered the datetimeEntered to set
     */
    public void setDatetimeEntered(Timestamp datetimeEntered) {
        this.datetimeEntered = datetimeEntered;
    }
    /**
     * Auto generated value setter.
     * @param batchCount the batchCount to set
     */
    public void setBatchCount(Long batchCount) {
        this.batchCount = batchCount;
    }
    /**
     * Auto generated value setter.
     * @param batchAmount the batchAmount to set
     */
    public void setBatchAmount(BigDecimal batchAmount) {
        this.batchAmount = batchAmount;
    }
    /**
     * Auto generated value setter.
     * @param outstandingAmount the outstandingAmount to set
     */
    public void setOutstandingAmount(BigDecimal outstandingAmount) {
        this.outstandingAmount = outstandingAmount;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLoginId the createdByUserLoginId to set
     */
    public void setCreatedByUserLoginId(String createdByUserLoginId) {
        this.createdByUserLoginId = createdByUserLoginId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLockboxBatchId() {
        return this.lockboxBatchId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBatchId() {
        return this.batchId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFileHashMark() {
        return this.fileHashMark;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getDatetimeEntered() {
        return this.datetimeEntered;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getBatchCount() {
        return this.batchCount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getBatchAmount() {
        return this.batchAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOutstandingAmount() {
        return this.outstandingAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLoginId() {
        return this.createdByUserLoginId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>UserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getUserLogin() throws RepositoryException {
        if (this.userLogin == null) {
            this.userLogin = getRelatedOne(UserLogin.class, "UserLogin");
        }
        return this.userLogin;
    }
    /**
     * Auto generated method that gets the related <code>LockboxBatchItem</code> by the relation named <code>LockboxBatchItem</code>.
     * @return the list of <code>LockboxBatchItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends LockboxBatchItem> getLockboxBatchItems() throws RepositoryException {
        if (this.lockboxBatchItems == null) {
            this.lockboxBatchItems = getRelated(LockboxBatchItem.class, "LockboxBatchItem");
        }
        return this.lockboxBatchItems;
    }
    /**
     * Auto generated method that gets the related <code>LockboxBatchItemDetail</code> by the relation named <code>LockboxBatchItemDetail</code>.
     * @return the list of <code>LockboxBatchItemDetail</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends LockboxBatchItemDetail> getLockboxBatchItemDetails() throws RepositoryException {
        if (this.lockboxBatchItemDetails == null) {
            this.lockboxBatchItemDetails = getRelated(LockboxBatchItemDetail.class, "LockboxBatchItemDetail");
        }
        return this.lockboxBatchItemDetails;
    }

    /**
     * Auto generated value setter.
     * @param userLogin the userLogin to set
    */
    public void setUserLogin(UserLogin userLogin) {
        this.userLogin = userLogin;
    }
    /**
     * Auto generated value setter.
     * @param lockboxBatchItems the lockboxBatchItems to set
    */
    public void setLockboxBatchItems(List<LockboxBatchItem> lockboxBatchItems) {
        this.lockboxBatchItems = lockboxBatchItems;
    }
    /**
     * Auto generated value setter.
     * @param lockboxBatchItemDetails the lockboxBatchItemDetails to set
    */
    public void setLockboxBatchItemDetails(List<LockboxBatchItemDetail> lockboxBatchItemDetails) {
        this.lockboxBatchItemDetails = lockboxBatchItemDetails;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addLockboxBatchItem(LockboxBatchItem lockboxBatchItem) {
        if (this.lockboxBatchItems == null) {
            this.lockboxBatchItems = new ArrayList<LockboxBatchItem>();
        }
        this.lockboxBatchItems.add(lockboxBatchItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeLockboxBatchItem(LockboxBatchItem lockboxBatchItem) {
        if (this.lockboxBatchItems == null) {
            return;
        }
        this.lockboxBatchItems.remove(lockboxBatchItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearLockboxBatchItem() {
        if (this.lockboxBatchItems == null) {
            return;
        }
        this.lockboxBatchItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addLockboxBatchItemDetail(LockboxBatchItemDetail lockboxBatchItemDetail) {
        if (this.lockboxBatchItemDetails == null) {
            this.lockboxBatchItemDetails = new ArrayList<LockboxBatchItemDetail>();
        }
        this.lockboxBatchItemDetails.add(lockboxBatchItemDetail);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeLockboxBatchItemDetail(LockboxBatchItemDetail lockboxBatchItemDetail) {
        if (this.lockboxBatchItemDetails == null) {
            return;
        }
        this.lockboxBatchItemDetails.remove(lockboxBatchItemDetail);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearLockboxBatchItemDetail() {
        if (this.lockboxBatchItemDetails == null) {
            return;
        }
        this.lockboxBatchItemDetails.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setLockboxBatchId((String) mapValue.get("lockboxBatchId"));
        setBatchId((String) mapValue.get("batchId"));
        setFileHashMark((String) mapValue.get("fileHashMark"));
        setDatetimeEntered((Timestamp) mapValue.get("datetimeEntered"));
        setBatchCount((Long) mapValue.get("batchCount"));
        setBatchAmount(convertToBigDecimal(mapValue.get("batchAmount")));
        setOutstandingAmount(convertToBigDecimal(mapValue.get("outstandingAmount")));
        setCreatedByUserLoginId((String) mapValue.get("createdByUserLoginId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("lockboxBatchId", getLockboxBatchId());
        mapValue.put("batchId", getBatchId());
        mapValue.put("fileHashMark", getFileHashMark());
        mapValue.put("datetimeEntered", getDatetimeEntered());
        mapValue.put("batchCount", getBatchCount());
        mapValue.put("batchAmount", getBatchAmount());
        mapValue.put("outstandingAmount", getOutstandingAmount());
        mapValue.put("createdByUserLoginId", getCreatedByUserLoginId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
