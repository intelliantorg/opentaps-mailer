package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity OrderHeaderAndRoles.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectOrderHeaderAndRoless", query="SELECT ORLE.ORDER_ID AS \"orderId\",ORLE.PARTY_ID AS \"partyId\",ORLE.ROLE_TYPE_ID AS \"roleTypeId\",OH.ORDER_TYPE_ID AS \"orderTypeId\",OH.ORDER_NAME AS \"orderName\",OH.EXTERNAL_ID AS \"externalId\",OH.SALES_CHANNEL_ENUM_ID AS \"salesChannelEnumId\",OH.ORDER_DATE AS \"orderDate\",OH.ENTRY_DATE AS \"entryDate\",OH.VISIT_ID AS \"visitId\",OH.STATUS_ID AS \"statusId\",OH.CREATED_BY AS \"createdBy\",OH.FIRST_ATTEMPT_ORDER_ID AS \"firstAttemptOrderId\",OH.CURRENCY_UOM AS \"currencyUom\",OH.SYNC_STATUS_ID AS \"syncStatusId\",OH.BILLING_ACCOUNT_ID AS \"billingAccountId\",OH.ORIGIN_FACILITY_ID AS \"originFacilityId\",OH.WEB_SITE_ID AS \"webSiteId\",OH.PRODUCT_STORE_ID AS \"productStoreId\",OH.TERMINAL_ID AS \"terminalId\",OH.TRANSACTION_ID AS \"transactionId\",OH.AUTO_ORDER_SHOPPING_LIST_ID AS \"autoOrderShoppingListId\",OH.NEEDS_INVENTORY_ISSUANCE AS \"needsInventoryIssuance\",OH.IS_RUSH_ORDER AS \"isRushOrder\",OH.INTERNAL_CODE AS \"internalCode\",OH.REMAINING_SUB_TOTAL AS \"remainingSubTotal\",OH.GRAND_TOTAL AS \"grandTotal\",OH.BILL_FROM_PARTY_ID AS \"billFromPartyId\",OH.BILL_TO_PARTY_ID AS \"billToPartyId\" FROM ORDER_ROLE ORLE INNER JOIN ORDER_HEADER OH ON ORLE.ORDER_ID = OH.ORDER_ID", resultSetMapping="OrderHeaderAndRolesMapping")
@SqlResultSetMapping(name="OrderHeaderAndRolesMapping", entities={
@EntityResult(entityClass=OrderHeaderAndRoles.class, fields = {
@FieldResult(name="orderId", column="orderId")
,@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="roleTypeId", column="roleTypeId")
,@FieldResult(name="orderTypeId", column="orderTypeId")
,@FieldResult(name="orderName", column="orderName")
,@FieldResult(name="externalId", column="externalId")
,@FieldResult(name="salesChannelEnumId", column="salesChannelEnumId")
,@FieldResult(name="orderDate", column="orderDate")
,@FieldResult(name="entryDate", column="entryDate")
,@FieldResult(name="visitId", column="visitId")
,@FieldResult(name="statusId", column="statusId")
,@FieldResult(name="createdBy", column="createdBy")
,@FieldResult(name="firstAttemptOrderId", column="firstAttemptOrderId")
,@FieldResult(name="currencyUom", column="currencyUom")
,@FieldResult(name="syncStatusId", column="syncStatusId")
,@FieldResult(name="billingAccountId", column="billingAccountId")
,@FieldResult(name="originFacilityId", column="originFacilityId")
,@FieldResult(name="webSiteId", column="webSiteId")
,@FieldResult(name="productStoreId", column="productStoreId")
,@FieldResult(name="terminalId", column="terminalId")
,@FieldResult(name="transactionId", column="transactionId")
,@FieldResult(name="autoOrderShoppingListId", column="autoOrderShoppingListId")
,@FieldResult(name="needsInventoryIssuance", column="needsInventoryIssuance")
,@FieldResult(name="isRushOrder", column="isRushOrder")
,@FieldResult(name="internalCode", column="internalCode")
,@FieldResult(name="remainingSubTotal", column="remainingSubTotal")
,@FieldResult(name="grandTotal", column="grandTotal")
,@FieldResult(name="billFromPartyId", column="billFromPartyId")
,@FieldResult(name="billToPartyId", column="billToPartyId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class OrderHeaderAndRoles extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("orderId", "ORLE.ORDER_ID");
        fields.put("partyId", "ORLE.PARTY_ID");
        fields.put("roleTypeId", "ORLE.ROLE_TYPE_ID");
        fields.put("orderTypeId", "OH.ORDER_TYPE_ID");
        fields.put("orderName", "OH.ORDER_NAME");
        fields.put("externalId", "OH.EXTERNAL_ID");
        fields.put("salesChannelEnumId", "OH.SALES_CHANNEL_ENUM_ID");
        fields.put("orderDate", "OH.ORDER_DATE");
        fields.put("entryDate", "OH.ENTRY_DATE");
        fields.put("visitId", "OH.VISIT_ID");
        fields.put("statusId", "OH.STATUS_ID");
        fields.put("createdBy", "OH.CREATED_BY");
        fields.put("firstAttemptOrderId", "OH.FIRST_ATTEMPT_ORDER_ID");
        fields.put("currencyUom", "OH.CURRENCY_UOM");
        fields.put("syncStatusId", "OH.SYNC_STATUS_ID");
        fields.put("billingAccountId", "OH.BILLING_ACCOUNT_ID");
        fields.put("originFacilityId", "OH.ORIGIN_FACILITY_ID");
        fields.put("webSiteId", "OH.WEB_SITE_ID");
        fields.put("productStoreId", "OH.PRODUCT_STORE_ID");
        fields.put("terminalId", "OH.TERMINAL_ID");
        fields.put("transactionId", "OH.TRANSACTION_ID");
        fields.put("autoOrderShoppingListId", "OH.AUTO_ORDER_SHOPPING_LIST_ID");
        fields.put("needsInventoryIssuance", "OH.NEEDS_INVENTORY_ISSUANCE");
        fields.put("isRushOrder", "OH.IS_RUSH_ORDER");
        fields.put("internalCode", "OH.INTERNAL_CODE");
        fields.put("remainingSubTotal", "OH.REMAINING_SUB_TOTAL");
        fields.put("grandTotal", "OH.GRAND_TOTAL");
        fields.put("billFromPartyId", "OH.BILL_FROM_PARTY_ID");
        fields.put("billToPartyId", "OH.BILL_TO_PARTY_ID");
fieldMapColumns.put("OrderHeaderAndRoles", fields);
}
  public static enum Fields implements EntityFieldInterface<OrderHeaderAndRoles> {
    orderId("orderId"),
    partyId("partyId"),
    roleTypeId("roleTypeId"),
    orderTypeId("orderTypeId"),
    orderName("orderName"),
    externalId("externalId"),
    salesChannelEnumId("salesChannelEnumId"),
    orderDate("orderDate"),
    entryDate("entryDate"),
    visitId("visitId"),
    statusId("statusId"),
    createdBy("createdBy"),
    firstAttemptOrderId("firstAttemptOrderId"),
    currencyUom("currencyUom"),
    syncStatusId("syncStatusId"),
    billingAccountId("billingAccountId"),
    originFacilityId("originFacilityId"),
    webSiteId("webSiteId"),
    productStoreId("productStoreId"),
    terminalId("terminalId"),
    transactionId("transactionId"),
    autoOrderShoppingListId("autoOrderShoppingListId"),
    needsInventoryIssuance("needsInventoryIssuance"),
    isRushOrder("isRushOrder"),
    internalCode("internalCode"),
    remainingSubTotal("remainingSubTotal"),
    grandTotal("grandTotal"),
    billFromPartyId("billFromPartyId"),
    billToPartyId("billToPartyId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    private String orderId;
    
    
    private String partyId;
    
    
    private String roleTypeId;
    
    
    private String orderTypeId;
    
    
    private String orderName;
    
    
    private String externalId;
    
    
    private String salesChannelEnumId;
    
    
    private Timestamp orderDate;
    
    
    private Timestamp entryDate;
    
    
    private String visitId;
    
    
    private String statusId;
    
    
    private String createdBy;
    
    
    private String firstAttemptOrderId;
    
    
    private String currencyUom;
    
    
    private String syncStatusId;
    
    
    private String billingAccountId;
    
    
    private String originFacilityId;
    
    
    private String webSiteId;
    
    
    private String productStoreId;
    
    
    private String terminalId;
    
    
    private String transactionId;
    
    
    private String autoOrderShoppingListId;
    
    
    private String needsInventoryIssuance;
    
    
    private String isRushOrder;
    
    
    private String internalCode;
    
    
    private BigDecimal remainingSubTotal;
    
    
    private BigDecimal grandTotal;
    
    
    private String billFromPartyId;
    
    
    private String billToPartyId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private OrderType orderType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGIN_FACILITY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Facility originFacility = null;
    private transient List<OrderTypeAttr> orderTypeAttrs = null;
    private transient List<OrderAttribute> orderAttributes = null;
    private transient List<OrderAdjustment> orderAdjustments = null;
    private transient List<OrderItem> orderItems = null;
    private transient List<OrderContactMech> orderContactMeches = null;
    private transient List<OrderItemBilling> orderItemBillings = null;
    private transient List<OrderItemContactMech> orderItemContactMeches = null;
    private transient List<OrderItemRole> orderItemRoles = null;
    private transient List<OrderRole> orderRoles = null;
    private transient List<OrderShipment> orderShipments = null;
    private transient List<OrderStatus> orderStatuses = null;
    private transient List<OrderTerm> orderTerms = null;
    private transient List<WorkOrderItemFulfillment> workOrderItemFulfillments = null;
    private transient List<ProductOrderItem> productOrderItems = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="BILLING_ACCOUNT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private BillingAccount billingAccount = null;
    private transient List<OrderPaymentPreference> orderPaymentPreferences = null;
    private transient List<OrderHeaderNoteView> orderHeaderNoteViews = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private UserLogin userLogin = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem statusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="SYNC_STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem syncStatusItem = null;
    private transient List<OrderRequirementCommitment> orderRequirementCommitments = null;
    private transient List<ShipmentReceipt> shipmentReceipts = null;

  /**
   * Default constructor.
   */
  public OrderHeaderAndRoles() {
      super();
      this.baseEntityName = "OrderHeaderAndRoles";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("orderId");this.primaryKeyNames.add("partyId");this.primaryKeyNames.add("roleTypeId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public OrderHeaderAndRoles(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param orderId the orderId to set
     */
    private void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    private void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeId the roleTypeId to set
     */
    private void setRoleTypeId(String roleTypeId) {
        this.roleTypeId = roleTypeId;
    }
    /**
     * Auto generated value setter.
     * @param orderTypeId the orderTypeId to set
     */
    private void setOrderTypeId(String orderTypeId) {
        this.orderTypeId = orderTypeId;
    }
    /**
     * Auto generated value setter.
     * @param orderName the orderName to set
     */
    private void setOrderName(String orderName) {
        this.orderName = orderName;
    }
    /**
     * Auto generated value setter.
     * @param externalId the externalId to set
     */
    private void setExternalId(String externalId) {
        this.externalId = externalId;
    }
    /**
     * Auto generated value setter.
     * @param salesChannelEnumId the salesChannelEnumId to set
     */
    private void setSalesChannelEnumId(String salesChannelEnumId) {
        this.salesChannelEnumId = salesChannelEnumId;
    }
    /**
     * Auto generated value setter.
     * @param orderDate the orderDate to set
     */
    private void setOrderDate(Timestamp orderDate) {
        this.orderDate = orderDate;
    }
    /**
     * Auto generated value setter.
     * @param entryDate the entryDate to set
     */
    private void setEntryDate(Timestamp entryDate) {
        this.entryDate = entryDate;
    }
    /**
     * Auto generated value setter.
     * @param visitId the visitId to set
     */
    private void setVisitId(String visitId) {
        this.visitId = visitId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    private void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param createdBy the createdBy to set
     */
    private void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }
    /**
     * Auto generated value setter.
     * @param firstAttemptOrderId the firstAttemptOrderId to set
     */
    private void setFirstAttemptOrderId(String firstAttemptOrderId) {
        this.firstAttemptOrderId = firstAttemptOrderId;
    }
    /**
     * Auto generated value setter.
     * @param currencyUom the currencyUom to set
     */
    private void setCurrencyUom(String currencyUom) {
        this.currencyUom = currencyUom;
    }
    /**
     * Auto generated value setter.
     * @param syncStatusId the syncStatusId to set
     */
    private void setSyncStatusId(String syncStatusId) {
        this.syncStatusId = syncStatusId;
    }
    /**
     * Auto generated value setter.
     * @param billingAccountId the billingAccountId to set
     */
    private void setBillingAccountId(String billingAccountId) {
        this.billingAccountId = billingAccountId;
    }
    /**
     * Auto generated value setter.
     * @param originFacilityId the originFacilityId to set
     */
    private void setOriginFacilityId(String originFacilityId) {
        this.originFacilityId = originFacilityId;
    }
    /**
     * Auto generated value setter.
     * @param webSiteId the webSiteId to set
     */
    private void setWebSiteId(String webSiteId) {
        this.webSiteId = webSiteId;
    }
    /**
     * Auto generated value setter.
     * @param productStoreId the productStoreId to set
     */
    private void setProductStoreId(String productStoreId) {
        this.productStoreId = productStoreId;
    }
    /**
     * Auto generated value setter.
     * @param terminalId the terminalId to set
     */
    private void setTerminalId(String terminalId) {
        this.terminalId = terminalId;
    }
    /**
     * Auto generated value setter.
     * @param transactionId the transactionId to set
     */
    private void setTransactionId(String transactionId) {
        this.transactionId = transactionId;
    }
    /**
     * Auto generated value setter.
     * @param autoOrderShoppingListId the autoOrderShoppingListId to set
     */
    private void setAutoOrderShoppingListId(String autoOrderShoppingListId) {
        this.autoOrderShoppingListId = autoOrderShoppingListId;
    }
    /**
     * Auto generated value setter.
     * @param needsInventoryIssuance the needsInventoryIssuance to set
     */
    private void setNeedsInventoryIssuance(String needsInventoryIssuance) {
        this.needsInventoryIssuance = needsInventoryIssuance;
    }
    /**
     * Auto generated value setter.
     * @param isRushOrder the isRushOrder to set
     */
    private void setIsRushOrder(String isRushOrder) {
        this.isRushOrder = isRushOrder;
    }
    /**
     * Auto generated value setter.
     * @param internalCode the internalCode to set
     */
    private void setInternalCode(String internalCode) {
        this.internalCode = internalCode;
    }
    /**
     * Auto generated value setter.
     * @param remainingSubTotal the remainingSubTotal to set
     */
    private void setRemainingSubTotal(BigDecimal remainingSubTotal) {
        this.remainingSubTotal = remainingSubTotal;
    }
    /**
     * Auto generated value setter.
     * @param grandTotal the grandTotal to set
     */
    private void setGrandTotal(BigDecimal grandTotal) {
        this.grandTotal = grandTotal;
    }
    /**
     * Auto generated value setter.
     * @param billFromPartyId the billFromPartyId to set
     */
    private void setBillFromPartyId(String billFromPartyId) {
        this.billFromPartyId = billFromPartyId;
    }
    /**
     * Auto generated value setter.
     * @param billToPartyId the billToPartyId to set
     */
    private void setBillToPartyId(String billToPartyId) {
        this.billToPartyId = billToPartyId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderId() {
        return this.orderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeId() {
        return this.roleTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderTypeId() {
        return this.orderTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderName() {
        return this.orderName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExternalId() {
        return this.externalId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalesChannelEnumId() {
        return this.salesChannelEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getOrderDate() {
        return this.orderDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getEntryDate() {
        return this.entryDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVisitId() {
        return this.visitId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedBy() {
        return this.createdBy;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFirstAttemptOrderId() {
        return this.firstAttemptOrderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUom() {
        return this.currencyUom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSyncStatusId() {
        return this.syncStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingAccountId() {
        return this.billingAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOriginFacilityId() {
        return this.originFacilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWebSiteId() {
        return this.webSiteId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductStoreId() {
        return this.productStoreId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTerminalId() {
        return this.terminalId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTransactionId() {
        return this.transactionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAutoOrderShoppingListId() {
        return this.autoOrderShoppingListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNeedsInventoryIssuance() {
        return this.needsInventoryIssuance;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsRushOrder() {
        return this.isRushOrder;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInternalCode() {
        return this.internalCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getRemainingSubTotal() {
        return this.remainingSubTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getGrandTotal() {
        return this.grandTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillFromPartyId() {
        return this.billFromPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillToPartyId() {
        return this.billToPartyId;
    }

    /**
     * Auto generated method that gets the related <code>OrderType</code> by the relation named <code>OrderType</code>.
     * @return the <code>OrderType</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderType getOrderType() throws RepositoryException {
        if (this.orderType == null) {
            this.orderType = getRelatedOne(OrderType.class, "OrderType");
        }
        return this.orderType;
    }
    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>OriginFacility</code>.
     * @return the <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public Facility getOriginFacility() throws RepositoryException {
        if (this.originFacility == null) {
            this.originFacility = getRelatedOne(Facility.class, "OriginFacility");
        }
        return this.originFacility;
    }
    /**
     * Auto generated method that gets the related <code>OrderTypeAttr</code> by the relation named <code>OrderTypeAttr</code>.
     * @return the list of <code>OrderTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderTypeAttr> getOrderTypeAttrs() throws RepositoryException {
        if (this.orderTypeAttrs == null) {
            this.orderTypeAttrs = getRelated(OrderTypeAttr.class, "OrderTypeAttr");
        }
        return this.orderTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>OrderAttribute</code> by the relation named <code>OrderAttribute</code>.
     * @return the list of <code>OrderAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAttribute> getOrderAttributes() throws RepositoryException {
        if (this.orderAttributes == null) {
            this.orderAttributes = getRelated(OrderAttribute.class, "OrderAttribute");
        }
        return this.orderAttributes;
    }
    /**
     * Auto generated method that gets the related <code>OrderAdjustment</code> by the relation named <code>OrderAdjustment</code>.
     * @return the list of <code>OrderAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAdjustment> getOrderAdjustments() throws RepositoryException {
        if (this.orderAdjustments == null) {
            this.orderAdjustments = getRelated(OrderAdjustment.class, "OrderAdjustment");
        }
        return this.orderAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>OrderItem</code>.
     * @return the list of <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItem> getOrderItems() throws RepositoryException {
        if (this.orderItems == null) {
            this.orderItems = getRelated(OrderItem.class, "OrderItem");
        }
        return this.orderItems;
    }
    /**
     * Auto generated method that gets the related <code>OrderContactMech</code> by the relation named <code>OrderContactMech</code>.
     * @return the list of <code>OrderContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderContactMech> getOrderContactMeches() throws RepositoryException {
        if (this.orderContactMeches == null) {
            this.orderContactMeches = getRelated(OrderContactMech.class, "OrderContactMech");
        }
        return this.orderContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemBilling</code> by the relation named <code>OrderItemBilling</code>.
     * @return the list of <code>OrderItemBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemBilling> getOrderItemBillings() throws RepositoryException {
        if (this.orderItemBillings == null) {
            this.orderItemBillings = getRelated(OrderItemBilling.class, "OrderItemBilling");
        }
        return this.orderItemBillings;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemContactMech</code> by the relation named <code>OrderItemContactMech</code>.
     * @return the list of <code>OrderItemContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemContactMech> getOrderItemContactMeches() throws RepositoryException {
        if (this.orderItemContactMeches == null) {
            this.orderItemContactMeches = getRelated(OrderItemContactMech.class, "OrderItemContactMech");
        }
        return this.orderItemContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemRole</code> by the relation named <code>OrderItemRole</code>.
     * @return the list of <code>OrderItemRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemRole> getOrderItemRoles() throws RepositoryException {
        if (this.orderItemRoles == null) {
            this.orderItemRoles = getRelated(OrderItemRole.class, "OrderItemRole");
        }
        return this.orderItemRoles;
    }
    /**
     * Auto generated method that gets the related <code>OrderRole</code> by the relation named <code>OrderRole</code>.
     * @return the list of <code>OrderRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderRole> getOrderRoles() throws RepositoryException {
        if (this.orderRoles == null) {
            this.orderRoles = getRelated(OrderRole.class, "OrderRole");
        }
        return this.orderRoles;
    }
    /**
     * Auto generated method that gets the related <code>OrderShipment</code> by the relation named <code>OrderShipment</code>.
     * @return the list of <code>OrderShipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderShipment> getOrderShipments() throws RepositoryException {
        if (this.orderShipments == null) {
            this.orderShipments = getRelated(OrderShipment.class, "OrderShipment");
        }
        return this.orderShipments;
    }
    /**
     * Auto generated method that gets the related <code>OrderStatus</code> by the relation named <code>OrderStatus</code>.
     * @return the list of <code>OrderStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderStatus> getOrderStatuses() throws RepositoryException {
        if (this.orderStatuses == null) {
            this.orderStatuses = getRelated(OrderStatus.class, "OrderStatus");
        }
        return this.orderStatuses;
    }
    /**
     * Auto generated method that gets the related <code>OrderTerm</code> by the relation named <code>OrderTerm</code>.
     * @return the list of <code>OrderTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderTerm> getOrderTerms() throws RepositoryException {
        if (this.orderTerms == null) {
            this.orderTerms = getRelated(OrderTerm.class, "OrderTerm");
        }
        return this.orderTerms;
    }
    /**
     * Auto generated method that gets the related <code>WorkOrderItemFulfillment</code> by the relation named <code>WorkOrderItemFulfillment</code>.
     * @return the list of <code>WorkOrderItemFulfillment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkOrderItemFulfillment> getWorkOrderItemFulfillments() throws RepositoryException {
        if (this.workOrderItemFulfillments == null) {
            this.workOrderItemFulfillments = getRelated(WorkOrderItemFulfillment.class, "WorkOrderItemFulfillment");
        }
        return this.workOrderItemFulfillments;
    }
    /**
     * Auto generated method that gets the related <code>ProductOrderItem</code> by the relation named <code>ProductOrderItem</code>.
     * @return the list of <code>ProductOrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductOrderItem> getProductOrderItems() throws RepositoryException {
        if (this.productOrderItems == null) {
            this.productOrderItems = getRelated(ProductOrderItem.class, "ProductOrderItem");
        }
        return this.productOrderItems;
    }
    /**
     * Auto generated method that gets the related <code>BillingAccount</code> by the relation named <code>BillingAccount</code>.
     * @return the <code>BillingAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public BillingAccount getBillingAccount() throws RepositoryException {
        if (this.billingAccount == null) {
            this.billingAccount = getRelatedOne(BillingAccount.class, "BillingAccount");
        }
        return this.billingAccount;
    }
    /**
     * Auto generated method that gets the related <code>OrderPaymentPreference</code> by the relation named <code>OrderPaymentPreference</code>.
     * @return the list of <code>OrderPaymentPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderPaymentPreference> getOrderPaymentPreferences() throws RepositoryException {
        if (this.orderPaymentPreferences == null) {
            this.orderPaymentPreferences = getRelated(OrderPaymentPreference.class, "OrderPaymentPreference");
        }
        return this.orderPaymentPreferences;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeaderNoteView</code> by the relation named <code>OrderHeaderNoteView</code>.
     * @return the list of <code>OrderHeaderNoteView</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeaderNoteView> getOrderHeaderNoteViews() throws RepositoryException {
        if (this.orderHeaderNoteViews == null) {
            this.orderHeaderNoteViews = getRelated(OrderHeaderNoteView.class, "OrderHeaderNoteView");
        }
        return this.orderHeaderNoteViews;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>UserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getUserLogin() throws RepositoryException {
        if (this.userLogin == null) {
            this.userLogin = getRelatedOne(UserLogin.class, "UserLogin");
        }
        return this.userLogin;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>SyncStatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getSyncStatusItem() throws RepositoryException {
        if (this.syncStatusItem == null) {
            this.syncStatusItem = getRelatedOne(StatusItem.class, "SyncStatusItem");
        }
        return this.syncStatusItem;
    }
    /**
     * Auto generated method that gets the related <code>OrderRequirementCommitment</code> by the relation named <code>OrderRequirementCommitment</code>.
     * @return the list of <code>OrderRequirementCommitment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderRequirementCommitment> getOrderRequirementCommitments() throws RepositoryException {
        if (this.orderRequirementCommitments == null) {
            this.orderRequirementCommitments = getRelated(OrderRequirementCommitment.class, "OrderRequirementCommitment");
        }
        return this.orderRequirementCommitments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentReceipt</code> by the relation named <code>ShipmentReceipt</code>.
     * @return the list of <code>ShipmentReceipt</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentReceipt> getShipmentReceipts() throws RepositoryException {
        if (this.shipmentReceipts == null) {
            this.shipmentReceipts = getRelated(ShipmentReceipt.class, "ShipmentReceipt");
        }
        return this.shipmentReceipts;
    }

    /**
     * Auto generated value setter.
     * @param orderType the orderType to set
    */
    public void setOrderType(OrderType orderType) {
        this.orderType = orderType;
    }
    /**
     * Auto generated value setter.
     * @param originFacility the originFacility to set
    */
    public void setOriginFacility(Facility originFacility) {
        this.originFacility = originFacility;
    }
    /**
     * Auto generated value setter.
     * @param orderTypeAttrs the orderTypeAttrs to set
    */
    public void setOrderTypeAttrs(List<OrderTypeAttr> orderTypeAttrs) {
        this.orderTypeAttrs = orderTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param orderAttributes the orderAttributes to set
    */
    public void setOrderAttributes(List<OrderAttribute> orderAttributes) {
        this.orderAttributes = orderAttributes;
    }
    /**
     * Auto generated value setter.
     * @param orderAdjustments the orderAdjustments to set
    */
    public void setOrderAdjustments(List<OrderAdjustment> orderAdjustments) {
        this.orderAdjustments = orderAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param orderItems the orderItems to set
    */
    public void setOrderItems(List<OrderItem> orderItems) {
        this.orderItems = orderItems;
    }
    /**
     * Auto generated value setter.
     * @param orderContactMeches the orderContactMeches to set
    */
    public void setOrderContactMeches(List<OrderContactMech> orderContactMeches) {
        this.orderContactMeches = orderContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderItemBillings the orderItemBillings to set
    */
    public void setOrderItemBillings(List<OrderItemBilling> orderItemBillings) {
        this.orderItemBillings = orderItemBillings;
    }
    /**
     * Auto generated value setter.
     * @param orderItemContactMeches the orderItemContactMeches to set
    */
    public void setOrderItemContactMeches(List<OrderItemContactMech> orderItemContactMeches) {
        this.orderItemContactMeches = orderItemContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param orderItemRoles the orderItemRoles to set
    */
    public void setOrderItemRoles(List<OrderItemRole> orderItemRoles) {
        this.orderItemRoles = orderItemRoles;
    }
    /**
     * Auto generated value setter.
     * @param orderRoles the orderRoles to set
    */
    public void setOrderRoles(List<OrderRole> orderRoles) {
        this.orderRoles = orderRoles;
    }
    /**
     * Auto generated value setter.
     * @param orderShipments the orderShipments to set
    */
    public void setOrderShipments(List<OrderShipment> orderShipments) {
        this.orderShipments = orderShipments;
    }
    /**
     * Auto generated value setter.
     * @param orderStatuses the orderStatuses to set
    */
    public void setOrderStatuses(List<OrderStatus> orderStatuses) {
        this.orderStatuses = orderStatuses;
    }
    /**
     * Auto generated value setter.
     * @param orderTerms the orderTerms to set
    */
    public void setOrderTerms(List<OrderTerm> orderTerms) {
        this.orderTerms = orderTerms;
    }
    /**
     * Auto generated value setter.
     * @param workOrderItemFulfillments the workOrderItemFulfillments to set
    */
    public void setWorkOrderItemFulfillments(List<WorkOrderItemFulfillment> workOrderItemFulfillments) {
        this.workOrderItemFulfillments = workOrderItemFulfillments;
    }
    /**
     * Auto generated value setter.
     * @param productOrderItems the productOrderItems to set
    */
    public void setProductOrderItems(List<ProductOrderItem> productOrderItems) {
        this.productOrderItems = productOrderItems;
    }
    /**
     * Auto generated value setter.
     * @param billingAccount the billingAccount to set
    */
    public void setBillingAccount(BillingAccount billingAccount) {
        this.billingAccount = billingAccount;
    }
    /**
     * Auto generated value setter.
     * @param orderPaymentPreferences the orderPaymentPreferences to set
    */
    public void setOrderPaymentPreferences(List<OrderPaymentPreference> orderPaymentPreferences) {
        this.orderPaymentPreferences = orderPaymentPreferences;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaderNoteViews the orderHeaderNoteViews to set
    */
    public void setOrderHeaderNoteViews(List<OrderHeaderNoteView> orderHeaderNoteViews) {
        this.orderHeaderNoteViews = orderHeaderNoteViews;
    }
    /**
     * Auto generated value setter.
     * @param userLogin the userLogin to set
    */
    public void setUserLogin(UserLogin userLogin) {
        this.userLogin = userLogin;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param syncStatusItem the syncStatusItem to set
    */
    public void setSyncStatusItem(StatusItem syncStatusItem) {
        this.syncStatusItem = syncStatusItem;
    }
    /**
     * Auto generated value setter.
     * @param orderRequirementCommitments the orderRequirementCommitments to set
    */
    public void setOrderRequirementCommitments(List<OrderRequirementCommitment> orderRequirementCommitments) {
        this.orderRequirementCommitments = orderRequirementCommitments;
    }
    /**
     * Auto generated value setter.
     * @param shipmentReceipts the shipmentReceipts to set
    */
    public void setShipmentReceipts(List<ShipmentReceipt> shipmentReceipts) {
        this.shipmentReceipts = shipmentReceipts;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setOrderId((String) mapValue.get("orderId"));
        setPartyId((String) mapValue.get("partyId"));
        setRoleTypeId((String) mapValue.get("roleTypeId"));
        setOrderTypeId((String) mapValue.get("orderTypeId"));
        setOrderName((String) mapValue.get("orderName"));
        setExternalId((String) mapValue.get("externalId"));
        setSalesChannelEnumId((String) mapValue.get("salesChannelEnumId"));
        setOrderDate((Timestamp) mapValue.get("orderDate"));
        setEntryDate((Timestamp) mapValue.get("entryDate"));
        setVisitId((String) mapValue.get("visitId"));
        setStatusId((String) mapValue.get("statusId"));
        setCreatedBy((String) mapValue.get("createdBy"));
        setFirstAttemptOrderId((String) mapValue.get("firstAttemptOrderId"));
        setCurrencyUom((String) mapValue.get("currencyUom"));
        setSyncStatusId((String) mapValue.get("syncStatusId"));
        setBillingAccountId((String) mapValue.get("billingAccountId"));
        setOriginFacilityId((String) mapValue.get("originFacilityId"));
        setWebSiteId((String) mapValue.get("webSiteId"));
        setProductStoreId((String) mapValue.get("productStoreId"));
        setTerminalId((String) mapValue.get("terminalId"));
        setTransactionId((String) mapValue.get("transactionId"));
        setAutoOrderShoppingListId((String) mapValue.get("autoOrderShoppingListId"));
        setNeedsInventoryIssuance((String) mapValue.get("needsInventoryIssuance"));
        setIsRushOrder((String) mapValue.get("isRushOrder"));
        setInternalCode((String) mapValue.get("internalCode"));
        setRemainingSubTotal(convertToBigDecimal(mapValue.get("remainingSubTotal")));
        setGrandTotal(convertToBigDecimal(mapValue.get("grandTotal")));
        setBillFromPartyId((String) mapValue.get("billFromPartyId"));
        setBillToPartyId((String) mapValue.get("billToPartyId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("orderId", getOrderId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("roleTypeId", getRoleTypeId());
        mapValue.put("orderTypeId", getOrderTypeId());
        mapValue.put("orderName", getOrderName());
        mapValue.put("externalId", getExternalId());
        mapValue.put("salesChannelEnumId", getSalesChannelEnumId());
        mapValue.put("orderDate", getOrderDate());
        mapValue.put("entryDate", getEntryDate());
        mapValue.put("visitId", getVisitId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("createdBy", getCreatedBy());
        mapValue.put("firstAttemptOrderId", getFirstAttemptOrderId());
        mapValue.put("currencyUom", getCurrencyUom());
        mapValue.put("syncStatusId", getSyncStatusId());
        mapValue.put("billingAccountId", getBillingAccountId());
        mapValue.put("originFacilityId", getOriginFacilityId());
        mapValue.put("webSiteId", getWebSiteId());
        mapValue.put("productStoreId", getProductStoreId());
        mapValue.put("terminalId", getTerminalId());
        mapValue.put("transactionId", getTransactionId());
        mapValue.put("autoOrderShoppingListId", getAutoOrderShoppingListId());
        mapValue.put("needsInventoryIssuance", getNeedsInventoryIssuance());
        mapValue.put("isRushOrder", getIsRushOrder());
        mapValue.put("internalCode", getInternalCode());
        mapValue.put("remainingSubTotal", getRemainingSubTotal());
        mapValue.put("grandTotal", getGrandTotal());
        mapValue.put("billFromPartyId", getBillFromPartyId());
        mapValue.put("billToPartyId", getBillToPartyId());
        return mapValue;
    }


}
