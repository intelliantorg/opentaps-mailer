package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Invoice.
 */
@javax.persistence.Entity
@Table(name="INVOICE")
public class Invoice extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("invoiceId", "INVOICE_ID");
        fields.put("invoiceTypeId", "INVOICE_TYPE_ID");
        fields.put("partyIdFrom", "PARTY_ID_FROM");
        fields.put("partyId", "PARTY_ID");
        fields.put("roleTypeId", "ROLE_TYPE_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("billingAccountId", "BILLING_ACCOUNT_ID");
        fields.put("contactMechId", "CONTACT_MECH_ID");
        fields.put("invoiceDate", "INVOICE_DATE");
        fields.put("dueDate", "DUE_DATE");
        fields.put("paidDate", "PAID_DATE");
        fields.put("invoiceMessage", "INVOICE_MESSAGE");
        fields.put("referenceNumber", "REFERENCE_NUMBER");
        fields.put("description", "DESCRIPTION");
        fields.put("currencyUomId", "CURRENCY_UOM_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("processingStatusId", "PROCESSING_STATUS_ID");
fieldMapColumns.put("Invoice", fields);
}
  public static enum Fields implements EntityFieldInterface<Invoice> {
    invoiceId("invoiceId"),
    invoiceTypeId("invoiceTypeId"),
    partyIdFrom("partyIdFrom"),
    partyId("partyId"),
    roleTypeId("roleTypeId"),
    statusId("statusId"),
    billingAccountId("billingAccountId"),
    contactMechId("contactMechId"),
    invoiceDate("invoiceDate"),
    dueDate("dueDate"),
    paidDate("paidDate"),
    invoiceMessage("invoiceMessage"),
    referenceNumber("referenceNumber"),
    description("description"),
    currencyUomId("currencyUomId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    processingStatusId("processingStatusId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="Invoice_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="Invoice_GEN")   
    @Id
    
    @Column(name="INVOICE_ID")
    private String invoiceId;
    
    @Column(name="INVOICE_TYPE_ID")
    private String invoiceTypeId;
    
    @Column(name="PARTY_ID_FROM")
    private String partyIdFrom;
    
    @Column(name="PARTY_ID")
    private String partyId;
    
    @Column(name="ROLE_TYPE_ID")
    private String roleTypeId;
    
    @Column(name="STATUS_ID")
    private String statusId;
    
    @Column(name="BILLING_ACCOUNT_ID")
    private String billingAccountId;
    
    @Column(name="CONTACT_MECH_ID")
    private String contactMechId;
    
    @Column(name="INVOICE_DATE")
    private Timestamp invoiceDate;
    
    @Column(name="DUE_DATE")
    private Timestamp dueDate;
    
    @Column(name="PAID_DATE")
    private Timestamp paidDate;
    
    @Column(name="INVOICE_MESSAGE")
    private String invoiceMessage;
    
    @Column(name="REFERENCE_NUMBER")
    private String referenceNumber;
    
    @Column(name="DESCRIPTION")
    private String description;
    
    @Column(name="CURRENCY_UOM_ID")
    private String currencyUomId;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="PROCESSING_STATUS_ID")
    private String processingStatusId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private InvoiceType invoiceType = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_TYPE_ID")
    private List<InvoiceTypeAttr> invoiceTypeAttrs = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID_FROM", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party fromParty = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PARTY_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Party party = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="ROLE_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private RoleType roleType = null;
    private transient PartyRole partyRole = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem statusItem = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="BILLING_ACCOUNT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private BillingAccount billingAccount = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ContactMech contactMech = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="CURRENCY_UOM_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Uom currencyUom = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="PROCESSING_STATUS_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private StatusItem processingStatusItem = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ID")
    private List<AcctgTrans> acctgTranses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ID")
    private List<AgreementTermBilling> agreementTermBillings = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIG_INVOICE_ID")
    private List<AgreementTermBilling> originalAgreementTermBillings = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ID")
    private List<InvoiceAdjustment> invoiceAdjustments = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<InvoiceAttribute> invoiceAttributes = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<InvoiceContactMech> invoiceContactMeches = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<InvoiceItem> invoiceItems = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<InvoiceRecurrence> invoiceRecurrences = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<InvoiceRole> invoiceRoles = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<InvoiceStatus> invoiceStatuses = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ID")
    private List<InvoiceTerm> invoiceTerms = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<OrderAdjustmentBilling> orderAdjustmentBillings = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<OrderItemBilling> orderItemBillings = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ID")
    private List<PaymentApplication> paymentApplications = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<ReturnItemBilling> returnItemBillings = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<ShipmentItemBilling> shipmentItemBillings = null;
    @OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_ID")
    private List<TimeEntry> timeEntrys = null;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="invoice", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
    @JoinColumn(name="INVOICE_ID")
    private List<WorkEffortBilling> workEffortBillings = null;

  /**
   * Default constructor.
   */
  public Invoice() {
      super();
      this.baseEntityName = "Invoice";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("invoiceId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Invoice(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param invoiceId the invoiceId to set
     */
    public void setInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
    }
    /**
     * Auto generated value setter.
     * @param invoiceTypeId the invoiceTypeId to set
     */
    public void setInvoiceTypeId(String invoiceTypeId) {
        this.invoiceTypeId = invoiceTypeId;
    }
    /**
     * Auto generated value setter.
     * @param partyIdFrom the partyIdFrom to set
     */
    public void setPartyIdFrom(String partyIdFrom) {
        this.partyIdFrom = partyIdFrom;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeId the roleTypeId to set
     */
    public void setRoleTypeId(String roleTypeId) {
        this.roleTypeId = roleTypeId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param billingAccountId the billingAccountId to set
     */
    public void setBillingAccountId(String billingAccountId) {
        this.billingAccountId = billingAccountId;
    }
    /**
     * Auto generated value setter.
     * @param contactMechId the contactMechId to set
     */
    public void setContactMechId(String contactMechId) {
        this.contactMechId = contactMechId;
    }
    /**
     * Auto generated value setter.
     * @param invoiceDate the invoiceDate to set
     */
    public void setInvoiceDate(Timestamp invoiceDate) {
        this.invoiceDate = invoiceDate;
    }
    /**
     * Auto generated value setter.
     * @param dueDate the dueDate to set
     */
    public void setDueDate(Timestamp dueDate) {
        this.dueDate = dueDate;
    }
    /**
     * Auto generated value setter.
     * @param paidDate the paidDate to set
     */
    public void setPaidDate(Timestamp paidDate) {
        this.paidDate = paidDate;
    }
    /**
     * Auto generated value setter.
     * @param invoiceMessage the invoiceMessage to set
     */
    public void setInvoiceMessage(String invoiceMessage) {
        this.invoiceMessage = invoiceMessage;
    }
    /**
     * Auto generated value setter.
     * @param referenceNumber the referenceNumber to set
     */
    public void setReferenceNumber(String referenceNumber) {
        this.referenceNumber = referenceNumber;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param currencyUomId the currencyUomId to set
     */
    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param processingStatusId the processingStatusId to set
     */
    public void setProcessingStatusId(String processingStatusId) {
        this.processingStatusId = processingStatusId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceId() {
        return this.invoiceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceTypeId() {
        return this.invoiceTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyIdFrom() {
        return this.partyIdFrom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeId() {
        return this.roleTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingAccountId() {
        return this.billingAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechId() {
        return this.contactMechId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getInvoiceDate() {
        return this.invoiceDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getDueDate() {
        return this.dueDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getPaidDate() {
        return this.paidDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceMessage() {
        return this.invoiceMessage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getReferenceNumber() {
        return this.referenceNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUomId() {
        return this.currencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProcessingStatusId() {
        return this.processingStatusId;
    }

    /**
     * Auto generated method that gets the related <code>InvoiceType</code> by the relation named <code>InvoiceType</code>.
     * @return the <code>InvoiceType</code>
     * @throws RepositoryException if an error occurs
     */
    public InvoiceType getInvoiceType() throws RepositoryException {
        if (this.invoiceType == null) {
            this.invoiceType = getRelatedOne(InvoiceType.class, "InvoiceType");
        }
        return this.invoiceType;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceTypeAttr</code> by the relation named <code>InvoiceTypeAttr</code>.
     * @return the list of <code>InvoiceTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceTypeAttr> getInvoiceTypeAttrs() throws RepositoryException {
        if (this.invoiceTypeAttrs == null) {
            this.invoiceTypeAttrs = getRelated(InvoiceTypeAttr.class, "InvoiceTypeAttr");
        }
        return this.invoiceTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>FromParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getFromParty() throws RepositoryException {
        if (this.fromParty == null) {
            this.fromParty = getRelatedOne(Party.class, "FromParty");
        }
        return this.fromParty;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>RoleType</code> by the relation named <code>RoleType</code>.
     * @return the <code>RoleType</code>
     * @throws RepositoryException if an error occurs
     */
    public RoleType getRoleType() throws RepositoryException {
        if (this.roleType == null) {
            this.roleType = getRelatedOne(RoleType.class, "RoleType");
        }
        return this.roleType;
    }
    /**
     * Auto generated method that gets the related <code>PartyRole</code> by the relation named <code>PartyRole</code>.
     * @return the <code>PartyRole</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyRole getPartyRole() throws RepositoryException {
        if (this.partyRole == null) {
            this.partyRole = getRelatedOne(PartyRole.class, "PartyRole");
        }
        return this.partyRole;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>BillingAccount</code> by the relation named <code>BillingAccount</code>.
     * @return the <code>BillingAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public BillingAccount getBillingAccount() throws RepositoryException {
        if (this.billingAccount == null) {
            this.billingAccount = getRelatedOne(BillingAccount.class, "BillingAccount");
        }
        return this.billingAccount;
    }
    /**
     * Auto generated method that gets the related <code>ContactMech</code> by the relation named <code>ContactMech</code>.
     * @return the <code>ContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMech getContactMech() throws RepositoryException {
        if (this.contactMech == null) {
            this.contactMech = getRelatedOne(ContactMech.class, "ContactMech");
        }
        return this.contactMech;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>CurrencyUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getCurrencyUom() throws RepositoryException {
        if (this.currencyUom == null) {
            this.currencyUom = getRelatedOne(Uom.class, "CurrencyUom");
        }
        return this.currencyUom;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>ProcessingStatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getProcessingStatusItem() throws RepositoryException {
        if (this.processingStatusItem == null) {
            this.processingStatusItem = getRelatedOne(StatusItem.class, "ProcessingStatusItem");
        }
        return this.processingStatusItem;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTrans</code> by the relation named <code>AcctgTrans</code>.
     * @return the list of <code>AcctgTrans</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTrans> getAcctgTranses() throws RepositoryException {
        if (this.acctgTranses == null) {
            this.acctgTranses = getRelated(AcctgTrans.class, "AcctgTrans");
        }
        return this.acctgTranses;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTermBilling</code> by the relation named <code>AgreementTermBilling</code>.
     * @return the list of <code>AgreementTermBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTermBilling> getAgreementTermBillings() throws RepositoryException {
        if (this.agreementTermBillings == null) {
            this.agreementTermBillings = getRelated(AgreementTermBilling.class, "AgreementTermBilling");
        }
        return this.agreementTermBillings;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTermBilling</code> by the relation named <code>OriginalAgreementTermBilling</code>.
     * @return the list of <code>AgreementTermBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTermBilling> getOriginalAgreementTermBillings() throws RepositoryException {
        if (this.originalAgreementTermBillings == null) {
            this.originalAgreementTermBillings = getRelated(AgreementTermBilling.class, "OriginalAgreementTermBilling");
        }
        return this.originalAgreementTermBillings;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceAdjustment</code> by the relation named <code>InvoiceAdjustment</code>.
     * @return the list of <code>InvoiceAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceAdjustment> getInvoiceAdjustments() throws RepositoryException {
        if (this.invoiceAdjustments == null) {
            this.invoiceAdjustments = getRelated(InvoiceAdjustment.class, "InvoiceAdjustment");
        }
        return this.invoiceAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceAttribute</code> by the relation named <code>InvoiceAttribute</code>.
     * @return the list of <code>InvoiceAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceAttribute> getInvoiceAttributes() throws RepositoryException {
        if (this.invoiceAttributes == null) {
            this.invoiceAttributes = getRelated(InvoiceAttribute.class, "InvoiceAttribute");
        }
        return this.invoiceAttributes;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceContactMech</code> by the relation named <code>InvoiceContactMech</code>.
     * @return the list of <code>InvoiceContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceContactMech> getInvoiceContactMeches() throws RepositoryException {
        if (this.invoiceContactMeches == null) {
            this.invoiceContactMeches = getRelated(InvoiceContactMech.class, "InvoiceContactMech");
        }
        return this.invoiceContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the list of <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItem> getInvoiceItems() throws RepositoryException {
        if (this.invoiceItems == null) {
            this.invoiceItems = getRelated(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItems;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceRecurrence</code> by the relation named <code>InvoiceRecurrence</code>.
     * @return the list of <code>InvoiceRecurrence</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceRecurrence> getInvoiceRecurrences() throws RepositoryException {
        if (this.invoiceRecurrences == null) {
            this.invoiceRecurrences = getRelated(InvoiceRecurrence.class, "InvoiceRecurrence");
        }
        return this.invoiceRecurrences;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceRole</code> by the relation named <code>InvoiceRole</code>.
     * @return the list of <code>InvoiceRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceRole> getInvoiceRoles() throws RepositoryException {
        if (this.invoiceRoles == null) {
            this.invoiceRoles = getRelated(InvoiceRole.class, "InvoiceRole");
        }
        return this.invoiceRoles;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceStatus</code> by the relation named <code>InvoiceStatus</code>.
     * @return the list of <code>InvoiceStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceStatus> getInvoiceStatuses() throws RepositoryException {
        if (this.invoiceStatuses == null) {
            this.invoiceStatuses = getRelated(InvoiceStatus.class, "InvoiceStatus");
        }
        return this.invoiceStatuses;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceTerm</code> by the relation named <code>InvoiceTerm</code>.
     * @return the list of <code>InvoiceTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceTerm> getInvoiceTerms() throws RepositoryException {
        if (this.invoiceTerms == null) {
            this.invoiceTerms = getRelated(InvoiceTerm.class, "InvoiceTerm");
        }
        return this.invoiceTerms;
    }
    /**
     * Auto generated method that gets the related <code>OrderAdjustmentBilling</code> by the relation named <code>OrderAdjustmentBilling</code>.
     * @return the list of <code>OrderAdjustmentBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAdjustmentBilling> getOrderAdjustmentBillings() throws RepositoryException {
        if (this.orderAdjustmentBillings == null) {
            this.orderAdjustmentBillings = getRelated(OrderAdjustmentBilling.class, "OrderAdjustmentBilling");
        }
        return this.orderAdjustmentBillings;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemBilling</code> by the relation named <code>OrderItemBilling</code>.
     * @return the list of <code>OrderItemBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemBilling> getOrderItemBillings() throws RepositoryException {
        if (this.orderItemBillings == null) {
            this.orderItemBillings = getRelated(OrderItemBilling.class, "OrderItemBilling");
        }
        return this.orderItemBillings;
    }
    /**
     * Auto generated method that gets the related <code>PaymentApplication</code> by the relation named <code>PaymentApplication</code>.
     * @return the list of <code>PaymentApplication</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentApplication> getPaymentApplications() throws RepositoryException {
        if (this.paymentApplications == null) {
            this.paymentApplications = getRelated(PaymentApplication.class, "PaymentApplication");
        }
        return this.paymentApplications;
    }
    /**
     * Auto generated method that gets the related <code>ReturnItemBilling</code> by the relation named <code>ReturnItemBilling</code>.
     * @return the list of <code>ReturnItemBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnItemBilling> getReturnItemBillings() throws RepositoryException {
        if (this.returnItemBillings == null) {
            this.returnItemBillings = getRelated(ReturnItemBilling.class, "ReturnItemBilling");
        }
        return this.returnItemBillings;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentItemBilling</code> by the relation named <code>ShipmentItemBilling</code>.
     * @return the list of <code>ShipmentItemBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentItemBilling> getShipmentItemBillings() throws RepositoryException {
        if (this.shipmentItemBillings == null) {
            this.shipmentItemBillings = getRelated(ShipmentItemBilling.class, "ShipmentItemBilling");
        }
        return this.shipmentItemBillings;
    }
    /**
     * Auto generated method that gets the related <code>TimeEntry</code> by the relation named <code>TimeEntry</code>.
     * @return the list of <code>TimeEntry</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TimeEntry> getTimeEntrys() throws RepositoryException {
        if (this.timeEntrys == null) {
            this.timeEntrys = getRelated(TimeEntry.class, "TimeEntry");
        }
        return this.timeEntrys;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortBilling</code> by the relation named <code>WorkEffortBilling</code>.
     * @return the list of <code>WorkEffortBilling</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortBilling> getWorkEffortBillings() throws RepositoryException {
        if (this.workEffortBillings == null) {
            this.workEffortBillings = getRelated(WorkEffortBilling.class, "WorkEffortBilling");
        }
        return this.workEffortBillings;
    }

    /**
     * Auto generated value setter.
     * @param invoiceType the invoiceType to set
    */
    public void setInvoiceType(InvoiceType invoiceType) {
        this.invoiceType = invoiceType;
    }
    /**
     * Auto generated value setter.
     * @param invoiceTypeAttrs the invoiceTypeAttrs to set
    */
    public void setInvoiceTypeAttrs(List<InvoiceTypeAttr> invoiceTypeAttrs) {
        this.invoiceTypeAttrs = invoiceTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param fromParty the fromParty to set
    */
    public void setFromParty(Party fromParty) {
        this.fromParty = fromParty;
    }
    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param roleType the roleType to set
    */
    public void setRoleType(RoleType roleType) {
        this.roleType = roleType;
    }
    /**
     * Auto generated value setter.
     * @param partyRole the partyRole to set
    */
    public void setPartyRole(PartyRole partyRole) {
        this.partyRole = partyRole;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param billingAccount the billingAccount to set
    */
    public void setBillingAccount(BillingAccount billingAccount) {
        this.billingAccount = billingAccount;
    }
    /**
     * Auto generated value setter.
     * @param contactMech the contactMech to set
    */
    public void setContactMech(ContactMech contactMech) {
        this.contactMech = contactMech;
    }
    /**
     * Auto generated value setter.
     * @param currencyUom the currencyUom to set
    */
    public void setCurrencyUom(Uom currencyUom) {
        this.currencyUom = currencyUom;
    }
    /**
     * Auto generated value setter.
     * @param processingStatusItem the processingStatusItem to set
    */
    public void setProcessingStatusItem(StatusItem processingStatusItem) {
        this.processingStatusItem = processingStatusItem;
    }
    /**
     * Auto generated value setter.
     * @param acctgTranses the acctgTranses to set
    */
    public void setAcctgTranses(List<AcctgTrans> acctgTranses) {
        this.acctgTranses = acctgTranses;
    }
    /**
     * Auto generated value setter.
     * @param agreementTermBillings the agreementTermBillings to set
    */
    public void setAgreementTermBillings(List<AgreementTermBilling> agreementTermBillings) {
        this.agreementTermBillings = agreementTermBillings;
    }
    /**
     * Auto generated value setter.
     * @param originalAgreementTermBillings the originalAgreementTermBillings to set
    */
    public void setOriginalAgreementTermBillings(List<AgreementTermBilling> originalAgreementTermBillings) {
        this.originalAgreementTermBillings = originalAgreementTermBillings;
    }
    /**
     * Auto generated value setter.
     * @param invoiceAdjustments the invoiceAdjustments to set
    */
    public void setInvoiceAdjustments(List<InvoiceAdjustment> invoiceAdjustments) {
        this.invoiceAdjustments = invoiceAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param invoiceAttributes the invoiceAttributes to set
    */
    public void setInvoiceAttributes(List<InvoiceAttribute> invoiceAttributes) {
        this.invoiceAttributes = invoiceAttributes;
    }
    /**
     * Auto generated value setter.
     * @param invoiceContactMeches the invoiceContactMeches to set
    */
    public void setInvoiceContactMeches(List<InvoiceContactMech> invoiceContactMeches) {
        this.invoiceContactMeches = invoiceContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItems the invoiceItems to set
    */
    public void setInvoiceItems(List<InvoiceItem> invoiceItems) {
        this.invoiceItems = invoiceItems;
    }
    /**
     * Auto generated value setter.
     * @param invoiceRecurrences the invoiceRecurrences to set
    */
    public void setInvoiceRecurrences(List<InvoiceRecurrence> invoiceRecurrences) {
        this.invoiceRecurrences = invoiceRecurrences;
    }
    /**
     * Auto generated value setter.
     * @param invoiceRoles the invoiceRoles to set
    */
    public void setInvoiceRoles(List<InvoiceRole> invoiceRoles) {
        this.invoiceRoles = invoiceRoles;
    }
    /**
     * Auto generated value setter.
     * @param invoiceStatuses the invoiceStatuses to set
    */
    public void setInvoiceStatuses(List<InvoiceStatus> invoiceStatuses) {
        this.invoiceStatuses = invoiceStatuses;
    }
    /**
     * Auto generated value setter.
     * @param invoiceTerms the invoiceTerms to set
    */
    public void setInvoiceTerms(List<InvoiceTerm> invoiceTerms) {
        this.invoiceTerms = invoiceTerms;
    }
    /**
     * Auto generated value setter.
     * @param orderAdjustmentBillings the orderAdjustmentBillings to set
    */
    public void setOrderAdjustmentBillings(List<OrderAdjustmentBilling> orderAdjustmentBillings) {
        this.orderAdjustmentBillings = orderAdjustmentBillings;
    }
    /**
     * Auto generated value setter.
     * @param orderItemBillings the orderItemBillings to set
    */
    public void setOrderItemBillings(List<OrderItemBilling> orderItemBillings) {
        this.orderItemBillings = orderItemBillings;
    }
    /**
     * Auto generated value setter.
     * @param paymentApplications the paymentApplications to set
    */
    public void setPaymentApplications(List<PaymentApplication> paymentApplications) {
        this.paymentApplications = paymentApplications;
    }
    /**
     * Auto generated value setter.
     * @param returnItemBillings the returnItemBillings to set
    */
    public void setReturnItemBillings(List<ReturnItemBilling> returnItemBillings) {
        this.returnItemBillings = returnItemBillings;
    }
    /**
     * Auto generated value setter.
     * @param shipmentItemBillings the shipmentItemBillings to set
    */
    public void setShipmentItemBillings(List<ShipmentItemBilling> shipmentItemBillings) {
        this.shipmentItemBillings = shipmentItemBillings;
    }
    /**
     * Auto generated value setter.
     * @param timeEntrys the timeEntrys to set
    */
    public void setTimeEntrys(List<TimeEntry> timeEntrys) {
        this.timeEntrys = timeEntrys;
    }
    /**
     * Auto generated value setter.
     * @param workEffortBillings the workEffortBillings to set
    */
    public void setWorkEffortBillings(List<WorkEffortBilling> workEffortBillings) {
        this.workEffortBillings = workEffortBillings;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceAttribute(InvoiceAttribute invoiceAttribute) {
        if (this.invoiceAttributes == null) {
            this.invoiceAttributes = new ArrayList<InvoiceAttribute>();
        }
        this.invoiceAttributes.add(invoiceAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceAttribute(InvoiceAttribute invoiceAttribute) {
        if (this.invoiceAttributes == null) {
            return;
        }
        this.invoiceAttributes.remove(invoiceAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceAttribute() {
        if (this.invoiceAttributes == null) {
            return;
        }
        this.invoiceAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceContactMeche(InvoiceContactMech invoiceContactMeche) {
        if (this.invoiceContactMeches == null) {
            this.invoiceContactMeches = new ArrayList<InvoiceContactMech>();
        }
        this.invoiceContactMeches.add(invoiceContactMeche);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceContactMeche(InvoiceContactMech invoiceContactMeche) {
        if (this.invoiceContactMeches == null) {
            return;
        }
        this.invoiceContactMeches.remove(invoiceContactMeche);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceContactMeche() {
        if (this.invoiceContactMeches == null) {
            return;
        }
        this.invoiceContactMeches.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceItem(InvoiceItem invoiceItem) {
        if (this.invoiceItems == null) {
            this.invoiceItems = new ArrayList<InvoiceItem>();
        }
        this.invoiceItems.add(invoiceItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceItem(InvoiceItem invoiceItem) {
        if (this.invoiceItems == null) {
            return;
        }
        this.invoiceItems.remove(invoiceItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceItem() {
        if (this.invoiceItems == null) {
            return;
        }
        this.invoiceItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceRecurrence(InvoiceRecurrence invoiceRecurrence) {
        if (this.invoiceRecurrences == null) {
            this.invoiceRecurrences = new ArrayList<InvoiceRecurrence>();
        }
        this.invoiceRecurrences.add(invoiceRecurrence);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceRecurrence(InvoiceRecurrence invoiceRecurrence) {
        if (this.invoiceRecurrences == null) {
            return;
        }
        this.invoiceRecurrences.remove(invoiceRecurrence);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceRecurrence() {
        if (this.invoiceRecurrences == null) {
            return;
        }
        this.invoiceRecurrences.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceRole(InvoiceRole invoiceRole) {
        if (this.invoiceRoles == null) {
            this.invoiceRoles = new ArrayList<InvoiceRole>();
        }
        this.invoiceRoles.add(invoiceRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceRole(InvoiceRole invoiceRole) {
        if (this.invoiceRoles == null) {
            return;
        }
        this.invoiceRoles.remove(invoiceRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceRole() {
        if (this.invoiceRoles == null) {
            return;
        }
        this.invoiceRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addInvoiceStatuse(InvoiceStatus invoiceStatuse) {
        if (this.invoiceStatuses == null) {
            this.invoiceStatuses = new ArrayList<InvoiceStatus>();
        }
        this.invoiceStatuses.add(invoiceStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeInvoiceStatuse(InvoiceStatus invoiceStatuse) {
        if (this.invoiceStatuses == null) {
            return;
        }
        this.invoiceStatuses.remove(invoiceStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearInvoiceStatuse() {
        if (this.invoiceStatuses == null) {
            return;
        }
        this.invoiceStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderAdjustmentBilling(OrderAdjustmentBilling orderAdjustmentBilling) {
        if (this.orderAdjustmentBillings == null) {
            this.orderAdjustmentBillings = new ArrayList<OrderAdjustmentBilling>();
        }
        this.orderAdjustmentBillings.add(orderAdjustmentBilling);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderAdjustmentBilling(OrderAdjustmentBilling orderAdjustmentBilling) {
        if (this.orderAdjustmentBillings == null) {
            return;
        }
        this.orderAdjustmentBillings.remove(orderAdjustmentBilling);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderAdjustmentBilling() {
        if (this.orderAdjustmentBillings == null) {
            return;
        }
        this.orderAdjustmentBillings.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOrderItemBilling(OrderItemBilling orderItemBilling) {
        if (this.orderItemBillings == null) {
            this.orderItemBillings = new ArrayList<OrderItemBilling>();
        }
        this.orderItemBillings.add(orderItemBilling);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOrderItemBilling(OrderItemBilling orderItemBilling) {
        if (this.orderItemBillings == null) {
            return;
        }
        this.orderItemBillings.remove(orderItemBilling);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOrderItemBilling() {
        if (this.orderItemBillings == null) {
            return;
        }
        this.orderItemBillings.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addReturnItemBilling(ReturnItemBilling returnItemBilling) {
        if (this.returnItemBillings == null) {
            this.returnItemBillings = new ArrayList<ReturnItemBilling>();
        }
        this.returnItemBillings.add(returnItemBilling);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeReturnItemBilling(ReturnItemBilling returnItemBilling) {
        if (this.returnItemBillings == null) {
            return;
        }
        this.returnItemBillings.remove(returnItemBilling);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearReturnItemBilling() {
        if (this.returnItemBillings == null) {
            return;
        }
        this.returnItemBillings.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addShipmentItemBilling(ShipmentItemBilling shipmentItemBilling) {
        if (this.shipmentItemBillings == null) {
            this.shipmentItemBillings = new ArrayList<ShipmentItemBilling>();
        }
        this.shipmentItemBillings.add(shipmentItemBilling);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeShipmentItemBilling(ShipmentItemBilling shipmentItemBilling) {
        if (this.shipmentItemBillings == null) {
            return;
        }
        this.shipmentItemBillings.remove(shipmentItemBilling);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearShipmentItemBilling() {
        if (this.shipmentItemBillings == null) {
            return;
        }
        this.shipmentItemBillings.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortBilling(WorkEffortBilling workEffortBilling) {
        if (this.workEffortBillings == null) {
            this.workEffortBillings = new ArrayList<WorkEffortBilling>();
        }
        this.workEffortBillings.add(workEffortBilling);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortBilling(WorkEffortBilling workEffortBilling) {
        if (this.workEffortBillings == null) {
            return;
        }
        this.workEffortBillings.remove(workEffortBilling);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortBilling() {
        if (this.workEffortBillings == null) {
            return;
        }
        this.workEffortBillings.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setInvoiceId((String) mapValue.get("invoiceId"));
        setInvoiceTypeId((String) mapValue.get("invoiceTypeId"));
        setPartyIdFrom((String) mapValue.get("partyIdFrom"));
        setPartyId((String) mapValue.get("partyId"));
        setRoleTypeId((String) mapValue.get("roleTypeId"));
        setStatusId((String) mapValue.get("statusId"));
        setBillingAccountId((String) mapValue.get("billingAccountId"));
        setContactMechId((String) mapValue.get("contactMechId"));
        setInvoiceDate((Timestamp) mapValue.get("invoiceDate"));
        setDueDate((Timestamp) mapValue.get("dueDate"));
        setPaidDate((Timestamp) mapValue.get("paidDate"));
        setInvoiceMessage((String) mapValue.get("invoiceMessage"));
        setReferenceNumber((String) mapValue.get("referenceNumber"));
        setDescription((String) mapValue.get("description"));
        setCurrencyUomId((String) mapValue.get("currencyUomId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setProcessingStatusId((String) mapValue.get("processingStatusId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("invoiceId", getInvoiceId());
        mapValue.put("invoiceTypeId", getInvoiceTypeId());
        mapValue.put("partyIdFrom", getPartyIdFrom());
        mapValue.put("partyId", getPartyId());
        mapValue.put("roleTypeId", getRoleTypeId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("billingAccountId", getBillingAccountId());
        mapValue.put("contactMechId", getContactMechId());
        mapValue.put("invoiceDate", getInvoiceDate());
        mapValue.put("dueDate", getDueDate());
        mapValue.put("paidDate", getPaidDate());
        mapValue.put("invoiceMessage", getInvoiceMessage());
        mapValue.put("referenceNumber", getReferenceNumber());
        mapValue.put("description", getDescription());
        mapValue.put("currencyUomId", getCurrencyUomId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("processingStatusId", getProcessingStatusId());
        return mapValue;
    }


}
