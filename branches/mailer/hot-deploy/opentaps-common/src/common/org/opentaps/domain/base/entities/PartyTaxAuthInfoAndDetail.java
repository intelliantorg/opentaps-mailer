package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity PartyTaxAuthInfoAndDetail.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectPartyTaxAuthInfoAndDetails", query="SELECT PTAI.PARTY_ID AS \"partyId\",PTAI.TAX_AUTH_GEO_ID AS \"taxAuthGeoId\",PTAI.TAX_AUTH_PARTY_ID AS \"taxAuthPartyId\",PTAI.FROM_DATE AS \"fromDate\",PTAI.THRU_DATE AS \"thruDate\",PTAI.PARTY_TAX_ID AS \"partyTaxId\",PTAI.IS_EXEMPT AS \"isExempt\",PTAI.IS_NEXUS AS \"isNexus\",PG.GROUP_NAME AS \"groupName\",PG.GROUP_NAME_LOCAL AS \"groupNameLocal\",PG.OFFICE_SITE_NAME AS \"officeSiteName\",PG.COMMENTS AS \"comments\",PG.LOGO_IMAGE_URL AS \"logoImageUrl\",PG.IS_INCORPORATED AS \"isIncorporated\",PG.FEDERAL_TAX_ID AS \"federalTaxId\",PG.REQUIRES1099 AS \"requires1099\",GEO.GEO_ID AS \"geoId\",GEO.GEO_TYPE_ID AS \"geoTypeId\",GEO.GEO_NAME AS \"geoName\",GEO.GEO_CODE AS \"geoCode\",GEO.GEO_SEC_CODE AS \"geoSecCode\",GEO.ABBREVIATION AS \"abbreviation\" FROM PARTY_TAX_AUTH_INFO PTAI INNER JOIN PARTY_GROUP PG ON PTAI.TAX_AUTH_PARTY_ID = PG.PARTY_ID INNER JOIN GEO GEO ON PTAI.TAX_AUTH_GEO_ID = GEO.GEO_ID", resultSetMapping="PartyTaxAuthInfoAndDetailMapping")
@SqlResultSetMapping(name="PartyTaxAuthInfoAndDetailMapping", entities={
@EntityResult(entityClass=PartyTaxAuthInfoAndDetail.class, fields = {
@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="taxAuthGeoId", column="taxAuthGeoId")
,@FieldResult(name="taxAuthPartyId", column="taxAuthPartyId")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="thruDate", column="thruDate")
,@FieldResult(name="partyTaxId", column="partyTaxId")
,@FieldResult(name="isExempt", column="isExempt")
,@FieldResult(name="isNexus", column="isNexus")
,@FieldResult(name="groupName", column="groupName")
,@FieldResult(name="groupNameLocal", column="groupNameLocal")
,@FieldResult(name="officeSiteName", column="officeSiteName")
,@FieldResult(name="comments", column="comments")
,@FieldResult(name="logoImageUrl", column="logoImageUrl")
,@FieldResult(name="isIncorporated", column="isIncorporated")
,@FieldResult(name="federalTaxId", column="federalTaxId")
,@FieldResult(name="requires1099", column="requires1099")
,@FieldResult(name="geoId", column="geoId")
,@FieldResult(name="geoTypeId", column="geoTypeId")
,@FieldResult(name="geoName", column="geoName")
,@FieldResult(name="geoCode", column="geoCode")
,@FieldResult(name="geoSecCode", column="geoSecCode")
,@FieldResult(name="abbreviation", column="abbreviation")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class PartyTaxAuthInfoAndDetail extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("partyId", "PTAI.PARTY_ID");
        fields.put("taxAuthGeoId", "PTAI.TAX_AUTH_GEO_ID");
        fields.put("taxAuthPartyId", "PTAI.TAX_AUTH_PARTY_ID");
        fields.put("fromDate", "PTAI.FROM_DATE");
        fields.put("thruDate", "PTAI.THRU_DATE");
        fields.put("partyTaxId", "PTAI.PARTY_TAX_ID");
        fields.put("isExempt", "PTAI.IS_EXEMPT");
        fields.put("isNexus", "PTAI.IS_NEXUS");
        fields.put("groupName", "PG.GROUP_NAME");
        fields.put("groupNameLocal", "PG.GROUP_NAME_LOCAL");
        fields.put("officeSiteName", "PG.OFFICE_SITE_NAME");
        fields.put("comments", "PG.COMMENTS");
        fields.put("logoImageUrl", "PG.LOGO_IMAGE_URL");
        fields.put("isIncorporated", "PG.IS_INCORPORATED");
        fields.put("federalTaxId", "PG.FEDERAL_TAX_ID");
        fields.put("requires1099", "PG.REQUIRES1099");
        fields.put("geoId", "GEO.GEO_ID");
        fields.put("geoTypeId", "GEO.GEO_TYPE_ID");
        fields.put("geoName", "GEO.GEO_NAME");
        fields.put("geoCode", "GEO.GEO_CODE");
        fields.put("geoSecCode", "GEO.GEO_SEC_CODE");
        fields.put("abbreviation", "GEO.ABBREVIATION");
fieldMapColumns.put("PartyTaxAuthInfoAndDetail", fields);
}
  public static enum Fields implements EntityFieldInterface<PartyTaxAuthInfoAndDetail> {
    partyId("partyId"),
    taxAuthGeoId("taxAuthGeoId"),
    taxAuthPartyId("taxAuthPartyId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    partyTaxId("partyTaxId"),
    isExempt("isExempt"),
    isNexus("isNexus"),
    groupName("groupName"),
    groupNameLocal("groupNameLocal"),
    officeSiteName("officeSiteName"),
    comments("comments"),
    logoImageUrl("logoImageUrl"),
    isIncorporated("isIncorporated"),
    federalTaxId("federalTaxId"),
    requires1099("requires1099"),
    geoId("geoId"),
    geoTypeId("geoTypeId"),
    geoName("geoName"),
    geoCode("geoCode"),
    geoSecCode("geoSecCode"),
    abbreviation("abbreviation");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
    
    private String partyId;
    
    
    private String taxAuthGeoId;
    
    
    private String taxAuthPartyId;
    
    
    private Timestamp fromDate;
    
    
    private Timestamp thruDate;
    
    
    private String partyTaxId;
    
    
    private String isExempt;
    
    
    private String isNexus;
    
    
    private String groupName;
    
    
    private String groupNameLocal;
    
    
    private String officeSiteName;
    
    
    private String comments;
    
    
    private String logoImageUrl;
    
    
    private String isIncorporated;
    
    
    private String federalTaxId;
    
    
    private String requires1099;
    
    
    private String geoId;
    
    
    private String geoTypeId;
    
    
    private String geoName;
    
    
    private String geoCode;
    
    
    private String geoSecCode;
    
    
    private String abbreviation;

  /**
   * Default constructor.
   */
  public PartyTaxAuthInfoAndDetail() {
      super();
      this.baseEntityName = "PartyTaxAuthInfoAndDetail";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("partyId");this.primaryKeyNames.add("taxAuthGeoId");this.primaryKeyNames.add("taxAuthPartyId");this.primaryKeyNames.add("fromDate");this.primaryKeyNames.add("geoId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public PartyTaxAuthInfoAndDetail(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    private void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthGeoId the taxAuthGeoId to set
     */
    private void setTaxAuthGeoId(String taxAuthGeoId) {
        this.taxAuthGeoId = taxAuthGeoId;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthPartyId the taxAuthPartyId to set
     */
    private void setTaxAuthPartyId(String taxAuthPartyId) {
        this.taxAuthPartyId = taxAuthPartyId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    private void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    private void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param partyTaxId the partyTaxId to set
     */
    private void setPartyTaxId(String partyTaxId) {
        this.partyTaxId = partyTaxId;
    }
    /**
     * Auto generated value setter.
     * @param isExempt the isExempt to set
     */
    private void setIsExempt(String isExempt) {
        this.isExempt = isExempt;
    }
    /**
     * Auto generated value setter.
     * @param isNexus the isNexus to set
     */
    private void setIsNexus(String isNexus) {
        this.isNexus = isNexus;
    }
    /**
     * Auto generated value setter.
     * @param groupName the groupName to set
     */
    private void setGroupName(String groupName) {
        this.groupName = groupName;
    }
    /**
     * Auto generated value setter.
     * @param groupNameLocal the groupNameLocal to set
     */
    private void setGroupNameLocal(String groupNameLocal) {
        this.groupNameLocal = groupNameLocal;
    }
    /**
     * Auto generated value setter.
     * @param officeSiteName the officeSiteName to set
     */
    private void setOfficeSiteName(String officeSiteName) {
        this.officeSiteName = officeSiteName;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    private void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param logoImageUrl the logoImageUrl to set
     */
    private void setLogoImageUrl(String logoImageUrl) {
        this.logoImageUrl = logoImageUrl;
    }
    /**
     * Auto generated value setter.
     * @param isIncorporated the isIncorporated to set
     */
    private void setIsIncorporated(String isIncorporated) {
        this.isIncorporated = isIncorporated;
    }
    /**
     * Auto generated value setter.
     * @param federalTaxId the federalTaxId to set
     */
    private void setFederalTaxId(String federalTaxId) {
        this.federalTaxId = federalTaxId;
    }
    /**
     * Auto generated value setter.
     * @param requires1099 the requires1099 to set
     */
    private void setRequires1099(String requires1099) {
        this.requires1099 = requires1099;
    }
    /**
     * Auto generated value setter.
     * @param geoId the geoId to set
     */
    private void setGeoId(String geoId) {
        this.geoId = geoId;
    }
    /**
     * Auto generated value setter.
     * @param geoTypeId the geoTypeId to set
     */
    private void setGeoTypeId(String geoTypeId) {
        this.geoTypeId = geoTypeId;
    }
    /**
     * Auto generated value setter.
     * @param geoName the geoName to set
     */
    private void setGeoName(String geoName) {
        this.geoName = geoName;
    }
    /**
     * Auto generated value setter.
     * @param geoCode the geoCode to set
     */
    private void setGeoCode(String geoCode) {
        this.geoCode = geoCode;
    }
    /**
     * Auto generated value setter.
     * @param geoSecCode the geoSecCode to set
     */
    private void setGeoSecCode(String geoSecCode) {
        this.geoSecCode = geoSecCode;
    }
    /**
     * Auto generated value setter.
     * @param abbreviation the abbreviation to set
     */
    private void setAbbreviation(String abbreviation) {
        this.abbreviation = abbreviation;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthGeoId() {
        return this.taxAuthGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthPartyId() {
        return this.taxAuthPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyTaxId() {
        return this.partyTaxId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsExempt() {
        return this.isExempt;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsNexus() {
        return this.isNexus;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGroupName() {
        return this.groupName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGroupNameLocal() {
        return this.groupNameLocal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOfficeSiteName() {
        return this.officeSiteName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLogoImageUrl() {
        return this.logoImageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsIncorporated() {
        return this.isIncorporated;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFederalTaxId() {
        return this.federalTaxId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRequires1099() {
        return this.requires1099;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoId() {
        return this.geoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoTypeId() {
        return this.geoTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoName() {
        return this.geoName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoCode() {
        return this.geoCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGeoSecCode() {
        return this.geoSecCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAbbreviation() {
        return this.abbreviation;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPartyId((String) mapValue.get("partyId"));
        setTaxAuthGeoId((String) mapValue.get("taxAuthGeoId"));
        setTaxAuthPartyId((String) mapValue.get("taxAuthPartyId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setPartyTaxId((String) mapValue.get("partyTaxId"));
        setIsExempt((String) mapValue.get("isExempt"));
        setIsNexus((String) mapValue.get("isNexus"));
        setGroupName((String) mapValue.get("groupName"));
        setGroupNameLocal((String) mapValue.get("groupNameLocal"));
        setOfficeSiteName((String) mapValue.get("officeSiteName"));
        setComments((String) mapValue.get("comments"));
        setLogoImageUrl((String) mapValue.get("logoImageUrl"));
        setIsIncorporated((String) mapValue.get("isIncorporated"));
        setFederalTaxId((String) mapValue.get("federalTaxId"));
        setRequires1099((String) mapValue.get("requires1099"));
        setGeoId((String) mapValue.get("geoId"));
        setGeoTypeId((String) mapValue.get("geoTypeId"));
        setGeoName((String) mapValue.get("geoName"));
        setGeoCode((String) mapValue.get("geoCode"));
        setGeoSecCode((String) mapValue.get("geoSecCode"));
        setAbbreviation((String) mapValue.get("abbreviation"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("partyId", getPartyId());
        mapValue.put("taxAuthGeoId", getTaxAuthGeoId());
        mapValue.put("taxAuthPartyId", getTaxAuthPartyId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("partyTaxId", getPartyTaxId());
        mapValue.put("isExempt", getIsExempt());
        mapValue.put("isNexus", getIsNexus());
        mapValue.put("groupName", getGroupName());
        mapValue.put("groupNameLocal", getGroupNameLocal());
        mapValue.put("officeSiteName", getOfficeSiteName());
        mapValue.put("comments", getComments());
        mapValue.put("logoImageUrl", getLogoImageUrl());
        mapValue.put("isIncorporated", getIsIncorporated());
        mapValue.put("federalTaxId", getFederalTaxId());
        mapValue.put("requires1099", getRequires1099());
        mapValue.put("geoId", getGeoId());
        mapValue.put("geoTypeId", getGeoTypeId());
        mapValue.put("geoName", getGeoName());
        mapValue.put("geoCode", getGeoCode());
        mapValue.put("geoSecCode", getGeoSecCode());
        mapValue.put("abbreviation", getAbbreviation());
        return mapValue;
    }


}
