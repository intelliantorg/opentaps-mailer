package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ServerHitBin.
 */
@javax.persistence.Entity
@Table(name="SERVER_HIT_BIN")
public class ServerHitBin extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("serverHitBinId", "SERVER_HIT_BIN_ID");
        fields.put("contentId", "CONTENT_ID");
        fields.put("hitTypeId", "HIT_TYPE_ID");
        fields.put("serverIpAddress", "SERVER_IP_ADDRESS");
        fields.put("serverHostName", "SERVER_HOST_NAME");
        fields.put("binStartDateTime", "BIN_START_DATE_TIME");
        fields.put("binEndDateTime", "BIN_END_DATE_TIME");
        fields.put("numberHits", "NUMBER_HITS");
        fields.put("totalTimeMillis", "TOTAL_TIME_MILLIS");
        fields.put("minTimeMillis", "MIN_TIME_MILLIS");
        fields.put("maxTimeMillis", "MAX_TIME_MILLIS");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("internalContentId", "INTERNAL_CONTENT_ID");
fieldMapColumns.put("ServerHitBin", fields);
}
  public static enum Fields implements EntityFieldInterface<ServerHitBin> {
    serverHitBinId("serverHitBinId"),
    contentId("contentId"),
    hitTypeId("hitTypeId"),
    serverIpAddress("serverIpAddress"),
    serverHostName("serverHostName"),
    binStartDateTime("binStartDateTime"),
    binEndDateTime("binEndDateTime"),
    numberHits("numberHits"),
    totalTimeMillis("totalTimeMillis"),
    minTimeMillis("minTimeMillis"),
    maxTimeMillis("maxTimeMillis"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    internalContentId("internalContentId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @org.hibernate.annotations.GenericGenerator(name="ServerHitBin_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
    @GeneratedValue(generator="ServerHitBin_GEN")   
    @Id
    
    @Column(name="SERVER_HIT_BIN_ID")
    private String serverHitBinId;
    
    @Column(name="CONTENT_ID")
    private String contentId;
    
    @Column(name="HIT_TYPE_ID")
    private String hitTypeId;
    
    @Column(name="SERVER_IP_ADDRESS")
    private String serverIpAddress;
    
    @Column(name="SERVER_HOST_NAME")
    private String serverHostName;
    
    @Column(name="BIN_START_DATE_TIME")
    private Timestamp binStartDateTime;
    
    @Column(name="BIN_END_DATE_TIME")
    private Timestamp binEndDateTime;
    
    @Column(name="NUMBER_HITS")
    private Long numberHits;
    
    @Column(name="TOTAL_TIME_MILLIS")
    private Long totalTimeMillis;
    
    @Column(name="MIN_TIME_MILLIS")
    private Long minTimeMillis;
    
    @Column(name="MAX_TIME_MILLIS")
    private Long maxTimeMillis;
    
    @Column(name="LAST_UPDATED_STAMP")
    private Timestamp lastUpdatedStamp;
    
    @Column(name="LAST_UPDATED_TX_STAMP")
    private Timestamp lastUpdatedTxStamp;
    
    @Column(name="CREATED_STAMP")
    private Timestamp createdStamp;
    
    @Column(name="CREATED_TX_STAMP")
    private Timestamp createdTxStamp;
    
    @Column(name="INTERNAL_CONTENT_ID")
    private String internalContentId;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="HIT_TYPE_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private ServerHitType serverHitType = null;
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
    @JoinColumn(name="INTERNAL_CONTENT_ID", insertable=false, updatable=false)
    @org.hibernate.annotations.Generated(
        org.hibernate.annotations.GenerationTime.ALWAYS
    )
    private Content content = null;

  /**
   * Default constructor.
   */
  public ServerHitBin() {
      super();
      this.baseEntityName = "ServerHitBin";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("serverHitBinId");
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ServerHitBin(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param serverHitBinId the serverHitBinId to set
     */
    public void setServerHitBinId(String serverHitBinId) {
        this.serverHitBinId = serverHitBinId;
    }
    /**
     * Auto generated value setter.
     * @param contentId the contentId to set
     */
    public void setContentId(String contentId) {
        this.contentId = contentId;
    }
    /**
     * Auto generated value setter.
     * @param hitTypeId the hitTypeId to set
     */
    public void setHitTypeId(String hitTypeId) {
        this.hitTypeId = hitTypeId;
    }
    /**
     * Auto generated value setter.
     * @param serverIpAddress the serverIpAddress to set
     */
    public void setServerIpAddress(String serverIpAddress) {
        this.serverIpAddress = serverIpAddress;
    }
    /**
     * Auto generated value setter.
     * @param serverHostName the serverHostName to set
     */
    public void setServerHostName(String serverHostName) {
        this.serverHostName = serverHostName;
    }
    /**
     * Auto generated value setter.
     * @param binStartDateTime the binStartDateTime to set
     */
    public void setBinStartDateTime(Timestamp binStartDateTime) {
        this.binStartDateTime = binStartDateTime;
    }
    /**
     * Auto generated value setter.
     * @param binEndDateTime the binEndDateTime to set
     */
    public void setBinEndDateTime(Timestamp binEndDateTime) {
        this.binEndDateTime = binEndDateTime;
    }
    /**
     * Auto generated value setter.
     * @param numberHits the numberHits to set
     */
    public void setNumberHits(Long numberHits) {
        this.numberHits = numberHits;
    }
    /**
     * Auto generated value setter.
     * @param totalTimeMillis the totalTimeMillis to set
     */
    public void setTotalTimeMillis(Long totalTimeMillis) {
        this.totalTimeMillis = totalTimeMillis;
    }
    /**
     * Auto generated value setter.
     * @param minTimeMillis the minTimeMillis to set
     */
    public void setMinTimeMillis(Long minTimeMillis) {
        this.minTimeMillis = minTimeMillis;
    }
    /**
     * Auto generated value setter.
     * @param maxTimeMillis the maxTimeMillis to set
     */
    public void setMaxTimeMillis(Long maxTimeMillis) {
        this.maxTimeMillis = maxTimeMillis;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param internalContentId the internalContentId to set
     */
    public void setInternalContentId(String internalContentId) {
        this.internalContentId = internalContentId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServerHitBinId() {
        return this.serverHitBinId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentId() {
        return this.contentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getHitTypeId() {
        return this.hitTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServerIpAddress() {
        return this.serverIpAddress;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServerHostName() {
        return this.serverHostName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getBinStartDateTime() {
        return this.binStartDateTime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getBinEndDateTime() {
        return this.binEndDateTime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getNumberHits() {
        return this.numberHits;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getTotalTimeMillis() {
        return this.totalTimeMillis;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getMinTimeMillis() {
        return this.minTimeMillis;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getMaxTimeMillis() {
        return this.maxTimeMillis;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInternalContentId() {
        return this.internalContentId;
    }

    /**
     * Auto generated method that gets the related <code>ServerHitType</code> by the relation named <code>ServerHitType</code>.
     * @return the <code>ServerHitType</code>
     * @throws RepositoryException if an error occurs
     */
    public ServerHitType getServerHitType() throws RepositoryException {
        if (this.serverHitType == null) {
            this.serverHitType = getRelatedOne(ServerHitType.class, "ServerHitType");
        }
        return this.serverHitType;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>Content</code>.
     * @return the <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public Content getContent() throws RepositoryException {
        if (this.content == null) {
            this.content = getRelatedOne(Content.class, "Content");
        }
        return this.content;
    }

    /**
     * Auto generated value setter.
     * @param serverHitType the serverHitType to set
    */
    public void setServerHitType(ServerHitType serverHitType) {
        this.serverHitType = serverHitType;
    }
    /**
     * Auto generated value setter.
     * @param content the content to set
    */
    public void setContent(Content content) {
        this.content = content;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setServerHitBinId((String) mapValue.get("serverHitBinId"));
        setContentId((String) mapValue.get("contentId"));
        setHitTypeId((String) mapValue.get("hitTypeId"));
        setServerIpAddress((String) mapValue.get("serverIpAddress"));
        setServerHostName((String) mapValue.get("serverHostName"));
        setBinStartDateTime((Timestamp) mapValue.get("binStartDateTime"));
        setBinEndDateTime((Timestamp) mapValue.get("binEndDateTime"));
        setNumberHits((Long) mapValue.get("numberHits"));
        setTotalTimeMillis((Long) mapValue.get("totalTimeMillis"));
        setMinTimeMillis((Long) mapValue.get("minTimeMillis"));
        setMaxTimeMillis((Long) mapValue.get("maxTimeMillis"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setInternalContentId((String) mapValue.get("internalContentId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("serverHitBinId", getServerHitBinId());
        mapValue.put("contentId", getContentId());
        mapValue.put("hitTypeId", getHitTypeId());
        mapValue.put("serverIpAddress", getServerIpAddress());
        mapValue.put("serverHostName", getServerHostName());
        mapValue.put("binStartDateTime", getBinStartDateTime());
        mapValue.put("binEndDateTime", getBinEndDateTime());
        mapValue.put("numberHits", getNumberHits());
        mapValue.put("totalTimeMillis", getTotalTimeMillis());
        mapValue.put("minTimeMillis", getMinTimeMillis());
        mapValue.put("maxTimeMillis", getMaxTimeMillis());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("internalContentId", getInternalContentId());
        return mapValue;
    }


}
