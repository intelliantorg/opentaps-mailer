<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<!-- This file has been modified by Open Source Strategies, Inc. -->


<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">

    <!-- ================================================================ -->
    <!-- Agreement Services -->
    <!-- ================================================================ -->
    
    <!-- create a new Agreement -->
    <simple-method method-name="createAgreement" short-description="Create an Agreement">
        <check-permission permission="ACCOUNTING" action="_CREATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to run createAgreement you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission"/>
        </check-permission>
        <check-errors/>

        <!-- create new entity and create all the fields -->
        <make-value value-name="newEntity" entity-name="Agreement"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>

        <!-- create a non existing ID -->
        <sequenced-id-to-env sequence-name="Agreement" env-name="agreementId"/>
        <set from-field="agreementId" field="newEntity.agreementId"/>
        <field-to-result field-name="agreementId" result-name="agreementId"/>

        <if-empty field-name="fromDate" map-name="newEntity">
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <set from-field="nowTimestamp" field="newEntity.fromDate"/>
        </if-empty>

        <!-- finally create the record (should not exist already)-->
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing Agreement -->
    <simple-method method-name="updateAgreement" short-description="Update an existing Agreement">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run updateAgreement you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="Agreement" value-name="agreement" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="agreement"/>
        <store-value value-name="agreement"/>
        <check-errors/>
    </simple-method>

    <!-- cancel an existing Agreement -->
    <simple-method method-name="cancelAgreement" short-description="Cancel an existing Agreement">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run cancelAgreement you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="Agreement" value-name="agreement" auto-field-map="true"/>
        <check-errors/>
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <set from-field="nowTimestamp" field="agreement.thruDate"/>
        <store-value value-name="agreement"/>
        <check-errors/>
    </simple-method>

    <!-- create a new AgreementItem -->
    <simple-method method-name="createAgreementItem" short-description="Create an AgreementItem">
        <check-permission permission="ACCOUNTING" action="_CREATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to run createAgreementItem you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission"/>
        </check-permission>
        <check-errors/>

        <!-- create new entity and create all the fields -->
        <make-value value-name="newEntity" entity-name="AgreementItem"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>

        <set from-field="parameters.agreementId" field="newEntity.agreementId"/>
        <!-- create a non existing ID -->
        <if-empty field-name="parameters.agreementItemSeqId">
            <make-next-seq-id value-name="newEntity" seq-field-name="agreementItemSeqId"/>
            <set from-field="agreementItemSeqId" field="newEntity.agreementItemSeqId"/>
        <else>
            <set from-field="parameters.agreementItemSeqId" field="newEntity.agreementItemSeqId"/>
        </else>
        </if-empty>
        <field-to-result field-name="agreementId" result-name="agreementId"/>
        <field-to-result field-name="newEntity.agreementItemSeqId" result-name="agreementItemSeqId"/>

        <!-- finally create the record (should not exist already)-->
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementItem -->
    <simple-method method-name="updateAgreementItem" short-description="Update an existing AgreementItem">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run updateAgreementItem you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementItem" value-name="agreementItem" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="agreementItem"/>
        <store-value value-name="agreementItem"/>
        <check-errors/>
    </simple-method>

    <!-- remove an AgreementItem -->
    <simple-method method-name="removeAgreementItem" short-description="Remove an AgreementItem">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run removeAgreementItem you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementItem" value-name="agreementItem" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="agreementItem"/>
    </simple-method>

    <!-- create a new AgreementTerm -->
    <simple-method method-name="createAgreementTerm" short-description="Create an AgreementTerm">
        <check-permission permission="ACCOUNTING" action="_CREATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to run createAgreementTerm you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission"/>
        </check-permission>
        <check-errors/>

        <!-- create new entity and create all the fields -->
        <make-value value-name="newEntity" entity-name="AgreementTerm"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>

        <!-- create a non existing ID -->
        <sequenced-id-to-env sequence-name="AgreementTerm" env-name="agreementTermId"/>
        <set from-field="parameters.agreementId" field="newEntity.agreementId"/>
        <set from-field="parameters.agreementItemSeqId" field="newEntity.agreementItemSeqId"/>
        <set from-field="agreementTermId" field="newEntity.agreementTermId"/>
        <field-to-result field-name="agreementTermId" result-name="agreementTermId"/>

        <!-- finally create the record (should not exist already)-->
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementTerm -->
    <simple-method method-name="updateAgreementTerm" short-description="Update an existing AgreementTerm">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run updateAgreementTerm you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementTerm" value-name="agreementTerm" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="agreementTerm"/>
        <store-value value-name="agreementTerm"/>
        <check-errors/>
    </simple-method>

    <!-- delete an existing AgreementTerm -->
    <simple-method method-name="deleteAgreementTerm" short-description="Delete an existing AgreementTerm">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run deleteAgreementTerm you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementTerm" value-name="agreementTerm" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="agreementTerm"/>
        <check-errors/>
    </simple-method>
    
    <!-- create a new AgreementPromoAppl -->
    <simple-method method-name="createAgreementPromoAppl" short-description="Create an AgreementPromoAppl">
        <check-permission permission="ACCOUNTING" action="_CREATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to run createAgreementPromoAppl you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission"/>
        </check-permission>
        <check-errors/>
        <make-value value-name="newEntity" entity-name="AgreementPromoAppl"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementPromoAppl -->
    <simple-method method-name="updateAgreementPromoAppl" short-description="Update an existing AgreementPromoAppl">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run updateAgreementPromoAppl you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementPromoAppl" value-name="agreementPromoAppl" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="agreementPromoAppl"/>
        <store-value value-name="agreementPromoAppl"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing AgreementPromoAppl -->
    <simple-method method-name="removeAgreementPromoAppl" short-description="Remove an existing AgreementPromoAppl">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run removeAgreementPromoAppl you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementPromoAppl" value-name="agreementPromoAppl" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="agreementPromoAppl"/>
        <check-errors/>
    </simple-method>
    
    <!-- create a new AgreementProductAppl -->
    <simple-method method-name="createAgreementProductAppl" short-description="Create an AgreementProductAppl">
        <check-permission permission="ACCOUNTING" action="_CREATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to run createAgreementProductAppl you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission"/>
        </check-permission>
        <check-errors/>
        <make-value value-name="newEntity" entity-name="AgreementProductAppl"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementProductAppl -->
    <simple-method method-name="updateAgreementProductAppl" short-description="Update an existing AgreementProductAppl">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run updateAgreementProductAppl you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementProductAppl" value-name="agreementProductAppl" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="agreementProductAppl"/>
        <store-value value-name="agreementProductAppl"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing AgreementProductAppl -->
    <simple-method method-name="removeAgreementProductAppl" short-description="Remove an existing AgreementProductAppl">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run removeAgreementProductAppl you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementProductAppl" value-name="agreementProductAppl" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="agreementProductAppl"/>
        <check-errors/>
    </simple-method>

    <!-- create a new AgreementPartyApplic -->
    <simple-method method-name="createAgreementPartyApplic" short-description="Create an AgreementPartyApplic">
        <check-permission permission="ACCOUNTING" action="_CREATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to run createAgreementPartyApplic you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission"/>
        </check-permission>
        <check-errors/>
        <make-value value-name="newEntity" entity-name="AgreementPartyApplic"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementPartyApplic -->
    <simple-method method-name="updateAgreementPartyApplic" short-description="Update an existing AgreementPartyApplic">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run updateAgreementPartyApplic you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementPartyApplic" value-name="agreementPartyApplic" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="agreementPartyApplic"/>
        <store-value value-name="agreementPartyApplic"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing AgreementPartyApplic -->
    <simple-method method-name="removeAgreementPartyApplic" short-description="Remove an existing AgreementPartyApplic">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run removeAgreementPartyApplic you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementPartyApplic" value-name="agreementPartyApplic" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="agreementPartyApplic"/>
        <check-errors/>
    </simple-method>

    <!-- create a new AgreementGeographicalApplic -->
    <simple-method method-name="createAgreementGeographicalApplic" short-description="Create an AgreementGeographicalApplic">
        <check-permission permission="ACCOUNTING" action="_CREATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to run createAgreementGeographicalApplic you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission"/>
        </check-permission>
        <check-errors/>
        <make-value value-name="newEntity" entity-name="AgreementGeographicalApplic"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementGeographicalApplic -->
    <simple-method method-name="updateAgreementGeographicalApplic" short-description="Update an existing AgreementGeographicalApplic">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run updateAgreementGeographicalApplic you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementGeographicalApplic" value-name="agreementGeographicalApplic" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="agreementGeographicalApplic"/>
        <store-value value-name="agreementGeographicalApplic"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing AgreementGeographicalApplic -->
    <simple-method method-name="removeAgreementGeographicalApplic" short-description="Remove an existing AgreementGeographicalApplic">
        <check-permission permission="ACCOUNTING" action="_UPDATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_UPDATE"/>
            <fail-message message="Security Error: to run removeAgreementGeographicalApplic you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="AgreementGeographicalApplic" value-name="agreementGeographicalApplic" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="agreementGeographicalApplic"/>
        <check-errors/>
    </simple-method>

    <!-- copy an existing Agreement -->
    <simple-method method-name="copyAgreement" short-description="Copy an existing Agreement">
        <check-permission permission="ACCOUNTING" action="_CREATE">
            <alt-permission permission="ACCOUNTING_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to run copyAgreement you must have the ACCOUNTING_UPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="Agreement" value-name="agreement" auto-field-map="true"/>
        <check-errors/>
        <set-service-fields service-name="createAgreement" to-map-name="createAgreementInMap" map-name="agreement"/>
        <call-service service-name="createAgreement" in-map-name="createAgreementInMap">
            <result-to-field result-name="agreementId" field-name="agreementIdTo"/>
        </call-service>

        <get-related value-name="agreement" relation-name="AgreementItem" list-name="agreementItems"/>
        <iterate list-name="agreementItems" entry-name="agreementItem">
            <clear-field field-name="createAgreementItemInMap"/>
            <set-service-fields service-name="createAgreementItem" to-map-name="createAgreementItemInMap" map-name="agreementItem"/>
            <set from-field="agreementIdTo" field="createAgreementItemInMap.agreementId"/>
            <call-service service-name="createAgreementItem" in-map-name="createAgreementItemInMap"/>
        </iterate>
        <if-compare field-name="parameters.copyAgreementTerms" value="Y" operator="equals">
            <get-related value-name="agreement" relation-name="AgreementTerm" list-name="agreementTerms"/>
            <iterate list-name="agreementTerms" entry-name="agreementTerm">
                <clear-field field-name="createAgreementTermInMap"/>
                <set-service-fields service-name="createAgreementTerm" to-map-name="createAgreementTermInMap" map-name="agreementTerm"/>
                <set from-field="agreementIdTo" field="createAgreementTermInMap.agreementId"/>
                <call-service service-name="createAgreementTerm" in-map-name="createAgreementTermInMap"/>
            </iterate>
        </if-compare>
        <if-compare field-name="parameters.copyAgreementProducts" value="Y" operator="equals">
            <get-related value-name="agreement" relation-name="AgreementProductAppl" list-name="agreementProductAppls"/>
            <iterate list-name="agreementProductAppls" entry-name="agreementProductAppl">
                <clear-field field-name="createAgreementProductApplInMap"/>
                <set-service-fields service-name="createAgreementProductAppl" to-map-name="createAgreementProductApplInMap" map-name="agreementProductAppl"/>
                <set from-field="agreementIdTo" field="createAgreementProductApplInMap.agreementId"/>
                <call-service service-name="createAgreementProductAppl" in-map-name="createAgreementProductApplInMap"/>
            </iterate>
        </if-compare>
        <if-compare field-name="parameters.copyAgreementParties" value="Y" operator="equals">
            <get-related value-name="agreement" relation-name="AgreementPartyApplic" list-name="agreementPartyApplic"/>
            <iterate list-name="agreementPartyApplics" entry-name="agreementPartyApplic">
                <clear-field field-name="createAgreementPartyApplicInMap"/>
                <set-service-fields service-name="createAgreementPartyApplic" to-map-name="createAgreementPartyApplicInMap" map-name="agreementPartyApplic"/>
                <set from-field="agreementIdTo" field="createAgreementPartyApplicInMap.agreementId"/>
                <call-service service-name="createAgreementPartyApplic" in-map-name="createAgreementPartyApplicInMap"/>
            </iterate>
        </if-compare>
        <field-to-result field-name="agreementIdTo" result-name="agreementId"/>
    </simple-method>

</simple-methods>
