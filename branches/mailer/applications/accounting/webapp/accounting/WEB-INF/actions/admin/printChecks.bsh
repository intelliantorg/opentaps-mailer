/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */

import java.util.ArrayList;
import org.ofbiz.base.util.UtilHttp;
import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.accounting.util.UtilAccounting;

// rounding mode
int decimals = UtilAccounting.getBigDecimalScale("invoice.decimals");
int rounding = UtilAccounting.getBigDecimalRoundingMode("invoice.rounding");
context.put("decimals", decimals);
context.put("rounding", rounding);

// list of payments
payments = new ArrayList();

// first ensure ability to print
security = request.getAttribute("security");
context.put("security", security);
if (!security.hasEntityPermission("ACCOUNTING", "_PRINT_CHECKS", session)) {
    context.put("payments", payments); // if no permission, just pass an empty list for now
    return;
}

// in the case of a single payment, the paymentId will be supplied
paymentId = context.get("paymentId");
if (paymentId != null) {
    payment = delegator.findByPrimaryKey("Payment", UtilMisc.toMap("paymentId", paymentId));
    if (payment != null) payments.add(payment);
    context.put("payments", payments);
    return;
}

// in the case of a multi form, parse the multi data and get all of the selected payments
selected = UtilHttp.parseMultiFormData(parameters);
iter = selected.iterator();
while (iter.hasNext()) {
    row = iter.next(); 
    payment = delegator.findByPrimaryKey("Payment", UtilMisc.toMap("paymentId", row.get("paymentId")));
    if (payment == null) continue;
    payments.add(payment);
}
context.put("payments", payments);

