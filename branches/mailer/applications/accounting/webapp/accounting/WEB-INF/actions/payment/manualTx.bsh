/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import org.ofbiz.base.util.*;

// stores
productStores = delegator.findAllCache("ProductStore", UtilMisc.toList("storeName"));
context.put("productStores", productStores);

// current store
productStoreId = parameters.get("productStoreId");
if (productStoreId != null) {
    productStore = delegator.findByPrimaryKey("ProductStore", UtilMisc.toMap("productStoreId", productStoreId));
    context.put("currentStore", productStore);
}

// payment settings
paymentSettings = delegator.findByAnd("Enumeration", UtilMisc.toMap("enumTypeId", "PRDS_PAYSVC"), UtilMisc.toList("sequenceId"));
context.put("paymentSettings", paymentSettings);

// payment method (for auto-fill)
paymentMethodId = parameters.get("paymentMethodId");
context.put("paymentMethodId", paymentMethodId);

// payment method type
paymentMethodTypeId = parameters.get("paymentMethodTypeId");
context.put("paymentMethodTypeId", paymentMethodTypeId);

// service type (transaction type)
txType = parameters.get("transactionType");
context.put("txType", txType);
if (txType != null) {
    currentTx = delegator.findByPrimaryKey("Enumeration", UtilMisc.toMap("enumId", txType));
    context.put("currentTx", currentTx);
}

if (paymentMethodId != null) {
    paymentMethod = delegator.findByPrimaryKey("PaymentMethod", UtilMisc.toMap("paymentMethodId", paymentMethodId));
    if (paymentMethod != null) {
        // payment method type
        paymentMethodTypeId = paymentMethod.getString("paymentMethodTypeId");

        // party information
        party = paymentMethod.getRelatedOne("Party");
        if (party != null && "PERSON".equals(party.getString("partyTypeId"))) {
            person = party.getRelatedOne("Person");
            context.put("person", person);
        } else if (party != null && "PARTY_GROUP".equals(party.getString("partyTypeId"))) {
            partyGroup = party.getRelatedOne("PartyGroup");
            context.put("partyGroup", partyGroup);
        }

        // method info + address
        creditCard = paymentMethod.getRelatedOne("CreditCard");
        context.put("creditCard", creditCard);
        if (creditCard != null) {
            postalAddress = creditCard.getRelatedOne("PostalAddress");
            context.put("postalFields", postalAddress);
        }

        giftCard = paymentMethod.getRelatedOne("GiftCard");
        context.put("giftCard", giftCard);

        // todo add support for eft account
    }
}

if (paymentMethodTypeId != null) {
    paymentMethodType = delegator.findByPrimaryKey("PaymentMethodType", UtilMisc.toMap("paymentMethodTypeId", paymentMethodTypeId));
    context.put("paymentMethodType", paymentMethodType);
    context.put("paymentMethodTypeId", paymentMethodTypeId);
}
