/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


/*
 * This script is also referenced by the ecommerce's screens and
 * should not contain order component's specific code.
 */

import org.ofbiz.order.shoppingcart.ShoppingCartEvents;
import org.ofbiz.product.config.ProductConfigWorker;
import org.ofbiz.product.store.ProductStoreWorker;

currencyUomId = ShoppingCartEvents.getCartObject(request).getCurrency();
product = context.get("product");

if (product != null) {
    configWrapper = ProductConfigWorker.getProductConfigWrapper(product.getString("productId"), currencyUomId, request);
    ProductConfigWorker.fillProductConfigWrapper(configWrapper, request);

    if (!configWrapper.isCompleted()) {
        configWrapper.setDefaultConfig();
    }
    if (!ProductStoreWorker.isStoreInventoryAvailable(request, configWrapper, 1.0)) {
        context.put("productNotAvailable", "Y");
    }
    context.put("configwrapper", configWrapper);
    context.put("totalPrice", configWrapper.getTotalPrice());
    context.put("renderSingleChoiceWithRadioButtons", "Y");
    context.put("showOffsetPrice", "Y");
}
