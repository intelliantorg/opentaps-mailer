/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.order.shoppingcart.*;
import org.ofbiz.party.contact.*;
import org.ofbiz.product.catalog.*;

delegator = request.getAttribute("delegator");
cart = session.getAttribute("shoppingCart");
context.put("cart", cart);

orderTerms = cart.getOrderTerms();
context.put("orderTerms",orderTerms);

termTypes = delegator.findAll("TermType");
context.put("termTypes",termTypes);
createNew = request.getParameter("createNew");

termIndex = request.getParameter("termIndex");
if (createNew != null && createNew.equals("Y") && termIndex != null && (!termIndex.equals("-1"))) {
    context.put("termIndex",termIndex);
    orderTerm = orderTerms.get(Integer.parseInt(termIndex));
    if (orderTerm != null) {
       context.put("termTypeId",orderTerm.getString("termTypeId"));
       context.put("termValue",orderTerm.get("termValue"));
       context.put("termDays",orderTerm.get("termDays"));
       context.put("textValue",orderTerm.get("textValue"));
    }
}
