/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import java.util.ArrayList;
import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.order.shoppingcart.ShoppingCartEvents;

List checkoutSteps = new ArrayList();

void addStep(String label, String uri) {
    checkoutSteps.add(UtilMisc.toMap("label", label, "uri", uri, "enabled", "Y"));
}

String setEnabledSteps() {
    String isLast = "N";
    if (stepLabelId == void) return isLast;
    String enabled = "Y";
    for (int i = 0; i < checkoutSteps.size(); i++) {
        checkoutStep = (Map)checkoutSteps.get(i);
        checkoutStep.put("enabled", enabled);
        if (enabled.equals("Y")) {
            if (i == (checkoutSteps.size() - 1)) {
                isLast = "Y";
            }
            if (stepLabelId.equals(checkoutStep.get("label"))) {
                enabled = "N";
            }
        }
    }
    return isLast;
}

shoppingCart = ShoppingCartEvents.getCartObject(request);

// ----------------------------------
// The ordered list of steps is prepared here
// ----------------------------------
addStep("OrderOrderItems", "/orderentry");

if ("PURCHASE_ORDER".equals(shoppingCart.getOrderType())) {
    addStep("OrderOrderTerms", "/setOrderTerm");
}
addStep("FacilityShipping", "/setShipping");
if (shoppingCart.getShipGroupSize() > 1) {
    addStep("OrderShipGroups", "/SetItemShipGroups");
}
addStep("CommonOptions", "/setOptions");
if ("SALES_ORDER".equals(shoppingCart.getOrderType())) {
    addStep("AccountingPayment", "/setBilling");
}
//addStep("PartyParties", "/setAdditionalParty");
addStep("OrderReviewOrder", "/confirmOrder");

// ---------------------------------------

isLastStep = setEnabledSteps();
context.put("isLastStep", isLastStep);
context.put("checkoutSteps", checkoutSteps);
