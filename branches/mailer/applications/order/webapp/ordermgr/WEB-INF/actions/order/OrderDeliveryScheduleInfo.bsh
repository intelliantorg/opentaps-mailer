/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.widget.html.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");
dispatcher = request.getAttribute("dispatcher");

String orderId = request.getParameter("orderId");
String orderTypeId = null;
GenericValue orderHeader = delegator.findByPrimaryKey("OrderHeader", UtilMisc.toMap("orderId", orderId));
if (orderHeader != null) {
    orderTypeId = orderHeader.getString("orderTypeId");
}

//Determine whether a schedule has already been defined for this PO
GenericValue schedule = delegator.findByPrimaryKey("OrderDeliverySchedule", UtilMisc.toMap("orderId", orderId, "orderItemSeqId", "_NA_"));

// Determine whether the current user can VIEW the order
Map checkMap = UtilMisc.toMap("orderId", orderId, "userLogin", session.getAttribute("userLogin"), "checkAction", "VIEW");
Map checkResult = dispatcher.runSync("checkSupplierRelatedOrderPermission", checkMap);
String hasSupplierRelatedPermissionStr = (String) checkResult.get("hasSupplierRelatedPermission");

// Determine what the reuslt is, no result is FALSE
hasSupplierRelatedPermission = "true".equals(hasSupplierRelatedPermissionStr);

// Initialize the PO Delivery Schedule form
HtmlFormWrapper updatePODeliveryInfoWrapper = new HtmlFormWrapper("component://order/webapp/ordermgr/order/OrderDeliveryScheduleForms.xml", "UpdateDeliveryScheduleInformation", request, response);
updatePODeliveryInfoWrapper.putInContext("orderId", orderId);
updatePODeliveryInfoWrapper.putInContext("orderItemSeqId", "_NA_");
updatePODeliveryInfoWrapper.putInContext("schedule", schedule);
updatePODeliveryInfoWrapper.putInContext("hasSupplierRelatedPermission", hasSupplierRelatedPermission);

context.put("orderId", orderId);
context.put("orderTypeId", orderTypeId);
context.put("orderHeader", orderHeader);
context.put("hasPermission", hasSupplierRelatedPermission);
context.put("updatePODeliveryInfoWrapper", updatePODeliveryInfoWrapper);
