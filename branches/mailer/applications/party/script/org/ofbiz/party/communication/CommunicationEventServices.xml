<?xml version="1.0" encoding="UTF-8" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<!-- This file has been modified by Open Source Strategies, Inc. -->


<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">
    <simple-method method-name="createCommunicationEvent" short-description="Create a CommunicationEvent">
        <if>
            <condition>
                <and>
                    <if-compare-field field-name="parameters.partyIdFrom" operator="not-equals" to-field-name="userLogin.partyId"/>
                    <if-compare-field field-name="parameters.partyIdTo" operator="not-equals" to-field-name="userLogin.partyId"/>
                </and>
            </condition>
            <then>
                <check-permission permission="PARTYMGR" action="_CME_CREATE">
                    <fail-property resource="PartyUiLabels" property="PartyCreateCommunicationEventPermissionError"/>
                </check-permission>
            </then>
        </if>

        <if-empty field-name="parameters.statusId">
            <set value="COM_ENTERED" field="parameters.statusId"/>     
        </if-empty>

        <make-value value-name="newEntity" entity-name="CommunicationEvent"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        
        <if-empty field-name="parameters.communicationEventId">
            <sequenced-id-to-env sequence-name="CommunicationEvent" env-name="newEntity.communicationEventId"/>
            <else>
                <set field="newEntity.communicationEventId" from-field="parameters.communicationEventId"/>
            </else>
        </if-empty>
        <field-to-result field-name="newEntity.communicationEventId" result-name="communicationEventId"/>
        
        <now-timestamp-to-env env-name="newEntity.entryDate"/>
        
        <create-value value-name="newEntity"/>

        <if-not-empty field-name="parameters.productId">
            <make-value value-name="eventProduct" entity-name="CommunicationEventProduct"/>
            <set from-field="parameters.productId" field="eventProduct.productId"/>
            <set from-field="newEntity.communicationEventId" field="eventProduct.communicationEventId"/>
            <create-value value-name="eventProduct"/>
        </if-not-empty>
        <if-not-empty field-name="parameters.orderId">
            <make-value value-name="eventOrder" entity-name="CommunicationEventOrder"/>
            <set from-field="parameters.orderId" field="eventOrder.orderId"/>
            <set from-field="newEntity.communicationEventId" field="eventOrder.communicationEventId"/>
            <create-value value-name="eventOrder"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="updateCommunicationEvent" short-description="Update a CommunicationEvent">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyUpdateCommunicationEventPermissionError"/>
        </check-permission>
        <check-errors/>
        
        <entity-one entity-name="CommunicationEvent" value-name="event"/>
        <set-nonpk-fields map-name="parameters" value-name="event"/>
        <store-value value-name="event"/>
    </simple-method>
    <simple-method method-name="deleteCommunicationEvent" short-description="Delete a CommunicationEvent">
        <check-permission permission="PARTYMGR" action="_CME_DELETE">
            <fail-property resource="PartyUiLabels" property="PartyUpdateCommunicationEventPermissionError"/>
        </check-permission>
        <check-errors/>
        
        <entity-one entity-name="CommunicationEvent" value-name="event"/>
        <!-- remove related links to content -->
        <get-related value-name="event" relation-name="CommEventContentAssoc" list-name="contentAssocs"/>
        <if-not-empty field-name="contentAssocs">
            <iterate entry-name="contentAssoc" list-name="contentAssocs">
                <remove-value value-name="contentAssoc"/>
                <!-- delete content and dataresource too if requested -->
                <if-compare field-name="parameters.delContentDataResource" value="Y" operator="equals">
                    <get-related value-name="contentAssoc" relation-name="FromContent" list-name="contents"/>
                    <if-not-empty field-name="contents">
                        <iterate entry-name="content" list-name="contents">
                            <remove-related value-name="content" relation-name="ContentRole"/>
                            <remove-value value-name="content"/>
                            <get-related-one value-name="content" relation-name="DataResource" to-value-name="dataResource"/>
                            <if-not-empty field-name="dataResource">
                                <get-related-one value-name="dataResource" relation-name="ImageDataResource" to-value-name="imageDataResource"/>
                                <if-not-empty field-name="imageDataResource">
                                    <remove-value value-name="imageDataResource"/>
                                </if-not-empty>
                                <get-related-one value-name="dataResource" relation-name="ElectronicText" to-value-name="electronicText"/>
                                <if-not-empty field-name="electronicText">
                                    <remove-value value-name="electronicText"/>
                                </if-not-empty>
                                <remove-related value-name="dataResource" relation-name="DataResourceRole"/>
                                <remove-value value-name="dataResource"/>
                            </if-not-empty>
                        </iterate>
                    </if-not-empty>
                </if-compare>  
            </iterate>
        </if-not-empty>
        <!-- delete the roles when exist and the event itself -->
        <remove-related value-name="event" relation-name="CommunicationEventRole"/>
        <remove-value value-name="event"/>
    </simple-method>
    <simple-method method-name="deleteCommunicationEventWorkEffort" short-description="delete commEvent and workEffort">
        <check-permission permission="PARTYMGR" action="_CME_DELETE">
            <fail-property resource="PartyUiLabels" property="PartyUpdateCommunicationEventPermissionError"/>
        </check-permission>
        <check-errors/>
        
        <entity-one entity-name="CommunicationEvent" value-name="event"/>
        <!-- remove related workeffort when this is the only communicationevent connected to it -->
        <get-related value-name="event" relation-name="CommunicationEventWorkEff" list-name="workEffortComs"/>
        <if-not-empty field-name="workEffortComs">
            <iterate entry-name="workEffortCom" list-name="workEffortComs">
                <remove-value value-name="workEffortCom"/>
                <get-related-one value-name="workEffortCom" relation-name="WorkEffort" to-value-name="workEffort"/>
                <get-related value-name="workEffort" relation-name="CommunicationEventWorkEff" list-name="otherComs"/>
                <if-empty field-name="otherComs">
                    <log level="info" message="remove workeffort ${workEffort.workEffortId} and related parties and status"/>
                    <remove-related value-name="workEffort" relation-name="WorkEffortPartyAssignment"/>
                    <remove-related value-name="workEffort" relation-name="WorkEffortPartyAssignment"/>
                    <remove-related value-name="workEffort" relation-name="WorkEffortStatus"/>
                    <remove-related value-name="workEffort" relation-name="WorkEffortKeyword"/>
                    <remove-value value-name="workEffort"/>
                </if-empty>
            </iterate>
        </if-not-empty>
        <!-- delete the event itself -->
        <call-service service-name="deleteCommunicationEvent" in-map-name="parameters"/>
    </simple-method>
    <!-- since these ancillary operations on communication event cause them to be updated,
        they will all use the CME_UPDATE permission -->
    <simple-method method-name="createCommunicationEventPurpose" short-description="Create a CommunicationEventPurpose">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyCreateCommunicationEventPurposePermissionError"/>
        </check-permission>
        <check-errors/>
        
        <make-value value-name="newEntity" entity-name="CommunicationEventPurpose"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>        
        <create-value value-name="newEntity"/>    
    </simple-method>
    <simple-method method-name="removeCommunicationEventPurpose" short-description="Remove a CommunicationEventPurpose">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyRemoveCommunicationEventPurposePermissionError"/>
        </check-permission>
        <check-errors/>
        
        <entity-one entity-name="CommunicationEventPurpose" value-name="eventPurpose"/>        
        <remove-value value-name="eventPurpose"/>
    </simple-method>
    <simple-method method-name="createCommunicationEventRole" short-description="Create a CommunicationEventRole">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyCreateCommunicationEventRolePermissionError"/>
        </check-permission>
        <check-errors/>
        
        <make-value value-name="newEntity" entity-name="CommunicationEventRole"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>        
        <create-value value-name="newEntity"/>    
    </simple-method>
    <simple-method method-name="removeCommunicationEventRole" short-description="Remove a CommunicationEventRole">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyRemoveCommunicationEventRolePermissionError"/>
        </check-permission>
        <check-errors/>
                
        <entity-one entity-name="CommunicationEventRole" value-name="eventRole"/>        
        <remove-value value-name="eventRole"/>
    </simple-method>

    <simple-method method-name="markEventRead" short-description="Marks a Communication Event as Read">
        <if-empty field-name="parameters.communicationEventId">
            <set from-field="parameters.messageId" field="parameters.communicationEventId"/>   
        </if-empty>
        <entity-one entity-name="CommunicationEvent" value-name="event"/>
        
        <if>
            <condition>
                <or>
                    <if-compare-field field-name="partyIdTo" map-name="event" to-map-name="userLogin" to-field-name="partyId" operator="equals"/>
                    <if-has-permission permission="PARTYMGR" action="_CME_UPDATE"/>
                </or>
            </condition>
            <then>
                <if>
                    <condition>
                        <or>
                            <if-compare field-name="statusId" map-name="event" operator="equals" value="COM_ENTERED"/>
                            <if-compare field-name="statusId" map-name="event" operator="equals" value="COM_PENDING"/>
                        </or>
                    </condition>
                    <then>
                        <set value="COM_READ" field="event.statusId"/>
                        <store-value value-name="event"/>
                    </then>
                </if>
            </then>
        </if>        
    </simple-method>
</simple-methods>
