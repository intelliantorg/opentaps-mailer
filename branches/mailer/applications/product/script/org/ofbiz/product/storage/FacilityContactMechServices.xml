<?xml version="1.0" encoding="UTF-8" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<!-- This file has been modified by Open Source Strategies, Inc. -->


<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">
    <simple-method method-name="createFacilityContactMech" short-description="Create a FacilityContactMech">
        <check-permission permission="FACILITY" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>
        <make-value entity-name="FacilityContactMech" value-name="newValue"/>
        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        <log level="info" message="contactMechId is ${parameters.contactMechId}"/>
        <if-empty map-name="parameters" field-name="contactMechId">

            <set-service-fields service-name="createContactMech" map-name="parameters" to-map-name="createContactMechMap"/>
            <set field="createContactMechMap.contactMechTypeId" from-field="parameters.contactMechTypeId" />
            <call-service service-name="createContactMech" in-map-name="createContactMechMap">
                <default-message>Contact Mechanism successfully created.</default-message>
                <result-to-field result-name="contactMechId" map-name="newValue"/>
            </call-service>
            <log level="info" message="ContactMech created"/>
            <else>
                <set field="newValue.contactMechId" from-field="parameters.contactMechId" />
            </else>
        </if-empty>
        <log level="info" message="Creating a FacilityContactMech with id: ${parameters.contactMechId}"/>
        <set field="newValue.facilityId" from-field="parameters.facilityId" />
        <field-to-result field-name="contactMechId" map-name="newValue"/>
        <field-to-request field-name="contactMechId" map-name="newValue"/>
        <set-nonpk-fields map-name="parameters" value-name="newValue"/>
        <now-timestamp-to-env env-name="newValue.fromDate"/>

        <create-value value-name="newValue"/>
    </simple-method>

    <simple-method method-name="updateFacilityContactMech" short-description="Update a FacilityContactMech">
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>

        <!-- Find old value -->

        <make-value entity-name="FacilityContactMech" value-name="facilityContactMechMap"/>
        <set-pk-fields value-name="facilityContactMechMap" map-name="parameters"/>
        <find-by-and entity-name="FacilityContactMech" list-name="facilityContactMechs" map-name="facilityContactMechMap"/>
        <filter-list-by-date list-name="facilityContactMechs" to-list-name="validFacilityContactMechs"/>
        <first-from-list entry-name="facilityContactMech" list-name="validFacilityContactMechs"/>
        <if-empty field-name="facilityContactMech">
            <add-error><fail-message message="ERROR: Cannot update specified contact info because it does not correspond to the specified facility"/></add-error>
        </if-empty>
        <check-errors/>

        <log message="parameters: ${parameters}" level="info"/>
        <clone-value value-name="facilityContactMech" new-value-name="newFacilityContactMech"/>
        <log message="parameters: ${parameters}" level="info"/>
        <!-- If we already have a new contactMechId don't update ContactMech -->
        <if-empty map-name="parameters" field-name="newContactMechId">
            <set-service-fields service-name="updateContactMech" map-name="parameters" to-map-name="updateContactMechMap"/>
            <set field="updateContactMechMap.contactMechTypeId" from-field="parameters.contactMechTypeId" />
            <call-service service-name="updateContactMech" in-map-name="updateContactMechMap">
                <default-message>Contact Mechanism successfully updated.</default-message>

                <result-to-field result-name="contactMechId" map-name="newFacilityContactMech"/>
            </call-service>
            <else>
                <set field="newFacilityContactMech.contactMechId" from-field="parameters.newContactMechId"/>
                <log level="info" message="Using supplied new contact mech id: ${newFacilityContactMech.contactMechId}"/>
            </else>
        </if-empty>

        <set-nonpk-fields value-name="newFacilityContactMech" map-name="parameters" set-if-null="false"/>

        <now-timestamp-to-env env-name="newFacilityContactMech.fromDate"/>
        <now-timestamp-to-env env-name="facilityContactMech.thruDate"/>

        <store-value value-name="facilityContactMech"/>
        <create-value value-name="newFacilityContactMech"/>

        <if-compare-field field-name="contactMechId" map-name="parameters" to-map-name="newFacilityContactMech" operator="not-equals">
            <get-related value-name="facilityContactMech" relation-name="FacilityContactMechPurpose" list-name="facilityContactMechPurposes"/>
            <iterate entry-name="facilityContactMechPurposeOld" list-name="facilityContactMechPurposes">
                <clone-value value-name="facilityContactMechPurposeOld" new-value-name="facilityContactMechPurpose"/>

                <now-timestamp-to-env env-name="facilityContactMechPurposeOld.thruDate"/>
                <store-value value-name="facilityContactMechPurposeOld"/>

                <set field="facilityContactMechPurpose.contactMechId" from-field="newFacilityContactMech.contactMechId"/>
                <set field="purposeMap.facilityId" from-field="facilityContactMechPurpose.facilityId"/>
                <set field="purposeMap.contactMechPurposeTypeId" from-field="facilityContactMechPurpose.contactMechPurposeTypeId"/>
                <set field="purposeMap.contactMechId" from-field="facilityContactMechPurpose.contactMechId"/>
                <find-by-and entity-name="FacilityContactMechPurpose" list-name="purposeResult" map-name="purposeMap"/>

                <if-empty field-name="purposeResult">

                    <create-value value-name="facilityContactMechPurpose"/>
                </if-empty>
            </iterate>
        </if-compare-field>

        <log level="info" message="Setting id to result: ${newFacilityContactMech.contactMechId}"/>
        <field-to-result field-name="newFacilityContactMech.contactMechId" result-name="contactMechId"/>
        <field-to-request field-name="newFacilityContactMech.contactMechId" request-name="contactMechId"/>
    </simple-method>

    <simple-method method-name="deleteFacilityContactMech" short-description="Delete a FacilityContactMech">
        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        <check-permission permission="FACILITY" action="_DELETE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value entity-name="FacilityContactMech" value-name="facilityContactMechMap"/>
        <set-pk-fields value-name="facilityContactMechMap" map-name="parameters"/>
        <find-by-and entity-name="FacilityContactMech" list-name="facilityContactMechs" map-name="facilityContactMechMap"/>
        <filter-list-by-date list-name="facilityContactMechs" to-list-name="validFacilityContactMechs"/>

        <first-from-list entry-name="facilityContactMech" list-name="validFacilityContactMechs"/>
        <if-empty field-name="facilityContactMech">
            <add-error>
                <fail-property resource="PartyUiLabels" property="PartyContactMechNotFoundCannotDelete"/>
            </add-error>
            <return/>
        </if-empty>
        <now-timestamp-to-env env-name="facilityContactMech.thruDate"/>
        <store-value value-name="facilityContactMech"/>

    </simple-method>

    <simple-method method-name="createFacilityPostalAddress" short-description="Create a PostalAddress for facility">
        <check-permission permission="FACILITY" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <set-service-fields service-name="createPostalAddress" map-name="parameters" to-map-name="createPostalAddressMap"/>
        <call-service in-map-name="createPostalAddressMap" service-name="createPostalAddress">
            <default-message>Postal Address successfully created</default-message>

            <result-to-field result-name="contactMechId" map-name="newFacilityContactMech"/>
        </call-service>

        <check-errors/>

        <set field="createFacilityContactMechMap.contactMechId" from-field="newFacilityContactMech.contactMechId"/>
        <set-service-fields service-name="createFacilityContactMech" map-name="parameters" to-map-name="createFacilityContactMechMap"/>

        <call-service service-name="createFacilityContactMech" in-map-name="createFacilityContactMechMap" break-on-error="true">
            <default-message>Facility Contact Mechanism successfully created</default-message>

        </call-service>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>
    </simple-method>

    <simple-method method-name="updateFacilityPostalAddress" short-description="Update a PostalAddress for facility">
        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <set-service-fields service-name="updatePostalAddress" map-name="parameters" to-map-name="updatePostalAddressMap"/>
        <call-service in-map-name="updatePostalAddressMap" service-name="updatePostalAddress">
            <default-message>Postal Address successfully updated</default-message>
            <result-to-field result-name="contactMechId" map-name="newFacilityContactMech" field-name="contactMechId" />
        </call-service>

        <set-service-fields service-name="updateFacilityContactMech" map-name="parameters" to-map-name="updateFacilityContactMechMap"/>
        <set field="updateFacilityContactMechMap.newContactMechId" from-field="newFacilityContactMech.contactMechId"/>

        <set field="updateFacilityContactMechMap.contactMechTypeId" value="POSTAL_ADDRESS"/>
        <log level="info" message="Copied id to updateFacilityContactMechMap: ${updateFacilityContactMechMap.newContactMechId}"/>
        <call-service service-name="updateFacilityContactMech" in-map-name="updateFacilityContactMechMap">
            <default-message>Facility Contact Mechanism successfully updated</default-message>
        </call-service>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>
    </simple-method>

    <simple-method method-name="createFacilityTelecomNumber" short-description="Create a TelecomNumber for facility">
        <check-permission permission="FACILITY" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <log level="info" message="Creating telecom number"/>
        <set-service-fields service-name="createTelecomNumber" map-name="parameters" to-map-name="createTelecomNumberMap"/>
        <call-service in-map-name="createTelecomNumberMap" service-name="createTelecomNumber">
            <default-message>Telecom number successfully created</default-message>

            <result-to-field result-name="contactMechId" map-name="newFacilityContactMech"/>
        </call-service>

        <set-service-fields service-name="createFacilityContactMech" map-name="parameters" to-map-name="createFacilityContactMechMap"/>
        <set field="createFacilityContactMechMap.contactMechId" from-field="newFacilityContactMech.contactMechId"/>
        <log level="info" message="Copied id to createFacilityContactMechMap: ${createFacilityContactMechMap.contactMechId}"/>

        <call-service service-name="createFacilityContactMech" in-map-name="createFacilityContactMechMap" break-on-error="true">
            <default-message>Facility Contact Mechanism successfully created</default-message>

        </call-service>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>
    </simple-method>

    <simple-method method-name="updateFacilityTelecomNumber" short-description="Update a TelecomNumber for facility">
        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <set-service-fields service-name="updateTelecomNumber" map-name="parameters" to-map-name="updateTelecomNumberMap"/>
        <call-service service-name="updateTelecomNumber" in-map-name="updateTelecomNumberMap">
            <default-message>Telecom Number successfully updated</default-message>
            <result-to-field result-name="contactMechId" map-name="newFacilityContactMech" field-name="contactMechId" />
        </call-service>

        <set-service-fields service-name="updateFacilityContactMech" map-name="parameters" to-map-name="updateFacilityContactMechMap"/>
        <set field="updateFacilityContactMechMap.newContactMechId" from-field="newFacilityContactMech.contactMechId"/>

        <set field="updateFacilityContactMechMap.contactMechTypeId" value="TELECOM_NUMBER"/>
        <log level="info" message="Copied id to updateFacilityContactMechMap: ${updateFacilityContactMechMap.newContactMechId}"/>

        <call-service in-map-name="updateFacilityContactMechMap" service-name="updateFacilityContactMech">
            <default-message>Facility Contact Mechanism successfully updated</default-message>
        </call-service>
        <log level="info" message="Setting result id: ${newFacilityContactMech.contactMechId}"/>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>

    </simple-method>

    <simple-method method-name="createFacilityEmailAddress" short-description="Create an email address for facility">
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <if-validate-method field-name="parameters.emailAddress" method="isEmail">
            <else><add-error><fail-property resource="PartyUiLabels" property="PartyEmailAddressNotFormattedCorrectly"/></add-error></else>
        </if-validate-method>
        <check-errors/>
                
        <set-service-fields service-name="createFacilityContactMech" map-name="parameters" to-map-name="createFacilityContactMechMap"/>
        <set field="createFacilityContactMechMap.infoString" from-field="parameters.emailAddress"/>
        <set field="createFacilityContactMechMap.contactMechTypeId" value="EMAIL_ADDRESS"/>
        <call-service service-name="createFacilityContactMech" in-map-name="createFacilityContactMechMap">

            <default-message>Facility Contact Mechanism successfully created.</default-message>
            <result-to-result result-name="contactMechId"/>
            <result-to-request result-name="contactMechId"/>
        </call-service>
    </simple-method>

    <simple-method method-name="updateFacilityEmailAddress" short-description="Update an email address for facility">
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <if-validate-method field-name="parameters.emailAddress" method="isEmail">
            <else><add-error><fail-property resource="PartyUiLabels" property="PartyEmailAddressNotFormattedCorrectly"/></add-error></else>
        </if-validate-method>
        <check-errors/>

        <set-service-fields service-name="updateFacilityContactMech" map-name="parameters" to-map-name="updateFacilityContactMechMap"/>
        <set field="updateFacilityContactMechMap.infoString" from-field="parameters.emailAddress"/>
        <set field="updateFacilityContactMechMap.contactMechTypeId" value="EMAIL_ADDRESS" />
        <call-service service-name="updateFacilityContactMech" in-map-name="updateFacilityContactMechMap">

            <default-message>Facility Contact Mechanism successfully updated.</default-message>
            <result-to-result result-name="contactMechId"/>
            <result-to-request result-name="contactMechId"/>
        </call-service>
    </simple-method>

    <simple-method method-name="createFacilityContactMechPurpose" short-description="Create a facility/contact mech purpose">
        <check-permission permission="FACILITY" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value value-name="lookUpMap" entity-name="FacilityContactMechPurpose"/>
        <set field="lookUpMap.facilityId" from-field="parameters.facilityId" />
        <set field="lookUpMap.contactMechId" from-field="parameters.contactMechId" />
        <set field="lookUpMap.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId" />
        <find-by-and entity-name="FacilityContactMechPurpose" map-name="lookUpMap" list-name="purposeList"/>
        <filter-list-by-date list-name="purposeList"/>

        <if-not-empty field-name="purposeList">
            <add-error><fail-message message="Could not create new purpose, a purpose with that type already exists"/></add-error>

            <check-errors/>
        </if-not-empty>

        <now-timestamp-to-env env-name="nowTimestamp"/>
        <make-value value-name="newEntity" entity-name="FacilityContactMechPurpose"/>
        <set field="newEntity.facilityId" from-field="parameters.facilityId" />
        <set field="newEntity.contactMechId" from-field="parameters.contactMechId" />
        <set field="newEntity.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId" />
        <set field="newEntity.fromDate" from-field="nowTimestamp" />

        <create-value value-name="newEntity"/>

        <field-to-result field-name="fromDate" map-name="newEntity" result-name="fromDate"/>
    </simple-method>

    <simple-method method-name="deleteFacilityContactMechPurpose" short-description="Delete a facility/contact mech purpose">
        <check-permission permission="FACILITY" action="_DELETE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value value-name="lookUpMap" entity-name="FacilityContactMechPurpose"/>

        <set-pk-fields map-name="parameters" value-name="lookUpMap"/>
        <find-by-primary-key value-name="purposeEntity" entity-name="FacilityContactMechPurpose" map-name="lookUpMap"/>

        <if-empty field-name="purposeEntity">
            <add-error><fail-message message="Unable to locate purpose; cannot delete"/></add-error>
            <check-errors/>
        </if-empty>

        <now-timestamp-to-env env-name="nowTimestamp"/>
        <set field="purposeEntity.thruDate" from-field="nowTimestamp" />

        <store-value value-name="purposeEntity"/>
    </simple-method>
</simple-methods>
