<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<!-- This file has been modified by Open Source Strategies, Inc. -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">
    
    <simple-method method-name="createSubscription" short-description="Create a Subscription">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <make-value entity-name="Subscription" value-name="newEntity"/>
        <if-empty field-name="parameters.subscriptionId">
            <sequenced-id-to-env sequence-name="Subscription" env-name="newEntity.subscriptionId"/> <!-- get the next sequenced ID -->
            <else>
                <set field="newEntity.subscriptionId" from-field="parameters.subscriptionId"/>
            </else>
        </if-empty>
        <field-to-result field-name="newEntity.subscriptionId" result-name="subscriptionId"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>   
    <simple-method method-name="updateSubscription" short-description="Update a Subscription">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <entity-one entity-name="Subscription" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="isSubscribed" short-description="check if a party has a subscription">
        <set value="_READ" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <set field="pfInput.inputFields" from-field="parameters"/>
        <set field="pfInput.entityName" value="Subscription"/>
        <if-empty field-name="parameters.filterByDate">
            <set field="pfInput.filterByDate" value="Y"/>
            <else>
                <set field="pfInput.filterByDate" from-field="parameters.filterByDate"/>
            </else>
        </if-empty>
        
        <call-service service-name="performFindList" in-map-name="pfInput">
            <result-to-field result-name="list" field-name="pfResultList"/>
        </call-service>
        
        <if-empty field-name="pfResultList">
            <set field="found" value="false" type="Boolean"/>
            <else>
                <set field="found" value="true" type="Boolean"/>
                <first-from-list entry-name="subscription" list-name="pfResultList"/>
                <field-to-result field-name="subscription.subscriptionId" result-name="subscriptionId"/>
            </else>
        </if-empty>
        
        <field-to-result field-name="found" result-name="isSubscribed"/>
    </simple-method>
    
    <simple-method method-name="getSubscription" short-description="Get Subscription data">
        <set value="_READ" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><accept-userlogin-party/><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <entity-one entity-name="Subscription" value-name="subscription"/>
        <field-to-result field-name="parameters.subscriptionId" result-name="subscriptionId"/>
        <if-not-empty field-name="subscription">
            <field-to-result field-name="subscription" result-name="subscription"/>
        </if-not-empty>
    </simple-method>

    <simple-method method-name="createSubscriptionResource" short-description="Create a SubscriptionResource">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <make-value entity-name="SubscriptionResource" value-name="newEntity"/>
        <sequenced-id-to-env sequence-name="SubscriptionResource" env-name="newEntity.subscriptionResourceId"/>
        <field-to-result field-name="newEntity.subscriptionResourceId" result-name="subscriptionResourceId"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>   
    <simple-method method-name="updateSubscriptionResource" short-description="Update a SubscriptionResource">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <entity-one entity-name="SubscriptionResource" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createProductSubscriptionResource" short-description="Create a ProductSubscriptionResource">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <make-value entity-name="ProductSubscriptionResource" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <if-empty field-name="newEntity.fromDate"><now-timestamp-to-env env-name="newEntity.fromDate"/></if-empty>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>   
    <simple-method method-name="updateProductSubscriptionResource" short-description="Update a ProductSubscriptionResource">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <entity-one entity-name="ProductSubscriptionResource" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteProductSubscriptionResource" short-description="Delete a ProductSubscriptionResource">
        <set value="_DELETE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <entity-one entity-name="ProductSubscriptionResource" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="updateSubscriptionAttribute" short-description="Create (when not exist) or update (when exist) a Subscription attribute">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <field-to-result field-name="parameters.subscriptionId" result-name="subscriptionId"/>
        <entity-one entity-name="SubscriptionAttribute" value-name="lookedUpValue"/>
        <if-empty field-name="lookedUpValue">
            <make-value entity-name="SubscriptionAttribute" value-name="newEntity"/>
            <set-pk-fields map-name="parameters" value-name="newEntity"/>
            <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
            <create-value value-name="newEntity"/>
            <else>
                <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
                <store-value value-name="lookedUpValue"/>
            </else>
        </if-empty>
    </simple-method>
    
    <simple-method method-name="createSubscriptionCommEvent" short-description="Create a Subscription Communication Event">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <make-value value-name="newEntity" entity-name="SubscriptionCommEvent"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>    
    </simple-method>
    <simple-method method-name="removeSubscriptionCommEvent" short-description="Remove a Subscription Communication Event">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="CATALOG" action="${securityAction}"><fail-property resource="ProductUiLabels" property="GeneralCatalogPermissionError"/></check-permission>
        <check-errors/>
        <entity-one entity-name="SubscriptionCommEvent" value-name="eventSubscription"/>
        <remove-value value-name="eventSubscription"/>
    </simple-method>
</simple-methods>
