/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import java.util.*;
import java.io.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.widget.html.*;

delegator = request.getAttribute("delegator");

facilityId = request.getParameter("facilityId");
locationSeqId = request.getParameter("locationSeqId");
facility = null;
facilityLocation = null;

if (UtilValidate.isEmpty(facilityId) && UtilValidate.isNotEmpty((String) request.getAttribute("facilityId"))) {
    facilityId = (String) request.getAttribute("facilityId");
}

if (UtilValidate.isEmpty(locationSeqId) && UtilValidate.isNotEmpty((String) request.getAttribute("locationSeqId"))) {
    locationSeqId = (String) request.getAttribute("locationSeqId");
}

if (facilityId != null && locationSeqId != null) {
    facilityLocation = delegator.findByPrimaryKey("FacilityLocation", UtilMisc.toMap("facilityId", facilityId, "locationSeqId", locationSeqId));
}
if (facilityId != null) {
    facility = delegator.findByPrimaryKey("Facility", UtilMisc.toMap("facilityId", facilityId));
}

locationTypeEnums = delegator.findByAnd("Enumeration", UtilMisc.toMap("enumTypeId", "FACLOC_TYPE"));

// ProductFacilityLocation stuff
productFacilityLocations = null;
if (facilityLocation != null) {
    productFacilityLocations = facilityLocation.getRelated("ProductFacilityLocation", null, UtilMisc.toList("productId"));
}

context.put("facilityId", facilityId);
context.put("locationSeqId", locationSeqId);
context.put("facility", facility);
context.put("facilityLocation", facilityLocation);       
context.put("locationTypeEnums", locationTypeEnums);
context.put("productFacilityLocations", productFacilityLocations);
