/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */

 
import java.util.*;
import java.io.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.widget.html.*;

delegator = request.getAttribute("delegator");

nowTimestampString = UtilDateTime.nowTimestamp().toString();

facilityGroupId = request.getParameter("facilityGroupId");
facilityGroup = delegator.findByPrimaryKey("FacilityGroup", UtilMisc.toMap("facilityGroupId", facilityGroupId));

parentGroupRollups = null;
currentGroupRollups = null;
if (facilityGroup != null) {
    parentGroupRollups = facilityGroup.getRelated("ParentFacilityGroupRollup");
    currentGroupRollups = facilityGroup.getRelated("CurrentFacilityGroupRollup");
}

facilityGroups = delegator.findAll("FacilityGroup", UtilMisc.toList("description"));

context.put("nowTimestampString", nowTimestampString);
context.put("facilityGroupId", facilityGroupId);
context.put("facilityGroup", facilityGroup);
context.put("parentGroupRollups", parentGroupRollups);
context.put("currentGroupRollups", currentGroupRollups);
context.put("facilityGroups", facilityGroups);
