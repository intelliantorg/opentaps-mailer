/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import java.util.*;
import java.io.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.widget.html.*;

delegator = request.getAttribute("delegator");

facilityId = parameters.get("facilityId");
context.put("facilityId", facilityId);

lookup = request.getParameter("look_up");
itemId = request.getParameter("inventoryItemId");
if (itemId != null) {
    session.setAttribute("inventoryItemId", itemId);
}

itemId = session.getAttribute("inventoryItemId");
context.put("itemId", itemId);

facility = delegator.findByPrimaryKey("Facility", UtilMisc.toMap("facilityId", facilityId));
context.put("facility", facility);

UtilHttp.parametersToAttributes(request);
List foundLocations = null;
if (lookup != null) {
    Map reqParamMap = UtilHttp.getParameterMap(request);
    Map paramMap = new HashMap(reqParamMap);
    paramMap.remove("look_up");
    Iterator i = reqParamMap.keySet().iterator();
    while (i.hasNext()) {
        Object key = i.next();
        String value = (String) paramMap.get(key);
        if (value == null || value.length() == 0) {
            paramMap.remove(key);
        }
    }
    foundLocations = delegator.findByAnd("FacilityLocation", paramMap);
    if (foundLocations != null && foundLocations.size() > 0) {
        context.put("foundLocations", foundLocations);
    }
}
