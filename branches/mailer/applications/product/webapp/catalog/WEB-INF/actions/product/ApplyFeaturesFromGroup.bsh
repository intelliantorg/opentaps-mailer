/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


/*
 * For cases when the ApplyFeaturesFromCategory.ftl is actually supposed to get its list of ProductFeatures from a productFeatureGroupId.
 * Puts productFeatureGroup and productFeatures which are put of this group into the context.  Currently does not break out the features by view size.
 */

import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.entity.GenericDelegator;
import org.ofbiz.entity.GenericEntity;

productFeatureGroupId = parameters.get("productFeatureGroupId");
if ((productFeatureGroupId != null) && !(productFeatureGroupId.equals(""))) {
    productFeatureGroup = delegator.findByPrimaryKey("ProductFeatureGroup", UtilMisc.toMap("productFeatureGroupId", productFeatureGroupId));
    productFeatures = new LinkedList();
    productFeatureGroupAppls = productFeatureGroup.getRelated("ProductFeatureGroupAppl", UtilMisc.toList("sequenceNum"));
    for (pFGAi = productFeatureGroupAppls.iterator(); pFGAi.hasNext(); ) {
    	productFeatureGroupAppl = (GenericEntity)pFGAi.next();
    	productFeature = (GenericEntity)productFeatureGroupAppl.getRelatedOne("ProductFeature");
    	productFeature.set("defaultSequenceNum", productFeatureGroupAppl.getLong("sequenceNum"));
        productFeatures.add(productFeature);
    }
    context.put("productFeatureGroup", productFeatureGroup);
    context.put("productFeatures", productFeatures);
    // this will not break out the product features by view size
    context.put("listSize", productFeatures.size());
    context.put("highIndex", productFeatures.size());
}
