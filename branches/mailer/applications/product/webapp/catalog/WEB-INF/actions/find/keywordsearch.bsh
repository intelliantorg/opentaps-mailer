/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import org.ofbiz.base.util.*;
import org.ofbiz.product.catalog.*;
import org.ofbiz.product.feature.*;
import org.ofbiz.product.product.*;
import org.ofbiz.entity.*;
import org.ofbiz.entity.condition.*;

module = "keywordsearch.bsh";

// note: this can be run multiple times in the same request without causing problems, will check to see on its own if it has run again
ProductSearchSession.processSearchParameters(parameters, request);
prodCatalogId = CatalogWorker.getCurrentCatalogId(request);
Map result = ProductSearchSession.getProductSearchResult(request, delegator, prodCatalogId);

applicationTypes = delegator.findAll("ProductFeatureApplType", UtilMisc.toList("description"));

//productCategories = delegator.findAll("ProductCategory", UtilMisc.toList("description"));
expr = new EntityExpr(new EntityExpr("showInSelect", EntityOperator.EQUALS, null),
        EntityOperator.OR,
        new EntityExpr("showInSelect", EntityOperator.NOT_EQUAL, "N"));
productCategories = delegator.findByCondition("ProductCategory", expr, null, UtilMisc.toList("description"));

context.put("applicationTypes", applicationTypes);
context.put("productCategories", productCategories);

context.put("productIds", result.get("productIds"));
context.put("viewIndex", result.get("viewIndex"));
context.put("viewSize", result.get("viewSize"));
context.put("listSize", result.get("listSize"));
context.put("lowIndex", result.get("lowIndex"));
context.put("highIndex", result.get("highIndex"));
context.put("searchCategory", result.get("searchCategory"));
context.put("searchConstraintStrings", result.get("searchConstraintStrings"));
context.put("searchSortOrderString", result.get("searchSortOrderString"));
