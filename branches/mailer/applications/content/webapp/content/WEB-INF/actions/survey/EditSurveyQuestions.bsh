/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import java.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.widget.html.*;

surveyQuestionId = parameters.get("surveyQuestionId");
context.put("surveyQuestionId", surveyQuestionId);

surveyQuestion = delegator.findByPrimaryKey("SurveyQuestion", UtilMisc.toMap("surveyQuestionId", surveyQuestionId));

surveyQuestionAndApplList = delegator.findByAnd("SurveyQuestionAndAppl", UtilMisc.toMap("surveyId", surveyId), UtilMisc.toList("sequenceNum"));
surveyPageList = delegator.findByAnd("SurveyPage", UtilMisc.toMap("surveyId", surveyId), UtilMisc.toList("sequenceNum"));
surveyMultiRespList = delegator.findByAnd("SurveyMultiResp", UtilMisc.toMap("surveyId", surveyId), UtilMisc.toList("multiRespTitle"));

HtmlFormWrapper createSurveyQuestionWrapper = new HtmlFormWrapper("component://content/webapp/content/survey/SurveyForms.xml", "CreateSurveyQuestion", request, response);
createSurveyQuestionWrapper.putInContext("surveyId", surveyId);
createSurveyQuestionWrapper.putInContext("surveyQuestion", surveyQuestion);

HtmlFormWrapper createSurveyQuestionCategoryWrapper = new HtmlFormWrapper("component://content/webapp/content/survey/SurveyForms.xml", "CreateSurveyQuestionCategory", request, response);
createSurveyQuestionCategoryWrapper.putInContext("surveyId", surveyId);

if (surveyQuestion != null && surveyQuestion.get("surveyQuestionTypeId") != null && "OPTION".equals(surveyQuestion.getString("surveyQuestionTypeId"))) {
    // get the options
    questionOptions = delegator.findByAnd("SurveyQuestionOption", UtilMisc.toMap("surveyQuestionId", surveyQuestionId), UtilMisc.toList("sequenceNum"));
    context.put("questionOptions", questionOptions);

    HtmlFormWrapper createSurveyOptionWrapper = new HtmlFormWrapper("component://content/webapp/content/survey/SurveyForms.xml", "CreateSurveyQuestionOption", request, response);

    // survey question option
    optionSeqId = parameters.get("surveyOptionSeqId");
    surveyQuestionOption = null;
    if (optionSeqId != null) {
        surveyQuestionOption = delegator.findByPrimaryKey("SurveyQuestionOption", UtilMisc.toMap("surveyQuestionId", surveyQuestionId, "surveyOptionSeqId", optionSeqId));
    }
    context.put("surveyQuestionOption", surveyQuestionOption);

    createSurveyOptionWrapper.putInContext("surveyQuestionOption", surveyQuestionOption);
    createSurveyOptionWrapper.putInContext("surveyQuestionId", surveyQuestionId);
    createSurveyOptionWrapper.putInContext("surveyId", surveyId);
    context.put("createSurveyOptionWrapper", createSurveyOptionWrapper);
}

surveyQuestionCategoryId = parameters.get("surveyQuestionCategoryId");
surveyQuestionCategory = null;
categoryQuestions = null;
if (!UtilValidate.isEmpty(surveyQuestionCategoryId)) {
    surveyQuestionCategory = delegator.findByPrimaryKey("SurveyQuestionCategory", UtilMisc.toMap("surveyQuestionCategoryId", surveyQuestionCategoryId));
    if (surveyQuestionCategory != null) {
        categoryQuestions = surveyQuestionCategory.getRelated("SurveyQuestion");
    }
}
questionCategories = delegator.findAll("SurveyQuestionCategory", UtilMisc.toList("description"));

context.put("surveyQuestion", surveyQuestion);

context.put("surveyQuestionAndApplList", surveyQuestionAndApplList);
context.put("surveyPageList", surveyPageList);
context.put("surveyMultiRespList", surveyMultiRespList);

context.put("createSurveyQuestionWrapper", createSurveyQuestionWrapper);
context.put("createSurveyQuestionCategoryWrapper", createSurveyQuestionCategoryWrapper);

context.put("surveyQuestionCategory", surveyQuestionCategory);
context.put("categoryQuestions", categoryQuestions);
context.put("questionCategories", questionCategories);
