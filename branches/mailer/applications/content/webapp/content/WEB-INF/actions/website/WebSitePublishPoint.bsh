/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.entity.util.*;

Map pplookupMap = UtilMisc.toMap("webSiteId", webSiteId, "webSiteContentTypeId", "PUBLISH_POINT");
List webSiteContents = delegator.findByAnd("WebSiteContent", pplookupMap, UtilMisc.toList("-fromDate"));
webSiteContents = EntityUtil.filterByDate(webSiteContents);
webSiteContent = EntityUtil.getFirst(webSiteContents);
if (webSiteContent != null) {
    content = webSiteContent.getRelatedOne("Content");
    contentRoot = content.getString("contentId");
    context.put("content", content);
    context.put("contentRoot", contentRoot);

    // get all sub content for the publish point
    List subsites = delegator.findByAnd("ContentAssoc", UtilMisc.toMap("contentId", contentRoot));
    context.put("subsites", subsites);
}

Map mnlookupMap = UtilMisc.toMap("webSiteId", webSiteId, "webSiteContentTypeId", "MENU_ROOT");
List webSiteMenus = delegator.findByAnd("WebSiteContent", mnlookupMap, UtilMisc.toList("-fromDate"));
webSiteMenu = EntityUtil.getFirst(webSiteMenus);
if (webSiteMenu != null) {
    menu = webSiteMenu.getRelatedOne("Content");
    menuRoot = menu.getString("contentId");
    context.put("menu", menu);
    context.put("menuRoot", menuRoot);

    // get all sub content for the publish point
    List menus = delegator.findByAnd("ContentAssoc", UtilMisc.toMap("contentId", menuRoot));
    context.put("menus", menus);
}
