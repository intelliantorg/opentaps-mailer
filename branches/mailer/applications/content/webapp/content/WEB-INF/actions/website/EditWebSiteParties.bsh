/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;

List webSiteRoles = null;
List webSiteRoleDatas = new LinkedList();
if (webSite != null) {
    webSiteRoles = webSite.getRelated("WebSiteRole", null, UtilMisc.toList("sequenceNum", "partyId"));
    Iterator webSiteRoleIter = webSiteRoles.iterator();
    while (webSiteRoleIter.hasNext()) {
        GenericValue webSiteRole = (GenericValue) webSiteRoleIter.next();
        Map webSiteRoleData = new HashMap();
        webSiteRoleData.put("webSiteRole", webSiteRole);
        webSiteRoleData.put("person", webSiteRole.getRelatedOne("Person"));
        webSiteRoleData.put("partyGroup", webSiteRole.getRelatedOne("PartyGroup"));
        webSiteRoleData.put("roleType", webSiteRole.getRelatedOneCache("RoleType"));
        webSiteRoleDatas.add(webSiteRoleData);
    }
}

context.put("webSiteRoleDatas", webSiteRoleDatas);
