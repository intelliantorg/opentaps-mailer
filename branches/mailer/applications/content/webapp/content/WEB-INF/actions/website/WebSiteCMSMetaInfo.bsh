/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.entity.util.*;

if (content != null) {
    // lookup assoc content
    titles = delegator.findByAnd("ContentAssoc", UtilMisc.toMap("contentId", contentId, "mapKey", "title"), UtilMisc.toList("-fromDate"));
    titles = EntityUtil.filterByDate(titles);
    title = EntityUtil.getFirst(titles);
    if (title != null) {
        tc = title.getRelatedOne("ToContent");
        tcdr = tc.getRelatedOne("DataResource");
        context.put("title", tcdr);
    }

    titleProps = delegator.findByAnd("ContentAssoc", UtilMisc.toMap("contentId", contentId, "mapKey", "titleProperty"), UtilMisc.toList("-fromDate"));
    titleProps = EntityUtil.filterByDate(titleProps);
    titleProp = EntityUtil.getFirst(titleProps);
    if (titleProp != null) {
        tpc = titleProp.getRelatedOne("ToContent");
        tpcdr = tpc.getRelatedOne("DataResource");
        context.put("titleProperty", tpcdr);
    }

    metaDescs = delegator.findByAnd("ContentAssoc", UtilMisc.toMap("contentId", contentId, "mapKey", "metaDescription"), UtilMisc.toList("-fromDate"));
    metaDescs = EntityUtil.filterByDate(metaDescs);
    metaDesc = EntityUtil.getFirst(metaDescs);
    if (metaDesc != null) {
        mdc = metaDesc.getRelatedOne("ToContent");
        mdcdr = mdc.getRelatedOne("DataResource");
        context.put("metaDescription", mdcdr);
    }

    metaKeys = delegator.findByAnd("ContentAssoc", UtilMisc.toMap("contentId", contentId, "mapKey", "metaKeywords"), UtilMisc.toList("-fromDate"));
    metaKeys = EntityUtil.filterByDate(metaKeys);
    metaKey = EntityUtil.getFirst(metaKeys);
    if (metaKey != null) {
        mkc = metaKey.getRelatedOne("ToContent");
        mkcdr = mkc.getRelatedOne("DataResource");
        context.put("metaKeywords", mkcdr);
    }
}