/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* This file has been modified by Open Source Strategies, Inc. */


import java.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.content.survey.*;

if (survey == null) {
    surveyResponseId = parameters.get("surveyResponseId");
    if (!UtilValidate.isEmpty(surveyResponseId)) {
        surveyResponse = delegator.findByPrimaryKey("SurveyResponse", UtilMisc.toMap("surveyResponseId", surveyResponseId));
        if (surveyResponse != null) {
            surveyId = surveyResponse.getString("surveyId");
            if (!UtilValidate.isEmpty(surveyId)) {
                survey = delegator.findByPrimaryKey("Survey", UtilMisc.toMap("surveyId", surveyId));
                context.put("survey", survey);
                context.put("surveyId", surveyId);
            }
        }
    }
}

if (survey != null) {
    surveyWrapper = new SurveyWrapper(delegator, surveyId);
    context.put("surveyWrapper", surveyWrapper);
    context.put("sequenceSort", UtilMisc.toList("sequenceNum"));
}
